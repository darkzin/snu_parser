scanning 'test/scanner/fibonacci.mod'...
  4:1: tModule
  4:8: tId (fibonacci)
  4:17: tSemicolon
  6:1: tVar
  6:5: tId (n)
  6:6: tColon
  6:8: tInteger
  6:15: tSemicolon
  10:1: tFunction
  10:10: tId (fib)
  10:13: tLBracketRound
  10:14: tId (n)
  10:15: tColon
  10:17: tInteger
  10:24: tRBracketRound
  10:25: tColon
  10:27: tInteger
  10:34: tSemicolon
  11:1: tBegin
  12:3: tIf
  12:6: tLBracketRound
  12:7: tId (n)
  12:9: tRelOp (<=)
  12:12: tNum (1)
  12:13: tRBracketRound
  12:15: tThen
  13:5: tReturn
  13:12: tId (n)
  14:3: tElse
  15:5: tReturn
  15:12: tId (fib)
  15:15: tLBracketRound
  15:16: tId (n)
  15:17: tTerm (-)
  15:18: tNum (1)
  15:19: tRBracketRound
  15:21: tTerm (+)
  15:23: tId (fib)
  15:26: tLBracketRound
  15:27: tId (n)
  15:28: tTerm (-)
  15:29: tNum (2)
  15:30: tRBracketRound
  16:3: tEnd
  17:1: tEnd
  17:5: tId (fib)
  17:8: tSemicolon
  19:1: tBegin
  20:3: tId (Write)
  20:8: tLBracketRound
  20:9: tString (Enter a number: )
  20:27: tRBracketRound
  20:28: tSemicolon
  21:3: tId (n)
  21:5: tAssign
  21:8: tId (ReadInt)
  21:15: tLBracketRound
  21:16: tRBracketRound
  21:17: tSemicolon
  24:3: tWhile
  24:9: tLBracketRound
  24:10: tId (n)
  24:12: tRelOp (>)
  24:14: tNum (0)
  24:15: tRBracketRound
  24:17: tDo
  25:5: tId (Write)
  25:10: tLBracketRound
  25:11: tString (Result: )
  25:21: tRBracketRound
  25:22: tSemicolon
  25:24: tId (WriteInt)
  25:32: tLBracketRound
  25:33: tId (fib)
  25:36: tLBracketRound
  25:37: tId (n)
  25:38: tRBracketRound
  25:39: tRBracketRound
  25:40: tSemicolon
  25:42: tId (WriteLn)
  25:49: tSemicolon
  27:5: tId (Write)
  27:10: tLBracketRound
  27:11: tString (Enter a number: )
  27:29: tRBracketRound
  27:30: tSemicolon
  28:5: tId (n)
  28:7: tAssign
  28:10: tId (ReadInt)
  28:17: tLBracketRound
  28:18: tRBracketRound
  29:3: tEnd
  30:1: tEnd
  30:5: tId (fibonacci)
  30:14: tDot
  31:1: tEOF


Done.
