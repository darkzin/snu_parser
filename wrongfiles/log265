-     #    -13(%ebp)   1  [ $t36      <char> %ebp-13 ]
+     #    -13(%ebp)   1  [ $t32      <char> %ebp-13 ]
-     #    -14(%ebp)   1  [ $t37      <char> %ebp-14 ]
+     #    -14(%ebp)   1  [ $t33      <char> %ebp-14 ]
-     call    dummyCHARfunc           #   1:     call   t36 <- dummyCHARfunc
+     call    dummyCHARfunc           #   1:     call   t32 <- dummyCHARfunc
-     call    dummyCHARfunc           #   2:     call   t37 <- dummyCHARfunc
+     call    dummyCHARfunc           #   2:     call   t33 <- dummyCHARfunc
-     #    -16(%ebp)   4  [ $t36      <int> %ebp-16 ]
+     #    -16(%ebp)   4  [ $t32      <int> %ebp-16 ]
-     #    -20(%ebp)   4  [ $t37      <int> %ebp-20 ]
+     #    -20(%ebp)   4  [ $t33      <int> %ebp-20 ]
-     #    -21(%ebp)   1  [ $t38      <char> %ebp-21 ]
+     #    -21(%ebp)   1  [ $t34      <char> %ebp-21 ]
-     call    ReadInt                 #   0:     call   t36 <- ReadInt
+     call    ReadInt                 #   0:     call   t32 <- ReadInt
-     movl    $75669, %eax            #   1:     div    t37 <- 75669, t36
+     movl    $75669, %eax            #   1:     div    t33 <- 75669, t32
-     movl    -20(%ebp), %eax         #   2:     return t37
+     movl    -20(%ebp), %eax         #   2:     return t33
-     call    dummyCHARfunc           #   3:     call   t38 <- dummyCHARfunc
+     call    dummyCHARfunc           #   3:     call   t34 <- dummyCHARfunc
-     addl    $1, %esp               
+     addl    $4, %esp               
-     #    -13(%ebp)   1  [ $t36      <bool> %ebp-13 ]
+     #    -13(%ebp)   1  [ $t32      <bool> %ebp-13 ]
-     #    -14(%ebp)   1  [ $t37      <bool> %ebp-14 ]
+     #    -14(%ebp)   1  [ $t33      <bool> %ebp-14 ]
-     #    -15(%ebp)   1  [ $t38      <char> %ebp-15 ]
+     #    -15(%ebp)   1  [ $t34      <char> %ebp-15 ]
+     jmp     l_f2_2                  #   0:     goto   2
-     movl    $1, %eax                #   0:     assign t36 <- 1
+     movl    $1, %eax                #   1:     assign t32 <- 1
-     jmp     l_f2_3                  #   1:     goto   3
+     jmp     l_f2_3                  #   2:     goto   3
+ l_f2_2:
-     movl    $0, %eax                #   2:     assign t36 <- 0
+     movl    $0, %eax                #   4:     assign t32 <- 0
-     movzbl  -13(%ebp), %eax         #   4:     assign v1 <- t36
+     movzbl  -13(%ebp), %eax         #   6:     assign v1 <- t32
+     jmp     l_f2_10                 #   7:     goto   10
-     jmp     l_f2_6                  #   5:     goto   6
+     jmp     l_f2_6                  #   8:     goto   6
+ l_f2_10:
+     jmp     l_f2_7                  #  10:     goto   7
-     movl    $1, %eax                #   7:     assign t37 <- 1
+     movl    $1, %eax                #  12:     assign t33 <- 1
-     jmp     l_f2_8                  #   8:     goto   8
+     jmp     l_f2_8                  #  13:     goto   8
+ l_f2_7:
-     movl    $0, %eax                #   9:     assign t37 <- 0
+     movl    $0, %eax                #  15:     assign t33 <- 0
-     movzbl  -14(%ebp), %eax         #  11:     return t37
+     movzbl  -14(%ebp), %eax         #  17:     return t33
-     jmp     l_f2_12                 #  13:     goto   12
+     jmp     l_f2_12                 #  19:     goto   12
-     movl    $98, %eax               #  14:     if     98 >= 100 goto 16_if_true
+     movl    $98, %eax               #  20:     if     98 >= 100 goto 16_if_true
-     jmp     l_f2_17_if_false        #  15:     goto   17_if_false
+     jmp     l_f2_17_if_false        #  21:     goto   17_if_false
-     jmp     l_f2_15                 #  17:     goto   15
+     jmp     l_f2_15                 #  23:     goto   15
-     movl    $99, %eax               #  20:     if     99 = 100 goto 20_if_true
+     movl    $99, %eax               #  26:     if     99 = 100 goto 20_if_true
-     jmp     l_f2_21_if_false        #  21:     goto   21_if_false
+     jmp     l_f2_21_if_false        #  27:     goto   21_if_false
-     jmp     l_f2_19                 #  23:     goto   19
+     jmp     l_f2_19                 #  29:     goto   19
-     call    dummyCHARfunc           #  26:     call   t38 <- dummyCHARfunc
+     call    dummyCHARfunc           #  32:     call   t34 <- dummyCHARfunc
-     jmp     l_f2_13_while_cond      #  27:     goto   13_while_cond
+     jmp     l_f2_13_while_cond      #  33:     goto   13_while_cond
-     #    -32(%ebp)   4  [ $t12      <int> %ebp-32 ]
-     #    -36(%ebp)   4  [ $t13      <ptr(4) to <array 2 of <array 4 of <array 7 of <array 7 of <array 4 of <int>>>>>>> %ebp-36 ]
+     #    -32(%ebp)   4  [ $t12      <ptr(4) to <array 2 of <array 4 of <array 7 of <array 7 of <array 4 of <int>>>>>>> %ebp-32 ]
+     #    -36(%ebp)   4  [ $t13      <int> %ebp-36 ]
-     #    -60(%ebp)   4  [ $t19      <int> %ebp-60 ]
+     #    -60(%ebp)   4  [ $t19      <ptr(4) to <array 2 of <array 4 of <array 7 of <array 7 of <array 4 of <int>>>>>>> %ebp-60 ]
-     #    -68(%ebp)   4  [ $t20      <ptr(4) to <array 2 of <array 4 of <array 7 of <array 7 of <array 4 of <int>>>>>>> %ebp-68 ]
+     #    -68(%ebp)   4  [ $t20      <int> %ebp-68 ]
-     #    -80(%ebp)   4  [ $t23      <int> %ebp-80 ]
+     #    -80(%ebp)   4  [ $t23      <ptr(4) to <array 2 of <array 4 of <array 7 of <array 7 of <array 4 of <int>>>>>>> %ebp-80 ]
+     #    -96(%ebp)   4  [ $t27      <int> %ebp-96 ]
-     #    -96(%ebp)   4  [ $t27      <ptr(4) to <array 2 of <array 4 of <array 7 of <array 7 of <array 4 of <int>>>>>>> %ebp-96 ]
+     #   -100(%ebp)   4  [ $t28      <ptr(4) to <array 2 of <array 4 of <array 7 of <array 7 of <array 4 of <int>>>>>>> %ebp-100 ]
-     #   -100(%ebp)   4  [ $t28      <int> %ebp-100 ]
-     #   -120(%ebp)   4  [ $t32      <ptr(4) to <array 2 of <array 4 of <array 7 of <array 7 of <array 4 of <int>>>>>>> %ebp-120 ]
-     #   -124(%ebp)   4  [ $t33      <int> %ebp-124 ]
-     #   -128(%ebp)   4  [ $t34      <int> %ebp-128 ]
-     #   -132(%ebp)   4  [ $t35      <int> %ebp-132 ]
-     #   -133(%ebp)   1  [ $t4       <char> %ebp-133 ]
+     #   -117(%ebp)   1  [ $t4       <char> %ebp-117 ]
-     #   -134(%ebp)   1  [ $t5       <bool> %ebp-134 ]
+     #   -118(%ebp)   1  [ $t5       <bool> %ebp-118 ]
-     #   -140(%ebp)   4  [ $t6       <ptr(4) to <array 2 of <array 4 of <array 7 of <array 7 of <array 4 of <int>>>>>>> %ebp-140 ]
+     #   -124(%ebp)   4  [ $t6       <ptr(4) to <array 2 of <array 4 of <array 7 of <array 7 of <array 4 of <int>>>>>>> %ebp-124 ]
-     #   -144(%ebp)   4  [ $t7       <int> %ebp-144 ]
+     #   -128(%ebp)   4  [ $t7       <int> %ebp-128 ]
-     #   -148(%ebp)   4  [ $t8       <ptr(4) to <array 2 of <array 4 of <array 7 of <array 7 of <array 4 of <int>>>>>>> %ebp-148 ]
+     #   -132(%ebp)   4  [ $t8       <ptr(4) to <array 2 of <array 4 of <array 7 of <array 7 of <array 4 of <int>>>>>>> %ebp-132 ]
-     #   -152(%ebp)   4  [ $t9       <int> %ebp-152 ]
+     #   -136(%ebp)   4  [ $t9       <int> %ebp-136 ]
-     pushl   %ebp                   
-     movl    %esp, %ebp             
-     pushl   %ebx                    # save callee saved registers
-     pushl   %esi                   
+     pushl   %ebp                   
+     movl    %esp, %ebp             
+     pushl   %ebx                    # save callee saved registers
-     pushl   %edi                   
+     pushl   %esi                   
+     pushl   %edi                   
-     subl    $140, %esp              # make room for locals
+     subl    $124, %esp              # make room for locals
-     movl    $35, %ecx              
+     movl    $31, %ecx              
-     addl    $1, %esp               
+     addl    $4, %esp               
-     movb    %al, -133(%ebp)        
+     movb    %al, -117(%ebp)        
-     movzbl  -133(%ebp), %eax        #  37:     param  0 <- t4
+     movzbl  -117(%ebp), %eax        #  37:     param  0 <- t4
-     addl    $10, %esp              
+     addl    $16, %esp              
-     movb    %al, -134(%ebp)        
+     movb    %al, -118(%ebp)        
-     movzbl  -134(%ebp), %eax        #  39:     if     t5 = 1 goto 20_while_body
+     movzbl  -118(%ebp), %eax        #  39:     if     t5 = 1 goto 20_while_body
+     jmp     l_test_18               #  40:     goto   18
-     jmp     l_test_19_while_cond    #  41:     goto   19_while_cond
+     jmp     l_test_19_while_cond    #  42:     goto   19_while_cond
+ l_test_18:
-     leal    v0, %eax                #  43:     &()    t6 <- v0
+     leal    v0, %eax                #  45:     &()    t6 <- v0
-     movl    %eax, -140(%ebp)       
+     movl    %eax, -124(%ebp)       
-     movl    $36945, %eax            #  44:     add    t7 <- 36945, 68939
+     movl    $36945, %eax            #  46:     add    t7 <- 36945, 68939
-     movl    %eax, -144(%ebp)       
+     movl    %eax, -128(%ebp)       
-     movl    $2, %eax                #  45:     param  1 <- 2
+     movl    $2, %eax                #  47:     param  1 <- 2
-     leal    v0, %eax                #  46:     &()    t8 <- v0
+     leal    v0, %eax                #  48:     &()    t8 <- v0
-     movl    %eax, -148(%ebp)       
+     movl    %eax, -132(%ebp)       
-     movl    -148(%ebp), %eax        #  47:     param  0 <- t8
+     movl    -132(%ebp), %eax        #  49:     param  0 <- t8
-     call    DIM                     #  48:     call   t9 <- DIM
+     call    DIM                     #  50:     call   t9 <- DIM
-     movl    %eax, -152(%ebp)       
+     movl    %eax, -136(%ebp)       
-     movl    $36945, %eax            #  49:     add    t11 <- 36945, 68939
-     movl    $68939, %ebx           
-     addl    %ebx, %eax             
-     movl    %eax, -28(%ebp)        
-     movl    -144(%ebp), %eax        #  50:     mul    t10 <- t7, t9
+     movl    -128(%ebp), %eax        #  51:     mul    t10 <- t7, t9
-     movl    -152(%ebp), %ebx       
+     movl    -136(%ebp), %ebx       
-     movl    -24(%ebp), %eax         #  51:     add    t12 <- t10, 53411
+     movl    -24(%ebp), %eax         #  52:     add    t11 <- t10, 53411
+     movl    %eax, -28(%ebp)        
+     movl    $3, %eax                #  53:     param  1 <- 3
+     pushl   %eax                   
+     leal    v0, %eax                #  54:     &()    t12 <- v0
-     movl    $3, %eax                #  52:     param  1 <- 3
+     movl    -32(%ebp), %eax         #  55:     param  0 <- t12
-     leal    v0, %eax                #  53:     &()    t13 <- v0
+     call    DIM                     #  56:     call   t13 <- DIM
+     addl    $8, %esp               
-     movl    -36(%ebp), %eax         #  54:     param  0 <- t13
+     movl    -28(%ebp), %eax         #  57:     mul    t14 <- t11, t13
+     movl    -36(%ebp), %ebx        
-     pushl   %eax                   
+     imull   %ebx                   
-     call    DIM                     #  55:     call   t14 <- DIM
-     addl    $8, %esp               
-     movl    -32(%ebp), %eax         #  56:     mul    t15 <- t12, t14
-     movl    -40(%ebp), %ebx        
-     imull   %ebx                   
-     movl    %eax, -44(%ebp)        
-     movl    $79392, %eax            #  57:     sub    t16 <- 79392, 67994
+     movl    $79392, %eax            #  58:     sub    t15 <- 79392, 67994
-     movl    %eax, -48(%ebp)        
+     movl    %eax, -44(%ebp)        
-     movl    -48(%ebp), %eax         #  58:     sub    t17 <- t16, 42907
+     movl    -44(%ebp), %eax         #  59:     sub    t16 <- t15, 42907
+     movl    %eax, -48(%ebp)        
+     movl    -48(%ebp), %eax         #  60:     add    t17 <- t16, 24418
+     movl    $24418, %ebx           
+     addl    %ebx, %eax             
-     movl    -52(%ebp), %eax         #  59:     add    t18 <- t17, 24418
+     movl    -40(%ebp), %eax         #  61:     add    t18 <- t14, t17
-     movl    $24418, %ebx           
+     movl    -52(%ebp), %ebx        
-     movl    -44(%ebp), %eax         #  60:     add    t19 <- t15, t18
-     movl    -56(%ebp), %ebx        
-     addl    %ebx, %eax             
+     movl    $4, %eax                #  62:     param  1 <- 4
+     pushl   %eax                   
+     leal    v0, %eax                #  63:     &()    t19 <- v0
-     movl    $4, %eax                #  61:     param  1 <- 4
+     movl    -60(%ebp), %eax         #  64:     param  0 <- t19
-     leal    v0, %eax                #  62:     &()    t20 <- v0
+     call    DIM                     #  65:     call   t20 <- DIM
+     addl    $8, %esp               
+     movl    -56(%ebp), %eax         #  66:     mul    t21 <- t18, t20
+     movl    -68(%ebp), %ebx        
+     imull   %ebx                   
+     movl    %eax, -72(%ebp)        
+     movl    -72(%ebp), %eax         #  67:     add    t22 <- t21, 90135
+     movl    $90135, %ebx           
+     addl    %ebx, %eax             
+     movl    %eax, -76(%ebp)        
+     movl    $5, %eax                #  68:     param  1 <- 5
+     pushl   %eax                   
+     leal    v0, %eax                #  69:     &()    t23 <- v0
+     movl    %eax, -80(%ebp)        
-     movl    -68(%ebp), %eax         #  63:     param  0 <- t20
+     movl    -80(%ebp), %eax         #  70:     param  0 <- t23
-     call    DIM                     #  64:     call   t21 <- DIM
+     call    DIM                     #  71:     call   t24 <- DIM
-     movl    %eax, -72(%ebp)        
-     movl    $79392, %eax            #  65:     sub    t23 <- 79392, 67994
-     movl    $67994, %ebx           
-     subl    %ebx, %eax             
-     movl    %eax, -80(%ebp)        
-     movl    -80(%ebp), %eax         #  66:     sub    t24 <- t23, 42907
-     movl    $42907, %ebx           
-     subl    %ebx, %eax             
-     movl    -84(%ebp), %eax         #  67:     add    t25 <- t24, 24418
+     movl    -76(%ebp), %eax         #  72:     mul    t25 <- t22, t24
-     movl    $24418, %ebx           
+     movl    -84(%ebp), %ebx        
-     addl    %ebx, %eax             
+     imull   %ebx                   
-     movl    -60(%ebp), %eax         #  68:     mul    t22 <- t19, t21
-     movl    -72(%ebp), %ebx        
-     imull   %ebx                   
-     movl    %eax, -76(%ebp)        
-     movl    -76(%ebp), %eax         #  69:     add    t26 <- t22, 90135
+     movl    -88(%ebp), %eax         #  73:     add    t26 <- t25, 89621
-     movl    $90135, %ebx           
+     movl    $89621, %ebx           
-     movl    $5, %eax                #  70:     param  1 <- 5
-     pushl   %eax                   
-     leal    v0, %eax                #  71:     &()    t27 <- v0
-     movl    %eax, -96(%ebp)        
-     movl    -96(%ebp), %eax         #  72:     param  0 <- t27
-     pushl   %eax                   
-     call    DIM                     #  73:     call   t28 <- DIM
-     addl    $8, %esp               
-     movl    %eax, -100(%ebp)       
-     movl    -92(%ebp), %eax         #  74:     mul    t29 <- t26, t28
+     movl    -92(%ebp), %eax         #  74:     mul    t27 <- t26, 4
-     movl    -100(%ebp), %ebx       
-     imull   %ebx                   
-     movl    %eax, -104(%ebp)       
-     movl    -104(%ebp), %eax        #  75:     add    t30 <- t29, 89621
-     movl    $89621, %ebx           
-     addl    %ebx, %eax             
-     movl    %eax, -112(%ebp)       
-     movl    -112(%ebp), %eax        #  76:     mul    t31 <- t30, 4
+     movl    %eax, -96(%ebp)        
+     leal    v0, %eax                #  75:     &()    t28 <- v0
+     movl    %eax, -100(%ebp)       
+     movl    -100(%ebp), %eax        #  76:     param  0 <- t28
+     pushl   %eax                   
+     call    DOFS                    #  77:     call   t29 <- DOFS
+     addl    $4, %esp               
+     movl    %eax, -104(%ebp)       
+     movl    -96(%ebp), %eax         #  78:     add    t30 <- t27, t29
+     movl    -104(%ebp), %ebx       
+     addl    %ebx, %eax             
+     movl    %eax, -112(%ebp)       
+     movl    -124(%ebp), %eax        #  79:     add    t31 <- t6, t30
+     movl    -112(%ebp), %ebx       
+     addl    %ebx, %eax             
-     leal    v0, %eax                #  77:     &()    t32 <- v0
-     movl    %eax, -120(%ebp)       
-     movl    -120(%ebp), %eax        #  78:     param  0 <- t32
-     pushl   %eax                   
-     call    DOFS                    #  79:     call   t33 <- DOFS
-     addl    $4, %esp               
-     movl    %eax, -124(%ebp)       
-     movl    -116(%ebp), %eax        #  80:     add    t34 <- t31, t33
-     movl    -124(%ebp), %ebx       
-     addl    %ebx, %eax             
-     movl    %eax, -128(%ebp)       
-     movl    -140(%ebp), %eax        #  81:     add    t35 <- t6, t34
-     movl    -128(%ebp), %ebx       
-     addl    %ebx, %eax             
-     movl    %eax, -132(%ebp)       
-     movl    $82539, %eax            #  82:     assign @t35 <- 82539
+     movl    $82539, %eax            #  80:     assign @t31 <- 82539
-     movl    -132(%ebp), %edi       
+     movl    -116(%ebp), %edi       
-     addl    $140, %esp              # remove locals
+     addl    $124, %esp              # remove locals
