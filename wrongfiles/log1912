+     jmp     l_f0_6                  #   4:     goto   6
-     movl    $1, %eax                #   5:     assign t4 <- 1
+     movl    $1, %eax                #   6:     assign t4 <- 1
-     jmp     l_f0_7                  #   6:     goto   7
+     jmp     l_f0_7                  #   7:     goto   7
+ l_f0_6:
-     movl    $0, %eax                #   7:     assign t4 <- 0
+     movl    $0, %eax                #   9:     assign t4 <- 0
-     movzbl  -13(%ebp), %eax         #   9:     assign v1 <- t4
+     movzbl  -13(%ebp), %eax         #  11:     assign v1 <- t4
-     jmp     l_f0_0                  #  10:     goto   0
+     jmp     l_f0_0                  #  12:     goto   0
-     call    ReadInt                 #  13:     call   t5 <- ReadInt
+     call    ReadInt                 #  15:     call   t5 <- ReadInt
-     movl    $97, %eax               #  15:     if     97 < 100 goto 15_while_body
+     movl    $97, %eax               #  17:     if     97 < 100 goto 15_while_body
-     jmp     l_f0_13                 #  16:     goto   13
+     jmp     l_f0_13                 #  18:     goto   13
-     jmp     l_f0_17                 #  18:     goto   17
+     jmp     l_f0_17                 #  20:     goto   17
-     movl    $62441, %eax            #  20:     return 62441
+     movl    $62441, %eax            #  22:     return 62441
-     movl    $100, %eax              #  22:     if     100 >= 100 goto 23_while_body
+     movl    $100, %eax              #  24:     if     100 >= 100 goto 23_while_body
-     jmp     l_f0_21                 #  23:     goto   21
+     jmp     l_f0_21                 #  25:     goto   21
-     jmp     l_f0_22_while_cond      #  25:     goto   22_while_cond
+     jmp     l_f0_22_while_cond      #  27:     goto   22_while_cond
-     movl    $42250, %eax            #  27:     assign v2 <- 42250
+     movl    $42250, %eax            #  29:     assign v2 <- 42250
-     jmp     l_f0_14_while_cond      #  28:     goto   14_while_cond
+     jmp     l_f0_14_while_cond      #  30:     goto   14_while_cond
-     #-519199264(%ebp)519199224  [ $v1       <array 86 of <array 60 of <array 30 of <array 78 of <array 43 of <bool>>>>>> %ebp-519199264 ]
+     #   -519199264(%ebp)  519199224  [ $v1       <array 86 of <array 60 of <array 30 of <array 78 of <array 43 of <bool>>>>>> %ebp-519199264 ]
-     #-519199265(%ebp)   1  [ $v2       <char> %ebp-519199265 ]
+     #   -519199265(%ebp)   1  [ $v2       <char> %ebp-519199265 ]
-     addl    $5, %esp               
+     addl    $8, %esp               
-     addl    $5, %esp               
+     addl    $8, %esp               
+     jmp     l_f2_10                 #  25:     goto   10
+     jmp     l_f2_10                 #  26:     goto   10
-     movl    $97, %eax               #  25:     assign v2 <- 97
+     movl    $97, %eax               #  27:     assign v2 <- 97
-     movl    $97, %eax               #  26:     if     97 < 100 goto 18_if_true
+     movl    $97, %eax               #  28:     if     97 < 100 goto 18_if_true
-     jmp     l_f2_19_if_false        #  27:     goto   19_if_false
+     jmp     l_f2_19_if_false        #  29:     goto   19_if_false
-     jmp     l_f2_17                 #  29:     goto   17
+     jmp     l_f2_17                 #  31:     goto   17
-     jmp     l_f2_21                 #  32:     goto   21
+     jmp     l_f2_21                 #  34:     goto   21
-     movl    $35252, %eax            #  35:     param  0 <- 35252
+     movl    $35252, %eax            #  37:     param  0 <- 35252
-     call    WriteInt                #  36:     call   WriteInt
+     call    WriteInt                #  38:     call   WriteInt
-     movl    $1, %eax                #  38:     if     1 = 1 goto 28_while_body
+     movl    $1, %eax                #  40:     if     1 = 1 goto 28_while_body
-     jmp     l_f2_26                 #  39:     goto   26
+     jmp     l_f2_26                 #  41:     goto   26
-     jmp     l_f2_27_while_cond      #  41:     goto   27_while_cond
+     jmp     l_f2_27_while_cond      #  43:     goto   27_while_cond
-     call    dummyCHARfunc           #  43:     call   t10 <- dummyCHARfunc
+     call    dummyCHARfunc           #  45:     call   t10 <- dummyCHARfunc
-     movl    $98, %eax               #  44:     assign v2 <- 98
+     movl    $98, %eax               #  46:     assign v2 <- 98
-     jmp     l_f2_11_while_cond      #  45:     goto   11_while_cond
+     jmp     l_f2_11_while_cond      #  47:     goto   11_while_cond
+ l_f2_10:
-     jmp     l_test_4                #   1:     goto   4
+     jmp     l_test_5                #   1:     goto   5
+     jmp     l_test_6                #   2:     goto   6
- l_test_4:
+ l_test_5:
-     movl    $1, %eax                #   3:     assign t0 <- 1
+     movl    $1, %eax                #   4:     assign t0 <- 1
-     jmp     l_test_6                #   4:     goto   6
+     jmp     l_test_7                #   5:     goto   7
+ l_test_6:
-     movl    $0, %eax                #   5:     assign t0 <- 0
+     movl    $0, %eax                #   7:     assign t0 <- 0
- l_test_6:
+ l_test_7:
-     movzbl  -13(%ebp), %eax         #   7:     if     t0 # 1 goto 2_if_true
+     movzbl  -13(%ebp), %eax         #   9:     if     t0 # 1 goto 2_if_true
-     jmp     l_test_3_if_false       #   8:     goto   3_if_false
+     jmp     l_test_3_if_false       #  10:     goto   3_if_false
-     jmp     l_test_1                #  11:     goto   1
+     jmp     l_test_1                #  13:     goto   1
-     movl    $88524, %eax            #  14:     assign v0 <- 88524
+     movl    $88524, %eax            #  16:     assign v0 <- 88524
-     call    f2                      #  15:     call   f2
+     call    f2                      #  17:     call   f2
-     jmp     l_test_11               #  16:     goto   11
+     jmp     l_test_11               #  18:     goto   11
-     movl    $77439, %eax            #  18:     mul    t1 <- 77439, 63869
+     movl    $77439, %eax            #  20:     mul    t1 <- 77439, 63869
-     movl    -20(%ebp), %eax         #  19:     div    t2 <- t1, 64624
+     movl    -20(%ebp), %eax         #  21:     div    t2 <- t1, 64624
-     movl    -24(%ebp), %eax         #  20:     sub    t3 <- t2, 34752
+     movl    -24(%ebp), %eax         #  22:     sub    t3 <- t2, 34752
-     movl    -28(%ebp), %eax         #  21:     assign v0 <- t3
+     movl    -28(%ebp), %eax         #  23:     assign v0 <- t3
-     movl    $99, %eax               #  22:     if     99 <= 98 goto 17_if_true
+     movl    $99, %eax               #  24:     if     99 <= 98 goto 17_if_true
-     jmp     l_test_18_if_false      #  23:     goto   18_if_false
+     jmp     l_test_18_if_false      #  25:     goto   18_if_false
-     call    f2                      #  25:     call   f2
+     call    f2                      #  27:     call   f2
-     jmp     l_test_16               #  26:     goto   16
+     jmp     l_test_16               #  28:     goto   16
