+     jmp     l_f0_2                  #   1:     goto   2
-     movl    $1, %eax                #   2:     assign t3 <- 1
+     movl    $1, %eax                #   3:     assign t3 <- 1
-     jmp     l_f0_3                  #   3:     goto   3
+     jmp     l_f0_3                  #   4:     goto   3
+ l_f0_2:
-     movl    $0, %eax                #   4:     assign t3 <- 0
+     movl    $0, %eax                #   6:     assign t3 <- 0
-     movzbl  -13(%ebp), %eax         #   6:     assign v4 <- t3
+     movzbl  -13(%ebp), %eax         #   8:     assign v4 <- t3
-     jmp     l_f0_8                  #   7:     goto   8
-     jmp     l_f0_8                  #   8:     goto   8
+     jmp     l_f0_8                  #  12:     goto   8
+     jmp     l_f0_8                  #  13:     goto   8
+     jmp     l_f0_9                  #  14:     goto   9
-     movl    $1, %eax                #  13:     assign t4 <- 1
+     movl    $1, %eax                #  16:     assign t4 <- 1
-     jmp     l_f0_10                 #  14:     goto   10
+     jmp     l_f0_10                 #  17:     goto   10
+ l_f0_9:
-     movl    $0, %eax                #  15:     assign t4 <- 0
+     movl    $0, %eax                #  19:     assign t4 <- 0
-     movzbl  -14(%ebp), %eax         #  17:     return t4
+     movzbl  -14(%ebp), %eax         #  21:     return t4
-     call    ReadInt                 #  18:     call   t5 <- ReadInt
+     call    ReadInt                 #  22:     call   t5 <- ReadInt
+     jmp     l_f2_7                  #   2:     goto   7
-     movl    $1, %eax                #   2:     assign t3 <- 1
+     movl    $1, %eax                #   3:     assign t3 <- 1
-     jmp     l_f2_7                  #   3:     goto   7
+     jmp     l_f2_8                  #   4:     goto   8
-     movl    $0, %eax                #   4:     assign t3 <- 0
-     movb    %al, -13(%ebp)         
+     movl    $0, %eax                #   6:     assign t3 <- 0
+     movb    %al, -13(%ebp)         
+ l_f2_8:
-     movl    $0, %eax                #   6:     if     0 = t3 goto 3_if_true
+     movl    $0, %eax                #   8:     if     0 = t3 goto 3_if_true
-     jmp     l_f2_4_if_false         #   7:     goto   4_if_false
+     jmp     l_f2_4_if_false         #   9:     goto   4_if_false
-     call    ReadInt                 #   9:     call   t4 <- ReadInt
+     call    ReadInt                 #  11:     call   t4 <- ReadInt
-     movl    $0, %eax                #  10:     if     0 = 1 goto 13_if_true
+     movl    $0, %eax                #  12:     if     0 = 1 goto 13_if_true
-     jmp     l_f2_14_if_false        #  11:     goto   14_if_false
+     jmp     l_f2_14_if_false        #  13:     goto   14_if_false
-     jmp     l_f2_12                 #  13:     goto   12
+     jmp     l_f2_12                 #  15:     goto   12
-     jmp     l_f2_2                  #  16:     goto   2
+     jmp     l_f2_2                  #  18:     goto   2
-     addl    $1, %esp               
+     addl    $4, %esp               
+     jmp     l_test_1                #   5:     goto   1
-     movl    $96813, %eax            #   6:     if     96813 > 65200 goto 11_if_true
+     movl    $96813, %eax            #   7:     if     96813 > 65200 goto 11_if_true
-     jmp     l_test_12_if_false      #   7:     goto   12_if_false
+     jmp     l_test_12_if_false      #   8:     goto   12_if_false
-     jmp     l_test_10               #   9:     goto   10
+     jmp     l_test_10               #  10:     goto   10
-     movl    $0, %eax                #  12:     assign v0 <- 0
+     movl    $0, %eax                #  13:     assign v0 <- 0
-     jmp     l_test_2_while_cond     #  13:     goto   2_while_cond
+     jmp     l_test_2_while_cond     #  14:     goto   2_while_cond
+ l_test_1:
-     jmp     l_test_18               #  15:     goto   18
+     jmp     l_test_19               #  17:     goto   19
+     jmp     l_test_20               #  18:     goto   20
- l_test_18:
+ l_test_19:
-     movl    $1, %eax                #  17:     assign t1 <- 1
+     movl    $1, %eax                #  20:     assign t1 <- 1
-     jmp     l_test_20               #  18:     goto   20
+     jmp     l_test_21               #  21:     goto   21
+ l_test_20:
-     movl    $0, %eax                #  19:     assign t1 <- 0
+     movl    $0, %eax                #  23:     assign t1 <- 0
- l_test_20:
+ l_test_21:
-     movl    $0, %eax                #  21:     if     0 = t1 goto 17_while_body
+     movl    $0, %eax                #  25:     if     0 = t1 goto 17_while_body
-     jmp     l_test_15               #  22:     goto   15
+     jmp     l_test_15               #  26:     goto   15
-     jmp     l_test_16_while_cond    #  24:     goto   16_while_cond
+     jmp     l_test_16_while_cond    #  28:     goto   16_while_cond
-     jmp     l_test_24               #  27:     goto   24
+     jmp     l_test_24               #  31:     goto   24
-     jmp     l_test_27               #  29:     goto   27
+     jmp     l_test_27               #  33:     goto   27
-     jmp     l_test_28_while_cond    #  30:     goto   28_while_cond
+     jmp     l_test_28_while_cond    #  34:     goto   28_while_cond
-     movl    $1, %eax                #  33:     if     1 = 1 goto 32_while_body
+     movl    $1, %eax                #  37:     if     1 = 1 goto 32_while_body
-     jmp     l_test_30               #  34:     goto   30
+     jmp     l_test_30               #  38:     goto   30
-     jmp     l_test_31_while_cond    #  36:     goto   31_while_cond
+     jmp     l_test_31_while_cond    #  40:     goto   31_while_cond
-     call    ReadInt                 #  38:     call   t2 <- ReadInt
+     call    ReadInt                 #  42:     call   t2 <- ReadInt
-     movl    $98, %eax               #  39:     param  2 <- 98
+     movl    $98, %eax               #  43:     param  2 <- 98
-     movl    $5387, %eax             #  40:     param  1 <- 5387
+     movl    $5387, %eax             #  44:     param  1 <- 5387
-     movl    $100, %eax              #  41:     param  0 <- 100
+     movl    $100, %eax              #  45:     param  0 <- 100
-     call    f2                      #  42:     call   f2
+     call    f2                      #  46:     call   f2
-     addl    $6, %esp               
+     addl    $12, %esp              
-     jmp     l_test_25_while_cond    #  43:     goto   25_while_cond
+     jmp     l_test_25_while_cond    #  47:     goto   25_while_cond
