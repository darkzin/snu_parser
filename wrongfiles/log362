+     #    -73(%ebp)   1  [ $t4       <bool> %ebp-73 ]
-     #    -76(%ebp)   4  [ $t25      <int> %ebp-76 ]
+     #    -74(%ebp)   1  [ $t5       <bool> %ebp-74 ]
-     #    -80(%ebp)   4  [ $t26      <int> %ebp-80 ]
+     #    -80(%ebp)   4  [ $t6       <int> %ebp-80 ]
-     #    -84(%ebp)   4  [ $t27      <int> %ebp-84 ]
+     #    -84(%ebp)   4  [ $t7       <int> %ebp-84 ]
-     #    -85(%ebp)   1  [ $t4       <bool> %ebp-85 ]
+     #    -88(%ebp)   4  [ $t8       <int> %ebp-88 ]
-     #    -86(%ebp)   1  [ $t5       <bool> %ebp-86 ]
-     #    -92(%ebp)   4  [ $t6       <int> %ebp-92 ]
+     #    -92(%ebp)   4  [ $t9       <int> %ebp-92 ]
-     #    -96(%ebp)   4  [ $t7       <int> %ebp-96 ]
-     #   -100(%ebp)   4  [ $t8       <int> %ebp-100 ]
-     #   -104(%ebp)   4  [ $t9       <int> %ebp-104 ]
-     #   -108(%ebp)   4  [ $v2       <int> %ebp-108 ]
+     #    -96(%ebp)   4  [ $v2       <int> %ebp-96 ]
-     pushl   %ebp                   
-     movl    %esp, %ebp             
-     pushl   %ebx                    # save callee saved registers
-     pushl   %esi                   
+     pushl   %ebp                   
+     movl    %esp, %ebp             
+     pushl   %ebx                    # save callee saved registers
-     pushl   %edi                   
+     pushl   %esi                   
+     pushl   %edi                   
-     subl    $96, %esp               # make room for locals
+     subl    $84, %esp               # make room for locals
-     movl    $24, %ecx              
+     movl    $21, %ecx              
-     movb    %al, -85(%ebp)         
+     movb    %al, -73(%ebp)         
-     movb    %al, -86(%ebp)         
+     movb    %al, -74(%ebp)         
-     movb    %al, -86(%ebp)         
+     movb    %al, -74(%ebp)         
-     movzbl  -86(%ebp), %eax         #  10:     assign v1 <- t5
+     movzbl  -74(%ebp), %eax         #  10:     assign v1 <- t5
-     movl    %eax, -92(%ebp)        
+     movl    %eax, -80(%ebp)        
-     movl    -92(%ebp), %eax         #  13:     div    t7 <- t6, 20336
+     movl    -80(%ebp), %eax         #  13:     div    t7 <- t6, 20336
-     movl    %eax, -96(%ebp)        
+     movl    %eax, -84(%ebp)        
-     movl    -96(%ebp), %eax         #  14:     div    t8 <- t7, 49312
+     movl    -84(%ebp), %eax         #  14:     div    t8 <- t7, 49312
-     movl    %eax, -100(%ebp)       
+     movl    %eax, -88(%ebp)        
-     movl    %eax, -104(%ebp)       
-     call    ReadInt                 #  18:     call   t11 <- ReadInt
-     movl    %eax, -20(%ebp)        
+     movl    %eax, -92(%ebp)        
-     movl    -20(%ebp), %eax         #  19:     div    t12 <- t11, 20336
-     movl    $20336, %ebx           
-     cdq                            
-     idivl   %ebx                   
-     movl    %eax, -24(%ebp)        
-     movl    -24(%ebp), %eax         #  20:     div    t13 <- t12, 49312
-     movl    $49312, %ebx           
-     cdq                            
-     idivl   %ebx                   
-     movl    %eax, -28(%ebp)        
-     movl    -100(%ebp), %eax        #  21:     mul    t10 <- t8, t9
+     movl    -88(%ebp), %eax         #  18:     mul    t10 <- t8, t9
-     movl    -104(%ebp), %ebx       
+     movl    -92(%ebp), %ebx        
-     movl    -16(%ebp), %eax         #  22:     add    t14 <- t10, 92544
+     movl    -16(%ebp), %eax         #  19:     add    t11 <- t10, 92544
+     movl    %eax, -20(%ebp)        
+     movl    $3, %eax                #  20:     param  1 <- 3
+     pushl   %eax                   
+     movl    8(%ebp), %eax           #  21:     param  0 <- v0
+     pushl   %eax                   
+     call    DIM                     #  22:     call   t12 <- DIM
+     addl    $8, %esp               
+     movl    %eax, -24(%ebp)        
+     movl    -20(%ebp), %eax         #  23:     mul    t13 <- t11, t12
+     movl    -24(%ebp), %ebx        
+     imull   %ebx                   
+     movl    %eax, -28(%ebp)        
+     movl    -28(%ebp), %eax         #  24:     add    t14 <- t13, 51336
+     movl    $51336, %ebx           
+     addl    %ebx, %eax             
-     movl    $3, %eax                #  23:     param  1 <- 3
+     movl    $4, %eax                #  25:     param  1 <- 4
-     movl    8(%ebp), %eax           #  24:     param  0 <- v0
+     movl    8(%ebp), %eax           #  26:     param  0 <- v0
-     call    DIM                     #  25:     call   t15 <- DIM
+     call    DIM                     #  27:     call   t15 <- DIM
-     movl    -32(%ebp), %eax         #  26:     mul    t16 <- t14, t15
+     movl    -32(%ebp), %eax         #  28:     mul    t16 <- t14, t15
-     movl    -40(%ebp), %eax         #  27:     add    t17 <- t16, 51336
+     movl    -40(%ebp), %eax         #  29:     add    t17 <- t16, 20340
-     movl    $51336, %ebx           
+     movl    $20340, %ebx           
-     movl    $4, %eax                #  28:     param  1 <- 4
+     movl    $5, %eax                #  30:     param  1 <- 5
-     movl    8(%ebp), %eax           #  29:     param  0 <- v0
+     movl    8(%ebp), %eax           #  31:     param  0 <- v0
-     call    DIM                     #  30:     call   t18 <- DIM
+     call    DIM                     #  32:     call   t18 <- DIM
-     movl    -44(%ebp), %eax         #  31:     mul    t19 <- t17, t18
+     movl    -44(%ebp), %eax         #  33:     mul    t19 <- t17, t18
-     movl    -52(%ebp), %eax         #  32:     add    t20 <- t19, 20340
+     movl    -52(%ebp), %eax         #  34:     add    t20 <- t19, 38915
-     movl    $20340, %ebx           
+     movl    $38915, %ebx           
-     movl    $5, %eax                #  33:     param  1 <- 5
+     movl    -56(%ebp), %eax         #  35:     mul    t21 <- t20, 4
+     movl    $4, %ebx               
-     pushl   %eax                   
+     imull   %ebx                   
-     movl    8(%ebp), %eax           #  34:     param  0 <- v0
-     pushl   %eax                   
-     call    DIM                     #  35:     call   t21 <- DIM
-     addl    $8, %esp               
-     movl    -56(%ebp), %eax         #  36:     mul    t22 <- t20, t21
+     movl    8(%ebp), %eax           #  36:     param  0 <- v0
-     movl    -60(%ebp), %ebx        
-     imull   %ebx                   
+     pushl   %eax                   
+     call    DOFS                    #  37:     call   t22 <- DOFS
+     addl    $4, %esp               
-     movl    -64(%ebp), %eax         #  37:     add    t23 <- t22, 38915
+     movl    -60(%ebp), %eax         #  38:     add    t23 <- t21, t22
-     movl    $38915, %ebx           
+     movl    -64(%ebp), %ebx        
-     movl    -68(%ebp), %eax         #  38:     mul    t24 <- t23, 4
+     movl    8(%ebp), %eax           #  39:     add    t24 <- v0, t23
+     movl    -68(%ebp), %ebx        
-     movl    $4, %ebx               
+     addl    %ebx, %eax             
-     imull   %ebx                   
-     movl    8(%ebp), %eax           #  39:     param  0 <- v0
-     pushl   %eax                   
-     call    DOFS                    #  40:     call   t25 <- DOFS
-     addl    $4, %esp               
-     movl    %eax, -76(%ebp)        
-     movl    -72(%ebp), %eax         #  41:     add    t26 <- t24, t25
-     movl    -76(%ebp), %ebx        
-     addl    %ebx, %eax             
-     movl    %eax, -80(%ebp)        
-     movl    8(%ebp), %eax           #  42:     add    t27 <- v0, t26
-     movl    -80(%ebp), %ebx        
-     addl    %ebx, %eax             
-     movl    %eax, -84(%ebp)        
-     movl    $12068, %eax            #  43:     assign @t27 <- 12068
+     movl    $12068, %eax            #  40:     assign @t24 <- 12068
-     movl    -84(%ebp), %edi        
+     movl    -72(%ebp), %edi        
-     addl    $96, %esp               # remove locals
+     addl    $84, %esp               # remove locals
-     #  -4080(%ebp)4056  [ $v3       <array 4 of <array 3 of <array 6 of <array 2 of <array 7 of <int>>>>>> %ebp-4080 ]
+     #   -4080(%ebp)  4056  [ $v3       <array 4 of <array 3 of <array 6 of <array 2 of <array 7 of <int>>>>>> %ebp-4080 ]
-     addl    $5, %esp               
+     addl    $8, %esp               
+     jmp     l_f2_17_if_false        #  21:     goto   17_if_false
-     movl    $99, %eax               #  23:     if     99 = 98 goto 21_while_body
+     movl    $99, %eax               #  24:     if     99 = 98 goto 21_while_body
-     jmp     l_f2_19                 #  24:     goto   19
+     jmp     l_f2_19                 #  25:     goto   19
-     jmp     l_f2_20_while_cond      #  26:     goto   20_while_cond
+     jmp     l_f2_20_while_cond      #  27:     goto   20_while_cond
-     jmp     l_f2_15                 #  28:     goto   15
+     jmp     l_f2_15                 #  29:     goto   15
+ l_f2_17_if_false:
+     jmp     l_test_16               #  21:     goto   16
-     jmp     l_test_17_while_cond    #  22:     goto   17_while_cond
+     jmp     l_test_17_while_cond    #  23:     goto   17_while_cond
+ l_test_16:
-     jmp     l_test_8                #  23:     goto   8
+     jmp     l_test_8                #  25:     goto   8
