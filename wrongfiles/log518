-     #    -72(%ebp)   4  [ $t24      <int> %ebp-72 ]
+     #    -69(%ebp)   1  [ $t24      <bool> %ebp-69 ]
-     #    -76(%ebp)   4  [ $t25      <int> %ebp-76 ]
+     #    -76(%ebp)   4  [ $t6       <int> %ebp-76 ]
-     #    -77(%ebp)   1  [ $t26      <bool> %ebp-77 ]
+     #    -80(%ebp)   4  [ $t7       <int> %ebp-80 ]
-     #    -84(%ebp)   4  [ $t6       <int> %ebp-84 ]
+     #    -84(%ebp)   4  [ $t8       <int> %ebp-84 ]
-     #    -88(%ebp)   4  [ $t7       <int> %ebp-88 ]
+     #    -88(%ebp)   4  [ $t9       <int> %ebp-88 ]
-     #    -92(%ebp)   4  [ $t8       <int> %ebp-92 ]
-     #    -96(%ebp)   4  [ $t9       <int> %ebp-96 ]
-     #    -97(%ebp)   1  [ $v2       <char> %ebp-97 ]
+     #    -89(%ebp)   1  [ $v2       <char> %ebp-89 ]
-     #   -104(%ebp)   4  [ $v3       <int> %ebp-104 ]
+     #    -96(%ebp)   4  [ $v3       <int> %ebp-96 ]
-     pushl   %ebp                   
-     movl    %esp, %ebp             
-     pushl   %ebx                    # save callee saved registers
-     pushl   %esi                   
+     pushl   %ebp                   
+     movl    %esp, %ebp             
+     pushl   %ebx                    # save callee saved registers
-     pushl   %edi                   
+     pushl   %esi                   
+     pushl   %edi                   
-     subl    $92, %esp               # make room for locals
+     subl    $84, %esp               # make room for locals
-     movl    $23, %ecx              
+     movl    $21, %ecx              
+     jmp     l_f0_2_if_false         #   1:     goto   2_if_false
-     movl    $97, %eax               #   2:     assign v2 <- 97
+     movl    $97, %eax               #   3:     assign v2 <- 97
-     movb    %al, -97(%ebp)         
+     movb    %al, -89(%ebp)         
-     jmp     l_f0_0                  #   3:     goto   0
+     jmp     l_f0_0                  #   4:     goto   0
+ l_f0_2_if_false:
-     movl    $2, %eax                #   5:     param  1 <- 2
+     movl    $2, %eax                #   7:     param  1 <- 2
-     movl    12(%ebp), %eax          #   6:     param  0 <- v1
+     movl    12(%ebp), %eax          #   8:     param  0 <- v1
-     call    DIM                     #   7:     call   t6 <- DIM
+     call    DIM                     #   9:     call   t6 <- DIM
+     movl    %eax, -76(%ebp)        
+     movl    $95098, %eax            #  10:     mul    t7 <- 95098, t6
+     movl    -76(%ebp), %ebx        
+     imull   %ebx                   
+     movl    %eax, -80(%ebp)        
+     movl    -80(%ebp), %eax         #  11:     add    t8 <- t7, 23477
+     movl    $23477, %ebx           
+     addl    %ebx, %eax             
+     movl    $3, %eax                #  12:     param  1 <- 3
-     movl    $95098, %eax            #   8:     mul    t7 <- 95098, t6
-     movl    -84(%ebp), %ebx        
-     imull   %ebx                   
+     pushl   %eax                   
+     movl    12(%ebp), %eax          #  13:     param  0 <- v1
+     pushl   %eax                   
+     call    DIM                     #  14:     call   t9 <- DIM
+     addl    $8, %esp               
-     movl    -88(%ebp), %eax         #   9:     add    t8 <- t7, 23477
-     movl    $23477, %ebx           
-     addl    %ebx, %eax             
-     movl    %eax, -92(%ebp)        
-     movl    $3, %eax                #  10:     param  1 <- 3
-     pushl   %eax                   
-     movl    12(%ebp), %eax          #  11:     param  0 <- v1
-     pushl   %eax                   
-     call    DIM                     #  12:     call   t9 <- DIM
-     addl    $8, %esp               
-     movl    %eax, -96(%ebp)        
-     movl    -92(%ebp), %eax         #  13:     mul    t10 <- t8, t9
+     movl    -84(%ebp), %eax         #  15:     mul    t10 <- t8, t9
-     movl    -96(%ebp), %ebx        
+     movl    -88(%ebp), %ebx        
-     movl    -16(%ebp), %eax         #  14:     add    t11 <- t10, 69986
+     movl    -16(%ebp), %eax         #  16:     add    t11 <- t10, 69986
-     movl    $4, %eax                #  15:     param  1 <- 4
+     movl    $4, %eax                #  17:     param  1 <- 4
-     movl    12(%ebp), %eax          #  16:     param  0 <- v1
+     movl    12(%ebp), %eax          #  18:     param  0 <- v1
-     call    DIM                     #  17:     call   t12 <- DIM
+     call    DIM                     #  19:     call   t12 <- DIM
-     movl    -20(%ebp), %eax         #  18:     mul    t13 <- t11, t12
+     movl    -20(%ebp), %eax         #  20:     mul    t13 <- t11, t12
-     movl    $40490, %eax            #  19:     mul    t14 <- 40490, 19937
+     movl    $40490, %eax            #  21:     mul    t14 <- 40490, 19937
-     movl    -32(%ebp), %eax         #  20:     div    t15 <- t14, 60379
+     movl    -32(%ebp), %eax         #  22:     div    t15 <- t14, 60379
-     movl    -28(%ebp), %eax         #  21:     add    t16 <- t13, t15
+     movl    -28(%ebp), %eax         #  23:     add    t16 <- t13, t15
-     movl    $5, %eax                #  22:     param  1 <- 5
+     movl    $5, %eax                #  24:     param  1 <- 5
-     movl    12(%ebp), %eax          #  23:     param  0 <- v1
+     movl    12(%ebp), %eax          #  25:     param  0 <- v1
-     call    DIM                     #  24:     call   t17 <- DIM
+     call    DIM                     #  26:     call   t17 <- DIM
-     movl    $40490, %eax            #  25:     mul    t19 <- 40490, 19937
-     movl    $19937, %ebx           
-     imull   %ebx                   
-     movl    %eax, -52(%ebp)        
-     movl    -52(%ebp), %eax         #  26:     div    t20 <- t19, 60379
-     movl    $60379, %ebx           
-     cdq                            
-     idivl   %ebx                   
-     movl    %eax, -56(%ebp)        
-     movl    -48(%ebp), %eax         #  28:     add    t21 <- t18, 70538
+     movl    -48(%ebp), %eax         #  28:     add    t19 <- t18, 70538
+     movl    %eax, -52(%ebp)        
+     movl    -52(%ebp), %eax         #  29:     mul    t20 <- t19, 4
+     movl    $4, %ebx               
+     imull   %ebx                   
+     movl    %eax, -56(%ebp)        
+     movl    12(%ebp), %eax          #  30:     param  0 <- v1
+     pushl   %eax                   
+     call    DOFS                    #  31:     call   t21 <- DOFS
+     addl    $4, %esp               
-     movl    -60(%ebp), %eax         #  29:     mul    t22 <- t21, 4
+     movl    -56(%ebp), %eax         #  32:     add    t22 <- t20, t21
+     movl    -60(%ebp), %ebx        
-     movl    $4, %ebx               
+     addl    %ebx, %eax             
-     imull   %ebx                   
-     movl    12(%ebp), %eax          #  30:     param  0 <- v1
+     movl    12(%ebp), %eax          #  33:     add    t23 <- v1, t22
+     movl    -64(%ebp), %ebx        
-     pushl   %eax                   
-     call    DOFS                    #  31:     call   t23 <- DOFS
-     addl    $4, %esp               
+     addl    %ebx, %eax             
-     movl    -64(%ebp), %eax         #  32:     add    t24 <- t22, t23
-     movl    -68(%ebp), %ebx        
-     addl    %ebx, %eax             
-     movl    %eax, -72(%ebp)        
-     movl    12(%ebp), %eax          #  33:     add    t25 <- v1, t24
-     movl    -72(%ebp), %ebx        
-     addl    %ebx, %eax             
-     movl    %eax, -76(%ebp)        
-     movl    $16693, %eax            #  34:     assign @t25 <- 16693
+     movl    $16693, %eax            #  34:     assign @t23 <- 16693
-     movl    -76(%ebp), %edi        
+     movl    -68(%ebp), %edi        
-     movl    $1, %eax                #  38:     assign t26 <- 1
+     movl    $1, %eax                #  38:     assign t24 <- 1
-     movb    %al, -77(%ebp)         
+     movb    %al, -69(%ebp)         
-     movl    $0, %eax                #  40:     assign t26 <- 0
+     movl    $0, %eax                #  40:     assign t24 <- 0
-     movb    %al, -77(%ebp)         
+     movb    %al, -69(%ebp)         
-     movzbl  -77(%ebp), %eax         #  42:     return t26
+     movzbl  -69(%ebp), %eax         #  42:     return t24
-     addl    $92, %esp               # remove locals
+     addl    $84, %esp               # remove locals
