+     jmp     l_f0_10                 #  14:     goto   10
+ l_f0_10:
-     jmp     l_f0_6                  #  14:     goto   6
+     jmp     l_f0_6                  #  16:     goto   6
-     movl    $1, %eax                #  16:     assign t12 <- 1
+     movl    $1, %eax                #  18:     assign t12 <- 1
-     jmp     l_f0_8                  #  17:     goto   8
+     jmp     l_f0_8                  #  19:     goto   8
-     movl    $0, %eax                #  18:     assign t12 <- 0
+     movl    $0, %eax                #  20:     assign t12 <- 0
-     movzbl  -21(%ebp), %eax         #  20:     return t12
+     movzbl  -21(%ebp), %eax         #  22:     return t12
-     jmp     l_f2_3                  #   1:     goto   3
+     jmp     l_f2_4                  #   1:     goto   4
+     jmp     l_f2_5                  #   2:     goto   5
- l_f2_3:
+ l_f2_4:
-     movl    $1, %eax                #   3:     assign t5 <- 1
+     movl    $1, %eax                #   4:     assign t5 <- 1
-     jmp     l_f2_5                  #   4:     goto   5
+     jmp     l_f2_6                  #   5:     goto   6
+ l_f2_5:
-     movl    $0, %eax                #   5:     assign t5 <- 0
+     movl    $0, %eax                #   7:     assign t5 <- 0
- l_f2_5:
+ l_f2_6:
-     movl    $0, %eax                #   7:     if     0 # t5 goto 2_while_body
+     movl    $0, %eax                #   9:     if     0 # t5 goto 2_while_body
-     jmp     l_f2_0                  #   8:     goto   0
+     jmp     l_f2_0                  #  10:     goto   0
-     jmp     l_f2_1_while_cond       #  10:     goto   1_while_cond
+     jmp     l_f2_1_while_cond       #  12:     goto   1_while_cond
-     movl    $18000, %eax            #  13:     if     18000 < 4929 goto 12_while_body
+     movl    $18000, %eax            #  15:     if     18000 < 4929 goto 12_while_body
-     jmp     l_f2_10                 #  14:     goto   10
+     jmp     l_f2_10                 #  16:     goto   10
-     call    ReadInt                 #  16:     call   t6 <- ReadInt
+     call    ReadInt                 #  18:     call   t6 <- ReadInt
-     movl    -20(%ebp), %eax         #  17:     return t6
+     movl    -20(%ebp), %eax         #  19:     return t6
-     jmp     l_f2_11_while_cond      #  18:     goto   11_while_cond
+     jmp     l_f2_11_while_cond      #  20:     goto   11_while_cond
+     jmp     l_f2_17                 #  22:     goto   17
-     movl    $1, %eax                #  20:     assign t7 <- 1
+     movl    $1, %eax                #  23:     assign t7 <- 1
-     jmp     l_f2_18                 #  21:     goto   18
+     jmp     l_f2_18                 #  24:     goto   18
+ l_f2_17:
-     movl    $0, %eax                #  22:     assign t7 <- 0
+     movl    $0, %eax                #  26:     assign t7 <- 0
-     movzbl  -21(%ebp), %eax         #  24:     assign v0 <- t7
+     movzbl  -21(%ebp), %eax         #  28:     assign v0 <- t7
+     jmp     l_test_10               #  24:     goto   10
-     movl    $1, %eax                #  25:     assign t3 <- 1
+     movl    $1, %eax                #  26:     assign t3 <- 1
-     jmp     l_test_11               #  26:     goto   11
+     jmp     l_test_11               #  27:     goto   11
+ l_test_10:
-     movl    $0, %eax                #  27:     assign t3 <- 0
+     movl    $0, %eax                #  29:     assign t3 <- 0
-     movzbl  -16(%ebp), %eax         #  29:     param  0 <- t3
+     movzbl  -16(%ebp), %eax         #  31:     param  0 <- t3
-     call    f2                      #  30:     call   t4 <- f2
+     call    f2                      #  32:     call   t4 <- f2
-     addl    $4, %esp               
+     addl    $16, %esp              
-     movl    $99, %eax               #  31:     if     99 < 100 goto 17_if_true
+     movl    $99, %eax               #  33:     if     99 < 100 goto 17_if_true
-     jmp     l_test_18_if_false      #  32:     goto   18_if_false
+     jmp     l_test_18_if_false      #  34:     goto   18_if_false
-     movl    $97, %eax               #  35:     if     97 < 99 goto 22_while_body
+     movl    $97, %eax               #  37:     if     97 < 99 goto 22_while_body
-     jmp     l_test_20               #  36:     goto   20
+     jmp     l_test_20               #  38:     goto   20
-     movl    $31475, %eax            #  38:     assign v0 <- 31475
+     movl    $31475, %eax            #  40:     assign v0 <- 31475
-     jmp     l_test_21_while_cond    #  39:     goto   21_while_cond
+     jmp     l_test_21_while_cond    #  41:     goto   21_while_cond
-     jmp     l_test_16               #  41:     goto   16
+     jmp     l_test_16               #  43:     goto   16
+     jmp     l_test_27_if_false      #  46:     goto   27_if_false
-     call    WriteLn                 #  44:     call   WriteLn
+     call    WriteLn                 #  47:     call   WriteLn
-     jmp     l_test_25               #  45:     goto   25
+     jmp     l_test_25               #  48:     goto   25
+ l_test_27_if_false:
