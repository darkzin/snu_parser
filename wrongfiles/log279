+     jmp     l_f0_0                  #   2:     goto   0
-     jmp     l_f0_5_while_cond       #   4:     goto   5_while_cond
+     jmp     l_f0_5_while_cond       #   5:     goto   5_while_cond
-     call    dummyINTfunc            #   5:     call   t3 <- dummyINTfunc
+     call    dummyINTfunc            #   6:     call   t3 <- dummyINTfunc
-     jmp     l_f0_9_while_cond       #   7:     goto   9_while_cond
+     jmp     l_f0_9_while_cond       #   8:     goto   9_while_cond
-     jmp     l_f0_11                 #   8:     goto   11
+     jmp     l_f0_11                 #   9:     goto   11
-     call    WriteLn                 #  10:     call   WriteLn
+     call    WriteLn                 #  11:     call   WriteLn
-     jmp     l_f0_1_while_cond       #  11:     goto   1_while_cond
+     jmp     l_f0_1_while_cond       #  12:     goto   1_while_cond
+ l_f0_0:
-     call    dummyCHARfunc           #  12:     call   t4 <- dummyCHARfunc
+     call    dummyCHARfunc           #  14:     call   t4 <- dummyCHARfunc
-     call    dummyCHARfunc           #  13:     call   t5 <- dummyCHARfunc
+     call    dummyCHARfunc           #  15:     call   t5 <- dummyCHARfunc
-     movzbl  -73(%ebp), %eax         #  14:     if     t4 < t5 goto 16
+     movzbl  -73(%ebp), %eax         #  16:     if     t4 < t5 goto 16
-     jmp     l_f0_17                 #  15:     goto   17
+     jmp     l_f0_17                 #  17:     goto   17
-     movl    $1, %eax                #  17:     assign t6 <- 1
+     movl    $1, %eax                #  19:     assign t6 <- 1
-     jmp     l_f0_18                 #  18:     goto   18
+     jmp     l_f0_18                 #  20:     goto   18
-     movl    $0, %eax                #  20:     assign t6 <- 0
+     movl    $0, %eax                #  22:     assign t6 <- 0
-     movl    $2, %eax                #  22:     param  1 <- 2
+     movl    $2, %eax                #  24:     param  1 <- 2
-     movl    12(%ebp), %eax          #  23:     param  0 <- v2
+     movl    12(%ebp), %eax          #  25:     param  0 <- v2
-     call    DIM                     #  24:     call   t7 <- DIM
+     call    DIM                     #  26:     call   t7 <- DIM
-     movl    $34709, %eax            #  25:     mul    t8 <- 34709, t7
+     movl    $34709, %eax            #  27:     mul    t8 <- 34709, t7
-     movl    -84(%ebp), %eax         #  26:     add    t9 <- t8, 65999
+     movl    -84(%ebp), %eax         #  28:     add    t9 <- t8, 65999
-     movl    $3, %eax                #  27:     param  1 <- 3
+     movl    $3, %eax                #  29:     param  1 <- 3
-     movl    12(%ebp), %eax          #  28:     param  0 <- v2
+     movl    12(%ebp), %eax          #  30:     param  0 <- v2
-     call    DIM                     #  29:     call   t10 <- DIM
+     call    DIM                     #  31:     call   t10 <- DIM
-     movl    -88(%ebp), %eax         #  30:     mul    t11 <- t9, t10
+     movl    -88(%ebp), %eax         #  32:     mul    t11 <- t9, t10
-     movl    -20(%ebp), %eax         #  31:     add    t12 <- t11, 42887
+     movl    -20(%ebp), %eax         #  33:     add    t12 <- t11, 42887
-     movl    $4, %eax                #  32:     param  1 <- 4
+     movl    $4, %eax                #  34:     param  1 <- 4
-     movl    12(%ebp), %eax          #  33:     param  0 <- v2
+     movl    12(%ebp), %eax          #  35:     param  0 <- v2
-     call    DIM                     #  34:     call   t13 <- DIM
+     call    DIM                     #  36:     call   t13 <- DIM
-     movl    -24(%ebp), %eax         #  35:     mul    t14 <- t12, t13
+     movl    -24(%ebp), %eax         #  37:     mul    t14 <- t12, t13
-     movl    -32(%ebp), %eax         #  36:     add    t15 <- t14, 98928
+     movl    -32(%ebp), %eax         #  38:     add    t15 <- t14, 98928
-     movl    $5, %eax                #  37:     param  1 <- 5
+     movl    $5, %eax                #  39:     param  1 <- 5
-     movl    12(%ebp), %eax          #  38:     param  0 <- v2
+     movl    12(%ebp), %eax          #  40:     param  0 <- v2
-     call    DIM                     #  39:     call   t16 <- DIM
+     call    DIM                     #  41:     call   t16 <- DIM
-     movl    -36(%ebp), %eax         #  40:     mul    t17 <- t15, t16
+     movl    -36(%ebp), %eax         #  42:     mul    t17 <- t15, t16
-     movl    -44(%ebp), %eax         #  41:     add    t18 <- t17, 93595
+     movl    -44(%ebp), %eax         #  43:     add    t18 <- t17, 93595
-     movl    -48(%ebp), %eax         #  42:     mul    t19 <- t18, 1
+     movl    -48(%ebp), %eax         #  44:     mul    t19 <- t18, 1
-     movl    12(%ebp), %eax          #  43:     param  0 <- v2
+     movl    12(%ebp), %eax          #  45:     param  0 <- v2
-     call    DOFS                    #  44:     call   t20 <- DOFS
+     call    DOFS                    #  46:     call   t20 <- DOFS
-     movl    -52(%ebp), %eax         #  45:     add    t21 <- t19, t20
+     movl    -52(%ebp), %eax         #  47:     add    t21 <- t19, t20
-     movl    12(%ebp), %eax          #  46:     add    t22 <- v2, t21
+     movl    12(%ebp), %eax          #  48:     add    t22 <- v2, t21
-     movzbl  -75(%ebp), %eax         #  47:     assign @t22 <- t6
+     movzbl  -75(%ebp), %eax         #  49:     assign @t22 <- t6
-     leal    _str_1, %eax            #  48:     &()    t23 <- _str_1
+     leal    _str_1, %eax            #  50:     &()    t23 <- _str_1
-     movl    -68(%ebp), %eax         #  49:     param  0 <- t23
+     movl    -68(%ebp), %eax         #  51:     param  0 <- t23
-     call    WriteStr                #  50:     call   WriteStr
+     call    WriteStr                #  52:     call   WriteStr
+     jmp     l_test_3_if_false       #   2:     goto   3_if_false
-     movl    $28489, %eax            #   4:     if     28489 # 3904 goto 8_while_body
+     movl    $28489, %eax            #   5:     if     28489 # 3904 goto 8_while_body
-     jmp     l_test_6                #   5:     goto   6
+     jmp     l_test_6                #   6:     goto   6
-     jmp     l_test_7_while_cond     #   7:     goto   7_while_cond
+     jmp     l_test_7_while_cond     #   8:     goto   7_while_cond
-     movl    $97, %eax               #   9:     assign v0 <- 97
+     movl    $97, %eax               #  10:     assign v0 <- 97
-     movl    $98, %eax               #  11:     if     98 < 99 goto 13_while_body
+     movl    $98, %eax               #  12:     if     98 < 99 goto 13_while_body
-     jmp     l_test_11               #  12:     goto   11
+     jmp     l_test_11               #  13:     goto   11
-     jmp     l_test_12_while_cond    #  14:     goto   12_while_cond
+     jmp     l_test_12_while_cond    #  15:     goto   12_while_cond
-     call    WriteLn                 #  16:     call   WriteLn
+     call    WriteLn                 #  17:     call   WriteLn
-     jmp     l_test_1                #  17:     goto   1
+     jmp     l_test_1                #  18:     goto   1
+ l_test_3_if_false:
-     call    dummyBOOLfunc           #  19:     call   t0 <- dummyBOOLfunc
+     call    dummyBOOLfunc           #  21:     call   t0 <- dummyBOOLfunc
-     movl    $66296, %eax            #  21:     mul    t1 <- 66296, 3177
+     movl    $66296, %eax            #  23:     mul    t1 <- 66296, 3177
-     movl    -20(%ebp), %eax         #  22:     mul    t2 <- t1, 70276
+     movl    -20(%ebp), %eax         #  24:     mul    t2 <- t1, 70276
-     movl    -24(%ebp), %eax         #  23:     assign v1 <- t2
+     movl    -24(%ebp), %eax         #  25:     assign v1 <- t2
-     movl    $1, %eax                #  25:     if     1 = 0 goto 24_while_body
+     movl    $1, %eax                #  27:     if     1 = 0 goto 24_while_body
-     jmp     l_test_22               #  26:     goto   22
+     jmp     l_test_22               #  28:     goto   22
-     jmp     l_test_23_while_cond    #  28:     goto   23_while_cond
+     jmp     l_test_23_while_cond    #  30:     goto   23_while_cond
-     movl    $0, %eax                #  30:     if     0 # 1 goto 27_if_true
+     movl    $0, %eax                #  32:     if     0 # 1 goto 27_if_true
-     jmp     l_test_28_if_false      #  31:     goto   28_if_false
+     jmp     l_test_28_if_false      #  33:     goto   28_if_false
-     jmp     l_test_26               #  33:     goto   26
+     jmp     l_test_26               #  35:     goto   26
-     jmp     l_test_19               #  36:     goto   19
+     jmp     l_test_19               #  38:     goto   19
