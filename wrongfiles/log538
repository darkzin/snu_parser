-     #   -672(%ebp) 564  [ $v4       <array 1 of <array 3 of <array 6 of <array 6 of <array 5 of <char>>>>>> %ebp-672 ]
+     #   -672(%ebp)  564  [ $v4       <array 1 of <array 3 of <array 6 of <array 6 of <array 5 of <char>>>>>> %ebp-672 ]
+     jmp     l_f1_25                 #  59:     goto   25
+     jmp     l_f1_25                 #  60:     goto   25
-     movl    $1, %eax                #  59:     assign t28 <- 1
+     movl    $1, %eax                #  61:     assign t28 <- 1
-     jmp     l_f1_25                 #  60:     goto   25
+     jmp     l_f1_26                 #  62:     goto   26
+ l_f1_25:
-     movl    $0, %eax                #  61:     assign t28 <- 0
+     movl    $0, %eax                #  64:     assign t28 <- 0
- l_f1_25:
+ l_f1_26:
-     movl    $1, %eax                #  63:     if     1 # t28 goto 21_if_true
+     movl    $1, %eax                #  66:     if     1 # t28 goto 21_if_true
-     jmp     l_f1_22_if_false        #  64:     goto   22_if_false
+     jmp     l_f1_22_if_false        #  67:     goto   22_if_false
-     jmp     l_f1_20                 #  66:     goto   20
+     jmp     l_f1_20                 #  69:     goto   20
-     jmp     l_f1_18_while_cond      #  69:     goto   18_while_cond
+     jmp     l_f1_18_while_cond      #  72:     goto   18_while_cond
+     jmp     l_f2_2_if_false         #   0:     goto   2_if_false
-     movl    $98, %eax               #   0:     assign v0 <- 98
+     movl    $98, %eax               #   1:     assign v0 <- 98
-     jmp     l_f2_0                  #   1:     goto   0
+     jmp     l_f2_0                  #   2:     goto   0
+ l_f2_2_if_false:
-     movl    $77060, %eax            #   3:     mul    t2 <- 77060, 21288
+     movl    $77060, %eax            #   5:     mul    t2 <- 77060, 21288
-     movl    -16(%ebp), %eax         #   4:     mul    t3 <- t2, 13283
+     movl    -16(%ebp), %eax         #   6:     mul    t3 <- t2, 13283
-     movl    -20(%ebp), %eax         #   5:     add    t4 <- t3, 40118
+     movl    -20(%ebp), %eax         #   7:     add    t4 <- t3, 40118
-     movl    -24(%ebp), %eax         #   6:     sub    t5 <- t4, 87228
+     movl    -24(%ebp), %eax         #   8:     sub    t5 <- t4, 87228
-     movl    $86198, %eax            #   7:     if     86198 = t5 goto 6
+     movl    $86198, %eax            #   9:     if     86198 = t5 goto 6
-     jmp     l_f2_7                  #   8:     goto   7
+     jmp     l_f2_7                  #  10:     goto   7
-     movl    $1, %eax                #  10:     assign t6 <- 1
+     movl    $1, %eax                #  12:     assign t6 <- 1
-     jmp     l_f2_8                  #  11:     goto   8
+     jmp     l_f2_8                  #  13:     goto   8
-     movl    $0, %eax                #  13:     assign t6 <- 0
+     movl    $0, %eax                #  15:     assign t6 <- 0
-     movzbl  -29(%ebp), %eax         #  15:     return t6
+     movzbl  -29(%ebp), %eax         #  17:     return t6
-     jmp     l_f2_12_if_false        #  16:     goto   12_if_false
+     jmp     l_f2_12_if_false        #  18:     goto   12_if_false
-     jmp     l_f2_13                 #  17:     goto   13
+     jmp     l_f2_13                 #  19:     goto   13
-     call    dummyProcedure          #  19:     call   dummyProcedure
+     call    dummyProcedure          #  21:     call   dummyProcedure
-     movl    $0, %eax                #  20:     assign v1 <- 0
+     movl    $0, %eax                #  22:     assign v1 <- 0
-     movl    $96299, %eax            #  21:     if     96299 > 86497 goto 19_if_true
+     movl    $96299, %eax            #  23:     if     96299 > 86497 goto 19_if_true
-     jmp     l_f2_20_if_false        #  22:     goto   20_if_false
+     jmp     l_f2_20_if_false        #  24:     goto   20_if_false
-     movl    $74416, %eax            #  24:     if     74416 >= 25146 goto 23
+     movl    $74416, %eax            #  26:     if     74416 >= 25146 goto 23
-     jmp     l_f2_24                 #  25:     goto   24
+     jmp     l_f2_24                 #  27:     goto   24
-     movl    $1, %eax                #  27:     assign t7 <- 1
+     movl    $1, %eax                #  29:     assign t7 <- 1
-     jmp     l_f2_25                 #  28:     goto   25
+     jmp     l_f2_25                 #  30:     goto   25
-     movl    $0, %eax                #  30:     assign t7 <- 0
+     movl    $0, %eax                #  32:     assign t7 <- 0
-     movzbl  -30(%ebp), %eax         #  32:     return t7
+     movzbl  -30(%ebp), %eax         #  34:     return t7
-     movl    $0, %eax                #  33:     assign v1 <- 0
+     movl    $0, %eax                #  35:     assign v1 <- 0
-     jmp     l_f2_18                 #  34:     goto   18
+     jmp     l_f2_18                 #  36:     goto   18
-     jmp     l_f2_10                 #  37:     goto   10
+     jmp     l_f2_10                 #  39:     goto   10
