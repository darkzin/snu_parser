-     #    -68(%ebp)   4  [ $t22      <int> %ebp-68 ]
+     #    -65(%ebp)   1  [ $t3       <bool> %ebp-65 ]
-     #    -72(%ebp)   4  [ $t23      <int> %ebp-72 ]
+     #    -72(%ebp)   4  [ $t4       <int> %ebp-72 ]
-     #    -73(%ebp)   1  [ $t3       <bool> %ebp-73 ]
+     #    -76(%ebp)   4  [ $t5       <int> %ebp-76 ]
-     #    -80(%ebp)   4  [ $t4       <int> %ebp-80 ]
+     #    -80(%ebp)   4  [ $t6       <int> %ebp-80 ]
-     #    -84(%ebp)   4  [ $t5       <int> %ebp-84 ]
+     #    -84(%ebp)   4  [ $t7       <int> %ebp-84 ]
-     #    -88(%ebp)   4  [ $t6       <int> %ebp-88 ]
+     #    -88(%ebp)   4  [ $t8       <int> %ebp-88 ]
-     #    -92(%ebp)   4  [ $t7       <int> %ebp-92 ]
+     #    -92(%ebp)   4  [ $t9       <int> %ebp-92 ]
-     #    -96(%ebp)   4  [ $t8       <int> %ebp-96 ]
-     #   -100(%ebp)   4  [ $t9       <int> %ebp-100 ]
-     #   -101(%ebp)   1  [ $v2       <char> %ebp-101 ]
+     #    -93(%ebp)   1  [ $v2       <char> %ebp-93 ]
-     #   -102(%ebp)   1  [ $v3       <bool> %ebp-102 ]
+     #    -94(%ebp)   1  [ $v3       <bool> %ebp-94 ]
-     pushl   %ebp                   
-     movl    %esp, %ebp             
-     pushl   %ebx                    # save callee saved registers
-     pushl   %esi                   
+     pushl   %ebp                   
+     movl    %esp, %ebp             
+     pushl   %ebx                    # save callee saved registers
-     pushl   %edi                   
+     pushl   %esi                   
+     pushl   %edi                   
-     subl    $92, %esp               # make room for locals
+     subl    $84, %esp               # make room for locals
-     movl    $23, %ecx              
+     movl    $21, %ecx              
-     movb    %al, -101(%ebp)        
+     movb    %al, -93(%ebp)         
-     movb    %al, -73(%ebp)         
+     movb    %al, -65(%ebp)         
-     movb    %al, -73(%ebp)         
+     movb    %al, -65(%ebp)         
-     movl    %eax, -80(%ebp)        
+     movl    %eax, -72(%ebp)        
-     movl    -80(%ebp), %ebx        
+     movl    -72(%ebp), %ebx        
-     movl    %eax, -84(%ebp)        
+     movl    %eax, -76(%ebp)        
+     movl    %eax, -80(%ebp)        
+     movl    -76(%ebp), %eax         #  16:     mul    t7 <- t5, t6
+     movl    -80(%ebp), %ebx        
+     imull   %ebx                   
+     movl    %eax, -84(%ebp)        
+     movl    -84(%ebp), %eax         #  17:     add    t8 <- t7, 46294
+     movl    $46294, %ebx           
+     addl    %ebx, %eax             
+     movl    $3, %eax                #  18:     param  1 <- 3
+     pushl   %eax                   
+     movl    8(%ebp), %eax           #  19:     param  0 <- v0
+     pushl   %eax                   
-     call    ReadInt                 #  16:     call   t8 <- ReadInt
+     call    DIM                     #  20:     call   t9 <- DIM
+     addl    $8, %esp               
-     movl    %eax, -96(%ebp)        
+     movl    %eax, -92(%ebp)        
-     movl    $16625, %eax            #  17:     sub    t9 <- 16625, t8
+     movl    -88(%ebp), %eax         #  21:     mul    t10 <- t8, t9
-     movl    -96(%ebp), %ebx        
+     movl    -92(%ebp), %ebx        
-     subl    %ebx, %eax             
-     movl    %eax, -100(%ebp)       
-     movl    -84(%ebp), %eax         #  18:     mul    t7 <- t5, t6
-     movl    -88(%ebp), %ebx        
-     movl    %eax, -92(%ebp)        
-     movl    -92(%ebp), %eax         #  19:     add    t10 <- t7, 46294
-     movl    $46294, %ebx           
-     addl    %ebx, %eax             
+     movl    -16(%ebp), %eax         #  22:     add    t11 <- t10, 29711
+     movl    $29711, %ebx           
+     addl    %ebx, %eax             
+     movl    %eax, -20(%ebp)        
-     movl    $3, %eax                #  20:     param  1 <- 3
+     movl    $4, %eax                #  23:     param  1 <- 4
-     movl    8(%ebp), %eax           #  21:     param  0 <- v0
+     movl    8(%ebp), %eax           #  24:     param  0 <- v0
-     call    DIM                     #  22:     call   t11 <- DIM
+     call    DIM                     #  25:     call   t12 <- DIM
-     movl    %eax, -20(%ebp)        
+     movl    %eax, -24(%ebp)        
-     movl    -16(%ebp), %eax         #  23:     mul    t12 <- t10, t11
+     movl    -20(%ebp), %eax         #  26:     mul    t13 <- t11, t12
-     movl    -20(%ebp), %ebx        
+     movl    -24(%ebp), %ebx        
-     movl    %eax, -24(%ebp)        
-     movl    -24(%ebp), %eax         #  24:     add    t13 <- t12, 29711
-     movl    $29711, %ebx           
-     addl    %ebx, %eax             
+     movl    -28(%ebp), %eax         #  27:     add    t14 <- t13, 94305
+     movl    $94305, %ebx           
+     addl    %ebx, %eax             
+     movl    %eax, -32(%ebp)        
-     movl    $4, %eax                #  25:     param  1 <- 4
+     movl    $5, %eax                #  28:     param  1 <- 5
-     movl    8(%ebp), %eax           #  26:     param  0 <- v0
+     movl    8(%ebp), %eax           #  29:     param  0 <- v0
-     call    DIM                     #  27:     call   t14 <- DIM
+     call    DIM                     #  30:     call   t15 <- DIM
-     movl    %eax, -32(%ebp)        
+     movl    %eax, -36(%ebp)        
-     movl    -28(%ebp), %eax         #  28:     mul    t15 <- t13, t14
+     movl    -32(%ebp), %eax         #  31:     mul    t16 <- t14, t15
-     movl    -32(%ebp), %ebx        
+     movl    -36(%ebp), %ebx        
-     movl    %eax, -36(%ebp)        
-     movl    -36(%ebp), %eax         #  29:     add    t16 <- t15, 94305
-     movl    $94305, %ebx           
-     addl    %ebx, %eax             
-     movl    $5, %eax                #  30:     param  1 <- 5
-     pushl   %eax                   
-     movl    8(%ebp), %eax           #  31:     param  0 <- v0
+     movl    -40(%ebp), %eax         #  32:     add    t17 <- t16, 80934
+     movl    $80934, %ebx           
-     pushl   %eax                   
-     call    DIM                     #  32:     call   t17 <- DIM
-     addl    $8, %esp               
+     addl    %ebx, %eax             
-     movl    -40(%ebp), %eax         #  33:     mul    t18 <- t16, t17
+     movl    -44(%ebp), %eax         #  33:     mul    t18 <- t17, 1
-     movl    -44(%ebp), %ebx        
+     movl    $1, %ebx               
-     movl    -48(%ebp), %eax         #  34:     add    t19 <- t18, 80934
+     movl    8(%ebp), %eax           #  34:     param  0 <- v0
-     movl    $80934, %ebx           
+     pushl   %eax                   
+     call    DOFS                    #  35:     call   t19 <- DOFS
-     addl    %ebx, %eax             
+     addl    $4, %esp               
-     movl    -52(%ebp), %eax         #  35:     mul    t20 <- t19, 1
+     movl    -48(%ebp), %eax         #  36:     add    t20 <- t18, t19
+     movl    -52(%ebp), %ebx        
-     movl    $1, %ebx               
+     addl    %ebx, %eax             
-     imull   %ebx                   
-     movl    8(%ebp), %eax           #  36:     param  0 <- v0
+     movl    8(%ebp), %eax           #  37:     add    t21 <- v0, t20
+     movl    -60(%ebp), %ebx        
-     pushl   %eax                   
-     call    DOFS                    #  37:     call   t21 <- DOFS
-     addl    $4, %esp               
+     addl    %ebx, %eax             
-     movl    -60(%ebp), %eax         #  38:     add    t22 <- t20, t21
+     movzbl  -65(%ebp), %eax         #  38:     assign @t21 <- t3
-     movl    -64(%ebp), %ebx        
+     movl    -64(%ebp), %edi        
-     addl    %ebx, %eax             
-     movl    %eax, -68(%ebp)        
-     movl    8(%ebp), %eax           #  39:     add    t23 <- v0, t22
-     movl    -68(%ebp), %ebx        
-     addl    %ebx, %eax             
-     movl    %eax, -72(%ebp)        
-     movzbl  -73(%ebp), %eax         #  40:     assign @t23 <- t3
-     movl    -72(%ebp), %edi        
-     addl    $92, %esp               # remove locals
+     addl    $84, %esp               # remove locals
-     addl    $1, %esp               
+     addl    $4, %esp               
-     addl    $1, %esp               
+     addl    $4, %esp               
