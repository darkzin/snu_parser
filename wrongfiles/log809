+     jmp     l_f0_6                  #   0:     goto   6
-     movl    $1, %eax                #   0:     assign t3 <- 1
+     movl    $1, %eax                #   1:     assign t3 <- 1
-     jmp     l_f0_6                  #   1:     goto   6
+     jmp     l_f0_7                  #   2:     goto   7
+ l_f0_6:
-     movl    $0, %eax                #   2:     assign t3 <- 0
+     movl    $0, %eax                #   4:     assign t3 <- 0
- l_f0_6:
+ l_f0_7:
-     jmp     l_f0_8                  #   4:     goto   8
-     jmp     l_f0_8                  #   5:     goto   8
-     jmp     l_f0_8                  #   6:     goto   8
+     jmp     l_f0_9                  #   6:     goto   9
+     jmp     l_f0_9                  #   7:     goto   9
+     jmp     l_f0_9                  #   8:     goto   9
+     jmp     l_f0_10                 #   9:     goto   10
- l_f0_8:
+ l_f0_9:
-     movl    $1, %eax                #   8:     assign t4 <- 1
+     movl    $1, %eax                #  11:     assign t4 <- 1
-     jmp     l_f0_10                 #   9:     goto   10
+     jmp     l_f0_11                 #  12:     goto   11
+ l_f0_10:
-     movl    $0, %eax                #  10:     assign t4 <- 0
+     movl    $0, %eax                #  14:     assign t4 <- 0
- l_f0_10:
+ l_f0_11:
-     movzbl  -13(%ebp), %eax         #  12:     if     t3 = t4 goto 1
+     movzbl  -13(%ebp), %eax         #  16:     if     t3 = t4 goto 1
-     jmp     l_f0_2                  #  13:     goto   2
+     jmp     l_f0_2                  #  17:     goto   2
-     movl    $1, %eax                #  15:     assign t5 <- 1
+     movl    $1, %eax                #  19:     assign t5 <- 1
-     jmp     l_f0_3                  #  16:     goto   3
+     jmp     l_f0_3                  #  20:     goto   3
-     movl    $0, %eax                #  18:     assign t5 <- 0
+     movl    $0, %eax                #  22:     assign t5 <- 0
-     movzbl  -15(%ebp), %eax         #  20:     return t5
+     movzbl  -15(%ebp), %eax         #  24:     return t5
-     jmp     l_f0_19_while_body      #  22:     goto   19_while_body
+     jmp     l_f0_19_while_body      #  26:     goto   19_while_body
+     jmp     l_f0_17                 #  27:     goto   17
-     jmp     l_f0_26_if_false        #  24:     goto   26_if_false
+     jmp     l_f0_26_if_false        #  29:     goto   26_if_false
-     jmp     l_f0_24                 #  25:     goto   24
+     jmp     l_f0_24                 #  30:     goto   24
-     jmp     l_f0_18_while_cond      #  28:     goto   18_while_cond
+     jmp     l_f0_18_while_cond      #  33:     goto   18_while_cond
+ l_f0_17:
-     movl    $62118, %eax            #  29:     sub    t6 <- 62118, 11121
+     movl    $62118, %eax            #  35:     sub    t6 <- 62118, 11121
-     movl    -20(%ebp), %eax         #  30:     sub    t7 <- t6, 56677
+     movl    -20(%ebp), %eax         #  36:     sub    t7 <- t6, 56677
-     movl    -24(%ebp), %eax         #  31:     sub    t8 <- t7, 87034
+     movl    -24(%ebp), %eax         #  37:     sub    t8 <- t7, 87034
-     movl    $12793, %eax            #  32:     if     12793 <= t8 goto 28
+     movl    $12793, %eax            #  38:     if     12793 <= t8 goto 28
-     jmp     l_f0_29                 #  33:     goto   29
+     jmp     l_f0_29                 #  39:     goto   29
-     movl    $1, %eax                #  35:     assign t9 <- 1
+     movl    $1, %eax                #  41:     assign t9 <- 1
-     jmp     l_f0_30                 #  36:     goto   30
+     jmp     l_f0_30                 #  42:     goto   30
-     movl    $0, %eax                #  38:     assign t9 <- 0
+     movl    $0, %eax                #  44:     assign t9 <- 0
-     movzbl  -29(%ebp), %eax         #  40:     return t9
+     movzbl  -29(%ebp), %eax         #  46:     return t9
-     #   -160(%ebp) 132  [ $v1       <array 3 of <array 1 of <array 2 of <array 2 of <array 9 of <bool>>>>>> %ebp-160 ]
+     #   -160(%ebp)  132  [ $v1       <array 3 of <array 1 of <array 2 of <array 2 of <array 9 of <bool>>>>>> %ebp-160 ]
+     jmp     l_f1_4_if_false         #   5:     goto   4_if_false
+     jmp     l_f1_4_if_false         #   6:     goto   4_if_false
-     leal    -160(%ebp), %eax        #   5:     &()    t5 <- v1
+     leal    -160(%ebp), %eax        #   7:     &()    t5 <- v1
-     movl    -24(%ebp), %eax         #   6:     param  0 <- t5
+     movl    -24(%ebp), %eax         #   8:     param  0 <- t5
-     call    f0                      #   7:     call   t6 <- f0
+     call    f0                      #   9:     call   t6 <- f0
-     movl    $97686, %eax            #   8:     return 97686
+     movl    $97686, %eax            #  10:     return 97686
-     movl    $99, %eax               #   9:     if     99 >= 98 goto 11_if_true
+     movl    $99, %eax               #  11:     if     99 >= 98 goto 11_if_true
-     jmp     l_f1_12_if_false        #  10:     goto   12_if_false
+     jmp     l_f1_12_if_false        #  12:     goto   12_if_false
-     jmp     l_f1_10                 #  12:     goto   10
+     jmp     l_f1_10                 #  14:     goto   10
-     movl    $97, %eax               #  15:     if     97 = 98 goto 15_if_true
+     movl    $97, %eax               #  17:     if     97 = 98 goto 15_if_true
-     jmp     l_f1_16_if_false        #  16:     goto   16_if_false
+     jmp     l_f1_16_if_false        #  18:     goto   16_if_false
-     jmp     l_f1_14                 #  18:     goto   14
+     jmp     l_f1_14                 #  20:     goto   14
-     jmp     l_f1_2                  #  21:     goto   2
+     jmp     l_f1_2                  #  23:     goto   2
+ l_f1_4_if_false:
