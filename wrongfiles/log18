+     jmp     l_f1_8                  #  11:     goto   8
+     jmp     l_f1_8                  #  12:     goto   8
-     movl    $1, %eax                #  11:     assign t4 <- 1
+     movl    $1, %eax                #  13:     assign t4 <- 1
-     jmp     l_f1_9                  #  12:     goto   9
+     jmp     l_f1_9                  #  14:     goto   9
+ l_f1_8:
-     movl    $0, %eax                #  13:     assign t4 <- 0
+     movl    $0, %eax                #  16:     assign t4 <- 0
-     movzbl  -15(%ebp), %eax         #  15:     return t4
+     movzbl  -15(%ebp), %eax         #  18:     return t4
-     #    -64(%ebp)   4  [ $t21      <int> %ebp-64 ]
+     #    -61(%ebp)   1  [ $t21      <char> %ebp-61 ]
-     #    -68(%ebp)   4  [ $t22      <int> %ebp-68 ]
+     #    -68(%ebp)   4  [ $t3       <int> %ebp-68 ]
-     #    -69(%ebp)   1  [ $t23      <char> %ebp-69 ]
+     #    -72(%ebp)   4  [ $t4       <int> %ebp-72 ]
-     #    -76(%ebp)   4  [ $t3       <int> %ebp-76 ]
+     #    -76(%ebp)   4  [ $t5       <int> %ebp-76 ]
-     #    -80(%ebp)   4  [ $t4       <int> %ebp-80 ]
+     #    -80(%ebp)   4  [ $t6       <int> %ebp-80 ]
-     #    -84(%ebp)   4  [ $t5       <int> %ebp-84 ]
+     #    -84(%ebp)   4  [ $t7       <int> %ebp-84 ]
-     #    -88(%ebp)   4  [ $t6       <int> %ebp-88 ]
+     #    -88(%ebp)   4  [ $t8       <int> %ebp-88 ]
-     #    -92(%ebp)   4  [ $t7       <int> %ebp-92 ]
+     #    -92(%ebp)   4  [ $t9       <int> %ebp-92 ]
-     #    -96(%ebp)   4  [ $t8       <int> %ebp-96 ]
-     #   -100(%ebp)   4  [ $t9       <int> %ebp-100 ]
-     #   -101(%ebp)   1  [ $v2       <bool> %ebp-101 ]
+     #    -93(%ebp)   1  [ $v2       <bool> %ebp-93 ]
-     #   -108(%ebp)   4  [ $v3       <int> %ebp-108 ]
+     #   -100(%ebp)   4  [ $v3       <int> %ebp-100 ]
-     pushl   %ebp                   
-     movl    %esp, %ebp             
-     pushl   %ebx                    # save callee saved registers
-     pushl   %esi                   
+     pushl   %ebp                   
+     movl    %esp, %ebp             
+     pushl   %ebx                    # save callee saved registers
-     pushl   %edi                   
+     pushl   %esi                   
+     pushl   %edi                   
-     subl    $96, %esp               # make room for locals
+     subl    $88, %esp               # make room for locals
-     movl    $24, %ecx              
+     movl    $22, %ecx              
-     movl    %eax, -76(%ebp)        
+     movl    %eax, -68(%ebp)        
-     movl    -76(%ebp), %ebx        
+     movl    -68(%ebp), %ebx        
-     movl    %eax, -80(%ebp)        
+     movl    %eax, -72(%ebp)        
-     movl    -80(%ebp), %eax         #  15:     add    t5 <- t4, 14537
+     movl    -72(%ebp), %eax         #  15:     add    t5 <- t4, 14537
-     movl    %eax, -84(%ebp)        
+     movl    %eax, -76(%ebp)        
-     movl    %eax, -88(%ebp)        
+     movl    %eax, -80(%ebp)        
-     movl    -84(%ebp), %eax         #  19:     mul    t7 <- t5, t6
+     movl    -76(%ebp), %eax         #  19:     mul    t7 <- t5, t6
-     movl    -88(%ebp), %ebx        
+     movl    -80(%ebp), %ebx        
-     movl    %eax, -92(%ebp)        
+     movl    %eax, -84(%ebp)        
-     movl    %eax, -96(%ebp)        
+     movl    %eax, -88(%ebp)        
-     movl    -96(%ebp), %eax         #  21:     div    t9 <- t8, 77360
+     movl    -88(%ebp), %eax         #  21:     div    t9 <- t8, 77360
-     movl    %eax, -100(%ebp)       
+     movl    %eax, -92(%ebp)        
-     movl    -92(%ebp), %eax         #  22:     add    t10 <- t7, t9
+     movl    -84(%ebp), %eax         #  22:     add    t10 <- t7, t9
-     movl    -100(%ebp), %ebx       
+     movl    -92(%ebp), %ebx        
-     movl    $26358, %eax            #  26:     div    t13 <- 26358, 29045
-     movl    $29045, %ebx           
-     cdq                            
-     idivl   %ebx                   
-     movl    %eax, -28(%ebp)        
-     movl    -28(%ebp), %eax         #  27:     div    t14 <- t13, 77360
-     movl    $77360, %ebx           
-     cdq                            
-     idivl   %ebx                   
-     movl    %eax, -32(%ebp)        
-     movl    -16(%ebp), %eax         #  28:     mul    t12 <- t10, t11
+     movl    -16(%ebp), %eax         #  26:     mul    t12 <- t10, t11
-     movl    -24(%ebp), %eax         #  29:     add    t15 <- t12, 3193
+     movl    -24(%ebp), %eax         #  27:     add    t13 <- t12, 3193
+     movl    %eax, -28(%ebp)        
+     movl    $5, %eax                #  28:     param  1 <- 5
+     pushl   %eax                   
+     movl    8(%ebp), %eax           #  29:     param  0 <- v1
+     pushl   %eax                   
+     call    DIM                     #  30:     call   t14 <- DIM
+     addl    $8, %esp               
+     movl    %eax, -32(%ebp)        
+     movl    -28(%ebp), %eax         #  31:     mul    t15 <- t13, t14
+     movl    -32(%ebp), %ebx        
+     imull   %ebx                   
-     movl    $5, %eax                #  30:     param  1 <- 5
-     pushl   %eax                   
-     movl    8(%ebp), %eax           #  31:     param  0 <- v1
+     movl    -36(%ebp), %eax         #  32:     add    t16 <- t15, 61666
+     movl    $61666, %ebx           
-     pushl   %eax                   
-     call    DIM                     #  32:     call   t16 <- DIM
-     addl    $8, %esp               
+     addl    %ebx, %eax             
-     movl    -36(%ebp), %eax         #  33:     mul    t17 <- t15, t16
+     movl    -40(%ebp), %eax         #  33:     mul    t17 <- t16, 1
-     movl    -40(%ebp), %ebx        
+     movl    $1, %ebx               
+     movl    8(%ebp), %eax           #  34:     param  0 <- v1
+     pushl   %eax                   
+     call    DOFS                    #  35:     call   t18 <- DOFS
+     addl    $4, %esp               
+     movl    %eax, -48(%ebp)        
-     movl    -44(%ebp), %eax         #  34:     add    t18 <- t17, 61666
+     movl    -44(%ebp), %eax         #  36:     add    t19 <- t17, t18
-     movl    $61666, %ebx           
+     movl    -48(%ebp), %ebx        
-     movl    %eax, -48(%ebp)        
-     movl    -48(%ebp), %eax         #  35:     mul    t19 <- t18, 1
-     movl    $1, %ebx               
-     imull   %ebx                   
-     movl    8(%ebp), %eax           #  36:     param  0 <- v1
+     movl    8(%ebp), %eax           #  37:     add    t20 <- v1, t19
+     movl    -52(%ebp), %ebx        
-     pushl   %eax                   
-     call    DOFS                    #  37:     call   t20 <- DOFS
-     addl    $4, %esp               
+     addl    %ebx, %eax             
-     movl    -52(%ebp), %eax         #  38:     add    t21 <- t19, t20
-     movl    -60(%ebp), %ebx        
-     addl    %ebx, %eax             
-     movl    %eax, -64(%ebp)        
-     movl    8(%ebp), %eax           #  39:     add    t22 <- v1, t21
-     movl    -64(%ebp), %ebx        
-     addl    %ebx, %eax             
-     movl    %eax, -68(%ebp)        
-     movzbl  -53(%ebp), %eax         #  40:     assign @t22 <- t2
+     movzbl  -53(%ebp), %eax         #  38:     assign @t20 <- t2
-     movl    -68(%ebp), %edi        
+     movl    -60(%ebp), %edi        
-     jmp     l_f2_0                  #  41:     goto   0
+     jmp     l_f2_0                  #  39:     goto   0
-     call    dummyCHARfunc           #  44:     call   t23 <- dummyCHARfunc
+     call    dummyCHARfunc           #  42:     call   t21 <- dummyCHARfunc
-     movb    %al, -69(%ebp)         
+     movb    %al, -61(%ebp)         
-     movl    $87418, %eax            #  46:     if     87418 > 54617 goto 12_while_body
+     movl    $87418, %eax            #  44:     if     87418 > 54617 goto 12_while_body
-     jmp     l_f2_10                 #  47:     goto   10
+     jmp     l_f2_10                 #  45:     goto   10
-     jmp     l_f2_16_if_false        #  49:     goto   16_if_false
+     jmp     l_f2_16_if_false        #  47:     goto   16_if_false
-     jmp     l_f2_18_while_cond      #  51:     goto   18_while_cond
+     jmp     l_f2_18_while_cond      #  49:     goto   18_while_cond
-     movl    $97388, %eax            #  52:     assign v3 <- 97388
+     movl    $97388, %eax            #  50:     assign v3 <- 97388
-     movl    %eax, -108(%ebp)       
+     movl    %eax, -100(%ebp)       
-     jmp     l_f2_22_while_cond      #  54:     goto   22_while_cond
+     jmp     l_f2_22_while_cond      #  52:     goto   22_while_cond
-     jmp     l_f2_14                 #  55:     goto   14
+     jmp     l_f2_14                 #  53:     goto   14
-     jmp     l_f2_11_while_cond      #  58:     goto   11_while_cond
+     jmp     l_f2_11_while_cond      #  56:     goto   11_while_cond
-     addl    $96, %esp               # remove locals
+     addl    $88, %esp               # remove locals
-     addl    $1, %esp               
+     addl    $4, %esp               
