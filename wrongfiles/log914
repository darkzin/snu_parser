-     #    -68(%ebp)   4  [ $t23      <int> %ebp-68 ]
+     #    -65(%ebp)   1  [ $t23      <char> %ebp-65 ]
-     #    -72(%ebp)   4  [ $t24      <int> %ebp-72 ]
+     #    -72(%ebp)   4  [ $t5       <int> %ebp-72 ]
-     #    -73(%ebp)   1  [ $t25      <char> %ebp-73 ]
+     #    -76(%ebp)   4  [ $t6       <int> %ebp-76 ]
-     #    -80(%ebp)   4  [ $t5       <int> %ebp-80 ]
+     #    -80(%ebp)   4  [ $t7       <int> %ebp-80 ]
-     #    -84(%ebp)   4  [ $t6       <int> %ebp-84 ]
+     #    -84(%ebp)   4  [ $t8       <int> %ebp-84 ]
-     #    -88(%ebp)   4  [ $t7       <int> %ebp-88 ]
+     #    -88(%ebp)   4  [ $t9       <int> %ebp-88 ]
-     #    -92(%ebp)   4  [ $t8       <int> %ebp-92 ]
-     #    -96(%ebp)   4  [ $t9       <int> %ebp-96 ]
-     #    -97(%ebp)   1  [ $v4       <bool> %ebp-97 ]
+     #    -89(%ebp)   1  [ $v4       <bool> %ebp-89 ]
-     pushl   %ebp                   
-     movl    %esp, %ebp             
-     pushl   %ebx                    # save callee saved registers
-     pushl   %esi                   
+     pushl   %ebp                   
+     movl    %esp, %ebp             
+     pushl   %ebx                    # save callee saved registers
-     pushl   %edi                   
+     pushl   %esi                   
+     pushl   %edi                   
-     subl    $88, %esp               # make room for locals
+     subl    $80, %esp               # make room for locals
-     movl    $22, %ecx              
+     movl    $20, %ecx              
-     movl    %eax, -80(%ebp)        
+     movl    %eax, -72(%ebp)        
-     movl    -80(%ebp), %eax         #   1:     sub    t6 <- t5, 51360
+     movl    -72(%ebp), %eax         #   1:     sub    t6 <- t5, 51360
+     movl    %eax, -76(%ebp)        
+     movl    $2, %eax                #   2:     param  1 <- 2
+     pushl   %eax                   
+     movl    12(%ebp), %eax          #   3:     param  0 <- v3
+     pushl   %eax                   
+     call    DIM                     #   4:     call   t7 <- DIM
+     addl    $8, %esp               
+     movl    %eax, -80(%ebp)        
+     movl    -76(%ebp), %eax         #   5:     mul    t8 <- t6, t7
+     movl    -80(%ebp), %ebx        
+     imull   %ebx                   
-     movl    $2, %eax                #   2:     param  1 <- 2
-     pushl   %eax                   
-     movl    12(%ebp), %eax          #   3:     param  0 <- v3
+     movl    -84(%ebp), %eax         #   6:     add    t9 <- t8, 54107
+     movl    $54107, %ebx           
-     pushl   %eax                   
-     call    DIM                     #   4:     call   t7 <- DIM
-     addl    $8, %esp               
+     addl    %ebx, %eax             
+     movl    $3, %eax                #   7:     param  1 <- 3
-     movl    $8780, %eax             #   5:     div    t9 <- 8780, 48981
-     movl    $48981, %ebx           
-     cdq                            
-     idivl   %ebx                   
+     pushl   %eax                   
-     movl    %eax, -96(%ebp)        
-     movl    -96(%ebp), %eax         #   6:     sub    t10 <- t9, 51360
+     movl    12(%ebp), %eax          #   8:     param  0 <- v3
-     movl    $51360, %ebx           
-     subl    %ebx, %eax             
+     pushl   %eax                   
+     call    DIM                     #   9:     call   t10 <- DIM
+     addl    $8, %esp               
-     movl    -84(%ebp), %eax         #   7:     mul    t8 <- t6, t7
+     movl    -88(%ebp), %eax         #  10:     mul    t11 <- t9, t10
-     movl    -88(%ebp), %ebx        
+     movl    -16(%ebp), %ebx        
-     movl    %eax, -92(%ebp)        
-     movl    -92(%ebp), %eax         #   8:     add    t11 <- t8, 54107
-     movl    $54107, %ebx           
-     addl    %ebx, %eax             
-     movl    $3, %eax                #   9:     param  1 <- 3
-     pushl   %eax                   
-     movl    12(%ebp), %eax          #  10:     param  0 <- v3
+     movl    -20(%ebp), %eax         #  11:     add    t12 <- t11, 27149
+     movl    $27149, %ebx           
-     pushl   %eax                   
-     call    DIM                     #  11:     call   t12 <- DIM
-     addl    $8, %esp               
+     addl    %ebx, %eax             
+     movl    $4, %eax                #  12:     param  1 <- 4
-     movl    -20(%ebp), %eax         #  12:     mul    t13 <- t11, t12
-     movl    -24(%ebp), %ebx        
-     imull   %ebx                   
+     pushl   %eax                   
+     movl    12(%ebp), %eax          #  13:     param  0 <- v3
+     pushl   %eax                   
+     call    DIM                     #  14:     call   t13 <- DIM
+     addl    $8, %esp               
-     movl    -28(%ebp), %eax         #  13:     add    t14 <- t13, 27149
+     movl    -24(%ebp), %eax         #  15:     mul    t14 <- t12, t13
-     movl    $27149, %ebx           
+     movl    -28(%ebp), %ebx        
-     addl    %ebx, %eax             
+     imull   %ebx                   
-     movl    $4, %eax                #  14:     param  1 <- 4
-     pushl   %eax                   
-     movl    12(%ebp), %eax          #  15:     param  0 <- v3
+     movl    -32(%ebp), %eax         #  16:     add    t15 <- t14, 41075
+     movl    $41075, %ebx           
-     pushl   %eax                   
-     call    DIM                     #  16:     call   t15 <- DIM
-     addl    $8, %esp               
+     addl    %ebx, %eax             
+     movl    $5, %eax                #  17:     param  1 <- 5
-     movl    -32(%ebp), %eax         #  17:     mul    t16 <- t14, t15
-     movl    -36(%ebp), %ebx        
-     imull   %ebx                   
+     pushl   %eax                   
+     movl    12(%ebp), %eax          #  18:     param  0 <- v3
+     pushl   %eax                   
+     call    DIM                     #  19:     call   t16 <- DIM
+     addl    $8, %esp               
-     movl    -40(%ebp), %eax         #  18:     add    t17 <- t16, 41075
+     movl    -36(%ebp), %eax         #  20:     mul    t17 <- t15, t16
-     movl    $41075, %ebx           
+     movl    -40(%ebp), %ebx        
-     addl    %ebx, %eax             
+     imull   %ebx                   
-     movl    $5, %eax                #  19:     param  1 <- 5
-     pushl   %eax                   
-     movl    12(%ebp), %eax          #  20:     param  0 <- v3
+     movl    -44(%ebp), %eax         #  21:     add    t18 <- t17, 5812
+     movl    $5812, %ebx            
-     pushl   %eax                   
-     call    DIM                     #  21:     call   t18 <- DIM
-     addl    $8, %esp               
+     addl    %ebx, %eax             
-     movl    -44(%ebp), %eax         #  22:     mul    t19 <- t17, t18
+     movl    -48(%ebp), %eax         #  22:     mul    t19 <- t18, 1
-     movl    -48(%ebp), %ebx        
+     movl    $1, %ebx               
-     movl    -52(%ebp), %eax         #  23:     add    t20 <- t19, 5812
+     movl    12(%ebp), %eax          #  23:     param  0 <- v3
-     movl    $5812, %ebx            
+     pushl   %eax                   
+     call    DOFS                    #  24:     call   t20 <- DOFS
-     addl    %ebx, %eax             
+     addl    $4, %esp               
-     movl    -56(%ebp), %eax         #  24:     mul    t21 <- t20, 1
+     movl    -52(%ebp), %eax         #  25:     add    t21 <- t19, t20
+     movl    -56(%ebp), %ebx        
-     movl    $1, %ebx               
+     addl    %ebx, %eax             
-     imull   %ebx                   
-     movl    12(%ebp), %eax          #  25:     param  0 <- v3
+     movl    12(%ebp), %eax          #  26:     add    t22 <- v3, t21
+     movl    -60(%ebp), %ebx        
-     pushl   %eax                   
-     call    DOFS                    #  26:     call   t22 <- DOFS
-     addl    $4, %esp               
+     addl    %ebx, %eax             
-     movl    -60(%ebp), %eax         #  27:     add    t23 <- t21, t22
-     movl    -64(%ebp), %ebx        
-     addl    %ebx, %eax             
-     movl    %eax, -68(%ebp)        
-     movl    12(%ebp), %eax          #  28:     add    t24 <- v3, t23
-     movl    -68(%ebp), %ebx        
-     addl    %ebx, %eax             
-     movl    %eax, -72(%ebp)        
-     movl    $1, %eax                #  29:     assign @t24 <- 1
+     movl    $1, %eax                #  27:     assign @t22 <- 1
-     movl    -72(%ebp), %edi        
+     movl    -64(%ebp), %edi        
-     call    dummyCHARfunc           #  30:     call   t25 <- dummyCHARfunc
+     call    dummyCHARfunc           #  28:     call   t23 <- dummyCHARfunc
-     movb    %al, -73(%ebp)         
+     movb    %al, -65(%ebp)         
-     addl    $88, %esp               # remove locals
+     addl    $80, %esp               # remove locals
+     jmp     l_f1_0                  #   1:     goto   0
-     movl    $94238, %eax            #   1:     return 94238
+     movl    $94238, %eax            #   2:     return 94238
-     movl    $29797, %eax            #   2:     return 29797
+     movl    $29797, %eax            #   3:     return 29797
-     jmp     l_f1_1_while_cond       #   3:     goto   1_while_cond
+     jmp     l_f1_1_while_cond       #   4:     goto   1_while_cond
+ l_f1_0:
-     call    ReadInt                 #   4:     call   t5 <- ReadInt
+     call    ReadInt                 #   6:     call   t5 <- ReadInt
-     movl    -72(%ebp), %eax         #   5:     div    t6 <- t5, 90800
+     movl    -72(%ebp), %eax         #   7:     div    t6 <- t5, 90800
-     movl    -76(%ebp), %eax         #   6:     return t6
+     movl    -76(%ebp), %eax         #   8:     return t6
-     movl    $100, %eax              #   8:     if     100 >= 97 goto 12_while_body
+     movl    $100, %eax              #  10:     if     100 >= 97 goto 12_while_body
-     jmp     l_f1_10                 #   9:     goto   10
+     jmp     l_f1_10                 #  11:     goto   10
-     jmp     l_f1_11_while_cond      #  11:     goto   11_while_cond
+     jmp     l_f1_11_while_cond      #  13:     goto   11_while_cond
-     movl    $48024, %eax            #  14:     if     48024 # 69938 goto 16_while_body
+     movl    $48024, %eax            #  16:     if     48024 # 69938 goto 16_while_body
-     jmp     l_f1_14                 #  15:     goto   14
+     jmp     l_f1_14                 #  17:     goto   14
-     jmp     l_f1_15_while_cond      #  17:     goto   15_while_cond
+     jmp     l_f1_15_while_cond      #  19:     goto   15_while_cond
-     movl    $25236, %eax            #  19:     return 25236
+     movl    $25236, %eax            #  21:     return 25236
-     movl    $2, %eax                #  20:     param  1 <- 2
+     movl    $2, %eax                #  22:     param  1 <- 2
-     movl    12(%ebp), %eax          #  21:     param  0 <- v3
+     movl    12(%ebp), %eax          #  23:     param  0 <- v3
-     call    DIM                     #  22:     call   t7 <- DIM
+     call    DIM                     #  24:     call   t7 <- DIM
-     movl    $45348, %eax            #  23:     mul    t8 <- 45348, t7
+     movl    $45348, %eax            #  25:     mul    t8 <- 45348, t7
-     movl    -84(%ebp), %eax         #  24:     add    t9 <- t8, 53265
+     movl    -84(%ebp), %eax         #  26:     add    t9 <- t8, 53265
-     movl    $3, %eax                #  25:     param  1 <- 3
+     movl    $3, %eax                #  27:     param  1 <- 3
-     movl    12(%ebp), %eax          #  26:     param  0 <- v3
+     movl    12(%ebp), %eax          #  28:     param  0 <- v3
-     call    DIM                     #  27:     call   t10 <- DIM
+     call    DIM                     #  29:     call   t10 <- DIM
-     movl    -88(%ebp), %eax         #  28:     mul    t11 <- t9, t10
+     movl    -88(%ebp), %eax         #  30:     mul    t11 <- t9, t10
-     movl    -20(%ebp), %eax         #  29:     add    t12 <- t11, 92808
+     movl    -20(%ebp), %eax         #  31:     add    t12 <- t11, 92808
-     movl    $4, %eax                #  30:     param  1 <- 4
+     movl    $4, %eax                #  32:     param  1 <- 4
-     movl    12(%ebp), %eax          #  31:     param  0 <- v3
+     movl    12(%ebp), %eax          #  33:     param  0 <- v3
-     call    DIM                     #  32:     call   t13 <- DIM
+     call    DIM                     #  34:     call   t13 <- DIM
-     movl    -24(%ebp), %eax         #  33:     mul    t14 <- t12, t13
+     movl    -24(%ebp), %eax         #  35:     mul    t14 <- t12, t13
-     movl    -32(%ebp), %eax         #  34:     add    t15 <- t14, 41150
+     movl    -32(%ebp), %eax         #  36:     add    t15 <- t14, 41150
-     movl    $5, %eax                #  35:     param  1 <- 5
+     movl    $5, %eax                #  37:     param  1 <- 5
-     movl    12(%ebp), %eax          #  36:     param  0 <- v3
+     movl    12(%ebp), %eax          #  38:     param  0 <- v3
-     call    DIM                     #  37:     call   t16 <- DIM
+     call    DIM                     #  39:     call   t16 <- DIM
-     movl    -36(%ebp), %eax         #  38:     mul    t17 <- t15, t16
+     movl    -36(%ebp), %eax         #  40:     mul    t17 <- t15, t16
-     movl    -44(%ebp), %eax         #  39:     add    t18 <- t17, 31569
+     movl    -44(%ebp), %eax         #  41:     add    t18 <- t17, 31569
-     movl    -48(%ebp), %eax         #  40:     mul    t19 <- t18, 4
+     movl    -48(%ebp), %eax         #  42:     mul    t19 <- t18, 4
-     movl    12(%ebp), %eax          #  41:     param  0 <- v3
+     movl    12(%ebp), %eax          #  43:     param  0 <- v3
-     call    DOFS                    #  42:     call   t20 <- DOFS
+     call    DOFS                    #  44:     call   t20 <- DOFS
-     movl    -52(%ebp), %eax         #  43:     add    t21 <- t19, t20
+     movl    -52(%ebp), %eax         #  45:     add    t21 <- t19, t20
-     movl    12(%ebp), %eax          #  44:     add    t22 <- v3, t21
+     movl    12(%ebp), %eax          #  46:     add    t22 <- v3, t21
-     movl    $75808, %eax            #  45:     assign @t22 <- 75808
+     movl    $75808, %eax            #  47:     assign @t22 <- 75808
-     movl    $98, %eax               #  46:     if     98 <= 99 goto 21
+     movl    $98, %eax               #  48:     if     98 <= 99 goto 21
-     jmp     l_f1_22                 #  47:     goto   22
+     jmp     l_f1_22                 #  49:     goto   22
-     movl    $1, %eax                #  49:     assign t23 <- 1
+     movl    $1, %eax                #  51:     assign t23 <- 1
-     jmp     l_f1_23                 #  50:     goto   23
+     jmp     l_f1_23                 #  52:     goto   23
-     movl    $0, %eax                #  52:     assign t23 <- 0
+     movl    $0, %eax                #  54:     assign t23 <- 0
-     movzbl  -65(%ebp), %eax         #  54:     assign v2 <- t23
+     movzbl  -65(%ebp), %eax         #  56:     assign v2 <- t23
-     jmp     l_f1_25                 #  55:     goto   25
+     jmp     l_f1_25                 #  57:     goto   25
-     movl    $23178, %eax            #  57:     return 23178
+     movl    $23178, %eax            #  59:     return 23178
-     movl    $241, %eax              #  58:     assign v5 <- 241
+     movl    $241, %eax              #  60:     assign v5 <- 241
-     jmp     l_f1_30                 #  59:     goto   30
+     jmp     l_f1_30                 #  61:     goto   30
-     jmp     l_f1_7                  #  61:     goto   7
+     jmp     l_f1_7                  #  63:     goto   7
-     #  -3524(%ebp)3480  [ $v5       <array 3 of <array 9 of <array 4 of <array 1 of <array 8 of <int>>>>>> %ebp-3524 ]
+     #   -3524(%ebp)  3480  [ $v5       <array 3 of <array 9 of <array 4 of <array 1 of <array 8 of <int>>>>>> %ebp-3524 ]
-     # -13916(%ebp)10392  [ $v6       <array 4 of <array 9 of <array 3 of <array 4 of <array 6 of <int>>>>>> %ebp-13916 ]
+     #   -13916(%ebp)  10392  [ $v6       <array 4 of <array 9 of <array 3 of <array 4 of <array 6 of <int>>>>>> %ebp-13916 ]
-     addl    $9, %esp               
+     addl    $12, %esp              
+     jmp     l_f2_6                  #  23:     goto   6
-     jmp     l_f2_7_while_cond       #  23:     goto   7_while_cond
+     jmp     l_f2_7_while_cond       #  24:     goto   7_while_cond
