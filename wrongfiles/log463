+     jmp     l_f1_9                  #  15:     goto   9
+     jmp     l_f1_9                  #  16:     goto   9
+     jmp     l_f1_9                  #  17:     goto   9
-     movl    $75163, %eax            #  16:     if     75163 > 71789 goto 17_while_body
+     movl    $75163, %eax            #  19:     if     75163 > 71789 goto 17_while_body
-     jmp     l_f1_15                 #  17:     goto   15
+     jmp     l_f1_15                 #  20:     goto   15
-     jmp     l_f1_16_while_cond      #  19:     goto   16_while_cond
+     jmp     l_f1_16_while_cond      #  22:     goto   16_while_cond
-     jmp     l_f1_10_while_cond      #  21:     goto   10_while_cond
+     jmp     l_f1_10_while_cond      #  24:     goto   10_while_cond
+ l_f1_9:
-     addl    $1, %esp               
+     addl    $4, %esp               
+     jmp     l_test_6                #   2:     goto   6
+     jmp     l_test_6                #   3:     goto   6
-     movl    $1, %eax                #   2:     assign t0 <- 1
+     movl    $1, %eax                #   4:     assign t0 <- 1
-     jmp     l_test_6                #   3:     goto   6
+     jmp     l_test_7                #   5:     goto   7
+ l_test_6:
-     movl    $0, %eax                #   4:     assign t0 <- 0
+     movl    $0, %eax                #   7:     assign t0 <- 0
- l_test_6:
+ l_test_7:
-     movzbl  -13(%ebp), %eax         #   6:     if     t0 = 0 goto 3_while_body
+     movzbl  -13(%ebp), %eax         #   9:     if     t0 = 0 goto 3_while_body
-     jmp     l_test_1                #   7:     goto   1
+     jmp     l_test_1                #  10:     goto   1
-     movl    $84045, %eax            #  10:     if     84045 = 26570 goto 12_if_true
+     movl    $84045, %eax            #  13:     if     84045 = 26570 goto 12_if_true
-     jmp     l_test_13_if_false      #  11:     goto   13_if_false
+     jmp     l_test_13_if_false      #  14:     goto   13_if_false
-     jmp     l_test_11               #  13:     goto   11
+     jmp     l_test_11               #  16:     goto   11
-     movl    $0, %eax                #  16:     assign v0 <- 0
+     movl    $0, %eax                #  19:     assign v0 <- 0
-     jmp     l_test_2_while_cond     #  17:     goto   2_while_cond
+     jmp     l_test_2_while_cond     #  20:     goto   2_while_cond
-     call    WriteLn                 #  20:     call   WriteLn
+     call    WriteLn                 #  23:     call   WriteLn
-     movl    $100, %eax              #  22:     param  0 <- 100
+     movl    $100, %eax              #  25:     param  0 <- 100
-     call    f0                      #  23:     call   t1 <- f0
+     call    f0                      #  26:     call   t1 <- f0
-     addl    $1, %esp               
+     addl    $4, %esp               
-     movl    -20(%ebp), %eax         #  24:     div    t2 <- t1, 8354
+     movl    -20(%ebp), %eax         #  27:     div    t2 <- t1, 8354
-     movl    $64857, %eax            #  25:     if     64857 < t2 goto 20_while_body
+     movl    $64857, %eax            #  28:     if     64857 < t2 goto 20_while_body
-     jmp     l_test_18               #  26:     goto   18
+     jmp     l_test_18               #  29:     goto   18
-     jmp     l_test_19_while_cond    #  28:     goto   19_while_cond
+     jmp     l_test_19_while_cond    #  31:     goto   19_while_cond
