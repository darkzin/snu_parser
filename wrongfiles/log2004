+     jmp     l_f1_10_if_false        #  12:     goto   10_if_false
-     jmp     l_f1_8                  #  12:     goto   8
+     jmp     l_f1_8                  #  13:     goto   8
-     call    dummyCHARfunc           #  16:     call   t10 <- dummyCHARfunc
+     call    dummyCHARfunc           #  17:     call   t10 <- dummyCHARfunc
-     movl    $99, %eax               #  17:     if     99 <= t10 goto 16_while_body
+     movl    $99, %eax               #  18:     if     99 <= t10 goto 16_while_body
-     jmp     l_f1_14                 #  18:     goto   14
+     jmp     l_f1_14                 #  19:     goto   14
-     jmp     l_f1_15_while_cond      #  20:     goto   15_while_cond
+     jmp     l_f1_15_while_cond      #  21:     goto   15_while_cond
+     jmp     l_f2_2                  #   2:     goto   2
-     movl    $1, %eax                #   3:     assign t9 <- 1
+     movl    $1, %eax                #   4:     assign t9 <- 1
-     jmp     l_f2_3                  #   4:     goto   3
+     jmp     l_f2_3                  #   5:     goto   3
+ l_f2_2:
-     movl    $0, %eax                #   5:     assign t9 <- 0
+     movl    $0, %eax                #   7:     assign t9 <- 0
-     movzbl  -13(%ebp), %eax         #   7:     assign v1 <- t9
+     movzbl  -13(%ebp), %eax         #   9:     assign v1 <- t9
-     jmp     l_f2_10_if_false        #   8:     goto   10_if_false
+     jmp     l_f2_10_if_false        #  10:     goto   10_if_false
-     movl    $100, %eax              #  10:     if     100 >= 98 goto 13_while_body
+     movl    $100, %eax              #  12:     if     100 >= 98 goto 13_while_body
-     jmp     l_f2_11                 #  11:     goto   11
+     jmp     l_f2_11                 #  13:     goto   11
-     jmp     l_f2_15                 #  13:     goto   15
+     jmp     l_f2_15                 #  15:     goto   15
-     movl    $1, %eax                #  16:     if     1 # 1 goto 20_while_body
+     movl    $1, %eax                #  18:     if     1 # 1 goto 20_while_body
-     jmp     l_f2_18                 #  17:     goto   18
+     jmp     l_f2_18                 #  19:     goto   18
-     jmp     l_f2_19_while_cond      #  19:     goto   19_while_cond
+     jmp     l_f2_19_while_cond      #  21:     goto   19_while_cond
-     jmp     l_f2_12_while_cond      #  24:     goto   12_while_cond
+     jmp     l_f2_12_while_cond      #  26:     goto   12_while_cond
-     jmp     l_f2_8                  #  26:     goto   8
+     jmp     l_f2_8                  #  28:     goto   8
+     jmp     l_test_9_if_false       #  14:     goto   9_if_false
-     movl    $1, %eax                #  14:     assign v1 <- 1
+     movl    $1, %eax                #  15:     assign v1 <- 1
-     jmp     l_test_7                #  15:     goto   7
+     jmp     l_test_7                #  16:     goto   7
+ l_test_9_if_false:
-     jmp     l_test_12               #  18:     goto   12
+     jmp     l_test_12               #  20:     goto   12
-     movl    $72324, %eax            #  19:     if     72324 < 5878 goto 16
+     movl    $72324, %eax            #  21:     if     72324 < 5878 goto 16
-     jmp     l_test_17               #  20:     goto   17
+     jmp     l_test_17               #  22:     goto   17
-     movl    $1, %eax                #  22:     assign t7 <- 1
+     movl    $1, %eax                #  24:     assign t7 <- 1
-     jmp     l_test_18               #  23:     goto   18
+     jmp     l_test_18               #  25:     goto   18
-     movl    $0, %eax                #  25:     assign t7 <- 0
+     movl    $0, %eax                #  27:     assign t7 <- 0
-     movzbl  -38(%ebp), %eax         #  27:     assign v1 <- t7
+     movzbl  -38(%ebp), %eax         #  29:     assign v1 <- t7
-     jmp     l_test_13_while_cond    #  29:     goto   13_while_cond
+     jmp     l_test_13_while_cond    #  31:     goto   13_while_cond
-     leal    _str_2, %eax            #  31:     &()    t8 <- _str_2
+     leal    _str_2, %eax            #  33:     &()    t8 <- _str_2
-     movl    -44(%ebp), %eax         #  32:     param  0 <- t8
+     movl    -44(%ebp), %eax         #  34:     param  0 <- t8
-     call    WriteStr                #  33:     call   WriteStr
+     call    WriteStr                #  35:     call   WriteStr
