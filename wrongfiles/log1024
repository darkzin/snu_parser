+     jmp     l_f2_2                  #   1:     goto   2
-     movl    $1, %eax                #   2:     assign t0 <- 1
+     movl    $1, %eax                #   3:     assign t0 <- 1
-     jmp     l_f2_3                  #   3:     goto   3
+     jmp     l_f2_3                  #   4:     goto   3
+ l_f2_2:
-     movl    $0, %eax                #   4:     assign t0 <- 0
+     movl    $0, %eax                #   6:     assign t0 <- 0
-     movzbl  -13(%ebp), %eax         #   6:     assign v3 <- t0
+     movzbl  -13(%ebp), %eax         #   8:     assign v3 <- t0
-     movl    $91787, %eax            #   7:     if     91787 < 24822 goto 6_if_true
+     movl    $91787, %eax            #   9:     if     91787 < 24822 goto 6_if_true
-     jmp     l_f2_7_if_false         #   8:     goto   7_if_false
+     jmp     l_f2_7_if_false         #  10:     goto   7_if_false
-     jmp     l_f2_9                  #  11:     goto   9
+     jmp     l_f2_9                  #  13:     goto   9
-     jmp     l_f2_10_while_cond      #  12:     goto   10_while_cond
+     jmp     l_f2_10_while_cond      #  14:     goto   10_while_cond
-     movl    $99, %eax               #  14:     return 99
+     movl    $99, %eax               #  16:     return 99
-     movl    $99, %eax               #  16:     if     99 >= 98 goto 15_while_body
+     movl    $99, %eax               #  18:     if     99 >= 98 goto 15_while_body
-     jmp     l_f2_13                 #  17:     goto   13
+     jmp     l_f2_13                 #  19:     goto   13
-     jmp     l_f2_14_while_cond      #  19:     goto   14_while_cond
+     jmp     l_f2_14_while_cond      #  21:     goto   14_while_cond
-     movl    $1, %eax                #  21:     assign v3 <- 1
+     movl    $1, %eax                #  23:     assign v3 <- 1
-     movl    $2, %eax                #  22:     param  1 <- 2
+     movl    $2, %eax                #  24:     param  1 <- 2
-     movl    12(%ebp), %eax          #  23:     param  0 <- v2
+     movl    12(%ebp), %eax          #  25:     param  0 <- v2
-     call    DIM                     #  24:     call   t1 <- DIM
+     call    DIM                     #  26:     call   t1 <- DIM
-     movl    $83435, %eax            #  25:     mul    t2 <- 83435, t1
+     movl    $83435, %eax            #  27:     mul    t2 <- 83435, t1
-     movl    -56(%ebp), %eax         #  26:     add    t3 <- t2, 22562
+     movl    -56(%ebp), %eax         #  28:     add    t3 <- t2, 22562
-     movl    $3, %eax                #  27:     param  1 <- 3
+     movl    $3, %eax                #  29:     param  1 <- 3
-     movl    12(%ebp), %eax          #  28:     param  0 <- v2
+     movl    12(%ebp), %eax          #  30:     param  0 <- v2
-     call    DIM                     #  29:     call   t4 <- DIM
+     call    DIM                     #  31:     call   t4 <- DIM
-     movl    -60(%ebp), %eax         #  30:     mul    t5 <- t3, t4
+     movl    -60(%ebp), %eax         #  32:     mul    t5 <- t3, t4
-     movl    -68(%ebp), %eax         #  31:     add    t6 <- t5, 74439
+     movl    -68(%ebp), %eax         #  33:     add    t6 <- t5, 74439
-     movl    $4, %eax                #  32:     param  1 <- 4
+     movl    $4, %eax                #  34:     param  1 <- 4
-     movl    12(%ebp), %eax          #  33:     param  0 <- v2
+     movl    12(%ebp), %eax          #  35:     param  0 <- v2
-     call    DIM                     #  34:     call   t7 <- DIM
+     call    DIM                     #  36:     call   t7 <- DIM
-     movl    -72(%ebp), %eax         #  35:     mul    t8 <- t6, t7
+     movl    -72(%ebp), %eax         #  37:     mul    t8 <- t6, t7
-     movl    -80(%ebp), %eax         #  36:     add    t9 <- t8, 67421
+     movl    -80(%ebp), %eax         #  38:     add    t9 <- t8, 67421
-     movl    $5, %eax                #  37:     param  1 <- 5
+     movl    $5, %eax                #  39:     param  1 <- 5
-     movl    12(%ebp), %eax          #  38:     param  0 <- v2
+     movl    12(%ebp), %eax          #  40:     param  0 <- v2
-     call    DIM                     #  39:     call   t10 <- DIM
+     call    DIM                     #  41:     call   t10 <- DIM
-     movl    -84(%ebp), %eax         #  40:     mul    t11 <- t9, t10
+     movl    -84(%ebp), %eax         #  42:     mul    t11 <- t9, t10
-     movl    -28(%ebp), %eax         #  41:     add    t12 <- t11, 3983
+     movl    -28(%ebp), %eax         #  43:     add    t12 <- t11, 3983
-     movl    -32(%ebp), %eax         #  42:     mul    t13 <- t12, 4
+     movl    -32(%ebp), %eax         #  44:     mul    t13 <- t12, 4
-     movl    12(%ebp), %eax          #  43:     param  0 <- v2
+     movl    12(%ebp), %eax          #  45:     param  0 <- v2
-     call    DOFS                    #  44:     call   t14 <- DOFS
+     call    DOFS                    #  46:     call   t14 <- DOFS
-     movl    -36(%ebp), %eax         #  45:     add    t15 <- t13, t14
+     movl    -36(%ebp), %eax         #  47:     add    t15 <- t13, t14
-     movl    12(%ebp), %eax          #  46:     add    t16 <- v2, t15
+     movl    12(%ebp), %eax          #  48:     add    t16 <- v2, t15
-     movl    $6355, %eax             #  47:     assign @t16 <- 6355
+     movl    $6355, %eax             #  49:     assign @t16 <- 6355
-     movl    $98, %eax               #  48:     assign v5 <- 98
+     movl    $98, %eax               #  50:     assign v5 <- 98
-     movl    $100, %eax              #  50:     if     100 >= 100 goto 22_while_body
+     movl    $100, %eax              #  52:     if     100 >= 100 goto 22_while_body
-     jmp     l_f2_20                 #  51:     goto   20
+     jmp     l_f2_20                 #  53:     goto   20
-     jmp     l_f2_21_while_cond      #  53:     goto   21_while_cond
+     jmp     l_f2_21_while_cond      #  55:     goto   21_while_cond
-     jmp     l_f2_5                  #  55:     goto   5
+     jmp     l_f2_5                  #  57:     goto   5
-     call    dummyBOOLfunc           #  58:     call   t17 <- dummyBOOLfunc
+     call    dummyBOOLfunc           #  60:     call   t17 <- dummyBOOLfunc
