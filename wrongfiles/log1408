-     #-74159764(%ebp)74159736  [ $v4       <array 81 of <array 34 of <array 22 of <array 72 of <array 17 of <bool>>>>>> %ebp-74159764 ]
+     #   -74159764(%ebp)  74159736  [ $v4       <array 81 of <array 34 of <array 22 of <array 72 of <array 17 of <bool>>>>>> %ebp-74159764 ]
-     #-1361666668(%ebp)1287506904  [ $v5       <array 54 of <array 95 of <array 46 of <array 88 of <array 62 of <bool>>>>>> %ebp-1361666668 ]
+     #   -1361666668(%ebp)  1287506904  [ $v5       <array 54 of <array 95 of <array 46 of <array 88 of <array 62 of <bool>>>>>> %ebp-1361666668 ]
-     addl    $10, %esp              
+     addl    $16, %esp              
-     addl    $1, %esp               
+     addl    $4, %esp               
+     jmp     l_test_5                #   1:     goto   5
+     jmp     l_test_5                #   2:     goto   5
-     movl    $1, %eax                #   1:     assign t0 <- 1
+     movl    $1, %eax                #   3:     assign t0 <- 1
-     jmp     l_test_5                #   2:     goto   5
+     jmp     l_test_6                #   4:     goto   6
+ l_test_5:
-     movl    $0, %eax                #   3:     assign t0 <- 0
+     movl    $0, %eax                #   6:     assign t0 <- 0
- l_test_5:
+ l_test_6:
-     movl    $47653, %eax            #   5:     if     47653 # 82548 goto 7
+     movl    $47653, %eax            #   8:     if     47653 # 82548 goto 8
-     jne     l_test_7               
+     jne     l_test_8               
-     jmp     l_test_8                #   6:     goto   8
- l_test_7:
-     movl    $1, %eax                #   8:     assign t1 <- 1
-     movb    %al, -14(%ebp)         
-     movl    $0, %eax                #  11:     assign t1 <- 0
+     movl    $1, %eax                #  11:     assign t1 <- 1
+     jmp     l_test_10               #  12:     goto   10
+     movl    $0, %eax                #  14:     assign t1 <- 0
+     movb    %al, -14(%ebp)         
+ l_test_10:
-     movzbl  -13(%ebp), %eax         #  13:     if     t0 = t1 goto 2_while_body
+     movzbl  -13(%ebp), %eax         #  16:     if     t0 = t1 goto 2_while_body
-     jmp     l_test_0                #  14:     goto   0
+     jmp     l_test_0                #  17:     goto   0
-     jmp     l_test_1_while_cond     #  16:     goto   1_while_cond
+     jmp     l_test_1_while_cond     #  19:     goto   1_while_cond
-     jmp     l_test_12               #  19:     goto   12
+     jmp     l_test_12               #  22:     goto   12
-     jmp     l_test_16_while_cond    #  21:     goto   16_while_cond
+     jmp     l_test_16_while_cond    #  24:     goto   16_while_cond
-     movl    $100, %eax              #  22:     assign v0 <- 100
+     movl    $100, %eax              #  25:     assign v0 <- 100
-     jmp     l_test_21_if_false      #  23:     goto   21_if_false
+     jmp     l_test_21_if_false      #  26:     goto   21_if_false
-     jmp     l_test_19               #  24:     goto   19
+     jmp     l_test_19               #  27:     goto   19
-     jmp     l_test_22               #  28:     goto   22
+     jmp     l_test_22               #  31:     goto   22
-     jmp     l_test_23_while_cond    #  29:     goto   23_while_cond
+     jmp     l_test_23_while_cond    #  32:     goto   23_while_cond
-     jmp     l_test_13_while_cond    #  31:     goto   13_while_cond
+     jmp     l_test_13_while_cond    #  34:     goto   13_while_cond
-     call    dummyCHARfunc           #  33:     call   t2 <- dummyCHARfunc
+     call    dummyCHARfunc           #  36:     call   t2 <- dummyCHARfunc
