-     #    -76(%ebp)   4  [ $t24      <int> %ebp-76 ]
+     #    -73(%ebp)   1  [ $t3       <char> %ebp-73 ]
-     #    -80(%ebp)   4  [ $t25      <int> %ebp-80 ]
+     #    -80(%ebp)   4  [ $t4       <int> %ebp-80 ]
-     #    -81(%ebp)   1  [ $t3       <char> %ebp-81 ]
+     #    -84(%ebp)   4  [ $t5       <int> %ebp-84 ]
-     #    -88(%ebp)   4  [ $t4       <int> %ebp-88 ]
+     #    -88(%ebp)   4  [ $t6       <int> %ebp-88 ]
-     #    -92(%ebp)   4  [ $t5       <int> %ebp-92 ]
+     #    -92(%ebp)   4  [ $t7       <int> %ebp-92 ]
-     #    -96(%ebp)   4  [ $t6       <int> %ebp-96 ]
+     #    -96(%ebp)   4  [ $t8       <int> %ebp-96 ]
-     #   -100(%ebp)   4  [ $t7       <int> %ebp-100 ]
+     #   -100(%ebp)   4  [ $t9       <int> %ebp-100 ]
-     #   -104(%ebp)   4  [ $t8       <int> %ebp-104 ]
-     #   -108(%ebp)   4  [ $t9       <int> %ebp-108 ]
-     #   -112(%ebp)   4  [ $v1       <int> %ebp-112 ]
+     #   -104(%ebp)   4  [ $v1       <int> %ebp-104 ]
-     pushl   %ebp                   
-     movl    %esp, %ebp             
-     pushl   %ebx                    # save callee saved registers
-     pushl   %esi                   
+     pushl   %ebp                   
+     movl    %esp, %ebp             
+     pushl   %ebx                    # save callee saved registers
-     pushl   %edi                   
+     pushl   %esi                   
+     pushl   %edi                   
-     subl    $100, %esp              # make room for locals
+     subl    $92, %esp               # make room for locals
-     movl    $25, %ecx              
+     movl    $23, %ecx              
-     addl    $1, %esp               
+     addl    $4, %esp               
-     movb    %al, -81(%ebp)         
+     movb    %al, -73(%ebp)         
-     movzbl  -81(%ebp), %eax         #   4:     return t3
+     movzbl  -73(%ebp), %eax         #   4:     return t3
-     movl    %eax, -88(%ebp)        
+     movl    %eax, -80(%ebp)        
-     movl    -88(%ebp), %eax         #   6:     sub    t5 <- t4, 30107
+     movl    -80(%ebp), %eax         #   6:     sub    t5 <- t4, 30107
-     movl    %eax, -92(%ebp)        
+     movl    %eax, -84(%ebp)        
+     movl    %eax, -88(%ebp)        
+     movl    $51751, %eax            #  10:     mul    t7 <- 51751, t6
+     movl    -88(%ebp), %ebx        
+     imull   %ebx                   
+     movl    %eax, -92(%ebp)        
+     movl    -92(%ebp), %eax         #  11:     add    t8 <- t7, 26564
+     movl    $26564, %ebx           
+     addl    %ebx, %eax             
-     movl    $51751, %eax            #  10:     mul    t7 <- 51751, t6
-     movl    -96(%ebp), %ebx        
-     imull   %ebx                   
-     movl    %eax, -100(%ebp)       
-     movl    -100(%ebp), %eax        #  11:     add    t8 <- t7, 26564
-     movl    $26564, %ebx           
-     addl    %ebx, %eax             
-     movl    %eax, -104(%ebp)       
-     movl    %eax, -108(%ebp)       
+     movl    %eax, -100(%ebp)       
-     movl    -104(%ebp), %eax        #  15:     mul    t10 <- t8, t9
+     movl    -96(%ebp), %eax         #  15:     mul    t10 <- t8, t9
-     movl    -108(%ebp), %ebx       
+     movl    -100(%ebp), %ebx       
-     movl    $9331, %eax             #  22:     add    t16 <- 9331, 61920
-     movl    $61920, %ebx           
-     addl    %ebx, %eax             
-     movl    %eax, -40(%ebp)        
-     movl    -40(%ebp), %eax         #  23:     add    t17 <- t16, 19810
-     movl    $19810, %ebx           
-     addl    %ebx, %eax             
-     movl    %eax, -44(%ebp)        
-     movl    -28(%ebp), %eax         #  24:     mul    t15 <- t13, t14
+     movl    -28(%ebp), %eax         #  22:     mul    t15 <- t13, t14
-     movl    -36(%ebp), %eax         #  25:     add    t18 <- t15, 97501
+     movl    -36(%ebp), %eax         #  23:     add    t16 <- t15, 97501
+     movl    %eax, -40(%ebp)        
+     movl    $5, %eax                #  24:     param  1 <- 5
+     pushl   %eax                   
+     movl    8(%ebp), %eax           #  25:     param  0 <- v0
+     pushl   %eax                   
+     call    DIM                     #  26:     call   t17 <- DIM
+     addl    $8, %esp               
+     movl    %eax, -44(%ebp)        
+     movl    -40(%ebp), %eax         #  27:     mul    t18 <- t16, t17
+     movl    -44(%ebp), %ebx        
+     imull   %ebx                   
-     movl    $5, %eax                #  26:     param  1 <- 5
-     pushl   %eax                   
-     movl    8(%ebp), %eax           #  27:     param  0 <- v0
+     movl    -48(%ebp), %eax         #  28:     add    t19 <- t18, 18439
+     movl    $18439, %ebx           
-     pushl   %eax                   
-     call    DIM                     #  28:     call   t19 <- DIM
-     addl    $8, %esp               
+     addl    %ebx, %eax             
-     movl    -48(%ebp), %eax         #  29:     mul    t20 <- t18, t19
+     movl    -52(%ebp), %eax         #  29:     mul    t20 <- t19, 4
-     movl    -52(%ebp), %ebx        
+     movl    $4, %ebx               
-     movl    -60(%ebp), %eax         #  30:     add    t21 <- t20, 18439
+     movl    8(%ebp), %eax           #  30:     param  0 <- v0
-     movl    $18439, %ebx           
+     pushl   %eax                   
+     call    DOFS                    #  31:     call   t21 <- DOFS
-     addl    %ebx, %eax             
+     addl    $4, %esp               
-     movl    -64(%ebp), %eax         #  31:     mul    t22 <- t21, 4
+     movl    -60(%ebp), %eax         #  32:     add    t22 <- t20, t21
-     movl    $4, %ebx               
+     movl    -64(%ebp), %ebx        
-     imull   %ebx                   
+     addl    %ebx, %eax             
-     movl    8(%ebp), %eax           #  32:     param  0 <- v0
+     movl    8(%ebp), %eax           #  33:     add    t23 <- v0, t22
+     movl    -68(%ebp), %ebx        
-     pushl   %eax                   
-     call    DOFS                    #  33:     call   t23 <- DOFS
-     addl    $4, %esp               
+     addl    %ebx, %eax             
-     movl    -68(%ebp), %eax         #  34:     add    t24 <- t22, t23
+     movl    -84(%ebp), %eax         #  34:     assign @t23 <- t5
-     movl    -72(%ebp), %ebx        
+     movl    -72(%ebp), %edi        
-     addl    %ebx, %eax             
-     movl    %eax, -76(%ebp)        
-     movl    8(%ebp), %eax           #  35:     add    t25 <- v0, t24
-     movl    -76(%ebp), %ebx        
-     addl    %ebx, %eax             
-     movl    %eax, -80(%ebp)        
-     movl    -92(%ebp), %eax         #  36:     assign @t25 <- t5
-     movl    -80(%ebp), %edi        
-     addl    $100, %esp              # remove locals
+     addl    $92, %esp               # remove locals
+     jmp     l_f1_3                  #  10:     goto   3
+     jmp     l_f1_3                  #  11:     goto   3
-     movl    $1, %eax                #  10:     assign t7 <- 1
+     movl    $1, %eax                #  12:     assign t7 <- 1
-     jmp     l_f1_4                  #  11:     goto   4
+     jmp     l_f1_4                  #  13:     goto   4
-     movl    $0, %eax                #  13:     assign t7 <- 0
+     movl    $0, %eax                #  15:     assign t7 <- 0
-     movzbl  -30(%ebp), %eax         #  15:     return t7
+     movzbl  -30(%ebp), %eax         #  17:     return t7
-     jmp     l_f1_9_if_false         #  16:     goto   9_if_false
+     jmp     l_f1_9_if_false         #  18:     goto   9_if_false
-     call    dummyCHARfunc           #  17:     call   t8 <- dummyCHARfunc
+     call    dummyCHARfunc           #  19:     call   t8 <- dummyCHARfunc
-     movl    $0, %eax                #  18:     assign v4 <- 0
+     movl    $0, %eax                #  20:     assign v4 <- 0
-     jmp     l_f1_13_while_cond      #  20:     goto   13_while_cond
+     jmp     l_f1_13_while_cond      #  22:     goto   13_while_cond
-     jmp     l_f1_7                  #  21:     goto   7
+     jmp     l_f1_7                  #  23:     goto   7
