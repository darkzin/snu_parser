-     jmp     l_f1_3                  #   1:     goto   3
+     jmp     l_f1_4                  #   1:     goto   4
+     jmp     l_f1_5                  #   2:     goto   5
- l_f1_3:
+ l_f1_4:
-     movl    $1, %eax                #   3:     assign t5 <- 1
+     movl    $1, %eax                #   4:     assign t5 <- 1
-     jmp     l_f1_5                  #   4:     goto   5
+     jmp     l_f1_6                  #   5:     goto   6
+ l_f1_5:
-     movl    $0, %eax                #   5:     assign t5 <- 0
+     movl    $0, %eax                #   7:     assign t5 <- 0
- l_f1_5:
+ l_f1_6:
-     movzbl  -13(%ebp), %eax         #   7:     if     t5 # 1 goto 2_while_body
+     movzbl  -13(%ebp), %eax         #   9:     if     t5 # 1 goto 2_while_body
-     jmp     l_f1_0                  #   8:     goto   0
+     jmp     l_f1_0                  #  10:     goto   0
-     jmp     l_f1_1_while_cond       #  10:     goto   1_while_cond
+     jmp     l_f1_1_while_cond       #  12:     goto   1_while_cond
-     call    dummyCHARfunc           #  12:     call   t6 <- dummyCHARfunc
+     call    dummyCHARfunc           #  14:     call   t6 <- dummyCHARfunc
-     call    dummyINTfunc            #  13:     call   t7 <- dummyINTfunc
+     call    dummyINTfunc            #  15:     call   t7 <- dummyINTfunc
-     #  -2100(%ebp)2072  [ $v5       <array 8 of <array 8 of <array 1 of <array 8 of <array 1 of <int>>>>>> %ebp-2100 ]
+     #   -2100(%ebp)  2072  [ $v5       <array 8 of <array 8 of <array 1 of <array 8 of <array 1 of <int>>>>>> %ebp-2100 ]
-     #  -3804(%ebp)1704  [ $v6       <array 7 of <array 3 of <array 5 of <array 4 of <array 4 of <char>>>>>> %ebp-3804 ]
+     #   -3804(%ebp)  1704  [ $v6       <array 7 of <array 3 of <array 5 of <array 4 of <array 4 of <char>>>>>> %ebp-3804 ]
-     addl    $5, %esp               
+     addl    $8, %esp               
