-     #-118372368(%ebp)118372344  [ $v0       <array 6 of <array 36 of <array 55 of <array 47 of <array 53 of <int>>>>>> %ebp-118372368 ]
+     #   -118372368(%ebp)  118372344  [ $v0       <array 6 of <array 36 of <array 55 of <array 47 of <array 53 of <int>>>>>> %ebp-118372368 ]
+     jmp     l_f1_4                  #   0:     goto   4
-     jmp     l_f1_1                  #   0:     goto   1
+     jmp     l_f1_1                  #   1:     goto   1
+ l_f1_4:
+     jmp     l_f1_2                  #   3:     goto   2
-     movl    $1, %eax                #   2:     assign t6 <- 1
+     movl    $1, %eax                #   5:     assign t6 <- 1
-     jmp     l_f1_3                  #   3:     goto   3
+     jmp     l_f1_3                  #   6:     goto   3
+ l_f1_2:
-     movl    $0, %eax                #   4:     assign t6 <- 0
+     movl    $0, %eax                #   8:     assign t6 <- 0
-     movzbl  -14(%ebp), %eax         #   6:     param  1 <- t6
+     movzbl  -14(%ebp), %eax         #  10:     param  1 <- t6
-     leal    -118372368(%ebp), %eax  #   7:     &()    t7 <- v0
+     leal    -118372368(%ebp), %eax  #  11:     &()    t7 <- v0
-     movl    -20(%ebp), %eax         #   8:     param  0 <- t7
+     movl    -20(%ebp), %eax         #  12:     param  0 <- t7
-     call    f0                      #   9:     call   t8 <- f0
+     call    f0                      #  13:     call   t8 <- f0
-     addl    $5, %esp               
+     addl    $8, %esp               
-     call    dummyCHARfunc           #  10:     call   t9 <- dummyCHARfunc
+     call    dummyCHARfunc           #  14:     call   t9 <- dummyCHARfunc
-     movzbl  -22(%ebp), %eax         #  11:     return t9
+     movzbl  -22(%ebp), %eax         #  15:     return t9
-     call    dummyCHARfunc           #  12:     call   t10 <- dummyCHARfunc
+     call    dummyCHARfunc           #  16:     call   t10 <- dummyCHARfunc
-     movzbl  -13(%ebp), %eax         #  13:     return t10
+     movzbl  -13(%ebp), %eax         #  17:     return t10
+     jmp     l_test_2_if_false       #   0:     goto   2_if_false
-     call    dummyBOOLfunc           #   0:     call   t0 <- dummyBOOLfunc
+     call    dummyBOOLfunc           #   1:     call   t0 <- dummyBOOLfunc
-     jmp     l_test_0                #   1:     goto   0
+     jmp     l_test_0                #   2:     goto   0
+ l_test_2_if_false:
-     call    dummyCHARfunc           #   3:     call   t1 <- dummyCHARfunc
+     call    dummyCHARfunc           #   5:     call   t1 <- dummyCHARfunc
-     movl    $99, %eax               #   4:     if     99 <= 97 goto 7
+     movl    $99, %eax               #   6:     if     99 <= 97 goto 7
-     jmp     l_test_8                #   5:     goto   8
+     jmp     l_test_8                #   7:     goto   8
-     movl    $1, %eax                #   7:     assign t2 <- 1
+     movl    $1, %eax                #   9:     assign t2 <- 1
-     jmp     l_test_9                #   8:     goto   9
+     jmp     l_test_9                #  10:     goto   9
-     movl    $0, %eax                #  10:     assign t2 <- 0
+     movl    $0, %eax                #  12:     assign t2 <- 0
-     movzbl  -15(%ebp), %eax         #  12:     assign v0 <- t2
+     movzbl  -15(%ebp), %eax         #  14:     assign v0 <- t2
-     movl    $100, %eax              #  13:     if     100 # 97 goto 12
+     movl    $100, %eax              #  15:     if     100 # 97 goto 12
-     jmp     l_test_13               #  14:     goto   13
+     jmp     l_test_13               #  16:     goto   13
-     movl    $1, %eax                #  16:     assign t3 <- 1
+     movl    $1, %eax                #  18:     assign t3 <- 1
-     jmp     l_test_14               #  17:     goto   14
+     jmp     l_test_14               #  19:     goto   14
-     movl    $0, %eax                #  19:     assign t3 <- 0
+     movl    $0, %eax                #  21:     assign t3 <- 0
-     movzbl  -16(%ebp), %eax         #  21:     param  1 <- t3
+     movzbl  -16(%ebp), %eax         #  23:     param  1 <- t3
-     leal    v1, %eax                #  22:     &()    t4 <- v1
+     leal    v1, %eax                #  24:     &()    t4 <- v1
-     movl    -20(%ebp), %eax         #  23:     param  0 <- t4
+     movl    -20(%ebp), %eax         #  25:     param  0 <- t4
-     call    f0                      #  24:     call   t5 <- f0
+     call    f0                      #  26:     call   t5 <- f0
-     addl    $5, %esp               
+     addl    $8, %esp               
