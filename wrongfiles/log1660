+     jmp     l_f0_1                  #   3:     goto   1
-     jmp     l_f0_2_while_cond       #   4:     goto   2_while_cond
+     jmp     l_f0_2_while_cond       #   5:     goto   2_while_cond
+ l_f0_1:
-     call    dummyCHARfunc           #   5:     call   t2 <- dummyCHARfunc
+     call    dummyCHARfunc           #   7:     call   t2 <- dummyCHARfunc
-     movzbl  -17(%ebp), %eax         #   6:     return t2
+     movzbl  -17(%ebp), %eax         #   8:     return t2
-     #-501804(%ebp)501784  [ $v2       <array 28 of <array 2 of <array 40 of <array 4 of <array 56 of <bool>>>>>> %ebp-501804 ]
+     #   -501804(%ebp)  501784  [ $v2       <array 28 of <array 2 of <array 40 of <array 4 of <array 56 of <bool>>>>>> %ebp-501804 ]
-     addl    $5, %esp               
+     addl    $8, %esp               
-     #-501812(%ebp)501784  [ $v2       <array 28 of <array 2 of <array 40 of <array 4 of <array 56 of <bool>>>>>> %ebp-501812 ]
+     #   -501812(%ebp)  501784  [ $v2       <array 28 of <array 2 of <array 40 of <array 4 of <array 56 of <bool>>>>>> %ebp-501812 ]
+     jmp     l_f2_0                  #   1:     goto   0
-     jmp     l_f2_1_while_cond       #   1:     goto   1_while_cond
+     jmp     l_f2_1_while_cond       #   2:     goto   1_while_cond
+ l_f2_0:
-     movl    $99, %eax               #   2:     param  1 <- 99
+     movl    $99, %eax               #   4:     param  1 <- 99
-     leal    -501812(%ebp), %eax     #   3:     &()    t1 <- v2
+     leal    -501812(%ebp), %eax     #   5:     &()    t1 <- v2
-     movl    -16(%ebp), %eax         #   4:     param  0 <- t1
+     movl    -16(%ebp), %eax         #   6:     param  0 <- t1
-     call    f0                      #   5:     call   t2 <- f0
+     call    f0                      #   7:     call   t2 <- f0
-     addl    $5, %esp               
+     addl    $8, %esp               
-     movzbl  -17(%ebp), %eax         #   6:     return t2
+     movzbl  -17(%ebp), %eax         #   8:     return t2
-     movl    $14313, %eax            #   7:     mul    t3 <- 14313, 43387
+     movl    $14313, %eax            #   9:     mul    t3 <- 14313, 43387
-     movl    -24(%ebp), %eax         #   8:     mul    t4 <- t3, 4167
+     movl    -24(%ebp), %eax         #  10:     mul    t4 <- t3, 4167
-     movl    -28(%ebp), %eax         #   9:     assign v1 <- t4
+     movl    -28(%ebp), %eax         #  11:     assign v1 <- t4
+     jmp     l_test_2_if_false       #   0:     goto   2_if_false
+     jmp     l_test_2_if_false       #   1:     goto   2_if_false
+     jmp     l_test_2_if_false       #   2:     goto   2_if_false
-     movl    $90104, %eax            #   1:     if     90104 # 41173 goto 7_if_true
+     movl    $90104, %eax            #   4:     if     90104 # 41173 goto 7_if_true
-     jmp     l_test_8_if_false       #   2:     goto   8_if_false
+     jmp     l_test_8_if_false       #   5:     goto   8_if_false
-     jmp     l_test_6                #   4:     goto   6
+     jmp     l_test_6                #   7:     goto   6
-     movl    $675, %eax              #   9:     if     675 # 76966 goto 13_if_true
+     movl    $675, %eax              #  12:     if     675 # 76966 goto 13_if_true
-     jmp     l_test_14_if_false      #  10:     goto   14_if_false
+     jmp     l_test_14_if_false      #  13:     goto   14_if_false
-     jmp     l_test_12               #  12:     goto   12
+     jmp     l_test_12               #  15:     goto   12
-     jmp     l_test_0                #  15:     goto   0
+     jmp     l_test_0                #  18:     goto   0
+ l_test_2_if_false:
-     call    ReadInt                 #  17:     call   t0 <- ReadInt
+     call    ReadInt                 #  21:     call   t0 <- ReadInt
