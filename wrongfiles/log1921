+     jmp     l_f1_2                  #   1:     goto   2
-     movl    $1, %eax                #   2:     assign t2 <- 1
+     movl    $1, %eax                #   3:     assign t2 <- 1
-     jmp     l_f1_3                  #   3:     goto   3
+     jmp     l_f1_3                  #   4:     goto   3
+ l_f1_2:
-     movl    $0, %eax                #   4:     assign t2 <- 0
+     movl    $0, %eax                #   6:     assign t2 <- 0
-     movzbl  -13(%ebp), %eax         #   6:     assign v0 <- t2
+     movzbl  -13(%ebp), %eax         #   8:     assign v0 <- t2
-     movl    $90973, %eax            #   7:     add    t3 <- 90973, 2588
+     movl    $90973, %eax            #   9:     add    t3 <- 90973, 2588
-     call    dummyINTfunc            #   8:     call   t4 <- dummyINTfunc
+     call    dummyINTfunc            #  10:     call   t4 <- dummyINTfunc
-     movl    -20(%ebp), %eax         #   9:     add    t5 <- t3, t4
+     movl    -20(%ebp), %eax         #  11:     add    t5 <- t3, t4
-     movl    -28(%ebp), %eax         #  10:     return t5
+     movl    -28(%ebp), %eax         #  12:     return t5
-     movl    $20676, %eax            #  11:     if     20676 >= 90603 goto 9_if_true
+     movl    $20676, %eax            #  13:     if     20676 >= 90603 goto 9_if_true
-     jmp     l_f1_10_if_false        #  12:     goto   10_if_false
+     jmp     l_f1_10_if_false        #  14:     goto   10_if_false
-     jmp     l_f1_14_if_false        #  14:     goto   14_if_false
+     jmp     l_f1_14_if_false        #  16:     goto   14_if_false
-     jmp     l_f1_12                 #  15:     goto   12
+     jmp     l_f1_12                 #  17:     goto   12
-     call    dummyCHARfunc           #  18:     call   t6 <- dummyCHARfunc
+     call    dummyCHARfunc           #  20:     call   t6 <- dummyCHARfunc
-     movl    $0, %eax                #  19:     assign v0 <- 0
+     movl    $0, %eax                #  21:     assign v0 <- 0
-     movl    $59279, %eax            #  20:     assign v1 <- 59279
+     movl    $59279, %eax            #  22:     assign v1 <- 59279
-     movl    $99, %eax               #  21:     assign v2 <- 99
+     movl    $99, %eax               #  23:     assign v2 <- 99
-     movl    $98, %eax               #  23:     if     98 > 99 goto 21_while_body
+     movl    $98, %eax               #  25:     if     98 > 99 goto 21_while_body
-     jmp     l_f1_19                 #  24:     goto   19
+     jmp     l_f1_19                 #  26:     goto   19
-     jmp     l_f1_20_while_cond      #  26:     goto   20_while_cond
+     jmp     l_f1_20_while_cond      #  28:     goto   20_while_cond
-     jmp     l_f1_8                  #  28:     goto   8
+     jmp     l_f1_8                  #  30:     goto   8
+     jmp     l_f2_0                  #   1:     goto   0
-     movl    $77868, %eax            #   1:     assign v2 <- 77868
+     movl    $77868, %eax            #   2:     assign v2 <- 77868
-     call    f1                      #   2:     call   t2 <- f1
+     call    f1                      #   3:     call   t2 <- f1
-     jmp     l_f2_6                  #   3:     goto   6
+     jmp     l_f2_6                  #   4:     goto   6
-     jmp     l_f2_10_while_cond      #   6:     goto   10_while_cond
+     jmp     l_f2_10_while_cond      #   7:     goto   10_while_cond
-     movl    $1, %eax                #   9:     if     1 # 1 goto 15_while_body
+     movl    $1, %eax                #  10:     if     1 # 1 goto 15_while_body
-     jmp     l_f2_13                 #  10:     goto   13
+     jmp     l_f2_13                 #  11:     goto   13
-     jmp     l_f2_14_while_cond      #  12:     goto   14_while_cond
+     jmp     l_f2_14_while_cond      #  13:     goto   14_while_cond
-     jmp     l_f2_17                 #  15:     goto   17
+     jmp     l_f2_17                 #  16:     goto   17
-     jmp     l_f2_18_while_cond      #  16:     goto   18_while_cond
+     jmp     l_f2_18_while_cond      #  17:     goto   18_while_cond
-     jmp     l_f2_1_while_cond       #  19:     goto   1_while_cond
+     jmp     l_f2_1_while_cond       #  20:     goto   1_while_cond
+ l_f2_0:
+     jmp     l_f2_23_if_false        #  22:     goto   23_if_false
+     jmp     l_f2_23_if_false        #  23:     goto   23_if_false
-     movl    $20561, %eax            #  21:     if     20561 > 59911 goto 29_while_body
+     movl    $20561, %eax            #  25:     if     20561 > 59911 goto 29_while_body
-     jmp     l_f2_27                 #  22:     goto   27
+     jmp     l_f2_27                 #  26:     goto   27
-     jmp     l_f2_28_while_cond      #  24:     goto   28_while_cond
+     jmp     l_f2_28_while_cond      #  28:     goto   28_while_cond
-     jmp     l_f2_21                 #  26:     goto   21
+     jmp     l_f2_21                 #  30:     goto   21
+ l_f2_23_if_false:
