-     addl    $1, %esp               
+     addl    $4, %esp               
-     #    -60(%ebp)   4  [ $t20      <int> %ebp-60 ]
+     #    -60(%ebp)   4  [ $t3       <int> %ebp-60 ]
-     #    -64(%ebp)   4  [ $t3       <int> %ebp-64 ]
+     #    -64(%ebp)   4  [ $t4       <int> %ebp-64 ]
-     #    -68(%ebp)   4  [ $t4       <int> %ebp-68 ]
+     #    -68(%ebp)   4  [ $t5       <int> %ebp-68 ]
-     #    -72(%ebp)   4  [ $t5       <int> %ebp-72 ]
+     #    -72(%ebp)   4  [ $t6       <int> %ebp-72 ]
-     #    -76(%ebp)   4  [ $t6       <int> %ebp-76 ]
+     #    -76(%ebp)   4  [ $t7       <int> %ebp-76 ]
-     #    -80(%ebp)   4  [ $t7       <int> %ebp-80 ]
+     #    -80(%ebp)   4  [ $t8       <int> %ebp-80 ]
-     #    -84(%ebp)   4  [ $t8       <int> %ebp-84 ]
+     #    -84(%ebp)   4  [ $t9       <int> %ebp-84 ]
-     #    -88(%ebp)   4  [ $t9       <int> %ebp-88 ]
-     #    -89(%ebp)   1  [ $v2       <char> %ebp-89 ]
+     #    -85(%ebp)   1  [ $v2       <char> %ebp-85 ]
-     pushl   %ebp                   
-     movl    %esp, %ebp             
-     pushl   %ebx                    # save callee saved registers
-     pushl   %esi                   
+     pushl   %ebp                   
+     movl    %esp, %ebp             
+     pushl   %ebx                    # save callee saved registers
-     pushl   %edi                   
+     pushl   %esi                   
+     pushl   %edi                   
-     subl    $80, %esp               # make room for locals
+     subl    $76, %esp               # make room for locals
-     movl    $20, %ecx              
+     movl    $19, %ecx              
+     jmp     l_f1_2_if_false         #   3:     goto   2_if_false
-     jmp     l_f1_8_if_false         #   4:     goto   8_if_false
+     jmp     l_f1_8_if_false         #   5:     goto   8_if_false
-     jmp     l_f1_6                  #   5:     goto   6
+     jmp     l_f1_6                  #   6:     goto   6
-     jmp     l_f1_0                  #   8:     goto   0
+     jmp     l_f1_0                  #   9:     goto   0
+ l_f1_2_if_false:
-     call    dummyBOOLfunc           #  11:     call   t2 <- dummyBOOLfunc
+     call    dummyBOOLfunc           #  13:     call   t2 <- dummyBOOLfunc
-     movzbl  -53(%ebp), %eax         #  12:     if     t2 = 1 goto 11_while_body
+     movzbl  -53(%ebp), %eax         #  14:     if     t2 = 1 goto 11_while_body
+     jmp     l_f1_9                  #  15:     goto   9
-     jmp     l_f1_10_while_cond      #  14:     goto   10_while_cond
+     jmp     l_f1_10_while_cond      #  17:     goto   10_while_cond
+ l_f1_9:
-     movl    $2, %eax                #  15:     param  1 <- 2
+     movl    $2, %eax                #  19:     param  1 <- 2
-     movl    8(%ebp), %eax           #  16:     param  0 <- v0
+     movl    8(%ebp), %eax           #  20:     param  0 <- v0
-     call    DIM                     #  17:     call   t3 <- DIM
+     call    DIM                     #  21:     call   t3 <- DIM
+     movl    %eax, -60(%ebp)        
+     movl    $48671, %eax            #  22:     mul    t4 <- 48671, t3
+     movl    -60(%ebp), %ebx        
+     imull   %ebx                   
+     movl    -64(%ebp), %eax         #  23:     add    t5 <- t4, 74204
+     movl    $74204, %ebx           
+     addl    %ebx, %eax             
+     movl    %eax, -68(%ebp)        
+     movl    $3, %eax                #  24:     param  1 <- 3
+     pushl   %eax                   
+     movl    8(%ebp), %eax           #  25:     param  0 <- v0
+     pushl   %eax                   
+     call    DIM                     #  26:     call   t6 <- DIM
+     addl    $8, %esp               
+     movl    %eax, -72(%ebp)        
-     movl    $48671, %eax            #  18:     mul    t4 <- 48671, t3
+     movl    -68(%ebp), %eax         #  27:     mul    t7 <- t5, t6
-     movl    -64(%ebp), %ebx        
+     movl    -72(%ebp), %ebx        
-     movl    %eax, -68(%ebp)        
-     movl    -68(%ebp), %eax         #  19:     add    t5 <- t4, 74204
-     movl    $74204, %ebx           
-     addl    %ebx, %eax             
-     movl    %eax, -72(%ebp)        
-     movl    $3, %eax                #  20:     param  1 <- 3
-     pushl   %eax                   
-     movl    8(%ebp), %eax           #  21:     param  0 <- v0
-     pushl   %eax                   
-     call    DIM                     #  22:     call   t6 <- DIM
-     addl    $8, %esp               
-     movl    -72(%ebp), %eax         #  23:     mul    t7 <- t5, t6
-     movl    -76(%ebp), %ebx        
-     imull   %ebx                   
-     movl    %eax, -80(%ebp)        
-     movl    $7646, %eax             #  24:     sub    t8 <- 7646, 10888
+     movl    $7646, %eax             #  28:     sub    t8 <- 7646, 10888
+     movl    %eax, -80(%ebp)        
+     movl    -76(%ebp), %eax         #  29:     add    t9 <- t7, t8
+     movl    -80(%ebp), %ebx        
+     addl    %ebx, %eax             
-     movl    -80(%ebp), %eax         #  25:     add    t9 <- t7, t8
-     movl    -84(%ebp), %ebx        
-     addl    %ebx, %eax             
-     movl    %eax, -88(%ebp)        
-     movl    $4, %eax                #  26:     param  1 <- 4
+     movl    $4, %eax                #  30:     param  1 <- 4
-     movl    8(%ebp), %eax           #  27:     param  0 <- v0
+     movl    8(%ebp), %eax           #  31:     param  0 <- v0
-     call    DIM                     #  28:     call   t10 <- DIM
+     call    DIM                     #  32:     call   t10 <- DIM
-     movl    $7646, %eax             #  29:     sub    t12 <- 7646, 10888
-     movl    $10888, %ebx           
-     subl    %ebx, %eax             
-     movl    %eax, -24(%ebp)        
-     movl    -88(%ebp), %eax         #  30:     mul    t11 <- t9, t10
+     movl    -84(%ebp), %eax         #  33:     mul    t11 <- t9, t10
-     movl    -20(%ebp), %eax         #  31:     add    t13 <- t11, 30880
+     movl    -20(%ebp), %eax         #  34:     add    t12 <- t11, 30880
+     movl    %eax, -24(%ebp)        
+     movl    $5, %eax                #  35:     param  1 <- 5
+     pushl   %eax                   
+     movl    8(%ebp), %eax           #  36:     param  0 <- v0
+     pushl   %eax                   
+     call    DIM                     #  37:     call   t13 <- DIM
+     addl    $8, %esp               
-     movl    $5, %eax                #  32:     param  1 <- 5
+     movl    -24(%ebp), %eax         #  38:     mul    t14 <- t12, t13
+     movl    -28(%ebp), %ebx        
-     pushl   %eax                   
+     imull   %ebx                   
-     movl    8(%ebp), %eax           #  33:     param  0 <- v0
-     pushl   %eax                   
-     call    DIM                     #  34:     call   t14 <- DIM
-     addl    $8, %esp               
-     movl    -28(%ebp), %eax         #  35:     mul    t15 <- t13, t14
+     movl    -32(%ebp), %eax         #  39:     add    t15 <- t14, 53761
-     movl    -32(%ebp), %ebx        
+     movl    $53761, %ebx           
-     imull   %ebx                   
+     addl    %ebx, %eax             
-     movl    -36(%ebp), %eax         #  36:     add    t16 <- t15, 53761
-     movl    $53761, %ebx           
-     addl    %ebx, %eax             
-     movl    %eax, -40(%ebp)        
-     movl    -40(%ebp), %eax         #  37:     mul    t17 <- t16, 1
+     movl    -36(%ebp), %eax         #  40:     mul    t16 <- t15, 1
+     movl    %eax, -40(%ebp)        
+     movl    8(%ebp), %eax           #  41:     param  0 <- v0
+     pushl   %eax                   
+     call    DOFS                    #  42:     call   t17 <- DOFS
+     addl    $4, %esp               
-     movl    8(%ebp), %eax           #  38:     param  0 <- v0
+     movl    -40(%ebp), %eax         #  43:     add    t18 <- t16, t17
+     movl    -44(%ebp), %ebx        
-     pushl   %eax                   
-     call    DOFS                    #  39:     call   t18 <- DOFS
-     addl    $4, %esp               
+     addl    %ebx, %eax             
-     movl    -44(%ebp), %eax         #  40:     add    t19 <- t17, t18
+     movl    8(%ebp), %eax           #  44:     add    t19 <- v0, t18
-     movl    8(%ebp), %eax           #  41:     add    t20 <- v0, t19
-     movl    -52(%ebp), %ebx        
-     addl    %ebx, %eax             
-     movl    %eax, -60(%ebp)        
-     movl    $99, %eax               #  42:     assign @t20 <- 99
+     movl    $99, %eax               #  45:     assign @t19 <- 99
-     movl    -60(%ebp), %edi        
+     movl    -52(%ebp), %edi        
-     addl    $80, %esp               # remove locals
+     addl    $76, %esp               # remove locals
-     #  -7104(%ebp)7080  [ $v3       <array 7 of <array 9 of <array 7 of <array 8 of <array 2 of <bool>>>>>> %ebp-7104 ]
+     #   -7104(%ebp)  7080  [ $v3       <array 7 of <array 9 of <array 7 of <array 8 of <array 2 of <bool>>>>>> %ebp-7104 ]
+     jmp     l_test_2_if_false       #   2:     goto   2_if_false
-     jmp     l_test_0                #   3:     goto   0
+     jmp     l_test_0                #   4:     goto   0
+ l_test_2_if_false:
+     jmp     l_test_7                #   8:     goto   7
+     jmp     l_test_7                #   9:     goto   7
+     jmp     l_test_7                #  10:     goto   7
-     jmp     l_test_8_while_cond     #   7:     goto   8_while_cond
+     jmp     l_test_8_while_cond     #  12:     goto   8_while_cond
+ l_test_7:
-     movl    $4905, %eax             #   9:     add    t0 <- 4905, 81896
+     movl    $4905, %eax             #  15:     add    t0 <- 4905, 81896
-     movl    $5227, %eax             #  10:     add    t1 <- 5227, 5596
+     movl    $5227, %eax             #  16:     add    t1 <- 5227, 5596
-     movl    -16(%ebp), %eax         #  11:     if     t0 = t1 goto 15_while_body
+     movl    -16(%ebp), %eax         #  17:     if     t0 = t1 goto 15_while_body
-     jmp     l_test_13               #  12:     goto   13
+     jmp     l_test_13               #  18:     goto   13
-     jmp     l_test_14_while_cond    #  14:     goto   14_while_cond
+     jmp     l_test_14_while_cond    #  20:     goto   14_while_cond
