-     #  -4080(%ebp)4056  [ $v1       <array 8 of <array 2 of <array 7 of <array 9 of <array 4 of <char>>>>>> %ebp-4080 ]
+     #   -4080(%ebp)  4056  [ $v1       <array 8 of <array 2 of <array 7 of <array 9 of <array 4 of <char>>>>>> %ebp-4080 ]
-     #  -5544(%ebp)1464  [ $v2       <array 2 of <array 8 of <array 3 of <array 6 of <array 5 of <char>>>>>> %ebp-5544 ]
+     #   -5544(%ebp)  1464  [ $v2       <array 2 of <array 8 of <array 3 of <array 6 of <array 5 of <char>>>>>> %ebp-5544 ]
-     #  -5545(%ebp)   1  [ $v3       <bool> %ebp-5545 ]
+     #   -5545(%ebp)   1  [ $v3       <bool> %ebp-5545 ]
-     addl    $10, %esp              
+     addl    $16, %esp              
+     jmp     l_f2_10                 #  21:     goto   10
-     movl    $29479, %eax            #  21:     if     29479 >= 81001 goto 16_if_true
+     movl    $29479, %eax            #  22:     if     29479 >= 81001 goto 16_if_true
-     jmp     l_f2_17_if_false        #  22:     goto   17_if_false
+     jmp     l_f2_17_if_false        #  23:     goto   17_if_false
-     jmp     l_f2_15                 #  24:     goto   15
+     jmp     l_f2_15                 #  25:     goto   15
-     movl    $0, %eax                #  27:     assign v3 <- 0
+     movl    $0, %eax                #  28:     assign v3 <- 0
-     jmp     l_f2_11_while_cond      #  28:     goto   11_while_cond
+     jmp     l_f2_11_while_cond      #  29:     goto   11_while_cond
+ l_f2_10:
+     jmp     l_test_4_if_false       #   3:     goto   4_if_false
-     jmp     l_test_2                #   4:     goto   2
+     jmp     l_test_2                #   5:     goto   2
+ l_test_4_if_false:
-     movl    $99, %eax               #   6:     param  3 <- 99
+     movl    $99, %eax               #   8:     param  3 <- 99
-     leal    v4, %eax                #   7:     &()    t0 <- v4
+     leal    v4, %eax                #   9:     &()    t0 <- v4
-     movl    -16(%ebp), %eax         #   8:     param  2 <- t0
+     movl    -16(%ebp), %eax         #  10:     param  2 <- t0
-     leal    v3, %eax                #   9:     &()    t1 <- v3
+     leal    v3, %eax                #  11:     &()    t1 <- v3
-     movl    -20(%ebp), %eax         #  10:     param  1 <- t1
+     movl    -20(%ebp), %eax         #  12:     param  1 <- t1
-     movl    $23900, %eax            #  11:     param  0 <- 23900
+     movl    $23900, %eax            #  13:     param  0 <- 23900
-     call    f1                      #  12:     call   t2 <- f1
+     call    f1                      #  14:     call   t2 <- f1
-     movzbl  -21(%ebp), %eax         #  13:     param  1 <- t2
+     movzbl  -21(%ebp), %eax         #  15:     param  1 <- t2
-     leal    v2, %eax                #  14:     &()    t3 <- v2
+     leal    v2, %eax                #  16:     &()    t3 <- v2
-     movl    -28(%ebp), %eax         #  15:     param  0 <- t3
+     movl    -28(%ebp), %eax         #  17:     param  0 <- t3
-     call    f0                      #  16:     call   t4 <- f0
+     call    f0                      #  18:     call   t4 <- f0
-     addl    $10, %esp              
+     addl    $16, %esp              
-     movzbl  -29(%ebp), %eax         #  17:     if     t4 = 1 goto 8
+     movzbl  -29(%ebp), %eax         #  19:     if     t4 = 1 goto 8
-     movl    $1, %eax                #  19:     assign t5 <- 1
+     movl    $1, %eax                #  21:     assign t5 <- 1
-     jmp     l_test_10               #  20:     goto   10
+     jmp     l_test_10               #  22:     goto   10
-     movl    $0, %eax                #  21:     assign t5 <- 0
+     movl    $0, %eax                #  23:     assign t5 <- 0
-     movzbl  -30(%ebp), %eax         #  23:     assign v1 <- t5
+     movzbl  -30(%ebp), %eax         #  25:     assign v1 <- t5
-     movl    $97, %eax               #  24:     assign v5 <- 97
+     movl    $97, %eax               #  26:     assign v5 <- 97
