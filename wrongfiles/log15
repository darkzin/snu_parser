+     jmp     l_f0_3                  #   8:     goto   3
+     jmp     l_f0_3                  #   9:     goto   3
-     jmp     l_f0_8_while_cond       #   9:     goto   8_while_cond
+     jmp     l_f0_8_while_cond       #  11:     goto   8_while_cond
-     jmp     l_f0_10                 #  11:     goto   10
+     jmp     l_f0_10                 #  13:     goto   10
-     jmp     l_f0_11_while_cond      #  12:     goto   11_while_cond
+     jmp     l_f0_11_while_cond      #  14:     goto   11_while_cond
-     movl    $2, %eax                #  14:     param  1 <- 2
+     movl    $2, %eax                #  16:     param  1 <- 2
-     movl    8(%ebp), %eax           #  15:     param  0 <- v0
+     movl    8(%ebp), %eax           #  17:     param  0 <- v0
-     call    DIM                     #  16:     call   t4 <- DIM
+     call    DIM                     #  18:     call   t4 <- DIM
-     movl    $61142, %eax            #  17:     mul    t5 <- 61142, t4
+     movl    $61142, %eax            #  19:     mul    t5 <- 61142, t4
-     movl    -64(%ebp), %eax         #  18:     add    t6 <- t5, 62889
+     movl    -64(%ebp), %eax         #  20:     add    t6 <- t5, 62889
-     movl    $3, %eax                #  19:     param  1 <- 3
+     movl    $3, %eax                #  21:     param  1 <- 3
-     movl    8(%ebp), %eax           #  20:     param  0 <- v0
+     movl    8(%ebp), %eax           #  22:     param  0 <- v0
-     call    DIM                     #  21:     call   t7 <- DIM
+     call    DIM                     #  23:     call   t7 <- DIM
-     movl    -68(%ebp), %eax         #  22:     mul    t8 <- t6, t7
+     movl    -68(%ebp), %eax         #  24:     mul    t8 <- t6, t7
-     movl    -76(%ebp), %eax         #  23:     add    t9 <- t8, 98256
+     movl    -76(%ebp), %eax         #  25:     add    t9 <- t8, 98256
-     movl    $4, %eax                #  24:     param  1 <- 4
+     movl    $4, %eax                #  26:     param  1 <- 4
-     movl    8(%ebp), %eax           #  25:     param  0 <- v0
+     movl    8(%ebp), %eax           #  27:     param  0 <- v0
-     call    DIM                     #  26:     call   t10 <- DIM
+     call    DIM                     #  28:     call   t10 <- DIM
-     movl    -80(%ebp), %eax         #  27:     mul    t11 <- t9, t10
+     movl    -80(%ebp), %eax         #  29:     mul    t11 <- t9, t10
-     movl    -20(%ebp), %eax         #  28:     add    t12 <- t11, 36025
+     movl    -20(%ebp), %eax         #  30:     add    t12 <- t11, 36025
-     movl    $5, %eax                #  29:     param  1 <- 5
+     movl    $5, %eax                #  31:     param  1 <- 5
-     movl    8(%ebp), %eax           #  30:     param  0 <- v0
+     movl    8(%ebp), %eax           #  32:     param  0 <- v0
-     call    DIM                     #  31:     call   t13 <- DIM
+     call    DIM                     #  33:     call   t13 <- DIM
-     movl    -24(%ebp), %eax         #  32:     mul    t14 <- t12, t13
+     movl    -24(%ebp), %eax         #  34:     mul    t14 <- t12, t13
-     movl    -32(%ebp), %eax         #  33:     add    t15 <- t14, 98424
+     movl    -32(%ebp), %eax         #  35:     add    t15 <- t14, 98424
-     movl    -36(%ebp), %eax         #  34:     mul    t16 <- t15, 4
+     movl    -36(%ebp), %eax         #  36:     mul    t16 <- t15, 4
-     movl    8(%ebp), %eax           #  35:     param  0 <- v0
+     movl    8(%ebp), %eax           #  37:     param  0 <- v0
-     call    DOFS                    #  36:     call   t17 <- DOFS
+     call    DOFS                    #  38:     call   t17 <- DOFS
-     movl    -40(%ebp), %eax         #  37:     add    t18 <- t16, t17
+     movl    -40(%ebp), %eax         #  39:     add    t18 <- t16, t17
-     movl    8(%ebp), %eax           #  38:     add    t19 <- v0, t18
+     movl    8(%ebp), %eax           #  40:     add    t19 <- v0, t18
-     movl    $24030, %eax            #  39:     assign @t19 <- 24030
+     movl    $24030, %eax            #  41:     assign @t19 <- 24030
-     jmp     l_f0_4_while_cond       #  40:     goto   4_while_cond
+     jmp     l_f0_4_while_cond       #  42:     goto   4_while_cond
+ l_f0_3:
-     movl    $98, %eax               #  41:     if     98 = 98 goto 15_if_true
+     movl    $98, %eax               #  44:     if     98 = 98 goto 15_if_true
-     jmp     l_f0_16_if_false        #  42:     goto   16_if_false
+     jmp     l_f0_16_if_false        #  45:     goto   16_if_false
-     movl    $0, %eax                #  44:     return 0
+     movl    $0, %eax                #  47:     return 0
-     movl    $1, %eax                #  45:     assign v3 <- 1
+     movl    $1, %eax                #  48:     assign v3 <- 1
-     movl    $1, %eax                #  46:     return 1
+     movl    $1, %eax                #  49:     return 1
-     jmp     l_f0_21                 #  47:     goto   21
+     jmp     l_f0_21                 #  50:     goto   21
-     movl    $100, %eax              #  50:     if     100 < 100 goto 26_while_body
+     movl    $100, %eax              #  53:     if     100 < 100 goto 26_while_body
-     jmp     l_f0_24                 #  51:     goto   24
+     jmp     l_f0_24                 #  54:     goto   24
-     jmp     l_f0_25_while_cond      #  53:     goto   25_while_cond
+     jmp     l_f0_25_while_cond      #  56:     goto   25_while_cond
-     movl    $86064, %eax            #  55:     assign v2 <- 86064
+     movl    $86064, %eax            #  58:     assign v2 <- 86064
-     jmp     l_f0_14                 #  56:     goto   14
+     jmp     l_f0_14                 #  59:     goto   14
-     #    -64(%ebp)   4  [ $t22      <int> %ebp-64 ]
+     #    -64(%ebp)   4  [ $t3       <int> %ebp-64 ]
-     #    -68(%ebp)   4  [ $t23      <int> %ebp-68 ]
+     #    -68(%ebp)   4  [ $t4       <int> %ebp-68 ]
-     #    -72(%ebp)   4  [ $t3       <int> %ebp-72 ]
+     #    -72(%ebp)   4  [ $t5       <int> %ebp-72 ]
-     #    -76(%ebp)   4  [ $t4       <int> %ebp-76 ]
+     #    -76(%ebp)   4  [ $t6       <int> %ebp-76 ]
-     #    -80(%ebp)   4  [ $t5       <int> %ebp-80 ]
+     #    -80(%ebp)   4  [ $t7       <int> %ebp-80 ]
-     #    -84(%ebp)   4  [ $t6       <int> %ebp-84 ]
+     #    -84(%ebp)   4  [ $t8       <int> %ebp-84 ]
-     #    -88(%ebp)   4  [ $t7       <int> %ebp-88 ]
+     #    -88(%ebp)   4  [ $t9       <int> %ebp-88 ]
-     #    -92(%ebp)   4  [ $t8       <int> %ebp-92 ]
-     #    -96(%ebp)   4  [ $t9       <int> %ebp-96 ]
-     subl    $84, %esp               # make room for locals
+     subl    $76, %esp               # make room for locals
-     movl    $21, %ecx              
+     movl    $19, %ecx              
+     jmp     l_f1_0                  #   1:     goto   0
-     jmp     l_f1_1_while_cond       #   1:     goto   1_while_cond
+     jmp     l_f1_1_while_cond       #   2:     goto   1_while_cond
+ l_f1_0:
-     movl    $2, %eax                #   2:     param  1 <- 2
+     movl    $2, %eax                #   4:     param  1 <- 2
-     movl    12(%ebp), %eax          #   3:     param  0 <- v1
+     movl    12(%ebp), %eax          #   5:     param  0 <- v1
-     call    DIM                     #   4:     call   t3 <- DIM
+     call    DIM                     #   6:     call   t3 <- DIM
-     movl    %eax, -72(%ebp)        
+     movl    %eax, -64(%ebp)        
-     movl    $4775, %eax             #   5:     mul    t4 <- 4775, t3
+     movl    $4775, %eax             #   7:     mul    t4 <- 4775, t3
-     movl    -72(%ebp), %ebx        
+     movl    -64(%ebp), %ebx        
-     movl    %eax, -76(%ebp)        
+     movl    %eax, -68(%ebp)        
-     movl    $35275, %eax            #   6:     sub    t5 <- 35275, 69605
+     movl    $35275, %eax            #   8:     sub    t5 <- 35275, 69605
+     movl    %eax, -72(%ebp)        
+     movl    -68(%ebp), %eax         #   9:     add    t6 <- t4, t5
+     movl    -72(%ebp), %ebx        
+     addl    %ebx, %eax             
+     movl    %eax, -76(%ebp)        
+     movl    $3, %eax                #  10:     param  1 <- 3
+     pushl   %eax                   
+     movl    12(%ebp), %eax          #  11:     param  0 <- v1
+     pushl   %eax                   
+     call    DIM                     #  12:     call   t7 <- DIM
+     addl    $8, %esp               
-     movl    -76(%ebp), %eax         #   7:     add    t6 <- t4, t5
+     movl    -76(%ebp), %eax         #  13:     mul    t8 <- t6, t7
-     addl    %ebx, %eax             
+     imull   %ebx                   
-     movl    $3, %eax                #   8:     param  1 <- 3
-     pushl   %eax                   
-     movl    12(%ebp), %eax          #   9:     param  0 <- v1
-     pushl   %eax                   
-     call    DIM                     #  10:     call   t7 <- DIM
-     addl    $8, %esp               
-     movl    %eax, -88(%ebp)        
-     movl    $35275, %eax            #  11:     sub    t9 <- 35275, 69605
-     movl    $69605, %ebx           
-     subl    %ebx, %eax             
-     movl    %eax, -96(%ebp)        
-     movl    -84(%ebp), %eax         #  12:     mul    t8 <- t6, t7
-     movl    -88(%ebp), %ebx        
-     imull   %ebx                   
-     movl    %eax, -92(%ebp)        
-     movl    $59313, %eax            #  13:     sub    t10 <- 59313, 18048
+     movl    $59313, %eax            #  14:     sub    t9 <- 59313, 18048
+     movl    %eax, -88(%ebp)        
+     movl    -84(%ebp), %eax         #  15:     add    t10 <- t8, t9
+     movl    -88(%ebp), %ebx        
+     addl    %ebx, %eax             
+     movl    $4, %eax                #  16:     param  1 <- 4
+     pushl   %eax                   
-     movl    -92(%ebp), %eax         #  14:     add    t11 <- t8, t10
+     movl    12(%ebp), %eax          #  17:     param  0 <- v1
-     movl    -16(%ebp), %ebx        
+     pushl   %eax                   
+     call    DIM                     #  18:     call   t11 <- DIM
-     addl    %ebx, %eax             
+     addl    $8, %esp               
-     movl    $4, %eax                #  15:     param  1 <- 4
+     movl    -16(%ebp), %eax         #  19:     mul    t12 <- t10, t11
+     movl    -20(%ebp), %ebx        
-     pushl   %eax                   
+     imull   %ebx                   
-     movl    12(%ebp), %eax          #  16:     param  0 <- v1
-     pushl   %eax                   
-     call    DIM                     #  17:     call   t12 <- DIM
-     addl    $8, %esp               
-     movl    $59313, %eax            #  18:     sub    t14 <- 59313, 18048
+     movl    -24(%ebp), %eax         #  20:     add    t13 <- t12, 24592
-     movl    $18048, %ebx           
+     movl    $24592, %ebx           
-     subl    %ebx, %eax             
+     addl    %ebx, %eax             
+     movl    %eax, -28(%ebp)        
+     movl    $5, %eax                #  21:     param  1 <- 5
+     pushl   %eax                   
+     movl    12(%ebp), %eax          #  22:     param  0 <- v1
+     pushl   %eax                   
+     call    DIM                     #  23:     call   t14 <- DIM
+     addl    $8, %esp               
-     movl    -20(%ebp), %eax         #  19:     mul    t13 <- t11, t12
+     movl    -28(%ebp), %eax         #  24:     mul    t15 <- t13, t14
-     movl    -24(%ebp), %ebx        
+     movl    -32(%ebp), %ebx        
-     movl    %eax, -28(%ebp)        
-     movl    -28(%ebp), %eax         #  20:     add    t15 <- t13, 24592
-     movl    $24592, %ebx           
-     addl    %ebx, %eax             
-     movl    $5, %eax                #  21:     param  1 <- 5
-     pushl   %eax                   
-     movl    12(%ebp), %eax          #  22:     param  0 <- v1
+     movl    -36(%ebp), %eax         #  25:     add    t16 <- t15, 67892
+     movl    $67892, %ebx           
-     pushl   %eax                   
-     call    DIM                     #  23:     call   t16 <- DIM
-     addl    $8, %esp               
+     addl    %ebx, %eax             
-     movl    -36(%ebp), %eax         #  24:     mul    t17 <- t15, t16
+     movl    -40(%ebp), %eax         #  26:     mul    t17 <- t16, 4
-     movl    -40(%ebp), %ebx        
+     movl    $4, %ebx               
-     movl    -44(%ebp), %eax         #  25:     add    t18 <- t17, 67892
+     movl    12(%ebp), %eax          #  27:     param  0 <- v1
-     movl    $67892, %ebx           
+     pushl   %eax                   
+     call    DOFS                    #  28:     call   t18 <- DOFS
-     addl    %ebx, %eax             
+     addl    $4, %esp               
-     movl    -48(%ebp), %eax         #  26:     mul    t19 <- t18, 4
+     movl    -44(%ebp), %eax         #  29:     add    t19 <- t17, t18
-     movl    $4, %ebx               
+     movl    -48(%ebp), %ebx        
-     imull   %ebx                   
+     addl    %ebx, %eax             
-     movl    12(%ebp), %eax          #  27:     param  0 <- v1
+     movl    12(%ebp), %eax          #  30:     add    t20 <- v1, t19
+     movl    -52(%ebp), %ebx        
-     pushl   %eax                   
-     call    DOFS                    #  28:     call   t20 <- DOFS
-     addl    $4, %esp               
+     addl    %ebx, %eax             
-     movl    -52(%ebp), %eax         #  29:     add    t21 <- t19, t20
+     movl    $3067, %eax             #  31:     assign @t20 <- 3067
-     movl    -56(%ebp), %ebx        
+     movl    -56(%ebp), %edi        
-     addl    %ebx, %eax             
+     movl    %eax, (%edi)           
+     call    dummyINTfunc            #  32:     call   t21 <- dummyINTfunc
-     movl    12(%ebp), %eax          #  30:     add    t22 <- v1, t21
-     movl    -60(%ebp), %ebx        
-     addl    %ebx, %eax             
-     movl    %eax, -64(%ebp)        
-     movl    $3067, %eax             #  31:     assign @t22 <- 3067
-     movl    -64(%ebp), %edi        
-     movl    %eax, (%edi)           
-     call    dummyINTfunc            #  32:     call   t23 <- dummyINTfunc
-     movl    %eax, -68(%ebp)        
-     movl    -68(%ebp), %eax         #  33:     return t23
+     movl    -60(%ebp), %eax         #  33:     return t21
-     addl    $84, %esp               # remove locals
+     addl    $76, %esp               # remove locals
-     # -19352(%ebp)19224  [ $v1       <array 8 of <array 10 of <array 6 of <array 2 of <array 5 of <int>>>>>> %ebp-19352 ]
+     #   -19352(%ebp)  19224  [ $v1       <array 8 of <array 10 of <array 6 of <array 2 of <array 5 of <int>>>>>> %ebp-19352 ]
-     # -19356(%ebp)   4  [ $v2       <int> %ebp-19356 ]
+     #   -19356(%ebp)   4  [ $v2       <int> %ebp-19356 ]
-     # -19357(%ebp)   1  [ $v3       <bool> %ebp-19357 ]
+     #   -19357(%ebp)   1  [ $v3       <bool> %ebp-19357 ]
