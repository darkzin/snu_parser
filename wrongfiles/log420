-     #    -68(%ebp)   4  [ $t23      <int> %ebp-68 ]
+     #    -65(%ebp)   1  [ $t23      <char> %ebp-65 ]
+     #    -66(%ebp)   1  [ $t24      <bool> %ebp-66 ]
+     #    -67(%ebp)   1  [ $t3       <bool> %ebp-67 ]
-     #    -72(%ebp)   4  [ $t24      <int> %ebp-72 ]
+     #    -72(%ebp)   4  [ $t4       <int> %ebp-72 ]
-     #    -73(%ebp)   1  [ $t25      <char> %ebp-73 ]
+     #    -76(%ebp)   4  [ $t5       <int> %ebp-76 ]
-     #    -74(%ebp)   1  [ $t26      <bool> %ebp-74 ]
-     #    -75(%ebp)   1  [ $t3       <bool> %ebp-75 ]
-     #    -80(%ebp)   4  [ $t4       <int> %ebp-80 ]
+     #    -80(%ebp)   4  [ $t6       <int> %ebp-80 ]
-     #    -84(%ebp)   4  [ $t5       <int> %ebp-84 ]
+     #    -84(%ebp)   4  [ $t7       <int> %ebp-84 ]
-     #    -88(%ebp)   4  [ $t6       <int> %ebp-88 ]
+     #    -88(%ebp)   4  [ $t8       <int> %ebp-88 ]
-     #    -92(%ebp)   4  [ $t7       <int> %ebp-92 ]
+     #    -92(%ebp)   4  [ $t9       <int> %ebp-92 ]
-     #    -96(%ebp)   4  [ $t8       <int> %ebp-96 ]
-     #   -100(%ebp)   4  [ $t9       <int> %ebp-100 ]
-     #   -104(%ebp)   4  [ $v2       <int> %ebp-104 ]
+     #    -96(%ebp)   4  [ $v2       <int> %ebp-96 ]
-     #   -105(%ebp)   1  [ $v3       <bool> %ebp-105 ]
+     #    -97(%ebp)   1  [ $v3       <bool> %ebp-97 ]
-     pushl   %ebp                   
-     movl    %esp, %ebp             
-     pushl   %ebx                    # save callee saved registers
-     pushl   %esi                   
+     pushl   %ebp                   
+     movl    %esp, %ebp             
+     pushl   %ebx                    # save callee saved registers
-     pushl   %edi                   
+     pushl   %esi                   
+     pushl   %edi                   
-     subl    $96, %esp               # make room for locals
+     subl    $88, %esp               # make room for locals
-     movl    $24, %ecx              
+     movl    $22, %ecx              
-     movl    %eax, -104(%ebp)       
+     movl    %eax, -96(%ebp)        
-     movb    %al, -75(%ebp)         
+     movb    %al, -67(%ebp)         
-     movb    %al, -75(%ebp)         
+     movb    %al, -67(%ebp)         
+     movl    %eax, -72(%ebp)        
+     movl    $35631, %eax            #  12:     mul    t5 <- 35631, t4
+     movl    -72(%ebp), %ebx        
+     imull   %ebx                   
+     movl    %eax, -76(%ebp)        
+     movl    -76(%ebp), %eax         #  13:     add    t6 <- t5, 93455
+     movl    $93455, %ebx           
+     addl    %ebx, %eax             
-     movl    $35631, %eax            #  12:     mul    t5 <- 35631, t4
-     movl    -80(%ebp), %ebx        
-     imull   %ebx                   
-     movl    %eax, -84(%ebp)        
-     movl    -84(%ebp), %eax         #  13:     add    t6 <- t5, 93455
-     movl    $93455, %ebx           
-     addl    %ebx, %eax             
-     movl    %eax, -88(%ebp)        
-     movl    %eax, -92(%ebp)        
+     movl    %eax, -84(%ebp)        
-     movl    -88(%ebp), %eax         #  17:     mul    t8 <- t6, t7
+     movl    -80(%ebp), %eax         #  17:     mul    t8 <- t6, t7
-     movl    -92(%ebp), %ebx        
+     movl    -84(%ebp), %ebx        
-     movl    %eax, -96(%ebp)        
+     movl    %eax, -88(%ebp)        
-     movl    %eax, -100(%ebp)       
+     movl    %eax, -92(%ebp)        
-     movl    -100(%ebp), %eax        #  19:     div    t10 <- t9, 34577
+     movl    -92(%ebp), %eax         #  19:     div    t10 <- t9, 34577
-     movl    -96(%ebp), %eax         #  20:     add    t11 <- t8, t10
+     movl    -88(%ebp), %eax         #  20:     add    t11 <- t8, t10
-     movl    $30806, %eax            #  24:     div    t14 <- 30806, 50578
-     movl    $50578, %ebx           
-     cdq                            
-     idivl   %ebx                   
-     movl    %eax, -32(%ebp)        
-     movl    -32(%ebp), %eax         #  25:     div    t15 <- t14, 34577
-     movl    $34577, %ebx           
-     cdq                            
-     idivl   %ebx                   
-     movl    %eax, -36(%ebp)        
-     movl    -20(%ebp), %eax         #  26:     mul    t13 <- t11, t12
+     movl    -20(%ebp), %eax         #  24:     mul    t13 <- t11, t12
-     movl    -28(%ebp), %eax         #  27:     add    t16 <- t13, 34696
+     movl    -28(%ebp), %eax         #  25:     add    t14 <- t13, 34696
+     movl    %eax, -32(%ebp)        
+     movl    $5, %eax                #  26:     param  1 <- 5
+     pushl   %eax                   
+     movl    12(%ebp), %eax          #  27:     param  0 <- v1
+     pushl   %eax                   
+     call    DIM                     #  28:     call   t15 <- DIM
+     addl    $8, %esp               
+     movl    %eax, -36(%ebp)        
+     movl    -32(%ebp), %eax         #  29:     mul    t16 <- t14, t15
+     movl    -36(%ebp), %ebx        
+     imull   %ebx                   
-     movl    $5, %eax                #  28:     param  1 <- 5
-     pushl   %eax                   
-     movl    12(%ebp), %eax          #  29:     param  0 <- v1
-     pushl   %eax                   
-     call    DIM                     #  30:     call   t17 <- DIM
-     addl    $8, %esp               
-     movl    %eax, -44(%ebp)        
-     movl    -40(%ebp), %eax         #  31:     mul    t18 <- t16, t17
-     movl    -44(%ebp), %ebx        
-     imull   %ebx                   
-     movl    %eax, -48(%ebp)        
-     movl    $74317, %eax            #  32:     sub    t19 <- 74317, 58402
+     movl    $74317, %eax            #  30:     sub    t17 <- 74317, 58402
-     movl    %eax, -52(%ebp)        
+     movl    %eax, -44(%ebp)        
-     movl    -48(%ebp), %eax         #  33:     add    t20 <- t18, t19
+     movl    -40(%ebp), %eax         #  31:     add    t18 <- t16, t17
-     movl    -52(%ebp), %ebx        
+     movl    -44(%ebp), %ebx        
-     movl    %eax, -56(%ebp)        
+     movl    %eax, -48(%ebp)        
-     movl    -56(%ebp), %eax         #  34:     mul    t21 <- t20, 1
+     movl    -48(%ebp), %eax         #  32:     mul    t19 <- t18, 1
+     movl    %eax, -52(%ebp)        
+     movl    12(%ebp), %eax          #  33:     param  0 <- v1
+     pushl   %eax                   
+     call    DOFS                    #  34:     call   t20 <- DOFS
+     addl    $4, %esp               
+     movl    %eax, -56(%ebp)        
+     movl    -52(%ebp), %eax         #  35:     add    t21 <- t19, t20
+     movl    -56(%ebp), %ebx        
+     addl    %ebx, %eax             
-     movl    12(%ebp), %eax          #  35:     param  0 <- v1
+     movl    12(%ebp), %eax          #  36:     add    t22 <- v1, t21
+     movl    -60(%ebp), %ebx        
-     pushl   %eax                   
-     call    DOFS                    #  36:     call   t22 <- DOFS
-     addl    $4, %esp               
+     addl    %ebx, %eax             
-     movl    -60(%ebp), %eax         #  37:     add    t23 <- t21, t22
-     movl    -64(%ebp), %ebx        
-     addl    %ebx, %eax             
-     movl    %eax, -68(%ebp)        
-     movl    12(%ebp), %eax          #  38:     add    t24 <- v1, t23
-     movl    -68(%ebp), %ebx        
-     addl    %ebx, %eax             
-     movl    %eax, -72(%ebp)        
-     movzbl  -75(%ebp), %eax         #  39:     assign @t24 <- t3
+     movzbl  -67(%ebp), %eax         #  37:     assign @t22 <- t3
-     movl    -72(%ebp), %edi        
+     movl    -64(%ebp), %edi        
-     call    dummyCHARfunc           #  40:     call   t25 <- dummyCHARfunc
+     call    dummyCHARfunc           #  38:     call   t23 <- dummyCHARfunc
-     movb    %al, -73(%ebp)         
+     movb    %al, -65(%ebp)         
-     movl    $99, %eax               #  41:     if     99 < t25 goto 7
+     movl    $99, %eax               #  39:     if     99 < t23 goto 7
-     movzbl  -73(%ebp), %ebx        
+     movzbl  -65(%ebp), %ebx        
-     jmp     l_f0_8                  #  42:     goto   8
+     jmp     l_f0_8                  #  40:     goto   8
-     movl    $1, %eax                #  44:     assign t26 <- 1
+     movl    $1, %eax                #  42:     assign t24 <- 1
-     movb    %al, -74(%ebp)         
+     movb    %al, -66(%ebp)         
-     jmp     l_f0_9                  #  45:     goto   9
+     jmp     l_f0_9                  #  43:     goto   9
-     movl    $0, %eax                #  47:     assign t26 <- 0
+     movl    $0, %eax                #  45:     assign t24 <- 0
-     movb    %al, -74(%ebp)         
+     movb    %al, -66(%ebp)         
-     movzbl  -74(%ebp), %eax         #  49:     assign v3 <- t26
+     movzbl  -66(%ebp), %eax         #  47:     assign v3 <- t24
-     movb    %al, -105(%ebp)        
+     movb    %al, -97(%ebp)         
-     addl    $96, %esp               # remove locals
+     addl    $88, %esp               # remove locals
+     jmp     l_f1_10                 #   5:     goto   10
+ l_f1_10:
+     jmp     l_f1_8                  #   7:     goto   8
-     movl    $1, %eax                #   5:     assign t4 <- 1
+     movl    $1, %eax                #   8:     assign t4 <- 1
-     jmp     l_f1_9                  #   6:     goto   9
+     jmp     l_f1_9                  #   9:     goto   9
+ l_f1_8:
-     movl    $0, %eax                #   7:     assign t4 <- 0
+     movl    $0, %eax                #  11:     assign t4 <- 0
-     movzbl  -17(%ebp), %eax         #   9:     assign v2 <- t4
+     movzbl  -17(%ebp), %eax         #  13:     assign v2 <- t4
-     movl    $80681, %eax            #  10:     assign v3 <- 80681
+     movl    $80681, %eax            #  14:     assign v3 <- 80681
+     jmp     l_f2_2                  #   2:     goto   2
-     movl    $1, %eax                #   3:     assign t3 <- 1
+     movl    $1, %eax                #   4:     assign t3 <- 1
-     jmp     l_f2_3                  #   4:     goto   3
+     jmp     l_f2_3                  #   5:     goto   3
+ l_f2_2:
-     movl    $0, %eax                #   5:     assign t3 <- 0
+     movl    $0, %eax                #   7:     assign t3 <- 0
-     movzbl  -13(%ebp), %eax         #   7:     return t3
+     movzbl  -13(%ebp), %eax         #   9:     return t3
-     call    dummyCHARfunc           #   8:     call   t4 <- dummyCHARfunc
+     call    dummyCHARfunc           #  10:     call   t4 <- dummyCHARfunc
-     movzbl  -14(%ebp), %eax         #   9:     assign v0 <- t4
+     movzbl  -14(%ebp), %eax         #  11:     assign v0 <- t4
-     movl    $99, %eax               #  10:     assign v0 <- 99
+     movl    $99, %eax               #  12:     assign v0 <- 99
