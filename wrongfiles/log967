+     #    -57(%ebp)   1  [ $t21      <bool> %ebp-57 ]
-     #    -60(%ebp)   4  [ $t21      <int> %ebp-60 ]
+     #    -64(%ebp)   4  [ $t22      <int> %ebp-64 ]
-     #    -61(%ebp)   1  [ $t22      <bool> %ebp-61 ]
-     #    -68(%ebp)   4  [ $t23      <int> %ebp-68 ]
-     #    -69(%ebp)   1  [ $t24      <char> %ebp-69 ]
+     #    -65(%ebp)   1  [ $t23      <char> %ebp-65 ]
-     #    -70(%ebp)   1  [ $t3       <bool> %ebp-70 ]
+     #    -66(%ebp)   1  [ $t3       <bool> %ebp-66 ]
+     #    -72(%ebp)   4  [ $t4       <int> %ebp-72 ]
-     #    -76(%ebp)   4  [ $t4       <int> %ebp-76 ]
+     #    -76(%ebp)   4  [ $t5       <int> %ebp-76 ]
-     #    -80(%ebp)   4  [ $t5       <int> %ebp-80 ]
+     #    -80(%ebp)   4  [ $t6       <int> %ebp-80 ]
-     #    -84(%ebp)   4  [ $t6       <int> %ebp-84 ]
+     #    -84(%ebp)   4  [ $t7       <int> %ebp-84 ]
-     #    -88(%ebp)   4  [ $t7       <int> %ebp-88 ]
+     #    -88(%ebp)   4  [ $t8       <int> %ebp-88 ]
-     #    -92(%ebp)   4  [ $t8       <int> %ebp-92 ]
+     #    -92(%ebp)   4  [ $t9       <int> %ebp-92 ]
-     #    -96(%ebp)   4  [ $t9       <int> %ebp-96 ]
-     #    -97(%ebp)   1  [ $v4       <bool> %ebp-97 ]
+     #    -93(%ebp)   1  [ $v4       <bool> %ebp-93 ]
-     #   -104(%ebp)   4  [ $v5       <int> %ebp-104 ]
+     #   -100(%ebp)   4  [ $v5       <int> %ebp-100 ]
-     #   -105(%ebp)   1  [ $v6       <char> %ebp-105 ]
+     #   -101(%ebp)   1  [ $v6       <char> %ebp-101 ]
-     pushl   %ebp                   
-     movl    %esp, %ebp             
-     pushl   %ebx                    # save callee saved registers
-     pushl   %esi                   
+     pushl   %ebp                   
+     movl    %esp, %ebp             
+     pushl   %ebx                    # save callee saved registers
-     pushl   %edi                   
+     pushl   %esi                   
+     pushl   %edi                   
-     subl    $96, %esp               # make room for locals
+     subl    $92, %esp               # make room for locals
-     movl    $24, %ecx              
+     movl    $23, %ecx              
+     jmp     l_f1_2                  #   0:     goto   2
+     jmp     l_f1_2                  #   1:     goto   2
-     movl    $1, %eax                #   0:     assign t3 <- 1
+     movl    $1, %eax                #   2:     assign t3 <- 1
-     movb    %al, -70(%ebp)         
+     movb    %al, -66(%ebp)         
-     jmp     l_f1_3                  #   1:     goto   3
+     jmp     l_f1_3                  #   3:     goto   3
+ l_f1_2:
-     movl    $0, %eax                #   2:     assign t3 <- 0
+     movl    $0, %eax                #   5:     assign t3 <- 0
-     movb    %al, -70(%ebp)         
+     movb    %al, -66(%ebp)         
-     movl    $2, %eax                #   4:     param  1 <- 2
+     movl    $2, %eax                #   7:     param  1 <- 2
-     movl    12(%ebp), %eax          #   5:     param  0 <- v2
+     movl    12(%ebp), %eax          #   8:     param  0 <- v2
-     call    DIM                     #   6:     call   t4 <- DIM
+     call    DIM                     #   9:     call   t4 <- DIM
+     movl    %eax, -72(%ebp)        
+     movl    $99886, %eax            #  10:     mul    t5 <- 99886, t4
+     movl    -72(%ebp), %ebx        
+     imull   %ebx                   
-     movl    $99886, %eax            #   7:     mul    t5 <- 99886, t4
+     movl    -76(%ebp), %eax         #  11:     add    t6 <- t5, 98921
-     movl    -76(%ebp), %ebx        
+     movl    $98921, %ebx           
-     imull   %ebx                   
+     addl    %ebx, %eax             
+     movl    $3, %eax                #  12:     param  1 <- 3
+     pushl   %eax                   
-     movl    -80(%ebp), %eax         #   8:     add    t6 <- t5, 98921
+     movl    12(%ebp), %eax          #  13:     param  0 <- v2
-     movl    $98921, %ebx           
+     pushl   %eax                   
+     call    DIM                     #  14:     call   t7 <- DIM
-     addl    %ebx, %eax             
+     addl    $8, %esp               
-     movl    $3, %eax                #   9:     param  1 <- 3
+     movl    -80(%ebp), %eax         #  15:     mul    t8 <- t6, t7
+     movl    -84(%ebp), %ebx        
-     pushl   %eax                   
+     imull   %ebx                   
-     movl    12(%ebp), %eax          #  10:     param  0 <- v2
-     pushl   %eax                   
-     call    DIM                     #  11:     call   t7 <- DIM
-     addl    $8, %esp               
-     movl    -84(%ebp), %eax         #  12:     mul    t8 <- t6, t7
+     movl    -88(%ebp), %eax         #  16:     add    t9 <- t8, 54780
-     movl    -88(%ebp), %ebx        
+     movl    $54780, %ebx           
-     imull   %ebx                   
+     addl    %ebx, %eax             
-     movl    -92(%ebp), %eax         #  13:     add    t9 <- t8, 54780
-     movl    $54780, %ebx           
-     addl    %ebx, %eax             
-     movl    %eax, -96(%ebp)        
-     movl    $4, %eax                #  14:     param  1 <- 4
+     movl    $4, %eax                #  17:     param  1 <- 4
-     movl    12(%ebp), %eax          #  15:     param  0 <- v2
+     movl    12(%ebp), %eax          #  18:     param  0 <- v2
-     call    DIM                     #  16:     call   t10 <- DIM
+     call    DIM                     #  19:     call   t10 <- DIM
-     movl    -96(%ebp), %eax         #  17:     mul    t11 <- t9, t10
+     movl    -92(%ebp), %eax         #  20:     mul    t11 <- t9, t10
-     movl    $51351, %eax            #  18:     mul    t12 <- 51351, 58723
+     movl    $51351, %eax            #  21:     mul    t12 <- 51351, 58723
-     movl    -20(%ebp), %eax         #  19:     add    t13 <- t11, t12
+     movl    -20(%ebp), %eax         #  22:     add    t13 <- t11, t12
-     movl    $5, %eax                #  20:     param  1 <- 5
+     movl    $5, %eax                #  23:     param  1 <- 5
-     movl    12(%ebp), %eax          #  21:     param  0 <- v2
+     movl    12(%ebp), %eax          #  24:     param  0 <- v2
-     call    DIM                     #  22:     call   t14 <- DIM
+     call    DIM                     #  25:     call   t14 <- DIM
-     movl    $51351, %eax            #  23:     mul    t16 <- 51351, 58723
+     movl    -28(%ebp), %eax         #  26:     mul    t15 <- t13, t14
+     movl    -32(%ebp), %ebx        
+     imull   %ebx                   
+     movl    %eax, -36(%ebp)        
+     movl    -36(%ebp), %eax         #  27:     add    t16 <- t15, 34812
-     movl    $58723, %ebx           
+     movl    $34812, %ebx           
-     imull   %ebx                   
+     addl    %ebx, %eax             
-     movl    -28(%ebp), %eax         #  24:     mul    t15 <- t13, t14
+     movl    -40(%ebp), %eax         #  28:     mul    t17 <- t16, 1
-     movl    -32(%ebp), %ebx        
-     imull   %ebx                   
-     movl    %eax, -36(%ebp)        
-     movl    -36(%ebp), %eax         #  25:     add    t17 <- t15, 34812
-     movl    $34812, %ebx           
+     movl    $1, %ebx               
-     addl    %ebx, %eax             
+     imull   %ebx                   
-     movl    -44(%ebp), %eax         #  26:     mul    t18 <- t17, 1
+     movl    12(%ebp), %eax          #  29:     param  0 <- v2
-     movl    $1, %ebx               
-     imull   %ebx                   
+     pushl   %eax                   
+     call    DOFS                    #  30:     call   t18 <- DOFS
+     addl    $4, %esp               
-     movl    12(%ebp), %eax          #  27:     param  0 <- v2
+     movl    -44(%ebp), %eax         #  31:     add    t19 <- t17, t18
+     movl    -48(%ebp), %ebx        
-     pushl   %eax                   
-     call    DOFS                    #  28:     call   t19 <- DOFS
-     addl    $4, %esp               
+     addl    %ebx, %eax             
-     movl    -48(%ebp), %eax         #  29:     add    t20 <- t18, t19
+     movl    12(%ebp), %eax          #  32:     add    t20 <- v2, t19
-     movl    12(%ebp), %eax          #  30:     add    t21 <- v2, t20
-     movl    -56(%ebp), %ebx        
-     addl    %ebx, %eax             
-     movl    %eax, -60(%ebp)        
-     movzbl  -70(%ebp), %eax         #  31:     assign @t21 <- t3
+     movzbl  -66(%ebp), %eax         #  33:     assign @t20 <- t3
-     movl    -60(%ebp), %edi        
+     movl    -56(%ebp), %edi        
-     movl    $70614, %eax            #  32:     assign v5 <- 70614
+     movl    $70614, %eax            #  34:     assign v5 <- 70614
-     movl    %eax, -104(%ebp)       
+     movl    %eax, -100(%ebp)       
-     movl    $99, %eax               #  33:     return 99
+     movl    $99, %eax               #  35:     return 99
-     movl    $98, %eax               #  34:     if     98 >= 97 goto 13
+     movl    $98, %eax               #  36:     if     98 >= 97 goto 13
-     jmp     l_f1_14                 #  35:     goto   14
+     jmp     l_f1_14                 #  37:     goto   14
-     movl    $1, %eax                #  37:     assign t22 <- 1
+     movl    $1, %eax                #  39:     assign t21 <- 1
-     movb    %al, -61(%ebp)         
+     movb    %al, -57(%ebp)         
-     jmp     l_f1_15                 #  38:     goto   15
+     jmp     l_f1_15                 #  40:     goto   15
-     movl    $0, %eax                #  40:     assign t22 <- 0
+     movl    $0, %eax                #  42:     assign t21 <- 0
-     movb    %al, -61(%ebp)         
+     movb    %al, -57(%ebp)         
-     movzbl  -61(%ebp), %eax         #  42:     assign v4 <- t22
+     movzbl  -57(%ebp), %eax         #  44:     assign v4 <- t21
-     movb    %al, -97(%ebp)         
+     movb    %al, -93(%ebp)         
-     jmp     l_f1_17                 #  44:     goto   17
+     jmp     l_f1_17                 #  46:     goto   17
-     jmp     l_f1_18_while_cond      #  45:     goto   18_while_cond
+     jmp     l_f1_18_while_cond      #  47:     goto   18_while_cond
-     movl    $98, %eax               #  47:     return 98
+     movl    $98, %eax               #  49:     return 98
-     jmp     l_f1_21                 #  48:     goto   21
+     jmp     l_f1_21                 #  50:     goto   21
-     movl    $26054, %eax            #  50:     assign v5 <- 26054
+     movl    $26054, %eax            #  52:     assign v5 <- 26054
-     movl    %eax, -104(%ebp)       
+     movl    %eax, -100(%ebp)       
-     call    ReadInt                 #  51:     call   t23 <- ReadInt
+     call    ReadInt                 #  53:     call   t22 <- ReadInt
-     movl    %eax, -68(%ebp)        
+     movl    %eax, -64(%ebp)        
-     movl    $100, %eax              #  52:     assign v6 <- 100
+     movl    $100, %eax              #  54:     assign v6 <- 100
-     movb    %al, -105(%ebp)        
+     movb    %al, -101(%ebp)        
-     call    dummyCHARfunc           #  53:     call   t24 <- dummyCHARfunc
+     call    dummyCHARfunc           #  55:     call   t23 <- dummyCHARfunc
-     movb    %al, -69(%ebp)         
+     movb    %al, -65(%ebp)         
-     movl    $97, %eax               #  54:     if     97 < 97 goto 29_if_true
+     movl    $97, %eax               #  56:     if     97 < 97 goto 29_if_true
-     jmp     l_f1_30_if_false        #  55:     goto   30_if_false
+     jmp     l_f1_30_if_false        #  57:     goto   30_if_false
-     jmp     l_f1_28                 #  57:     goto   28
+     jmp     l_f1_28                 #  59:     goto   28
-     jmp     l_f1_8                  #  60:     goto   8
+     jmp     l_f1_8                  #  62:     goto   8
-     addl    $96, %esp               # remove locals
+     addl    $92, %esp               # remove locals
