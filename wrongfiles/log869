+     jmp     l_f0_5                  #   0:     goto   5
-     movl    $1, %eax                #   0:     assign t0 <- 1
+     movl    $1, %eax                #   1:     assign t0 <- 1
-     jmp     l_f0_5                  #   1:     goto   5
+     jmp     l_f0_6                  #   2:     goto   6
+ l_f0_5:
-     movl    $0, %eax                #   2:     assign t0 <- 0
+     movl    $0, %eax                #   4:     assign t0 <- 0
- l_f0_5:
+ l_f0_6:
-     jmp     l_f0_7                  #   4:     goto   7
+     jmp     l_f0_8                  #   6:     goto   8
+     jmp     l_f0_9                  #   7:     goto   9
- l_f0_7:
+ l_f0_8:
-     movl    $1, %eax                #   6:     assign t1 <- 1
+     movl    $1, %eax                #   9:     assign t1 <- 1
-     jmp     l_f0_9                  #   7:     goto   9
+     jmp     l_f0_10                 #  10:     goto   10
+ l_f0_9:
-     movl    $0, %eax                #   8:     assign t1 <- 0
+     movl    $0, %eax                #  12:     assign t1 <- 0
- l_f0_9:
+ l_f0_10:
-     movzbl  -13(%ebp), %eax         #  10:     if     t0 # t1 goto 1_if_true
+     movzbl  -13(%ebp), %eax         #  14:     if     t0 # t1 goto 1_if_true
-     jmp     l_f0_2_if_false         #  11:     goto   2_if_false
+     jmp     l_f0_2_if_false         #  15:     goto   2_if_false
-     jmp     l_f0_0                  #  13:     goto   0
+     jmp     l_f0_0                  #  17:     goto   0
-     call    ReadInt                 #  16:     call   t2 <- ReadInt
+     call    ReadInt                 #  20:     call   t2 <- ReadInt
-     movl    $98019, %eax            #  17:     mul    t3 <- 98019, 47498
+     movl    $98019, %eax            #  21:     mul    t3 <- 98019, 47498
-     movl    -20(%ebp), %eax         #  18:     sub    t4 <- t2, t3
+     movl    -20(%ebp), %eax         #  22:     sub    t4 <- t2, t3
-     movl    -28(%ebp), %eax         #  19:     param  0 <- t4
+     movl    -28(%ebp), %eax         #  23:     param  0 <- t4
-     call    WriteInt                #  20:     call   WriteInt
+     call    WriteInt                #  24:     call   WriteInt
-     jmp     l_f0_15                 #  21:     goto   15
+     jmp     l_f0_15                 #  25:     goto   15
-     movl    $1, %eax                #  23:     assign t5 <- 1
+     movl    $1, %eax                #  27:     assign t5 <- 1
-     jmp     l_f0_17                 #  24:     goto   17
+     jmp     l_f0_17                 #  28:     goto   17
-     movl    $0, %eax                #  25:     assign t5 <- 0
+     movl    $0, %eax                #  29:     assign t5 <- 0
-     movzbl  -29(%ebp), %eax         #  27:     return t5
+     movzbl  -29(%ebp), %eax         #  31:     return t5
+     #    -49(%ebp)   1  [ $t17      <bool> %ebp-49 ]
-     #    -52(%ebp)   4  [ $t17      <int> %ebp-52 ]
+     #    -56(%ebp)   4  [ $t2       <int> %ebp-56 ]
-     #    -53(%ebp)   1  [ $t18      <bool> %ebp-53 ]
-     #    -60(%ebp)   4  [ $t2       <int> %ebp-60 ]
+     #    -60(%ebp)   4  [ $t3       <int> %ebp-60 ]
-     #    -64(%ebp)   4  [ $t3       <int> %ebp-64 ]
+     #    -64(%ebp)   4  [ $t4       <int> %ebp-64 ]
-     #    -68(%ebp)   4  [ $t4       <int> %ebp-68 ]
+     #    -68(%ebp)   4  [ $t5       <int> %ebp-68 ]
-     #    -72(%ebp)   4  [ $t5       <int> %ebp-72 ]
+     #    -72(%ebp)   4  [ $t6       <int> %ebp-72 ]
-     #    -76(%ebp)   4  [ $t6       <int> %ebp-76 ]
+     #    -76(%ebp)   4  [ $t7       <int> %ebp-76 ]
-     #    -80(%ebp)   4  [ $t7       <int> %ebp-80 ]
+     #    -80(%ebp)   4  [ $t8       <int> %ebp-80 ]
-     #    -84(%ebp)   4  [ $t8       <int> %ebp-84 ]
+     #    -84(%ebp)   4  [ $t9       <int> %ebp-84 ]
-     #    -88(%ebp)   4  [ $t9       <int> %ebp-88 ]
-     #    -89(%ebp)   1  [ $v3       <char> %ebp-89 ]
+     #    -85(%ebp)   1  [ $v3       <char> %ebp-85 ]
-     pushl   %ebp                   
-     movl    %esp, %ebp             
-     pushl   %ebx                    # save callee saved registers
-     pushl   %esi                   
+     pushl   %ebp                   
+     movl    %esp, %ebp             
+     pushl   %ebx                    # save callee saved registers
-     pushl   %edi                   
+     pushl   %esi                   
+     pushl   %edi                   
-     subl    $80, %esp               # make room for locals
+     subl    $76, %esp               # make room for locals
-     movl    $20, %ecx              
+     movl    $19, %ecx              
-     movb    %al, -89(%ebp)         
+     movb    %al, -85(%ebp)         
-     movl    $57408, %eax            #   7:     sub    t3 <- 57408, 85813
+     movl    -16(%ebp), %eax         #   7:     mul    t2 <- t0, t1
+     movl    -20(%ebp), %ebx        
+     imull   %ebx                   
+     movl    %eax, -56(%ebp)        
+     movl    -56(%ebp), %eax         #   8:     add    t3 <- t2, 46731
-     movl    $85813, %ebx           
+     movl    $46731, %ebx           
-     subl    %ebx, %eax             
+     addl    %ebx, %eax             
+     movl    %eax, -60(%ebp)        
+     movl    $3, %eax                #   9:     param  1 <- 3
+     pushl   %eax                   
+     movl    16(%ebp), %eax          #  10:     param  0 <- v2
+     pushl   %eax                   
+     call    DIM                     #  11:     call   t4 <- DIM
+     addl    $8, %esp               
-     movl    -16(%ebp), %eax         #   8:     mul    t2 <- t0, t1
+     movl    -60(%ebp), %eax         #  12:     mul    t5 <- t3, t4
-     movl    -20(%ebp), %ebx        
+     movl    -64(%ebp), %ebx        
-     movl    %eax, -60(%ebp)        
-     movl    -60(%ebp), %eax         #   9:     add    t4 <- t2, 46731
-     movl    $46731, %ebx           
-     addl    %ebx, %eax             
+     movl    -68(%ebp), %eax         #  13:     add    t6 <- t5, 40086
+     movl    $40086, %ebx           
+     addl    %ebx, %eax             
+     movl    %eax, -72(%ebp)        
-     movl    $3, %eax                #  10:     param  1 <- 3
+     movl    $4, %eax                #  14:     param  1 <- 4
-     movl    16(%ebp), %eax          #  11:     param  0 <- v2
+     movl    16(%ebp), %eax          #  15:     param  0 <- v2
-     call    DIM                     #  12:     call   t5 <- DIM
+     call    DIM                     #  16:     call   t7 <- DIM
-     movl    %eax, -72(%ebp)        
-     movl    -68(%ebp), %eax         #  13:     mul    t6 <- t4, t5
-     movl    -72(%ebp), %ebx        
-     imull   %ebx                   
-     movl    -76(%ebp), %eax         #  14:     add    t7 <- t6, 40086
+     movl    -72(%ebp), %eax         #  17:     mul    t8 <- t6, t7
-     movl    $40086, %ebx           
+     movl    -76(%ebp), %ebx        
-     addl    %ebx, %eax             
+     imull   %ebx                   
+     movl    -80(%ebp), %eax         #  18:     add    t9 <- t8, 66015
+     movl    $66015, %ebx           
+     addl    %ebx, %eax             
+     movl    %eax, -84(%ebp)        
-     movl    $4, %eax                #  15:     param  1 <- 4
+     movl    $5, %eax                #  19:     param  1 <- 5
-     movl    16(%ebp), %eax          #  16:     param  0 <- v2
+     movl    16(%ebp), %eax          #  20:     param  0 <- v2
-     call    DIM                     #  17:     call   t8 <- DIM
+     call    DIM                     #  21:     call   t10 <- DIM
-     movl    %eax, -84(%ebp)        
-     movl    -80(%ebp), %eax         #  18:     mul    t9 <- t7, t8
-     movl    -84(%ebp), %ebx        
-     imull   %ebx                   
-     movl    %eax, -88(%ebp)        
-     movl    -88(%ebp), %eax         #  19:     add    t10 <- t9, 66015
-     movl    $66015, %ebx           
-     addl    %ebx, %eax             
-     movl    $5, %eax                #  20:     param  1 <- 5
+     movl    -84(%ebp), %eax         #  22:     mul    t11 <- t9, t10
+     movl    -24(%ebp), %ebx        
-     pushl   %eax                   
+     imull   %ebx                   
-     movl    16(%ebp), %eax          #  21:     param  0 <- v2
-     pushl   %eax                   
-     call    DIM                     #  22:     call   t11 <- DIM
-     addl    $8, %esp               
-     movl    -24(%ebp), %eax         #  23:     mul    t12 <- t10, t11
+     movl    -28(%ebp), %eax         #  23:     add    t12 <- t11, 26317
-     movl    -28(%ebp), %ebx        
+     movl    $26317, %ebx           
-     imull   %ebx                   
+     addl    %ebx, %eax             
-     movl    -32(%ebp), %eax         #  24:     add    t13 <- t12, 26317
+     movl    -32(%ebp), %eax         #  24:     mul    t13 <- t12, 1
-     movl    $26317, %ebx           
+     movl    $1, %ebx               
-     addl    %ebx, %eax             
+     imull   %ebx                   
-     movl    -36(%ebp), %eax         #  25:     mul    t14 <- t13, 1
+     movl    16(%ebp), %eax          #  25:     param  0 <- v2
-     movl    $1, %ebx               
-     imull   %ebx                   
+     pushl   %eax                   
+     call    DOFS                    #  26:     call   t14 <- DOFS
+     addl    $4, %esp               
-     movl    16(%ebp), %eax          #  26:     param  0 <- v2
+     movl    -36(%ebp), %eax         #  27:     add    t15 <- t13, t14
+     movl    -40(%ebp), %ebx        
-     pushl   %eax                   
-     call    DOFS                    #  27:     call   t15 <- DOFS
-     addl    $4, %esp               
+     addl    %ebx, %eax             
-     movl    -40(%ebp), %eax         #  28:     add    t16 <- t14, t15
+     movl    16(%ebp), %eax          #  28:     add    t16 <- v2, t15
-     movl    16(%ebp), %eax          #  29:     add    t17 <- v2, t16
-     movl    -48(%ebp), %ebx        
-     addl    %ebx, %eax             
-     movl    %eax, -52(%ebp)        
-     movl    $1, %eax                #  30:     assign @t17 <- 1
+     movl    $1, %eax                #  29:     assign @t16 <- 1
-     movl    -52(%ebp), %edi        
+     movl    -48(%ebp), %edi        
-     movl    $97, %eax               #  31:     if     97 > 98 goto 7_if_true
+     movl    $97, %eax               #  30:     if     97 > 98 goto 7_if_true
-     jmp     l_f1_8_if_false         #  32:     goto   8_if_false
+     jmp     l_f1_8_if_false         #  31:     goto   8_if_false
-     call    dummyBOOLfunc           #  34:     call   t18 <- dummyBOOLfunc
+     call    dummyBOOLfunc           #  33:     call   t17 <- dummyBOOLfunc
-     movb    %al, -53(%ebp)         
+     movb    %al, -49(%ebp)         
-     jmp     l_f1_6                  #  35:     goto   6
+     jmp     l_f1_6                  #  34:     goto   6
-     addl    $80, %esp               # remove locals
+     addl    $76, %esp               # remove locals
