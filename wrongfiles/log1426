+     jmp     l_f0_0                  #   4:     goto   0
-     jmp     l_f0_1_while_cond       #   5:     goto   1_while_cond
+     jmp     l_f0_1_while_cond       #   6:     goto   1_while_cond
+ l_f0_0:
-     leal    _str_1, %eax            #   6:     &()    t4 <- _str_1
+     leal    _str_1, %eax            #   8:     &()    t4 <- _str_1
-     movl    -20(%ebp), %eax         #   7:     param  0 <- t4
+     movl    -20(%ebp), %eax         #   9:     param  0 <- t4
-     call    WriteStr                #   8:     call   WriteStr
+     call    WriteStr                #  10:     call   WriteStr
-     movl    $5237, %eax             #   9:     mul    t5 <- 5237, 37959
+     movl    $5237, %eax             #  11:     mul    t5 <- 5237, 37959
-     movl    -24(%ebp), %eax         #  10:     div    t6 <- t5, 80177
+     movl    -24(%ebp), %eax         #  12:     div    t6 <- t5, 80177
-     movl    -28(%ebp), %eax         #  11:     div    t7 <- t6, 89716
+     movl    -28(%ebp), %eax         #  13:     div    t7 <- t6, 89716
-     movl    -32(%ebp), %eax         #  12:     mul    t8 <- t7, 51755
+     movl    -32(%ebp), %eax         #  14:     mul    t8 <- t7, 51755
-     movl    -36(%ebp), %eax         #  13:     add    t9 <- t8, 55034
+     movl    -36(%ebp), %eax         #  15:     add    t9 <- t8, 55034
-     movl    -40(%ebp), %eax         #  14:     assign v2 <- t9
+     movl    -40(%ebp), %eax         #  16:     assign v2 <- t9
+     jmp     l_f1_2_if_false         #   0:     goto   2_if_false
+     jmp     l_f1_2_if_false         #   1:     goto   2_if_false
-     movl    $36017, %eax            #   0:     param  0 <- 36017
+     movl    $36017, %eax            #   2:     param  0 <- 36017
-     call    WriteInt                #   1:     call   WriteInt
+     call    WriteInt                #   3:     call   WriteInt
-     call    dummyBOOLfunc           #   2:     call   t3 <- dummyBOOLfunc
+     call    dummyBOOLfunc           #   4:     call   t3 <- dummyBOOLfunc
-     movl    $2, %eax                #   3:     param  1 <- 2
+     movl    $2, %eax                #   5:     param  1 <- 2
-     movl    16(%ebp), %eax          #   4:     param  0 <- v2
+     movl    16(%ebp), %eax          #   6:     param  0 <- v2
-     call    DIM                     #   5:     call   t4 <- DIM
+     call    DIM                     #   7:     call   t4 <- DIM
-     movl    $64972, %eax            #   6:     mul    t5 <- 64972, t4
+     movl    $64972, %eax            #   8:     mul    t5 <- 64972, t4
-     movl    -72(%ebp), %eax         #   7:     add    t6 <- t5, 14302
+     movl    -72(%ebp), %eax         #   9:     add    t6 <- t5, 14302
-     movl    $3, %eax                #   8:     param  1 <- 3
+     movl    $3, %eax                #  10:     param  1 <- 3
-     movl    16(%ebp), %eax          #   9:     param  0 <- v2
+     movl    16(%ebp), %eax          #  11:     param  0 <- v2
-     call    DIM                     #  10:     call   t7 <- DIM
+     call    DIM                     #  12:     call   t7 <- DIM
-     movl    -76(%ebp), %eax         #  11:     mul    t8 <- t6, t7
+     movl    -76(%ebp), %eax         #  13:     mul    t8 <- t6, t7
-     movl    -84(%ebp), %eax         #  12:     add    t9 <- t8, 7091
+     movl    -84(%ebp), %eax         #  14:     add    t9 <- t8, 7091
-     movl    $4, %eax                #  13:     param  1 <- 4
+     movl    $4, %eax                #  15:     param  1 <- 4
-     movl    16(%ebp), %eax          #  14:     param  0 <- v2
+     movl    16(%ebp), %eax          #  16:     param  0 <- v2
-     call    DIM                     #  15:     call   t10 <- DIM
+     call    DIM                     #  17:     call   t10 <- DIM
-     movl    -88(%ebp), %eax         #  16:     mul    t11 <- t9, t10
+     movl    -88(%ebp), %eax         #  18:     mul    t11 <- t9, t10
-     movl    -20(%ebp), %eax         #  17:     add    t12 <- t11, 27983
+     movl    -20(%ebp), %eax         #  19:     add    t12 <- t11, 27983
-     movl    $5, %eax                #  18:     param  1 <- 5
+     movl    $5, %eax                #  20:     param  1 <- 5
-     movl    16(%ebp), %eax          #  19:     param  0 <- v2
+     movl    16(%ebp), %eax          #  21:     param  0 <- v2
-     call    DIM                     #  20:     call   t13 <- DIM
+     call    DIM                     #  22:     call   t13 <- DIM
-     movl    -24(%ebp), %eax         #  21:     mul    t14 <- t12, t13
+     movl    -24(%ebp), %eax         #  23:     mul    t14 <- t12, t13
-     movl    -32(%ebp), %eax         #  22:     add    t15 <- t14, 6256
+     movl    -32(%ebp), %eax         #  24:     add    t15 <- t14, 6256
-     movl    -36(%ebp), %eax         #  23:     mul    t16 <- t15, 1
+     movl    -36(%ebp), %eax         #  25:     mul    t16 <- t15, 1
-     movl    16(%ebp), %eax          #  24:     param  0 <- v2
+     movl    16(%ebp), %eax          #  26:     param  0 <- v2
-     call    DOFS                    #  25:     call   t17 <- DOFS
+     call    DOFS                    #  27:     call   t17 <- DOFS
-     movl    -40(%ebp), %eax         #  26:     add    t18 <- t16, t17
+     movl    -40(%ebp), %eax         #  28:     add    t18 <- t16, t17
-     movl    16(%ebp), %eax          #  27:     add    t19 <- v2, t18
+     movl    16(%ebp), %eax          #  29:     add    t19 <- v2, t18
-     movl    $0, %eax                #  28:     assign @t19 <- 0
+     movl    $0, %eax                #  30:     assign @t19 <- 0
-     jmp     l_f1_10_if_false        #  29:     goto   10_if_false
+     jmp     l_f1_10_if_false        #  31:     goto   10_if_false
-     jmp     l_f1_8                  #  30:     goto   8
+     jmp     l_f1_8                  #  32:     goto   8
-     jmp     l_f1_0                  #  33:     goto   0
+     jmp     l_f1_0                  #  35:     goto   0
+ l_f1_2_if_false:
-     jmp     l_f1_13_while_body      #  36:     goto   13_while_body
+     jmp     l_f1_13_while_body      #  39:     goto   13_while_body
-     call    dummyCHARfunc           #  38:     call   t20 <- dummyCHARfunc
+     call    dummyCHARfunc           #  41:     call   t20 <- dummyCHARfunc
-     jmp     l_f1_12_while_cond      #  39:     goto   12_while_cond
+     jmp     l_f1_12_while_cond      #  42:     goto   12_while_cond
-     call    dummyINTfunc            #  40:     call   t21 <- dummyINTfunc
+     call    dummyINTfunc            #  43:     call   t21 <- dummyINTfunc
+     jmp     l_f2_3                  #   2:     goto   3
-     movl    $1, %eax                #   2:     assign t4 <- 1
+     movl    $1, %eax                #   3:     assign t4 <- 1
-     jmp     l_f2_4                  #   3:     goto   4
+     jmp     l_f2_4                  #   4:     goto   4
+ l_f2_3:
-     movl    $0, %eax                #   4:     assign t4 <- 0
+     movl    $0, %eax                #   6:     assign t4 <- 0
-     movzbl  -14(%ebp), %eax         #   6:     assign v0 <- t4
+     movzbl  -14(%ebp), %eax         #   8:     assign v0 <- t4
-     movl    $89727, %eax            #   7:     add    t5 <- 89727, 16641
+     movl    $89727, %eax            #   9:     add    t5 <- 89727, 16641
-     movl    -20(%ebp), %eax         #   8:     add    t6 <- t5, 32773
+     movl    -20(%ebp), %eax         #  10:     add    t6 <- t5, 32773
-     movl    -24(%ebp), %eax         #   9:     add    t7 <- t6, 24541
+     movl    -24(%ebp), %eax         #  11:     add    t7 <- t6, 24541
-     movl    -28(%ebp), %eax         #  10:     return t7
+     movl    -28(%ebp), %eax         #  12:     return t7
