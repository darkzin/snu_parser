+     jmp     l_f0_0                  #   3:     goto   0
-     jmp     l_f0_1_while_cond       #   4:     goto   1_while_cond
+     jmp     l_f0_1_while_cond       #   5:     goto   1_while_cond
+ l_f0_0:
+     jmp     l_f0_10                 #   9:     goto   10
-     jmp     l_f0_9_while_body       #   7:     goto   9_while_body
+     jmp     l_f0_9_while_body       #  10:     goto   9_while_body
+ l_f0_10:
-     jmp     l_f0_8_while_cond       #   9:     goto   8_while_cond
+     jmp     l_f0_8_while_cond       #  13:     goto   8_while_cond
-     #    -76(%ebp)   4  [ $t25      <int> %ebp-76 ]
+     #    -76(%ebp)   4  [ $t4       <int> %ebp-76 ]
+     #    -77(%ebp)   1  [ $t5       <bool> %ebp-77 ]
-     #    -80(%ebp)   4  [ $t4       <int> %ebp-80 ]
+     #    -84(%ebp)   4  [ $t6       <int> %ebp-84 ]
-     #    -81(%ebp)   1  [ $t5       <bool> %ebp-81 ]
-     #    -88(%ebp)   4  [ $t6       <int> %ebp-88 ]
+     #    -88(%ebp)   4  [ $t7       <int> %ebp-88 ]
-     #    -92(%ebp)   4  [ $t7       <int> %ebp-92 ]
+     #    -92(%ebp)   4  [ $t8       <int> %ebp-92 ]
-     #    -96(%ebp)   4  [ $t8       <int> %ebp-96 ]
+     #    -96(%ebp)   4  [ $t9       <int> %ebp-96 ]
-     #   -100(%ebp)   4  [ $t9       <int> %ebp-100 ]
-     subl    $88, %esp               # make room for locals
+     subl    $84, %esp               # make room for locals
-     movl    $22, %ecx              
+     movl    $21, %ecx              
-     movl    %eax, -80(%ebp)        
+     movl    %eax, -76(%ebp)        
-     movl    -80(%ebp), %ebx        
+     movl    -76(%ebp), %ebx        
-     movb    %al, -81(%ebp)         
+     movb    %al, -77(%ebp)         
+     movl    %eax, -84(%ebp)        
+     movl    -84(%ebp), %eax         #  19:     mul    t7 <- t6, 39965
+     movl    $39965, %ebx           
+     imull   %ebx                   
+     call    ReadInt                 #  20:     call   t8 <- ReadInt
-     movl    -88(%ebp), %eax         #  19:     mul    t7 <- t6, 39965
-     movl    $39965, %ebx           
-     imull   %ebx                   
-     call    ReadInt                 #  20:     call   t8 <- ReadInt
-     movl    %eax, -96(%ebp)        
+     movl    %eax, -96(%ebp)        
+     movl    -92(%ebp), %eax         #  24:     mul    t10 <- t8, t9
+     movl    -96(%ebp), %ebx        
+     imull   %ebx                   
-     movl    %eax, -100(%ebp)       
+     movl    %eax, -16(%ebp)        
-     call    ReadInt                 #  24:     call   t11 <- ReadInt
+     movl    -16(%ebp), %eax         #  25:     add    t11 <- t10, 31595
+     movl    $31595, %ebx           
+     addl    %ebx, %eax             
+     movl    $3, %eax                #  26:     param  1 <- 3
-     movl    -96(%ebp), %eax         #  25:     mul    t10 <- t8, t9
-     movl    -100(%ebp), %ebx       
-     imull   %ebx                   
+     pushl   %eax                   
-     movl    %eax, -16(%ebp)        
-     movl    -16(%ebp), %eax         #  26:     add    t12 <- t10, 31595
+     movl    12(%ebp), %eax          #  27:     param  0 <- v2
-     movl    $31595, %ebx           
+     pushl   %eax                   
+     call    DIM                     #  28:     call   t12 <- DIM
-     addl    %ebx, %eax             
+     addl    $8, %esp               
+     movl    -20(%ebp), %eax         #  29:     mul    t13 <- t11, t12
+     movl    -24(%ebp), %ebx        
+     imull   %ebx                   
+     movl    %eax, -28(%ebp)        
+     movl    -28(%ebp), %eax         #  30:     add    t14 <- t13, 32783
+     movl    $32783, %ebx           
+     addl    %ebx, %eax             
+     movl    %eax, -32(%ebp)        
-     movl    $3, %eax                #  27:     param  1 <- 3
+     movl    $4, %eax                #  31:     param  1 <- 4
-     movl    12(%ebp), %eax          #  28:     param  0 <- v2
+     movl    12(%ebp), %eax          #  32:     param  0 <- v2
-     call    DIM                     #  29:     call   t13 <- DIM
+     call    DIM                     #  33:     call   t15 <- DIM
-     movl    %eax, -28(%ebp)        
-     movl    -24(%ebp), %eax         #  30:     mul    t14 <- t12, t13
-     movl    -28(%ebp), %ebx        
-     imull   %ebx                   
-     movl    %eax, -32(%ebp)        
-     movl    -32(%ebp), %eax         #  31:     add    t15 <- t14, 32783
-     movl    $32783, %ebx           
-     addl    %ebx, %eax             
+     movl    -32(%ebp), %eax         #  34:     mul    t16 <- t14, t15
+     movl    -36(%ebp), %ebx        
+     imull   %ebx                   
+     movl    %eax, -40(%ebp)        
+     movl    -40(%ebp), %eax         #  35:     add    t17 <- t16, 7211
+     movl    $7211, %ebx            
+     addl    %ebx, %eax             
+     movl    %eax, -44(%ebp)        
-     movl    $4, %eax                #  32:     param  1 <- 4
+     movl    $5, %eax                #  36:     param  1 <- 5
-     movl    12(%ebp), %eax          #  33:     param  0 <- v2
+     movl    12(%ebp), %eax          #  37:     param  0 <- v2
-     call    DIM                     #  34:     call   t16 <- DIM
+     call    DIM                     #  38:     call   t18 <- DIM
-     movl    %eax, -40(%ebp)        
-     movl    -36(%ebp), %eax         #  35:     mul    t17 <- t15, t16
-     movl    -40(%ebp), %ebx        
-     imull   %ebx                   
-     movl    %eax, -44(%ebp)        
-     movl    -44(%ebp), %eax         #  36:     add    t18 <- t17, 7211
-     movl    $7211, %ebx            
-     addl    %ebx, %eax             
-     movl    $5, %eax                #  37:     param  1 <- 5
+     movl    -44(%ebp), %eax         #  39:     mul    t19 <- t17, t18
+     movl    -48(%ebp), %ebx        
-     pushl   %eax                   
+     imull   %ebx                   
-     movl    12(%ebp), %eax          #  38:     param  0 <- v2
-     pushl   %eax                   
-     call    DIM                     #  39:     call   t19 <- DIM
-     addl    $8, %esp               
-     movl    -48(%ebp), %eax         #  40:     mul    t20 <- t18, t19
+     movl    -52(%ebp), %eax         #  40:     add    t20 <- t19, 19685
-     movl    -52(%ebp), %ebx        
+     movl    $19685, %ebx           
-     imull   %ebx                   
+     addl    %ebx, %eax             
-     movl    -56(%ebp), %eax         #  41:     add    t21 <- t20, 19685
+     movl    -56(%ebp), %eax         #  41:     mul    t21 <- t20, 4
-     movl    $19685, %ebx           
+     movl    $4, %ebx               
-     addl    %ebx, %eax             
+     imull   %ebx                   
-     movl    -60(%ebp), %eax         #  42:     mul    t22 <- t21, 4
+     movl    12(%ebp), %eax          #  42:     param  0 <- v2
-     movl    $4, %ebx               
-     imull   %ebx                   
+     pushl   %eax                   
+     call    DOFS                    #  43:     call   t22 <- DOFS
+     addl    $4, %esp               
-     movl    12(%ebp), %eax          #  43:     param  0 <- v2
+     movl    -60(%ebp), %eax         #  44:     add    t23 <- t21, t22
+     movl    -64(%ebp), %ebx        
-     pushl   %eax                   
-     call    DOFS                    #  44:     call   t23 <- DOFS
-     addl    $4, %esp               
+     addl    %ebx, %eax             
-     movl    -64(%ebp), %eax         #  45:     add    t24 <- t22, t23
+     movl    12(%ebp), %eax          #  45:     add    t24 <- v2, t23
-     movl    12(%ebp), %eax          #  46:     add    t25 <- v2, t24
-     movl    -72(%ebp), %ebx        
-     addl    %ebx, %eax             
-     movl    %eax, -76(%ebp)        
-     movl    -92(%ebp), %eax         #  47:     assign @t25 <- t7
+     movl    -88(%ebp), %eax         #  46:     assign @t24 <- t7
-     movl    -76(%ebp), %edi        
+     movl    -72(%ebp), %edi        
-     movl    $98, %eax               #  49:     if     98 = 99 goto 16_while_body
+     movl    $98, %eax               #  48:     if     98 = 99 goto 16_while_body
-     jmp     l_f1_14                 #  50:     goto   14
+     jmp     l_f1_14                 #  49:     goto   14
-     movl    $100, %eax              #  52:     if     100 >= 97 goto 19_if_true
+     movl    $100, %eax              #  51:     if     100 >= 97 goto 19_if_true
-     jmp     l_f1_20_if_false        #  53:     goto   20_if_false
+     jmp     l_f1_20_if_false        #  52:     goto   20_if_false
-     jmp     l_f1_18                 #  55:     goto   18
+     jmp     l_f1_18                 #  54:     goto   18
-     jmp     l_f1_15_while_cond      #  58:     goto   15_while_cond
+     jmp     l_f1_15_while_cond      #  57:     goto   15_while_cond
-     addl    $88, %esp               # remove locals
+     addl    $84, %esp               # remove locals
