-     #    -76(%ebp)   4  [ $t25      <int> %ebp-76 ]
+     #    -73(%ebp)   1  [ $t4       <bool> %ebp-73 ]
-     #    -80(%ebp)   4  [ $t26      <int> %ebp-80 ]
+     #    -80(%ebp)   4  [ $t5       <int> %ebp-80 ]
-     #    -81(%ebp)   1  [ $t4       <bool> %ebp-81 ]
+     #    -81(%ebp)   1  [ $t6       <bool> %ebp-81 ]
-     #    -88(%ebp)   4  [ $t5       <int> %ebp-88 ]
+     #    -88(%ebp)   4  [ $t7       <int> %ebp-88 ]
-     #    -89(%ebp)   1  [ $t6       <bool> %ebp-89 ]
+     #    -92(%ebp)   4  [ $t8       <int> %ebp-92 ]
-     #    -96(%ebp)   4  [ $t7       <int> %ebp-96 ]
+     #    -96(%ebp)   4  [ $t9       <int> %ebp-96 ]
-     #   -100(%ebp)   4  [ $t8       <int> %ebp-100 ]
-     #   -104(%ebp)   4  [ $t9       <int> %ebp-104 ]
-     #   -105(%ebp)   1  [ $v4       <bool> %ebp-105 ]
+     #    -97(%ebp)   1  [ $v4       <bool> %ebp-97 ]
-     pushl   %ebp                   
-     movl    %esp, %ebp             
-     pushl   %ebx                    # save callee saved registers
-     pushl   %esi                   
+     pushl   %ebp                   
+     movl    %esp, %ebp             
+     pushl   %ebx                    # save callee saved registers
-     pushl   %edi                   
+     pushl   %esi                   
+     pushl   %edi                   
-     subl    $96, %esp               # make room for locals
+     subl    $88, %esp               # make room for locals
-     movl    $24, %ecx              
+     movl    $22, %ecx              
-     movb    %al, -81(%ebp)         
+     movb    %al, -73(%ebp)         
+     jmp     l_f1_13_if_false        #  13:     goto   13_if_false
-     call    dummyINTfunc            #  13:     call   t5 <- dummyINTfunc
+     call    dummyINTfunc            #  14:     call   t5 <- dummyINTfunc
-     movl    %eax, -88(%ebp)        
+     movl    %eax, -80(%ebp)        
-     jmp     l_f1_11                 #  14:     goto   11
+     jmp     l_f1_11                 #  15:     goto   11
+ l_f1_13_if_false:
-     movl    $100, %eax              #  16:     if     100 >= 97 goto 17
+     movl    $100, %eax              #  18:     if     100 >= 97 goto 17
-     jmp     l_f1_18                 #  17:     goto   18
+     jmp     l_f1_18                 #  19:     goto   18
-     movl    $1, %eax                #  19:     assign t6 <- 1
+     movl    $1, %eax                #  21:     assign t6 <- 1
-     movb    %al, -89(%ebp)         
+     movb    %al, -81(%ebp)         
-     jmp     l_f1_19                 #  20:     goto   19
+     jmp     l_f1_19                 #  22:     goto   19
-     movl    $0, %eax                #  22:     assign t6 <- 0
+     movl    $0, %eax                #  24:     assign t6 <- 0
-     movb    %al, -89(%ebp)         
+     movb    %al, -81(%ebp)         
-     movl    $2, %eax                #  24:     param  1 <- 2
+     movl    $2, %eax                #  26:     param  1 <- 2
-     movl    16(%ebp), %eax          #  25:     param  0 <- v2
+     movl    16(%ebp), %eax          #  27:     param  0 <- v2
-     call    DIM                     #  26:     call   t7 <- DIM
+     call    DIM                     #  28:     call   t7 <- DIM
+     addl    $8, %esp               
+     movl    %eax, -88(%ebp)        
+     movl    $44725, %eax            #  29:     mul    t8 <- 44725, t7
+     movl    -88(%ebp), %ebx        
+     imull   %ebx                   
+     movl    %eax, -92(%ebp)        
+     movl    $5890, %eax             #  30:     add    t9 <- 5890, 20007
+     movl    $20007, %ebx           
-     addl    $8, %esp               
+     addl    %ebx, %eax             
-     movl    $44725, %eax            #  27:     mul    t8 <- 44725, t7
-     movl    -96(%ebp), %ebx        
-     imull   %ebx                   
-     movl    %eax, -100(%ebp)       
-     movl    $5890, %eax             #  28:     add    t9 <- 5890, 20007
-     movl    $20007, %ebx           
-     addl    %ebx, %eax             
-     movl    %eax, -104(%ebp)       
-     movl    -104(%ebp), %eax        #  29:     sub    t10 <- t9, 77687
+     movl    -96(%ebp), %eax         #  31:     sub    t10 <- t9, 77687
-     movl    -100(%ebp), %eax        #  30:     add    t11 <- t8, t10
+     movl    -92(%ebp), %eax         #  32:     add    t11 <- t8, t10
-     movl    $3, %eax                #  31:     param  1 <- 3
+     movl    $3, %eax                #  33:     param  1 <- 3
-     movl    16(%ebp), %eax          #  32:     param  0 <- v2
+     movl    16(%ebp), %eax          #  34:     param  0 <- v2
-     call    DIM                     #  33:     call   t12 <- DIM
+     call    DIM                     #  35:     call   t12 <- DIM
-     movl    $5890, %eax             #  34:     add    t14 <- 5890, 20007
-     movl    $20007, %ebx           
-     addl    %ebx, %eax             
-     movl    %eax, -32(%ebp)        
-     movl    -32(%ebp), %eax         #  35:     sub    t15 <- t14, 77687
-     movl    $77687, %ebx           
-     subl    %ebx, %eax             
-     movl    %eax, -36(%ebp)        
-     movl    -28(%ebp), %eax         #  37:     add    t16 <- t13, 79215
+     movl    -28(%ebp), %eax         #  37:     add    t14 <- t13, 79215
+     movl    %eax, -32(%ebp)        
+     movl    $4, %eax                #  38:     param  1 <- 4
+     pushl   %eax                   
+     movl    16(%ebp), %eax          #  39:     param  0 <- v2
+     pushl   %eax                   
+     call    DIM                     #  40:     call   t15 <- DIM
+     addl    $8, %esp               
+     movl    %eax, -36(%ebp)        
+     movl    -32(%ebp), %eax         #  41:     mul    t16 <- t14, t15
+     movl    -36(%ebp), %ebx        
+     imull   %ebx                   
-     movl    $4, %eax                #  38:     param  1 <- 4
-     pushl   %eax                   
-     movl    16(%ebp), %eax          #  39:     param  0 <- v2
+     movl    -40(%ebp), %eax         #  42:     add    t17 <- t16, 36924
+     movl    $36924, %ebx           
-     pushl   %eax                   
-     call    DIM                     #  40:     call   t17 <- DIM
-     addl    $8, %esp               
+     addl    %ebx, %eax             
+     movl    $5, %eax                #  43:     param  1 <- 5
-     movl    -40(%ebp), %eax         #  41:     mul    t18 <- t16, t17
-     movl    -44(%ebp), %ebx        
-     imull   %ebx                   
+     pushl   %eax                   
+     movl    16(%ebp), %eax          #  44:     param  0 <- v2
+     pushl   %eax                   
+     call    DIM                     #  45:     call   t18 <- DIM
+     addl    $8, %esp               
-     movl    -48(%ebp), %eax         #  42:     add    t19 <- t18, 36924
+     movl    -44(%ebp), %eax         #  46:     mul    t19 <- t17, t18
-     movl    $36924, %ebx           
+     movl    -48(%ebp), %ebx        
-     addl    %ebx, %eax             
+     imull   %ebx                   
-     movl    $5, %eax                #  43:     param  1 <- 5
-     pushl   %eax                   
-     movl    16(%ebp), %eax          #  44:     param  0 <- v2
+     movl    -52(%ebp), %eax         #  47:     add    t20 <- t19, 11953
+     movl    $11953, %ebx           
-     pushl   %eax                   
-     call    DIM                     #  45:     call   t20 <- DIM
-     addl    $8, %esp               
+     addl    %ebx, %eax             
-     movl    -52(%ebp), %eax         #  46:     mul    t21 <- t19, t20
+     movl    -56(%ebp), %eax         #  48:     mul    t21 <- t20, 1
-     movl    -56(%ebp), %ebx        
+     movl    $1, %ebx               
-     movl    -60(%ebp), %eax         #  47:     add    t22 <- t21, 11953
+     movl    16(%ebp), %eax          #  49:     param  0 <- v2
-     movl    $11953, %ebx           
+     pushl   %eax                   
+     call    DOFS                    #  50:     call   t22 <- DOFS
-     addl    %ebx, %eax             
+     addl    $4, %esp               
-     movl    -64(%ebp), %eax         #  48:     mul    t23 <- t22, 1
+     movl    -60(%ebp), %eax         #  51:     add    t23 <- t21, t22
+     movl    -64(%ebp), %ebx        
-     movl    $1, %ebx               
+     addl    %ebx, %eax             
-     imull   %ebx                   
-     movl    16(%ebp), %eax          #  49:     param  0 <- v2
+     movl    16(%ebp), %eax          #  52:     add    t24 <- v2, t23
+     movl    -68(%ebp), %ebx        
-     pushl   %eax                   
-     call    DOFS                    #  50:     call   t24 <- DOFS
-     addl    $4, %esp               
+     addl    %ebx, %eax             
-     movl    -68(%ebp), %eax         #  51:     add    t25 <- t23, t24
-     movl    -72(%ebp), %ebx        
-     addl    %ebx, %eax             
-     movl    %eax, -76(%ebp)        
-     movl    16(%ebp), %eax          #  52:     add    t26 <- v2, t25
-     movl    -76(%ebp), %ebx        
-     addl    %ebx, %eax             
-     movl    %eax, -80(%ebp)        
-     movzbl  -89(%ebp), %eax         #  53:     assign @t26 <- t6
+     movzbl  -81(%ebp), %eax         #  53:     assign @t24 <- t6
-     movl    -80(%ebp), %edi        
+     movl    -72(%ebp), %edi        
-     addl    $96, %esp               # remove locals
+     addl    $88, %esp               # remove locals
-     #    -72(%ebp)   4  [ $t24      <int> %ebp-72 ]
-     #    -76(%ebp)   4  [ $t25      <int> %ebp-76 ]
-     #    -80(%ebp)   4  [ $t26      <int> %ebp-80 ]
-     #    -84(%ebp)   4  [ $t27      <int> %ebp-84 ]
-     #    -88(%ebp)   4  [ $t28      <ptr(4) to <array 35 of <array 41 of <array 86 of <array 78 of <array 26 of <char>>>>>>> %ebp-88 ]
+     #    -72(%ebp)   4  [ $t24      <ptr(4) to <array 35 of <array 41 of <array 86 of <array 78 of <array 26 of <char>>>>>>> %ebp-72 ]
-     #    -92(%ebp)   4  [ $t29      <ptr(4) to <array 30 of <array 23 of <array 18 of <array 77 of <array 26 of <bool>>>>>>> %ebp-92 ]
+     #    -76(%ebp)   4  [ $t25      <ptr(4) to <array 30 of <array 23 of <array 18 of <array 77 of <array 26 of <bool>>>>>>> %ebp-76 ]
-     #    -96(%ebp)   4  [ $t30      <ptr(4) to <array 2 of <array 100 of <array 81 of <array 16 of <array 59 of <int>>>>>>> %ebp-96 ]
+     #    -80(%ebp)   4  [ $t26      <ptr(4) to <array 2 of <array 100 of <array 81 of <array 16 of <array 59 of <int>>>>>>> %ebp-80 ]
-     #    -97(%ebp)   1  [ $t31      <char> %ebp-97 ]
+     #    -81(%ebp)   1  [ $t27      <char> %ebp-81 ]
+     #    -88(%ebp)   4  [ $t4       <int> %ebp-88 ]
+     #    -92(%ebp)   4  [ $t5       <int> %ebp-92 ]
+     #    -96(%ebp)   4  [ $t6       <int> %ebp-96 ]
+     #   -100(%ebp)   4  [ $t7       <int> %ebp-100 ]
-     #   -104(%ebp)   4  [ $t4       <int> %ebp-104 ]
+     #   -104(%ebp)   4  [ $t8       <int> %ebp-104 ]
-     #   -108(%ebp)   4  [ $t5       <int> %ebp-108 ]
+     #   -108(%ebp)   4  [ $t9       <int> %ebp-108 ]
-     #   -112(%ebp)   4  [ $t6       <int> %ebp-112 ]
-     #   -116(%ebp)   4  [ $t7       <int> %ebp-116 ]
-     #   -120(%ebp)   4  [ $t8       <int> %ebp-120 ]
-     #   -124(%ebp)   4  [ $t9       <int> %ebp-124 ]
-     #   -128(%ebp)   4  [ $v2       <int> %ebp-128 ]
+     #   -112(%ebp)   4  [ $v2       <int> %ebp-112 ]
-     #   -129(%ebp)   1  [ $v3       <char> %ebp-129 ]
+     #   -113(%ebp)   1  [ $v3       <char> %ebp-113 ]
-     #-61171356(%ebp)61171224  [ $v4       <array 2 of <array 100 of <array 81 of <array 16 of <array 59 of <int>>>>>> %ebp-61171356 ]
+     #   -61171340(%ebp)  61171224  [ $v4       <array 2 of <array 100 of <array 81 of <array 16 of <array 59 of <int>>>>>> %ebp-61171340 ]
-     #-86036220(%ebp)24864864  [ $v5       <array 30 of <array 23 of <array 18 of <array 77 of <array 26 of <bool>>>>>> %ebp-86036220 ]
+     #   -86036204(%ebp)  24864864  [ $v5       <array 30 of <array 23 of <array 18 of <array 77 of <array 26 of <bool>>>>>> %ebp-86036204 ]
-     #-336311724(%ebp)250275504  [ $v6       <array 35 of <array 41 of <array 86 of <array 78 of <array 26 of <char>>>>>> %ebp-336311724 ]
+     #   -336311708(%ebp)  250275504  [ $v6       <array 35 of <array 41 of <array 86 of <array 78 of <array 26 of <char>>>>>> %ebp-336311708 ]
-     pushl   %ebp                   
-     movl    %esp, %ebp             
-     pushl   %ebx                    # save callee saved registers
-     pushl   %esi                   
+     pushl   %ebp                   
+     movl    %esp, %ebp             
+     pushl   %ebx                    # save callee saved registers
-     pushl   %edi                   
+     pushl   %esi                   
+     pushl   %edi                   
-     subl    $336311712, %esp        # make room for locals
+     subl    $336311696, %esp        # make room for locals
-     movl    $84077928, %ecx        
+     movl    $84077924, %ecx        
-     movl    $5,-61171356(%ebp)      # local array 'v4': 5 dimensions
+     movl    $5,-61171340(%ebp)      # local array 'v4': 5 dimensions
-     movl    $2,-61171352(%ebp)      #   dimension 1: 2 elements
+     movl    $2,-61171336(%ebp)      #   dimension 1: 2 elements
-     movl    $100,-61171348(%ebp)    #   dimension 2: 100 elements
+     movl    $100,-61171332(%ebp)    #   dimension 2: 100 elements
-     movl    $81,-61171344(%ebp)     #   dimension 3: 81 elements
+     movl    $81,-61171328(%ebp)     #   dimension 3: 81 elements
-     movl    $16,-61171340(%ebp)     #   dimension 4: 16 elements
+     movl    $16,-61171324(%ebp)     #   dimension 4: 16 elements
-     movl    $59,-61171336(%ebp)     #   dimension 5: 59 elements
+     movl    $59,-61171320(%ebp)     #   dimension 5: 59 elements
-     movl    $5,-86036220(%ebp)      # local array 'v5': 5 dimensions
+     movl    $5,-86036204(%ebp)      # local array 'v5': 5 dimensions
-     movl    $30,-86036216(%ebp)     #   dimension 1: 30 elements
+     movl    $30,-86036200(%ebp)     #   dimension 1: 30 elements
-     movl    $23,-86036212(%ebp)     #   dimension 2: 23 elements
+     movl    $23,-86036196(%ebp)     #   dimension 2: 23 elements
-     movl    $18,-86036208(%ebp)     #   dimension 3: 18 elements
+     movl    $18,-86036192(%ebp)     #   dimension 3: 18 elements
-     movl    $77,-86036204(%ebp)     #   dimension 4: 77 elements
+     movl    $77,-86036188(%ebp)     #   dimension 4: 77 elements
-     movl    $26,-86036200(%ebp)     #   dimension 5: 26 elements
+     movl    $26,-86036184(%ebp)     #   dimension 5: 26 elements
-     movl    $5,-336311724(%ebp)     # local array 'v6': 5 dimensions
+     movl    $5,-336311708(%ebp)     # local array 'v6': 5 dimensions
-     movl    $35,-336311720(%ebp)    #   dimension 1: 35 elements
+     movl    $35,-336311704(%ebp)    #   dimension 1: 35 elements
-     movl    $41,-336311716(%ebp)    #   dimension 2: 41 elements
+     movl    $41,-336311700(%ebp)    #   dimension 2: 41 elements
-     movl    $86,-336311712(%ebp)    #   dimension 3: 86 elements
+     movl    $86,-336311696(%ebp)    #   dimension 3: 86 elements
-     movl    $78,-336311708(%ebp)    #   dimension 4: 78 elements
+     movl    $78,-336311692(%ebp)    #   dimension 4: 78 elements
-     movl    $26,-336311704(%ebp)    #   dimension 5: 26 elements
+     movl    $26,-336311688(%ebp)    #   dimension 5: 26 elements
-     movl    %eax, -104(%ebp)       
+     movl    %eax, -88(%ebp)        
-     movl    -104(%ebp), %eax        #   1:     add    t5 <- t4, 88362
+     movl    -88(%ebp), %eax         #   1:     add    t5 <- t4, 88362
-     movl    %eax, -108(%ebp)       
+     movl    %eax, -92(%ebp)        
-     movl    -108(%ebp), %eax        #   2:     sub    t6 <- t5, 88113
+     movl    -92(%ebp), %eax         #   2:     sub    t6 <- t5, 88113
-     movl    %eax, -112(%ebp)       
+     movl    %eax, -96(%ebp)        
-     movl    %eax, -116(%ebp)       
+     movl    %eax, -100(%ebp)       
-     movl    $57007, %eax            #   6:     sub    t9 <- 57007, 66747
-     movl    $66747, %ebx           
+     movl    -96(%ebp), %eax         #   6:     mul    t8 <- t6, t7
+     movl    -100(%ebp), %ebx       
-     subl    %ebx, %eax             
+     imull   %ebx                   
-     movl    %eax, -124(%ebp)       
+     movl    %eax, -104(%ebp)       
-     movl    -124(%ebp), %eax        #   7:     add    t10 <- t9, 88362
+     movl    -104(%ebp), %eax        #   7:     add    t9 <- t8, 45026
-     movl    $88362, %ebx           
+     movl    $45026, %ebx           
+     addl    %ebx, %eax             
+     movl    %eax, -108(%ebp)       
+     movl    $3, %eax                #   8:     param  1 <- 3
+     pushl   %eax                   
+     movl    8(%ebp), %eax           #   9:     param  0 <- v0
+     pushl   %eax                   
+     call    DIM                     #  10:     call   t10 <- DIM
-     addl    %ebx, %eax             
+     addl    $8, %esp               
-     movl    -16(%ebp), %eax         #   8:     sub    t11 <- t10, 88113
+     movl    -108(%ebp), %eax        #  11:     mul    t11 <- t9, t10
-     movl    $88113, %ebx           
+     movl    -16(%ebp), %ebx        
-     subl    %ebx, %eax             
+     imull   %ebx                   
-     movl    -112(%ebp), %eax        #   9:     mul    t8 <- t6, t7
-     movl    -116(%ebp), %ebx       
-     imull   %ebx                   
-     movl    %eax, -120(%ebp)       
-     movl    -120(%ebp), %eax        #  10:     add    t12 <- t8, 45026
+     movl    $35677, %eax            #  12:     add    t12 <- 35677, 30207
-     movl    $45026, %ebx           
+     movl    $30207, %ebx           
-     movl    $3, %eax                #  11:     param  1 <- 3
-     pushl   %eax                   
-     movl    8(%ebp), %eax           #  12:     param  0 <- v0
+     movl    -20(%ebp), %eax         #  13:     add    t13 <- t11, t12
+     movl    -24(%ebp), %ebx        
-     pushl   %eax                   
-     call    DIM                     #  13:     call   t13 <- DIM
-     addl    $8, %esp               
+     addl    %ebx, %eax             
+     movl    $4, %eax                #  14:     param  1 <- 4
-     movl    -24(%ebp), %eax         #  14:     mul    t14 <- t12, t13
-     movl    -28(%ebp), %ebx        
-     imull   %ebx                   
+     pushl   %eax                   
+     movl    8(%ebp), %eax           #  15:     param  0 <- v0
+     pushl   %eax                   
+     call    DIM                     #  16:     call   t14 <- DIM
+     addl    $8, %esp               
-     movl    $35677, %eax            #  15:     add    t15 <- 35677, 30207
+     movl    -28(%ebp), %eax         #  17:     mul    t15 <- t13, t14
-     movl    $30207, %ebx           
+     movl    -32(%ebp), %ebx        
-     addl    %ebx, %eax             
+     imull   %ebx                   
-     movl    -32(%ebp), %eax         #  16:     add    t16 <- t14, t15
+     movl    -36(%ebp), %eax         #  18:     add    t16 <- t15, 84065
-     movl    -36(%ebp), %ebx        
+     movl    $84065, %ebx           
-     movl    $4, %eax                #  17:     param  1 <- 4
+     movl    $5, %eax                #  19:     param  1 <- 5
-     movl    8(%ebp), %eax           #  18:     param  0 <- v0
+     movl    8(%ebp), %eax           #  20:     param  0 <- v0
-     call    DIM                     #  19:     call   t17 <- DIM
+     call    DIM                     #  21:     call   t17 <- DIM
+     movl    -40(%ebp), %eax         #  22:     mul    t18 <- t16, t17
+     movl    -44(%ebp), %ebx        
+     imull   %ebx                   
+     movl    %eax, -48(%ebp)        
-     movl    $35677, %eax            #  20:     add    t19 <- 35677, 30207
+     movl    -48(%ebp), %eax         #  23:     add    t19 <- t18, 93446
-     movl    $30207, %ebx           
+     movl    $93446, %ebx           
-     movl    -40(%ebp), %eax         #  21:     mul    t18 <- t16, t17
+     movl    -52(%ebp), %eax         #  24:     mul    t20 <- t19, 4
-     movl    -44(%ebp), %ebx        
-     imull   %ebx                   
-     movl    %eax, -48(%ebp)        
-     movl    -48(%ebp), %eax         #  22:     add    t20 <- t18, 84065
-     movl    $84065, %ebx           
+     movl    $4, %ebx               
-     addl    %ebx, %eax             
+     imull   %ebx                   
-     movl    $5, %eax                #  23:     param  1 <- 5
-     pushl   %eax                   
-     movl    8(%ebp), %eax           #  24:     param  0 <- v0
+     movl    8(%ebp), %eax           #  25:     param  0 <- v0
-     call    DIM                     #  25:     call   t21 <- DIM
+     call    DOFS                    #  26:     call   t21 <- DOFS
-     addl    $8, %esp               
+     addl    $4, %esp               
-     movl    -56(%ebp), %eax         #  26:     mul    t22 <- t20, t21
+     movl    -56(%ebp), %eax         #  27:     add    t22 <- t20, t21
-     imull   %ebx                   
+     addl    %ebx, %eax             
-     movl    -64(%ebp), %eax         #  27:     add    t23 <- t22, 93446
+     movl    8(%ebp), %eax           #  28:     add    t23 <- v0, t22
-     movl    $93446, %ebx           
+     movl    -64(%ebp), %ebx        
-     movl    -68(%ebp), %eax         #  28:     mul    t24 <- t23, 4
-     movl    $4, %ebx               
-     imull   %ebx                   
-     movl    %eax, -72(%ebp)        
-     movl    8(%ebp), %eax           #  29:     param  0 <- v0
-     pushl   %eax                   
-     call    DOFS                    #  30:     call   t25 <- DOFS
-     addl    $4, %esp               
-     movl    %eax, -76(%ebp)        
-     movl    -72(%ebp), %eax         #  31:     add    t26 <- t24, t25
-     movl    -76(%ebp), %ebx        
-     addl    %ebx, %eax             
-     movl    %eax, -80(%ebp)        
-     movl    8(%ebp), %eax           #  32:     add    t27 <- v0, t26
-     movl    -80(%ebp), %ebx        
-     addl    %ebx, %eax             
-     movl    %eax, -84(%ebp)        
-     movl    $25496, %eax            #  33:     assign @t27 <- 25496
+     movl    $25496, %eax            #  29:     assign @t23 <- 25496
-     movl    -84(%ebp), %edi        
+     movl    -68(%ebp), %edi        
-     movl    $97, %eax               #  35:     if     97 <= 98 goto 3_if_true
+     movl    $97, %eax               #  31:     if     97 <= 98 goto 3_if_true
-     jmp     l_f2_4_if_false         #  36:     goto   4_if_false
+     jmp     l_f2_4_if_false         #  32:     goto   4_if_false
-     movl    $100, %eax              #  39:     assign v3 <- 100
+     movl    $100, %eax              #  35:     assign v3 <- 100
-     movb    %al, -129(%ebp)        
+     movb    %al, -113(%ebp)        
-     leal    -336311724(%ebp), %eax  #  40:     &()    t28 <- v6
+     leal    -336311708(%ebp), %eax  #  36:     &()    t24 <- v6
-     movl    %eax, -88(%ebp)        
-     movl    -88(%ebp), %eax         #  41:     param  3 <- t28
-     pushl   %eax                   
-     leal    -86036220(%ebp), %eax   #  42:     &()    t29 <- v5
-     movl    %eax, -92(%ebp)        
+     movl    %eax, -72(%ebp)        
-     movl    -92(%ebp), %eax         #  43:     param  2 <- t29
+     movl    -72(%ebp), %eax         #  37:     param  3 <- t24
-     leal    -61171356(%ebp), %eax   #  44:     &()    t30 <- v4
+     leal    -86036204(%ebp), %eax   #  38:     &()    t25 <- v5
-     movl    %eax, -96(%ebp)        
+     movl    %eax, -76(%ebp)        
+     movl    -76(%ebp), %eax         #  39:     param  2 <- t25
+     pushl   %eax                   
+     leal    -61171340(%ebp), %eax   #  40:     &()    t26 <- v4
+     movl    %eax, -80(%ebp)        
-     movl    -96(%ebp), %eax         #  45:     param  1 <- t30
+     movl    -80(%ebp), %eax         #  41:     param  1 <- t26
-     movl    $23624, %eax            #  46:     param  0 <- 23624
+     movl    $23624, %eax            #  42:     param  0 <- 23624
-     call    f1                      #  47:     call   t31 <- f1
+     call    f1                      #  43:     call   t27 <- f1
-     movb    %al, -97(%ebp)         
+     movb    %al, -81(%ebp)         
-     movl    $18035, %eax            #  49:     if     18035 < 79553 goto 11_while_body
+     movl    $18035, %eax            #  45:     if     18035 < 79553 goto 11_while_body
-     jmp     l_f2_9                  #  50:     goto   9
+     jmp     l_f2_9                  #  46:     goto   9
-     jmp     l_f2_10_while_cond      #  52:     goto   10_while_cond
+     jmp     l_f2_10_while_cond      #  48:     goto   10_while_cond
-     jmp     l_f2_2                  #  54:     goto   2
+     jmp     l_f2_2                  #  50:     goto   2
-     addl    $336311712, %esp        # remove locals
+     addl    $336311696, %esp        # remove locals
-     addl    $1, %esp               
+     addl    $4, %esp               
