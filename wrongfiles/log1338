+     jmp     l_f1_3                  #   1:     goto   3
-     call    dummyBOOLfunc           #   1:     call   t3 <- dummyBOOLfunc
+     call    dummyBOOLfunc           #   2:     call   t3 <- dummyBOOLfunc
-     movzbl  -17(%ebp), %eax         #   2:     if     t3 = 1 goto 2
+     movzbl  -17(%ebp), %eax         #   3:     if     t3 = 1 goto 2
-     jmp     l_f1_3                  #   3:     goto   3
+     jmp     l_f1_3                  #   4:     goto   3
-     movl    $1, %eax                #   5:     assign t4 <- 1
+     movl    $1, %eax                #   6:     assign t4 <- 1
-     jmp     l_f1_4                  #   6:     goto   4
+     jmp     l_f1_4                  #   7:     goto   4
-     movl    $0, %eax                #   8:     assign t4 <- 0
+     movl    $0, %eax                #   9:     assign t4 <- 0
-     movzbl  -18(%ebp), %eax         #  10:     return t4
+     movzbl  -18(%ebp), %eax         #  11:     return t4
-     call    dummyINTfunc            #  11:     call   t5 <- dummyINTfunc
+     call    dummyINTfunc            #  12:     call   t5 <- dummyINTfunc
+     jmp     l_f2_9                  #  18:     goto   9
-     jmp     l_f2_10_while_cond      #  19:     goto   10_while_cond
+     jmp     l_f2_10_while_cond      #  20:     goto   10_while_cond
+ l_f2_9:
+     jmp     l_test_3                #   0:     goto   3
-     jmp     l_test_1_if_true        #   0:     goto   1_if_true
+     jmp     l_test_1_if_true        #   1:     goto   1_if_true
+ l_test_3:
-     jmp     l_test_0                #   2:     goto   0
+     jmp     l_test_0                #   4:     goto   0
-     call    dummyCHARfunc           #   4:     call   t0 <- dummyCHARfunc
+     call    dummyCHARfunc           #   6:     call   t0 <- dummyCHARfunc
-     movzbl  -13(%ebp), %eax         #   5:     assign v0 <- t0
+     movzbl  -13(%ebp), %eax         #   7:     assign v0 <- t0
-     call    f0                      #   6:     call   t1 <- f0
+     call    f0                      #   8:     call   t1 <- f0
