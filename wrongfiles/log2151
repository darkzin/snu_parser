+     jmp     l_f0_8                  #  10:     goto   8
+     jmp     l_f0_8                  #  11:     goto   8
-     call    dummyBOOLfunc           #  10:     call   t4 <- dummyBOOLfunc
+     call    dummyBOOLfunc           #  12:     call   t4 <- dummyBOOLfunc
-     jmp     l_f0_9_while_cond       #  11:     goto   9_while_cond
+     jmp     l_f0_9_while_cond       #  13:     goto   9_while_cond
+ l_f0_8:
+     jmp     l_f1_0                  #   2:     goto   0
-     call    dummyINTfunc            #   3:     call   t4 <- dummyINTfunc
+     call    dummyINTfunc            #   4:     call   t4 <- dummyINTfunc
-     movl    $42905, %eax            #   4:     if     42905 >= 71384 goto 6
+     movl    $42905, %eax            #   5:     if     42905 >= 71384 goto 6
-     jmp     l_f1_7                  #   5:     goto   7
+     jmp     l_f1_7                  #   6:     goto   7
-     movl    $1, %eax                #   7:     assign t5 <- 1
+     movl    $1, %eax                #   8:     assign t5 <- 1
-     jmp     l_f1_8                  #   8:     goto   8
+     jmp     l_f1_8                  #   9:     goto   8
-     movl    $0, %eax                #  10:     assign t5 <- 0
+     movl    $0, %eax                #  11:     assign t5 <- 0
-     movzbl  -17(%ebp), %eax         #  12:     assign v2 <- t5
+     movzbl  -17(%ebp), %eax         #  13:     assign v2 <- t5
-     jmp     l_f1_10                 #  14:     goto   10
+     jmp     l_f1_10                 #  15:     goto   10
-     jmp     l_f1_11_while_cond      #  15:     goto   11_while_cond
+     jmp     l_f1_11_while_cond      #  16:     goto   11_while_cond
-     jmp     l_f1_1_while_cond       #  17:     goto   1_while_cond
+     jmp     l_f1_1_while_cond       #  18:     goto   1_while_cond
+ l_f1_0:
-     leal    _str_1, %eax            #  18:     &()    t6 <- _str_1
+     leal    _str_1, %eax            #  20:     &()    t6 <- _str_1
-     movl    -24(%ebp), %eax         #  19:     param  0 <- t6
+     movl    -24(%ebp), %eax         #  21:     param  0 <- t6
-     call    WriteStr                #  20:     call   WriteStr
+     call    WriteStr                #  22:     call   WriteStr
-     movl    $1, %eax                #  22:     if     1 = 1 goto 16_while_body
+     movl    $1, %eax                #  24:     if     1 = 1 goto 16_while_body
-     jmp     l_f1_14                 #  23:     goto   14
+     jmp     l_f1_14                 #  25:     goto   14
-     movl    $98, %eax               #  25:     if     98 > 98 goto 19_if_true
+     movl    $98, %eax               #  27:     if     98 > 98 goto 19_if_true
-     jmp     l_f1_20_if_false        #  26:     goto   20_if_false
+     jmp     l_f1_20_if_false        #  28:     goto   20_if_false
-     jmp     l_f1_22                 #  29:     goto   22
+     jmp     l_f1_22                 #  31:     goto   22
-     jmp     l_f1_23_while_cond      #  30:     goto   23_while_cond
+     jmp     l_f1_23_while_cond      #  32:     goto   23_while_cond
-     jmp     l_f1_18                 #  32:     goto   18
+     jmp     l_f1_18                 #  34:     goto   18
-     jmp     l_f1_15_while_cond      #  35:     goto   15_while_cond
+     jmp     l_f1_15_while_cond      #  37:     goto   15_while_cond
-     #-292271684(%ebp)292271640  [ $v4       <array 56 of <array 72 of <array 68 of <array 41 of <array 26 of <char>>>>>> %ebp-292271684 ]
+     #   -292271684(%ebp)  292271640  [ $v4       <array 56 of <array 72 of <array 68 of <array 41 of <array 26 of <char>>>>>> %ebp-292271684 ]
-     addl    $5, %esp               
+     addl    $8, %esp               
-     addl    $5, %esp               
+     addl    $8, %esp               
-     addl    $5, %esp               
+     addl    $8, %esp               
-     addl    $5, %esp               
+     addl    $8, %esp               
-     addl    $1, %esp               
+     addl    $4, %esp               
