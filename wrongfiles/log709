-     #    -88(%ebp)   4  [ $t28      <int> %ebp-88 ]
+     #    -88(%ebp)   4  [ $t9       <int> %ebp-88 ]
-     #    -92(%ebp)   4  [ $t9       <int> %ebp-92 ]
-     #    -93(%ebp)   1  [ $v3       <char> %ebp-93 ]
+     #    -89(%ebp)   1  [ $v3       <char> %ebp-89 ]
-     #   -100(%ebp)   4  [ $v4       <int> %ebp-100 ]
+     #    -96(%ebp)   4  [ $v4       <int> %ebp-96 ]
-     pushl   %ebp                   
-     movl    %esp, %ebp             
-     pushl   %ebx                    # save callee saved registers
-     pushl   %esi                   
+     pushl   %ebp                   
+     movl    %esp, %ebp             
+     pushl   %ebx                    # save callee saved registers
-     pushl   %edi                   
+     pushl   %esi                   
+     pushl   %edi                   
-     subl    $88, %esp               # make room for locals
+     subl    $84, %esp               # make room for locals
-     movl    $22, %ecx              
+     movl    $21, %ecx              
-     movb    %al, -93(%ebp)         
+     movb    %al, -89(%ebp)         
-     movl    %eax, -92(%ebp)        
+     movl    %eax, -88(%ebp)        
-     movl    $77492, %eax            #  25:     sub    t17 <- 77492, 75503
-     movl    $75503, %ebx           
-     subl    %ebx, %eax             
-     movl    %eax, -44(%ebp)        
-     movl    -32(%ebp), %eax         #  26:     mul    t16 <- t14, t15
+     movl    -32(%ebp), %eax         #  25:     mul    t16 <- t14, t15
-     movl    -40(%ebp), %eax         #  27:     add    t18 <- t16, 79449
+     movl    -40(%ebp), %eax         #  26:     add    t17 <- t16, 79449
+     movl    %eax, -44(%ebp)        
+     movl    $4, %eax                #  27:     param  1 <- 4
+     pushl   %eax                   
+     movl    8(%ebp), %eax           #  28:     param  0 <- v0
+     pushl   %eax                   
+     call    DIM                     #  29:     call   t18 <- DIM
+     addl    $8, %esp               
+     movl    -44(%ebp), %eax         #  30:     mul    t19 <- t17, t18
+     movl    -48(%ebp), %ebx        
+     imull   %ebx                   
+     movl    %eax, -52(%ebp)        
+     movl    -52(%ebp), %eax         #  31:     add    t20 <- t19, 75449
+     movl    $75449, %ebx           
+     addl    %ebx, %eax             
+     movl    %eax, -56(%ebp)        
-     movl    $4, %eax                #  28:     param  1 <- 4
+     movl    $5, %eax                #  32:     param  1 <- 5
-     movl    8(%ebp), %eax           #  29:     param  0 <- v0
+     movl    8(%ebp), %eax           #  33:     param  0 <- v0
-     call    DIM                     #  30:     call   t19 <- DIM
+     call    DIM                     #  34:     call   t21 <- DIM
-     movl    %eax, -52(%ebp)        
+     movl    %eax, -60(%ebp)        
-     movl    -48(%ebp), %eax         #  31:     mul    t20 <- t18, t19
+     movl    -56(%ebp), %eax         #  35:     mul    t22 <- t20, t21
-     movl    -52(%ebp), %ebx        
+     movl    -60(%ebp), %ebx        
-     movl    %eax, -56(%ebp)        
-     movl    -56(%ebp), %eax         #  32:     add    t21 <- t20, 75449
-     movl    $75449, %ebx           
-     addl    %ebx, %eax             
-     movl    %eax, -60(%ebp)        
-     movl    $5, %eax                #  33:     param  1 <- 5
-     pushl   %eax                   
-     movl    8(%ebp), %eax           #  34:     param  0 <- v0
-     pushl   %eax                   
-     call    DIM                     #  35:     call   t22 <- DIM
-     addl    $8, %esp               
-     movl    -60(%ebp), %eax         #  36:     mul    t23 <- t21, t22
+     movl    -64(%ebp), %eax         #  36:     add    t23 <- t22, 19624
-     movl    -64(%ebp), %ebx        
+     movl    $19624, %ebx           
-     imull   %ebx                   
+     addl    %ebx, %eax             
-     movl    -68(%ebp), %eax         #  37:     add    t24 <- t23, 19624
+     movl    -68(%ebp), %eax         #  37:     mul    t24 <- t23, 4
-     movl    $19624, %ebx           
-     addl    %ebx, %eax             
-     movl    %eax, -72(%ebp)        
-     movl    -72(%ebp), %eax         #  38:     mul    t25 <- t24, 4
+     movl    %eax, -72(%ebp)        
+     movl    8(%ebp), %eax           #  38:     param  0 <- v0
+     pushl   %eax                   
+     call    DOFS                    #  39:     call   t25 <- DOFS
+     addl    $4, %esp               
-     movl    8(%ebp), %eax           #  39:     param  0 <- v0
+     movl    -72(%ebp), %eax         #  40:     add    t26 <- t24, t25
+     movl    -76(%ebp), %ebx        
-     pushl   %eax                   
-     call    DOFS                    #  40:     call   t26 <- DOFS
-     addl    $4, %esp               
+     addl    %ebx, %eax             
-     movl    -76(%ebp), %eax         #  41:     add    t27 <- t25, t26
+     movl    8(%ebp), %eax           #  41:     add    t27 <- v0, t26
-     movl    8(%ebp), %eax           #  42:     add    t28 <- v0, t27
-     movl    -84(%ebp), %ebx        
-     addl    %ebx, %eax             
-     movl    %eax, -88(%ebp)        
-     movl    -16(%ebp), %eax         #  43:     assign @t28 <- t10
+     movl    -16(%ebp), %eax         #  42:     assign @t27 <- t10
-     movl    -88(%ebp), %edi        
+     movl    -84(%ebp), %edi        
-     addl    $88, %esp               # remove locals
+     addl    $84, %esp               # remove locals
+     jmp     l_f2_0                  #   1:     goto   0
-     call    dummyBOOLfunc           #   1:     call   t9 <- dummyBOOLfunc
+     call    dummyBOOLfunc           #   2:     call   t9 <- dummyBOOLfunc
-     jmp     l_f2_1_while_cond       #   2:     goto   1_while_cond
+     jmp     l_f2_1_while_cond       #   3:     goto   1_while_cond
+ l_f2_0:
-     jmp     l_f2_5                  #   4:     goto   5
+     jmp     l_f2_5                  #   6:     goto   5
-     movl    $17614, %eax            #   5:     assign v1 <- 17614
+     movl    $17614, %eax            #   7:     assign v1 <- 17614
-     movl    $57209, %eax            #   7:     if     57209 < 68053 goto 11_while_body
+     movl    $57209, %eax            #   9:     if     57209 < 68053 goto 11_while_body
-     jmp     l_f2_9                  #   8:     goto   9
+     jmp     l_f2_9                  #  10:     goto   9
-     jmp     l_f2_10_while_cond      #  10:     goto   10_while_cond
+     jmp     l_f2_10_while_cond      #  12:     goto   10_while_cond
-     jmp     l_f2_13                 #  12:     goto   13
+     jmp     l_f2_13                 #  14:     goto   13
-     jmp     l_f2_6_while_cond       #  14:     goto   6_while_cond
+     jmp     l_f2_6_while_cond       #  16:     goto   6_while_cond
-     call    dummyCHARfunc           #  16:     call   t10 <- dummyCHARfunc
+     call    dummyCHARfunc           #  18:     call   t10 <- dummyCHARfunc
-     movzbl  -13(%ebp), %eax         #  17:     return t10
+     movzbl  -13(%ebp), %eax         #  19:     return t10
-     addl    $13, %esp              
+     addl    $16, %esp              
