+     jmp     l_f0_3_if_false         #   2:     goto   3_if_false
-     jmp     l_f0_5                  #   4:     goto   5
+     jmp     l_f0_5                  #   5:     goto   5
-     jmp     l_f0_6_while_cond       #   5:     goto   6_while_cond
+     jmp     l_f0_6_while_cond       #   6:     goto   6_while_cond
-     movl    $72179, %eax            #   7:     if     72179 < 48188 goto 9
+     movl    $72179, %eax            #   8:     if     72179 < 48188 goto 9
-     jmp     l_f0_10                 #   8:     goto   10
+     jmp     l_f0_10                 #   9:     goto   10
-     movl    $1, %eax                #  10:     assign t1 <- 1
+     movl    $1, %eax                #  11:     assign t1 <- 1
-     jmp     l_f0_11                 #  11:     goto   11
+     jmp     l_f0_11                 #  12:     goto   11
-     movl    $0, %eax                #  13:     assign t1 <- 0
+     movl    $0, %eax                #  14:     assign t1 <- 0
-     movzbl  -17(%ebp), %eax         #  15:     return t1
+     movzbl  -17(%ebp), %eax         #  16:     return t1
-     jmp     l_f0_1                  #  16:     goto   1
+     jmp     l_f0_1                  #  17:     goto   1
+ l_f0_3_if_false:
+     jmp     l_f0_18                 #  20:     goto   18
+ l_f0_18:
-     jmp     l_f0_14                 #  18:     goto   14
+     jmp     l_f0_14                 #  22:     goto   14
+     jmp     l_f0_15                 #  23:     goto   15
-     movl    $1, %eax                #  20:     assign t2 <- 1
+     movl    $1, %eax                #  25:     assign t2 <- 1
-     jmp     l_f0_16                 #  21:     goto   16
+     jmp     l_f0_16                 #  26:     goto   16
+ l_f0_15:
-     movl    $0, %eax                #  22:     assign t2 <- 0
+     movl    $0, %eax                #  28:     assign t2 <- 0
-     movzbl  -18(%ebp), %eax         #  24:     return t2
+     movzbl  -18(%ebp), %eax         #  30:     return t2
+     jmp     l_f1_2                  #   0:     goto   2
-     movl    $1, %eax                #   0:     assign t0 <- 1
+     movl    $1, %eax                #   1:     assign t0 <- 1
-     jmp     l_f1_3                  #   1:     goto   3
+     jmp     l_f1_3                  #   2:     goto   3
+ l_f1_2:
-     movl    $0, %eax                #   2:     assign t0 <- 0
+     movl    $0, %eax                #   4:     assign t0 <- 0
-     movzbl  -13(%ebp), %eax         #   4:     return t0
+     movzbl  -13(%ebp), %eax         #   6:     return t0
-     movl    $30346, %eax            #   5:     div    t1 <- 30346, 62135
+     movl    $30346, %eax            #   7:     div    t1 <- 30346, 62135
-     movl    $87744, %eax            #   6:     if     87744 > t1 goto 7_if_true
+     movl    $87744, %eax            #   8:     if     87744 > t1 goto 7_if_true
-     jmp     l_f1_8_if_false         #   7:     goto   8_if_false
+     jmp     l_f1_8_if_false         #   9:     goto   8_if_false
-     jmp     l_f1_11_while_cond      #  10:     goto   11_while_cond
+     jmp     l_f1_11_while_cond      #  12:     goto   11_while_cond
-     movl    $13977, %eax            #  11:     assign v3 <- 13977
+     movl    $13977, %eax            #  13:     assign v3 <- 13977
-     movl    $100, %eax              #  12:     if     100 = 98 goto 15
+     movl    $100, %eax              #  14:     if     100 = 98 goto 15
-     jmp     l_f1_16                 #  13:     goto   16
+     jmp     l_f1_16                 #  15:     goto   16
-     movl    $1, %eax                #  15:     assign t2 <- 1
+     movl    $1, %eax                #  17:     assign t2 <- 1
-     jmp     l_f1_17                 #  16:     goto   17
+     jmp     l_f1_17                 #  18:     goto   17
-     movl    $0, %eax                #  18:     assign t2 <- 0
+     movl    $0, %eax                #  20:     assign t2 <- 0
-     movzbl  -21(%ebp), %eax         #  20:     return t2
+     movzbl  -21(%ebp), %eax         #  22:     return t2
-     jmp     l_f1_6                  #  21:     goto   6
+     jmp     l_f1_6                  #  23:     goto   6
-     jmp     l_f1_20_if_true         #  24:     goto   20_if_true
+     jmp     l_f1_20_if_true         #  26:     goto   20_if_true
-     movl    $98, %eax               #  26:     if     98 >= 100 goto 24_if_true
+     movl    $98, %eax               #  28:     if     98 >= 100 goto 24_if_true
-     jmp     l_f1_25_if_false        #  27:     goto   25_if_false
+     jmp     l_f1_25_if_false        #  29:     goto   25_if_false
-     jmp     l_f1_23                 #  29:     goto   23
+     jmp     l_f1_23                 #  31:     goto   23
-     jmp     l_f1_19                 #  32:     goto   19
+     jmp     l_f1_19                 #  34:     goto   19
-     #-1930062016(%ebp)1930061976  [ $v4       <array 91 of <array 68 of <array 54 of <array 38 of <array 38 of <int>>>>>> %ebp-1930062016 ]
+     #   -1930062016(%ebp)  1930061976  [ $v4       <array 91 of <array 68 of <array 54 of <array 38 of <array 38 of <int>>>>>> %ebp-1930062016 ]
-     #-1933085080(%ebp)3023064  [ $v5       <array 5 of <array 94 of <array 6 of <array 67 of <array 4 of <int>>>>>> %ebp-1933085080 ]
+     #   -1933085080(%ebp)  3023064  [ $v5       <array 5 of <array 94 of <array 6 of <array 67 of <array 4 of <int>>>>>> %ebp-1933085080 ]
-     #2125147056(%ebp)236735160  [ $v6       <array 76 of <array 66 of <array 92 of <array 57 of <array 9 of <bool>>>>>> %ebp+2125147056 ]
+     #   2125147056(%ebp)  236735160  [ $v6       <array 76 of <array 66 of <array 92 of <array 57 of <array 9 of <bool>>>>>> %ebp+2125147056 ]
-     #2125147055(%ebp)   1  [ $v7       <char> %ebp+2125147055 ]
+     #   2125147055(%ebp)   1  [ $v7       <char> %ebp+2125147055 ]
-     pushl   %ebp                   
-     movl    %esp, %ebp             
-     pushl   %ebx                    # save callee saved registers
-     pushl   %esi                   
+     pushl   %ebp                   
+     movl    %esp, %ebp             
+     pushl   %ebx                    # save callee saved registers
-     pushl   %edi                   
+     pushl   %esi                   
+     pushl   %edi                   
-     subl    $-2125147060, %esp      # make room for locals
+     subl    $-2125147064, %esp      # make room for locals
+     cld                             # memset local stack area to 0
+     xorl    %eax, %eax             
+     movl    $542455058, %ecx       
+     mov     %esp, %edi             
+     rep     stosl                  
-     addl    $9, %esp               
+     addl    $12, %esp              
-     addl    $13, %esp              
+     addl    $16, %esp              
-     addl    $-2125147060, %esp      # remove locals
+     addl    $-2125147064, %esp      # remove locals
+     jmp     l_test_4_if_false       #   4:     goto   4_if_false
-     movl    $99, %eax               #   5:     if     99 > 100 goto 8_if_true
+     movl    $99, %eax               #   6:     if     99 > 100 goto 8_if_true
-     jmp     l_test_9_if_false       #   6:     goto   9_if_false
+     jmp     l_test_9_if_false       #   7:     goto   9_if_false
-     jmp     l_test_7                #   8:     goto   7
+     jmp     l_test_7                #   9:     goto   7
-     jmp     l_test_2                #  11:     goto   2
+     jmp     l_test_2                #  12:     goto   2
+ l_test_4_if_false:
-     call    WriteLn                 #  13:     call   WriteLn
+     call    WriteLn                 #  15:     call   WriteLn
