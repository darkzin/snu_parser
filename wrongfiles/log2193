+     jmp     l_f0_2                  #   1:     goto   2
+     jmp     l_f0_2                  #   2:     goto   2
-     movl    $1, %eax                #   2:     assign t5 <- 1
+     movl    $1, %eax                #   4:     assign t5 <- 1
-     jmp     l_f0_3                  #   3:     goto   3
+     jmp     l_f0_3                  #   5:     goto   3
+ l_f0_2:
-     movl    $0, %eax                #   4:     assign t5 <- 0
+     movl    $0, %eax                #   7:     assign t5 <- 0
-     movzbl  -17(%ebp), %eax         #   6:     return t5
+     movzbl  -17(%ebp), %eax         #   9:     return t5
-     movl    $78655, %eax            #   7:     sub    t6 <- 78655, 57876
+     movl    $78655, %eax            #  10:     sub    t6 <- 78655, 57876
-     movl    $93169, %eax            #   8:     if     93169 >= t6 goto 8_if_true
+     movl    $93169, %eax            #  11:     if     93169 >= t6 goto 8_if_true
-     jmp     l_f0_9_if_false         #   9:     goto   9_if_false
+     jmp     l_f0_9_if_false         #  12:     goto   9_if_false
-     call    WriteLn                 #  11:     call   WriteLn
+     call    WriteLn                 #  14:     call   WriteLn
-     call    dummyCHARfunc           #  12:     call   t7 <- dummyCHARfunc
+     call    dummyCHARfunc           #  15:     call   t7 <- dummyCHARfunc
-     call    ReadInt                 #  13:     call   t8 <- ReadInt
+     call    ReadInt                 #  16:     call   t8 <- ReadInt
-     movl    $73697, %eax            #  14:     if     73697 <= 95795 goto 15_if_true
+     movl    $73697, %eax            #  17:     if     73697 <= 95795 goto 15_if_true
-     jmp     l_f0_16_if_false        #  15:     goto   16_if_false
+     jmp     l_f0_16_if_false        #  18:     goto   16_if_false
-     jmp     l_f0_14                 #  17:     goto   14
+     jmp     l_f0_14                 #  20:     goto   14
-     jmp     l_f0_7                  #  20:     goto   7
+     jmp     l_f0_7                  #  23:     goto   7
-     movl    $63910, %eax            #  24:     add    t9 <- 63910, 24253
+     movl    $63910, %eax            #  27:     add    t9 <- 63910, 24253
-     movl    -36(%ebp), %eax         #  25:     add    t10 <- t9, 94386
+     movl    -36(%ebp), %eax         #  28:     add    t10 <- t9, 94386
-     movl    $46381, %eax            #  26:     if     46381 < t10 goto 20_while_body
+     movl    $46381, %eax            #  29:     if     46381 < t10 goto 20_while_body
-     jmp     l_f0_18                 #  27:     goto   18
+     jmp     l_f0_18                 #  30:     goto   18
-     jmp     l_f0_19_while_cond      #  29:     goto   19_while_cond
+     jmp     l_f0_19_while_cond      #  32:     goto   19_while_cond
+     jmp     l_f1_0                  #   3:     goto   0
-     jmp     l_f1_1_while_cond       #   4:     goto   1_while_cond
+     jmp     l_f1_1_while_cond       #   5:     goto   1_while_cond
+ l_f1_0:
-     call    dummyCHARfunc           #   6:     call   t5 <- dummyCHARfunc
+     call    dummyCHARfunc           #   8:     call   t5 <- dummyCHARfunc
-     call    WriteLn                 #   7:     call   WriteLn
+     call    WriteLn                 #   9:     call   WriteLn
-     call    ReadInt                 #   8:     call   t6 <- ReadInt
+     call    ReadInt                 #  10:     call   t6 <- ReadInt
-     jmp     l_f1_15_while_cond      #  10:     goto   15_while_cond
+     jmp     l_f1_15_while_cond      #  12:     goto   15_while_cond
-     jmp     l_f1_7                  #  11:     goto   7
+     jmp     l_f1_7                  #  13:     goto   7
-     jmp     l_f1_21_while_cond      #  15:     goto   21_while_cond
+     jmp     l_f1_21_while_cond      #  17:     goto   21_while_cond
-     jmp     l_f1_24                 #  18:     goto   24
+     jmp     l_f1_24                 #  20:     goto   24
-     jmp     l_f1_25_while_cond      #  19:     goto   25_while_cond
+     jmp     l_f1_25_while_cond      #  21:     goto   25_while_cond
-     movl    $1, %eax                #  21:     assign v5 <- 1
+     movl    $1, %eax                #  23:     assign v5 <- 1
-     movl    $97, %eax               #  22:     assign v7 <- 97
+     movl    $97, %eax               #  24:     assign v7 <- 97
-     call    dummyCHARfunc           #  24:     call   t7 <- dummyCHARfunc
+     call    dummyCHARfunc           #  26:     call   t7 <- dummyCHARfunc
-     jmp     l_f1_18_while_cond      #  25:     goto   18_while_cond
+     jmp     l_f1_18_while_cond      #  27:     goto   18_while_cond
-     #-220848(%ebp)220824  [ $v3       <array 23 of <array 5 of <array 4 of <array 20 of <array 24 of <char>>>>>> %ebp-220848 ]
+     #   -220848(%ebp)  220824  [ $v3       <array 23 of <array 5 of <array 4 of <array 20 of <array 24 of <char>>>>>> %ebp-220848 ]
-     #-220852(%ebp)   4  [ $v4       <int> %ebp-220852 ]
+     #   -220852(%ebp)   4  [ $v4       <int> %ebp-220852 ]
-     addl    $7, %esp               
+     addl    $16, %esp              
-     addl    $1, %esp               
+     addl    $4, %esp               
