-     #    -92(%ebp)   4  [ $t29      <int> %ebp-92 ]
+     #    -89(%ebp)   1  [ $t4       <bool> %ebp-89 ]
-     #    -96(%ebp)   4  [ $t30      <int> %ebp-96 ]
+     #    -96(%ebp)   4  [ $t5       <int> %ebp-96 ]
-     #   -100(%ebp)   4  [ $t31      <int> %ebp-100 ]
+     #   -100(%ebp)   4  [ $t6       <int> %ebp-100 ]
-     #   -101(%ebp)   1  [ $t4       <bool> %ebp-101 ]
+     #   -104(%ebp)   4  [ $t7       <int> %ebp-104 ]
-     #   -108(%ebp)   4  [ $t5       <int> %ebp-108 ]
+     #   -108(%ebp)   4  [ $t8       <int> %ebp-108 ]
-     #   -112(%ebp)   4  [ $t6       <int> %ebp-112 ]
+     #   -112(%ebp)   4  [ $t9       <int> %ebp-112 ]
-     #   -116(%ebp)   4  [ $t7       <int> %ebp-116 ]
-     #   -120(%ebp)   4  [ $t8       <int> %ebp-120 ]
-     #   -124(%ebp)   4  [ $t9       <int> %ebp-124 ]
-     #   -125(%ebp)   1  [ $v1       <char> %ebp-125 ]
+     #   -113(%ebp)   1  [ $v1       <char> %ebp-113 ]
-     pushl   %ebp                   
-     movl    %esp, %ebp             
-     pushl   %ebx                    # save callee saved registers
-     pushl   %esi                   
+     pushl   %ebp                   
+     movl    %esp, %ebp             
+     pushl   %ebx                    # save callee saved registers
-     pushl   %edi                   
+     pushl   %esi                   
+     pushl   %edi                   
-     subl    $116, %esp              # make room for locals
+     subl    $104, %esp              # make room for locals
-     movl    $29, %ecx              
+     movl    $26, %ecx              
-     movb    %al, -101(%ebp)        
+     movb    %al, -89(%ebp)         
+     movl    %eax, -96(%ebp)        
+     movl    -96(%ebp), %eax         #   6:     add    t6 <- t5, 78402
+     movl    $78402, %ebx           
+     addl    %ebx, %eax             
+     movl    %eax, -100(%ebp)       
+     movl    -100(%ebp), %eax        #   7:     add    t7 <- t6, 68911
+     movl    $68911, %ebx           
+     addl    %ebx, %eax             
+     movl    %eax, -104(%ebp)       
+     movl    -104(%ebp), %eax        #   8:     add    t8 <- t7, 68469
+     movl    $68469, %ebx           
+     addl    %ebx, %eax             
-     movl    -108(%ebp), %eax        #   6:     add    t6 <- t5, 78402
+     movl    -108(%ebp), %eax        #   9:     add    t9 <- t8, 96395
-     movl    $78402, %ebx           
+     movl    $96395, %ebx           
-     movl    -112(%ebp), %eax        #   7:     add    t7 <- t6, 68911
-     movl    $68911, %ebx           
-     addl    %ebx, %eax             
-     movl    %eax, -116(%ebp)       
-     movl    -116(%ebp), %eax        #   8:     add    t8 <- t7, 68469
-     movl    $68469, %ebx           
-     addl    %ebx, %eax             
-     movl    %eax, -120(%ebp)       
-     movl    -120(%ebp), %eax        #   9:     add    t9 <- t8, 96395
-     movl    $96395, %ebx           
-     addl    %ebx, %eax             
-     movl    %eax, -124(%ebp)       
-     movl    -124(%ebp), %eax        #  10:     return t9
+     movl    -112(%ebp), %eax        #  10:     return t9
-     movl    $40241, %eax            #  18:     div    t14 <- 40241, 53923
+     movl    -20(%ebp), %eax         #  18:     mul    t13 <- t11, t12
-     movl    $53923, %ebx           
+     movl    -24(%ebp), %ebx        
-     cdq                            
-     idivl   %ebx                   
+     imull   %ebx                   
+     movl    %eax, -28(%ebp)        
+     movl    -28(%ebp), %eax         #  19:     add    t14 <- t13, 73908
+     movl    $73908, %ebx           
+     addl    %ebx, %eax             
+     movl    $3, %eax                #  20:     param  1 <- 3
-     movl    -32(%ebp), %eax         #  19:     div    t15 <- t14, 87615
-     movl    $87615, %ebx           
-     cdq                            
-     idivl   %ebx                   
+     pushl   %eax                   
+     movl    8(%ebp), %eax           #  21:     param  0 <- v0
+     pushl   %eax                   
+     call    DIM                     #  22:     call   t15 <- DIM
+     addl    $8, %esp               
-     movl    -20(%ebp), %eax         #  20:     mul    t13 <- t11, t12
+     movl    -32(%ebp), %eax         #  23:     mul    t16 <- t14, t15
-     movl    -24(%ebp), %ebx        
+     movl    -36(%ebp), %ebx        
-     movl    %eax, -28(%ebp)        
-     movl    -28(%ebp), %eax         #  21:     add    t16 <- t13, 73908
-     movl    $73908, %ebx           
-     addl    %ebx, %eax             
-     movl    $3, %eax                #  22:     param  1 <- 3
-     pushl   %eax                   
-     movl    8(%ebp), %eax           #  23:     param  0 <- v0
+     movl    -40(%ebp), %eax         #  24:     add    t17 <- t16, 58098
+     movl    $58098, %ebx           
-     pushl   %eax                   
-     call    DIM                     #  24:     call   t17 <- DIM
-     addl    $8, %esp               
+     addl    %ebx, %eax             
+     movl    $4, %eax                #  25:     param  1 <- 4
-     movl    -40(%ebp), %eax         #  25:     mul    t18 <- t16, t17
-     movl    -44(%ebp), %ebx        
-     imull   %ebx                   
+     pushl   %eax                   
+     movl    8(%ebp), %eax           #  26:     param  0 <- v0
+     pushl   %eax                   
+     call    DIM                     #  27:     call   t18 <- DIM
+     addl    $8, %esp               
-     movl    -48(%ebp), %eax         #  26:     add    t19 <- t18, 58098
+     movl    -44(%ebp), %eax         #  28:     mul    t19 <- t17, t18
-     movl    $58098, %ebx           
+     movl    -48(%ebp), %ebx        
-     addl    %ebx, %eax             
+     imull   %ebx                   
-     movl    $4, %eax                #  27:     param  1 <- 4
-     pushl   %eax                   
-     movl    8(%ebp), %eax           #  28:     param  0 <- v0
-     pushl   %eax                   
-     call    DIM                     #  29:     call   t20 <- DIM
-     addl    $8, %esp               
-     movl    %eax, -56(%ebp)        
-     movl    -52(%ebp), %eax         #  30:     mul    t21 <- t19, t20
-     movl    -56(%ebp), %ebx        
-     imull   %ebx                   
-     movl    %eax, -60(%ebp)        
-     movl    $92110, %eax            #  31:     sub    t22 <- 92110, 74373
+     movl    $92110, %eax            #  29:     sub    t20 <- 92110, 74373
+     movl    %eax, -56(%ebp)        
+     movl    -52(%ebp), %eax         #  30:     add    t21 <- t19, t20
+     movl    -56(%ebp), %ebx        
+     addl    %ebx, %eax             
+     movl    %eax, -60(%ebp)        
+     movl    $5, %eax                #  31:     param  1 <- 5
+     pushl   %eax                   
+     movl    8(%ebp), %eax           #  32:     param  0 <- v0
+     pushl   %eax                   
+     call    DIM                     #  33:     call   t22 <- DIM
+     addl    $8, %esp               
-     movl    -60(%ebp), %eax         #  32:     add    t23 <- t21, t22
+     movl    -60(%ebp), %eax         #  34:     mul    t23 <- t21, t22
-     addl    %ebx, %eax             
+     imull   %ebx                   
-     movl    $5, %eax                #  33:     param  1 <- 5
-     pushl   %eax                   
-     movl    8(%ebp), %eax           #  34:     param  0 <- v0
+     movl    -68(%ebp), %eax         #  35:     add    t24 <- t23, 71931
+     movl    $71931, %ebx           
-     pushl   %eax                   
-     call    DIM                     #  35:     call   t24 <- DIM
-     addl    $8, %esp               
+     addl    %ebx, %eax             
-     movl    $92110, %eax            #  36:     sub    t26 <- 92110, 74373
+     movl    -72(%ebp), %eax         #  36:     mul    t25 <- t24, 1
-     movl    $74373, %ebx           
+     movl    $1, %ebx               
-     subl    %ebx, %eax             
+     imull   %ebx                   
+     movl    %eax, -76(%ebp)        
+     movl    8(%ebp), %eax           #  37:     param  0 <- v0
+     pushl   %eax                   
+     call    DOFS                    #  38:     call   t26 <- DOFS
+     addl    $4, %esp               
-     movl    -68(%ebp), %eax         #  37:     mul    t25 <- t23, t24
+     movl    -76(%ebp), %eax         #  39:     add    t27 <- t25, t26
-     movl    -72(%ebp), %ebx        
+     movl    -80(%ebp), %ebx        
-     imull   %ebx                   
-     movl    %eax, -76(%ebp)        
-     movl    -76(%ebp), %eax         #  38:     add    t27 <- t25, 71931
-     movl    $71931, %ebx           
-     movl    -84(%ebp), %eax         #  39:     mul    t28 <- t27, 1
+     movl    8(%ebp), %eax           #  40:     add    t28 <- v0, t27
+     movl    -84(%ebp), %ebx        
-     movl    $1, %ebx               
+     addl    %ebx, %eax             
-     imull   %ebx                   
-     movl    8(%ebp), %eax           #  40:     param  0 <- v0
-     pushl   %eax                   
-     call    DOFS                    #  41:     call   t29 <- DOFS
-     addl    $4, %esp               
-     movl    %eax, -92(%ebp)        
-     movl    -88(%ebp), %eax         #  42:     add    t30 <- t28, t29
-     movl    -92(%ebp), %ebx        
-     addl    %ebx, %eax             
-     movl    %eax, -96(%ebp)        
-     movl    8(%ebp), %eax           #  43:     add    t31 <- v0, t30
-     movl    -96(%ebp), %ebx        
-     addl    %ebx, %eax             
-     movl    %eax, -100(%ebp)       
-     movl    $100, %eax              #  44:     assign @t31 <- 100
+     movl    $100, %eax              #  41:     assign @t28 <- 100
-     movl    -100(%ebp), %edi       
+     movl    -88(%ebp), %edi        
-     addl    $116, %esp              # remove locals
+     addl    $104, %esp              # remove locals
+     jmp     l_f1_3_if_false         #   1:     goto   3_if_false
-     movl    $98, %eax               #   1:     assign v2 <- 98
+     movl    $98, %eax               #   2:     assign v2 <- 98
-     jmp     l_f1_7                  #   3:     goto   7
+     jmp     l_f1_7                  #   4:     goto   7
-     jmp     l_f1_8_while_cond       #   4:     goto   8_while_cond
+     jmp     l_f1_8_while_cond       #   5:     goto   8_while_cond
-     movl    $2, %eax                #   6:     param  1 <- 2
+     movl    $2, %eax                #   7:     param  1 <- 2
-     movl    8(%ebp), %eax           #   7:     param  0 <- v0
+     movl    8(%ebp), %eax           #   8:     param  0 <- v0
-     call    DIM                     #   8:     call   t5 <- DIM
+     call    DIM                     #   9:     call   t5 <- DIM
-     movl    $62059, %eax            #   9:     mul    t6 <- 62059, t5
+     movl    $62059, %eax            #  10:     mul    t6 <- 62059, t5
-     movl    -68(%ebp), %eax         #  10:     add    t7 <- t6, 31303
+     movl    -68(%ebp), %eax         #  11:     add    t7 <- t6, 31303
-     movl    $3, %eax                #  11:     param  1 <- 3
+     movl    $3, %eax                #  12:     param  1 <- 3
-     movl    8(%ebp), %eax           #  12:     param  0 <- v0
+     movl    8(%ebp), %eax           #  13:     param  0 <- v0
-     call    DIM                     #  13:     call   t8 <- DIM
+     call    DIM                     #  14:     call   t8 <- DIM
-     movl    -72(%ebp), %eax         #  14:     mul    t9 <- t7, t8
+     movl    -72(%ebp), %eax         #  15:     mul    t9 <- t7, t8
-     movl    -80(%ebp), %eax         #  15:     add    t10 <- t9, 76244
+     movl    -80(%ebp), %eax         #  16:     add    t10 <- t9, 76244
-     movl    $4, %eax                #  16:     param  1 <- 4
+     movl    $4, %eax                #  17:     param  1 <- 4
-     movl    8(%ebp), %eax           #  17:     param  0 <- v0
+     movl    8(%ebp), %eax           #  18:     param  0 <- v0
-     call    DIM                     #  18:     call   t11 <- DIM
+     call    DIM                     #  19:     call   t11 <- DIM
-     movl    -16(%ebp), %eax         #  19:     mul    t12 <- t10, t11
+     movl    -16(%ebp), %eax         #  20:     mul    t12 <- t10, t11
-     movl    -24(%ebp), %eax         #  20:     add    t13 <- t12, 97977
+     movl    -24(%ebp), %eax         #  21:     add    t13 <- t12, 97977
-     movl    $5, %eax                #  21:     param  1 <- 5
+     movl    $5, %eax                #  22:     param  1 <- 5
-     movl    8(%ebp), %eax           #  22:     param  0 <- v0
+     movl    8(%ebp), %eax           #  23:     param  0 <- v0
-     call    DIM                     #  23:     call   t14 <- DIM
+     call    DIM                     #  24:     call   t14 <- DIM
-     movl    -28(%ebp), %eax         #  24:     mul    t15 <- t13, t14
+     movl    -28(%ebp), %eax         #  25:     mul    t15 <- t13, t14
-     movl    -36(%ebp), %eax         #  25:     add    t16 <- t15, 96868
+     movl    -36(%ebp), %eax         #  26:     add    t16 <- t15, 96868
-     movl    -40(%ebp), %eax         #  26:     mul    t17 <- t16, 1
+     movl    -40(%ebp), %eax         #  27:     mul    t17 <- t16, 1
-     movl    8(%ebp), %eax           #  27:     param  0 <- v0
+     movl    8(%ebp), %eax           #  28:     param  0 <- v0
-     call    DOFS                    #  28:     call   t18 <- DOFS
+     call    DOFS                    #  29:     call   t18 <- DOFS
-     movl    -44(%ebp), %eax         #  29:     add    t19 <- t17, t18
+     movl    -44(%ebp), %eax         #  30:     add    t19 <- t17, t18
-     movl    8(%ebp), %eax           #  30:     add    t20 <- v0, t19
+     movl    8(%ebp), %eax           #  31:     add    t20 <- v0, t19
-     movl    $100, %eax              #  31:     assign @t20 <- 100
+     movl    $100, %eax              #  32:     assign @t20 <- 100
-     movl    $97, %eax               #  32:     if     97 > 97 goto 12_if_true
+     movl    $97, %eax               #  33:     if     97 > 97 goto 12_if_true
-     jmp     l_f1_13_if_false        #  33:     goto   13_if_false
+     jmp     l_f1_13_if_false        #  34:     goto   13_if_false
-     jmp     l_f1_11                 #  35:     goto   11
+     jmp     l_f1_11                 #  36:     goto   11
-     jmp     l_f1_1                  #  38:     goto   1
+     jmp     l_f1_1                  #  39:     goto   1
+ l_f1_3_if_false:
-     call    dummyCHARfunc           #  40:     call   t21 <- dummyCHARfunc
+     call    dummyCHARfunc           #  42:     call   t21 <- dummyCHARfunc
-     #-184106088(%ebp)184106024  [ $v1       <array 65 of <array 97 of <array 100 of <array 73 of <array 4 of <char>>>>>> %ebp-184106088 ]
+     #   -184106088(%ebp)  184106024  [ $v1       <array 65 of <array 97 of <array 100 of <array 73 of <array 4 of <char>>>>>> %ebp-184106088 ]
-     #1766148352(%ebp)-1950254440  [ $v2       <array 88 of <array 81 of <array 66 of <array 89 of <array 14 of <int>>>>>> %ebp+1766148352 ]
+     #   1766148352(%ebp)  -1950254440  [ $v2       <array 88 of <array 81 of <array 66 of <array 89 of <array 14 of <int>>>>>> %ebp+1766148352 ]
+     cld                             # memset local stack area to 0
+     xorl    %eax, %eax             
+     movl    $-441537091, %ecx      
+     mov     %esp, %edi             
+     rep     stosl                  
