-     #    -68(%ebp)   4  [ $t23      <int> %ebp-68 ]
-     #    -69(%ebp)   1  [ $t4       <bool> %ebp-69 ]
+     #    -65(%ebp)   1  [ $t4       <bool> %ebp-65 ]
-     #    -70(%ebp)   1  [ $t5       <char> %ebp-70 ]
+     #    -66(%ebp)   1  [ $t5       <char> %ebp-66 ]
+     #    -72(%ebp)   4  [ $t6       <int> %ebp-72 ]
-     #    -76(%ebp)   4  [ $t6       <int> %ebp-76 ]
+     #    -76(%ebp)   4  [ $t7       <int> %ebp-76 ]
-     #    -80(%ebp)   4  [ $t7       <int> %ebp-80 ]
+     #    -80(%ebp)   4  [ $t8       <int> %ebp-80 ]
-     #    -84(%ebp)   4  [ $t8       <int> %ebp-84 ]
+     #    -84(%ebp)   4  [ $t9       <int> %ebp-84 ]
-     #    -88(%ebp)   4  [ $t9       <int> %ebp-88 ]
-     subl    $76, %esp               # make room for locals
+     subl    $72, %esp               # make room for locals
-     movl    $19, %ecx              
+     movl    $18, %ecx              
-     movb    %al, -69(%ebp)         
+     movb    %al, -65(%ebp)         
-     jmp     l_f0_5                  #   1:     goto   5
+     jmp     l_f0_6                  #   1:     goto   6
-     movb    %al, -69(%ebp)         
+     movb    %al, -65(%ebp)         
- l_f0_5:
+ l_f0_6:
-     movzbl  -69(%ebp), %eax         #   4:     if     t4 = 0 goto 1_if_true
+     movzbl  -65(%ebp), %eax         #   4:     if     t4 = 0 goto 1_if_true
-     movb    %al, -70(%ebp)         
+     movb    %al, -66(%ebp)         
-     movzbl  -70(%ebp), %eax         #  16:     if     t5 > 100 goto 13_while_body
+     movzbl  -66(%ebp), %eax         #  16:     if     t5 > 100 goto 13_while_body
+     movl    %eax, -72(%ebp)        
+     movl    $2, %eax                #  25:     param  1 <- 2
+     pushl   %eax                   
+     movl    12(%ebp), %eax          #  26:     param  0 <- v2
+     pushl   %eax                   
+     call    DIM                     #  27:     call   t7 <- DIM
+     addl    $8, %esp               
-     movl    $2, %eax                #  25:     param  1 <- 2
+     movl    -72(%ebp), %eax         #  28:     mul    t8 <- t6, t7
+     movl    -76(%ebp), %ebx        
-     pushl   %eax                   
+     imull   %ebx                   
-     movl    12(%ebp), %eax          #  26:     param  0 <- v2
-     pushl   %eax                   
-     call    DIM                     #  27:     call   t7 <- DIM
-     addl    $8, %esp               
-     movl    $9864, %eax             #  28:     add    t9 <- 9864, 19485
+     movl    -80(%ebp), %eax         #  29:     add    t9 <- t8, 88273
-     movl    $19485, %ebx           
+     movl    $88273, %ebx           
-     movl    %eax, -88(%ebp)        
-     movl    -76(%ebp), %eax         #  29:     mul    t8 <- t6, t7
-     movl    -80(%ebp), %ebx        
-     imull   %ebx                   
+     movl    $3, %eax                #  30:     param  1 <- 3
+     pushl   %eax                   
-     movl    -84(%ebp), %eax         #  30:     add    t10 <- t8, 88273
+     movl    12(%ebp), %eax          #  31:     param  0 <- v2
-     movl    $88273, %ebx           
+     pushl   %eax                   
+     call    DIM                     #  32:     call   t10 <- DIM
-     addl    %ebx, %eax             
+     addl    $8, %esp               
-     movl    $3, %eax                #  31:     param  1 <- 3
+     movl    -84(%ebp), %eax         #  33:     mul    t11 <- t9, t10
+     movl    -16(%ebp), %ebx        
-     pushl   %eax                   
+     imull   %ebx                   
-     movl    12(%ebp), %eax          #  32:     param  0 <- v2
-     pushl   %eax                   
-     call    DIM                     #  33:     call   t11 <- DIM
-     addl    $8, %esp               
-     movl    -16(%ebp), %eax         #  34:     mul    t12 <- t10, t11
+     movl    -20(%ebp), %eax         #  34:     add    t12 <- t11, 68650
-     movl    -20(%ebp), %ebx        
+     movl    $68650, %ebx           
-     imull   %ebx                   
+     addl    %ebx, %eax             
+     movl    $4, %eax                #  35:     param  1 <- 4
+     pushl   %eax                   
-     movl    -24(%ebp), %eax         #  35:     add    t13 <- t12, 68650
+     movl    12(%ebp), %eax          #  36:     param  0 <- v2
-     movl    $68650, %ebx           
+     pushl   %eax                   
+     call    DIM                     #  37:     call   t13 <- DIM
-     addl    %ebx, %eax             
+     addl    $8, %esp               
-     movl    $4, %eax                #  36:     param  1 <- 4
+     movl    -24(%ebp), %eax         #  38:     mul    t14 <- t12, t13
+     movl    -28(%ebp), %ebx        
-     pushl   %eax                   
+     imull   %ebx                   
-     movl    12(%ebp), %eax          #  37:     param  0 <- v2
-     pushl   %eax                   
-     call    DIM                     #  38:     call   t14 <- DIM
-     addl    $8, %esp               
-     movl    -28(%ebp), %eax         #  39:     mul    t15 <- t13, t14
+     movl    -32(%ebp), %eax         #  39:     add    t15 <- t14, 92248
-     movl    -32(%ebp), %ebx        
+     movl    $92248, %ebx           
-     imull   %ebx                   
+     addl    %ebx, %eax             
+     movl    $5, %eax                #  40:     param  1 <- 5
+     pushl   %eax                   
-     movl    -36(%ebp), %eax         #  40:     add    t16 <- t15, 92248
+     movl    12(%ebp), %eax          #  41:     param  0 <- v2
-     movl    $92248, %ebx           
+     pushl   %eax                   
+     call    DIM                     #  42:     call   t16 <- DIM
-     addl    %ebx, %eax             
+     addl    $8, %esp               
-     movl    $5, %eax                #  41:     param  1 <- 5
+     movl    -36(%ebp), %eax         #  43:     mul    t17 <- t15, t16
+     movl    -40(%ebp), %ebx        
-     pushl   %eax                   
+     imull   %ebx                   
-     movl    12(%ebp), %eax          #  42:     param  0 <- v2
-     pushl   %eax                   
-     call    DIM                     #  43:     call   t17 <- DIM
-     addl    $8, %esp               
-     movl    -40(%ebp), %eax         #  44:     mul    t18 <- t16, t17
+     movl    -44(%ebp), %eax         #  44:     add    t18 <- t17, 43069
-     movl    -44(%ebp), %ebx        
+     movl    $43069, %ebx           
-     imull   %ebx                   
+     addl    %ebx, %eax             
-     movl    -48(%ebp), %eax         #  45:     add    t19 <- t18, 43069
+     movl    -48(%ebp), %eax         #  45:     mul    t19 <- t18, 1
-     movl    $43069, %ebx           
+     movl    $1, %ebx               
-     addl    %ebx, %eax             
+     imull   %ebx                   
-     movl    -52(%ebp), %eax         #  46:     mul    t20 <- t19, 1
+     movl    12(%ebp), %eax          #  46:     param  0 <- v2
-     movl    $1, %ebx               
-     imull   %ebx                   
+     pushl   %eax                   
+     call    DOFS                    #  47:     call   t20 <- DOFS
+     addl    $4, %esp               
-     movl    12(%ebp), %eax          #  47:     param  0 <- v2
+     movl    -52(%ebp), %eax         #  48:     add    t21 <- t19, t20
+     movl    -56(%ebp), %ebx        
-     pushl   %eax                   
-     call    DOFS                    #  48:     call   t21 <- DOFS
-     addl    $4, %esp               
+     addl    %ebx, %eax             
-     movl    -56(%ebp), %eax         #  49:     add    t22 <- t20, t21
+     movl    12(%ebp), %eax          #  49:     add    t22 <- v2, t21
-     movl    12(%ebp), %eax          #  50:     add    t23 <- v2, t22
-     movl    -64(%ebp), %ebx        
-     addl    %ebx, %eax             
-     movl    %eax, -68(%ebp)        
-     movl    $97, %eax               #  51:     assign @t23 <- 97
+     movl    $97, %eax               #  50:     assign @t22 <- 97
-     movl    -68(%ebp), %edi        
+     movl    -64(%ebp), %edi        
-     jmp     l_f0_15                 #  52:     goto   15
+     jmp     l_f0_15                 #  51:     goto   15
-     addl    $76, %esp               # remove locals
+     addl    $72, %esp               # remove locals
+     jmp     l_test_2_if_false       #   0:     goto   2_if_false
-     movl    $90205, %eax            #   0:     assign v0 <- 90205
+     movl    $90205, %eax            #   1:     assign v0 <- 90205
-     jmp     l_test_0                #   1:     goto   0
+     jmp     l_test_0                #   2:     goto   0
+ l_test_2_if_false:
-     movl    $98, %eax               #   4:     if     98 <= 100 goto 8_while_body
+     movl    $98, %eax               #   6:     if     98 <= 100 goto 8_while_body
-     jmp     l_test_6                #   5:     goto   6
+     jmp     l_test_6                #   7:     goto   6
-     movl    $97, %eax               #   7:     if     97 >= 99 goto 11_if_true
+     movl    $97, %eax               #   9:     if     97 >= 99 goto 11_if_true
-     jmp     l_test_12_if_false      #   8:     goto   12_if_false
+     jmp     l_test_12_if_false      #  10:     goto   12_if_false
-     jmp     l_test_10               #  10:     goto   10
+     jmp     l_test_10               #  12:     goto   10
-     jmp     l_test_14               #  13:     goto   14
+     jmp     l_test_14               #  15:     goto   14
-     jmp     l_test_18_while_cond    #  16:     goto   18_while_cond
+     jmp     l_test_18_while_cond    #  18:     goto   18_while_cond
-     movl    $1, %eax                #  18:     if     1 = 1 goto 22_while_body
+     movl    $1, %eax                #  20:     if     1 = 1 goto 22_while_body
-     jmp     l_test_20               #  19:     goto   20
+     jmp     l_test_20               #  21:     goto   20
-     jmp     l_test_21_while_cond    #  21:     goto   21_while_cond
+     jmp     l_test_21_while_cond    #  23:     goto   21_while_cond
-     jmp     l_test_26_if_false      #  23:     goto   26_if_false
+     jmp     l_test_26_if_false      #  25:     goto   26_if_false
-     jmp     l_test_24               #  24:     goto   24
+     jmp     l_test_24               #  26:     goto   24
-     jmp     l_test_7_while_cond     #  27:     goto   7_while_cond
+     jmp     l_test_7_while_cond     #  29:     goto   7_while_cond
-     leal    _str_1, %eax            #  29:     &()    t0 <- _str_1
+     leal    _str_1, %eax            #  31:     &()    t0 <- _str_1
-     movl    -16(%ebp), %eax         #  30:     param  0 <- t0
+     movl    -16(%ebp), %eax         #  32:     param  0 <- t0
-     call    WriteStr                #  31:     call   WriteStr
+     call    WriteStr                #  33:     call   WriteStr
-     movl    $45389, %eax            #  33:     if     45389 > 14284 goto 33_while_body
+     movl    $45389, %eax            #  35:     if     45389 > 14284 goto 33_while_body
-     jmp     l_test_31               #  34:     goto   31
+     jmp     l_test_31               #  36:     goto   31
-     jmp     l_test_32_while_cond    #  36:     goto   32_while_cond
+     jmp     l_test_32_while_cond    #  38:     goto   32_while_cond
-     call    dummyCHARfunc           #  38:     call   t1 <- dummyCHARfunc
+     call    dummyCHARfunc           #  40:     call   t1 <- dummyCHARfunc
-     movl    $100, %eax              #  39:     assign v1 <- 100
+     movl    $100, %eax              #  41:     assign v1 <- 100
-     jmp     l_test_28               #  40:     goto   28
+     jmp     l_test_28               #  42:     goto   28
-     call    dummyCHARfunc           #  42:     call   t2 <- dummyCHARfunc
+     call    dummyCHARfunc           #  44:     call   t2 <- dummyCHARfunc
-     movzbl  -18(%ebp), %eax         #  43:     if     t2 < 97 goto 38
+     movzbl  -18(%ebp), %eax         #  45:     if     t2 < 97 goto 38
-     jmp     l_test_39               #  44:     goto   39
+     jmp     l_test_39               #  46:     goto   39
-     movl    $1, %eax                #  46:     assign t3 <- 1
+     movl    $1, %eax                #  48:     assign t3 <- 1
-     jmp     l_test_40               #  47:     goto   40
+     jmp     l_test_40               #  49:     goto   40
-     movl    $0, %eax                #  49:     assign t3 <- 0
+     movl    $0, %eax                #  51:     assign t3 <- 0
-     movzbl  -19(%ebp), %eax         #  51:     assign v2 <- t3
+     movzbl  -19(%ebp), %eax         #  53:     assign v2 <- t3
