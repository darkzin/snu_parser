+     jmp     l_f1_3_if_false         #   4:     goto   3_if_false
-     jmp     l_f1_1                  #   5:     goto   1
+     jmp     l_f1_1                  #   6:     goto   1
+ l_f1_3_if_false:
-     call    dummyCHARfunc           #   7:     call   t5 <- dummyCHARfunc
+     call    dummyCHARfunc           #   9:     call   t5 <- dummyCHARfunc
-     movzbl  -14(%ebp), %eax         #   8:     return t5
+     movzbl  -14(%ebp), %eax         #  10:     return t5
-     #  -6180(%ebp)6072  [ $v4       <array 3 of <array 6 of <array 6 of <array 8 of <array 7 of <char>>>>>> %ebp-6180 ]
+     #   -6180(%ebp)  6072  [ $v4       <array 3 of <array 6 of <array 6 of <array 8 of <array 7 of <char>>>>>> %ebp-6180 ]
-     # -14844(%ebp)8664  [ $v5       <array 10 of <array 8 of <array 9 of <array 2 of <array 6 of <char>>>>>> %ebp-14844 ]
+     #   -14844(%ebp)  8664  [ $v5       <array 10 of <array 8 of <array 9 of <array 2 of <array 6 of <char>>>>>> %ebp-14844 ]
-     # -14848(%ebp)   4  [ $v6       <int> %ebp-14848 ]
+     #   -14848(%ebp)   4  [ $v6       <int> %ebp-14848 ]
-     # -14849(%ebp)   1  [ $v7       <bool> %ebp-14849 ]
+     #   -14849(%ebp)   1  [ $v7       <bool> %ebp-14849 ]
-     jmp     l_test_3_while_body     #   2:     goto   3_while_body
-     jmp     l_test_3_while_body     #   3:     goto   3_while_body
+     jmp     l_test_6                #   2:     goto   6
+     jmp     l_test_6                #   3:     goto   6
+ l_test_6:
+     jmp     l_test_3_while_body     #   6:     goto   3_while_body
+     jmp     l_test_3_while_body     #   7:     goto   3_while_body
+     jmp     l_test_1                #   8:     goto   1
-     jmp     l_test_2_while_cond     #   6:     goto   2_while_cond
+     jmp     l_test_2_while_cond     #  10:     goto   2_while_cond
+ l_test_1:
-     jmp     l_test_11               #   7:     goto   11
+     jmp     l_test_11               #  12:     goto   11
-     jmp     l_test_11               #   8:     goto   11
+     jmp     l_test_11               #  13:     goto   11
-     movl    $1, %eax                #  10:     assign t0 <- 1
+     movl    $1, %eax                #  15:     assign t0 <- 1
-     jmp     l_test_13               #  11:     goto   13
+     jmp     l_test_13               #  16:     goto   13
-     movl    $0, %eax                #  12:     assign t0 <- 0
+     movl    $0, %eax                #  17:     assign t0 <- 0
-     movzbl  -13(%ebp), %eax         #  14:     assign v0 <- t0
+     movzbl  -13(%ebp), %eax         #  19:     assign v0 <- t0
-     call    dummyCHARfunc           #  15:     call   t1 <- dummyCHARfunc
+     call    dummyCHARfunc           #  20:     call   t1 <- dummyCHARfunc
-     movzbl  -14(%ebp), %eax         #  16:     param  2 <- t1
+     movzbl  -14(%ebp), %eax         #  21:     param  2 <- t1
-     leal    v2, %eax                #  17:     &()    t2 <- v2
+     leal    v2, %eax                #  22:     &()    t2 <- v2
-     movl    -20(%ebp), %eax         #  18:     param  1 <- t2
+     movl    -20(%ebp), %eax         #  23:     param  1 <- t2
-     movl    $1, %eax                #  19:     param  0 <- 1
+     movl    $1, %eax                #  24:     param  0 <- 1
-     call    f0                      #  20:     call   t3 <- f0
+     call    f0                      #  25:     call   t3 <- f0
-     addl    $6, %esp               
+     addl    $12, %esp              
-     movzbl  -21(%ebp), %eax         #  21:     assign v1 <- t3
+     movzbl  -21(%ebp), %eax         #  26:     assign v1 <- t3
