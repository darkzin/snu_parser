+     jmp     l_f1_0                  #   1:     goto   0
-     movl    $47228, %eax            #   2:     if     47228 = 3927 goto 6_while_body
+     movl    $47228, %eax            #   3:     if     47228 = 3927 goto 6_while_body
-     jmp     l_f1_4                  #   3:     goto   4
+     jmp     l_f1_4                  #   4:     goto   4
-     jmp     l_f1_5_while_cond       #   5:     goto   5_while_cond
+     jmp     l_f1_5_while_cond       #   6:     goto   5_while_cond
-     jmp     l_f1_1_while_cond       #   7:     goto   1_while_cond
+     jmp     l_f1_1_while_cond       #   8:     goto   1_while_cond
+ l_f1_0:
-     call    ReadInt                 #   8:     call   t7 <- ReadInt
+     call    ReadInt                 #  10:     call   t7 <- ReadInt
-     movl    $97104, %eax            #   9:     if     97104 > t7 goto 9_if_true
+     movl    $97104, %eax            #  11:     if     97104 > t7 goto 9_if_true
-     jmp     l_f1_10_if_false        #  10:     goto   10_if_false
+     jmp     l_f1_10_if_false        #  12:     goto   10_if_false
-     call    dummyBOOLfunc           #  12:     call   t8 <- dummyBOOLfunc
+     call    dummyBOOLfunc           #  14:     call   t8 <- dummyBOOLfunc
-     jmp     l_f1_14_while_cond      #  14:     goto   14_while_cond
+     jmp     l_f1_14_while_cond      #  16:     goto   14_while_cond
-     jmp     l_f1_17_while_cond      #  16:     goto   17_while_cond
+     jmp     l_f1_17_while_cond      #  18:     goto   17_while_cond
-     jmp     l_f1_8                  #  17:     goto   8
+     jmp     l_f1_8                  #  19:     goto   8
-     jmp     l_f2_5                  #   2:     goto   5
+     jmp     l_f2_6                  #   2:     goto   6
- l_f2_5:
+ l_f2_6:
+     jmp     l_f2_18                 #  20:     goto   18
-     jmp     l_f2_19_while_cond      #  21:     goto   19_while_cond
+     jmp     l_f2_19_while_cond      #  22:     goto   19_while_cond
+ l_f2_18:
-     jmp     l_f2_14                 #  22:     goto   14
+     jmp     l_f2_14                 #  24:     goto   14
-     addl    $1, %esp               
+     addl    $4, %esp               
+     jmp     l_test_4                #   3:     goto   4
+     jmp     l_test_4                #   4:     goto   4
+     jmp     l_test_4                #   5:     goto   4
-     movl    $1, %eax                #   3:     assign t1 <- 1
+     movl    $1, %eax                #   6:     assign t1 <- 1
-     jmp     l_test_5                #   4:     goto   5
+     jmp     l_test_5                #   7:     goto   5
+ l_test_4:
-     movl    $0, %eax                #   5:     assign t1 <- 0
+     movl    $0, %eax                #   9:     assign t1 <- 0
-     movzbl  -17(%ebp), %eax         #   7:     assign v0 <- t1
+     movzbl  -17(%ebp), %eax         #  11:     assign v0 <- t1
-     call    dummyCHARfunc           #   8:     call   t2 <- dummyCHARfunc
+     call    dummyCHARfunc           #  12:     call   t2 <- dummyCHARfunc
-     movzbl  -18(%ebp), %eax         #   9:     assign v1 <- t2
+     movzbl  -18(%ebp), %eax         #  13:     assign v1 <- t2
-     movl    $87295, %eax            #  10:     sub    t3 <- 87295, 91765
+     movl    $87295, %eax            #  14:     sub    t3 <- 87295, 91765
-     movl    -24(%ebp), %eax         #  11:     add    t4 <- t3, 2120
+     movl    -24(%ebp), %eax         #  15:     add    t4 <- t3, 2120
-     movl    -28(%ebp), %eax         #  12:     sub    t5 <- t4, 39706
+     movl    -28(%ebp), %eax         #  16:     sub    t5 <- t4, 39706
-     movl    -32(%ebp), %eax         #  13:     sub    t6 <- t5, 97486
+     movl    -32(%ebp), %eax         #  17:     sub    t6 <- t5, 97486
-     movl    -36(%ebp), %eax         #  14:     assign v2 <- t6
+     movl    -36(%ebp), %eax         #  18:     assign v2 <- t6
