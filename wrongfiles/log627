+     jmp     l_f0_10                 #  12:     goto   10
-     movl    $1, %eax                #  13:     assign t9 <- 1
+     movl    $1, %eax                #  14:     assign t9 <- 1
-     jmp     l_f0_11                 #  14:     goto   11
+     jmp     l_f0_11                 #  15:     goto   11
+ l_f0_10:
-     movl    $0, %eax                #  15:     assign t9 <- 0
+     movl    $0, %eax                #  17:     assign t9 <- 0
-     movzbl  -25(%ebp), %eax         #  17:     return t9
+     movzbl  -25(%ebp), %eax         #  19:     return t9
-     jmp     l_f0_4                  #  18:     goto   4
+     jmp     l_f0_4                  #  20:     goto   4
-     call    dummyCHARfunc           #  21:     call   t10 <- dummyCHARfunc
+     call    dummyCHARfunc           #  23:     call   t10 <- dummyCHARfunc
-     #    -80(%ebp)   4  [ $t26      <int> %ebp-80 ]
-     #    -81(%ebp)   1  [ $t7       <char> %ebp-81 ]
+     #    -77(%ebp)   1  [ $t7       <char> %ebp-77 ]
+     #    -84(%ebp)   4  [ $t8       <int> %ebp-84 ]
-     #    -88(%ebp)   4  [ $t8       <int> %ebp-88 ]
+     #    -88(%ebp)   4  [ $t9       <int> %ebp-88 ]
-     #    -92(%ebp)   4  [ $t9       <int> %ebp-92 ]
-     subl    $80, %esp               # make room for locals
+     subl    $76, %esp               # make room for locals
-     movl    $20, %ecx              
+     movl    $19, %ecx              
-     movb    %al, -81(%ebp)         
+     movb    %al, -77(%ebp)         
-     movzbl  -81(%ebp), %eax         #   1:     return t7
+     movzbl  -77(%ebp), %eax         #   1:     return t7
-     movl    %eax, -88(%ebp)        
+     movl    %eax, -84(%ebp)        
-     movl    %eax, -92(%ebp)        
+     movl    %eax, -88(%ebp)        
-     movl    $40045, %eax            #   6:     sub    t11 <- 40045, 61667
-     movl    $61667, %ebx           
-     subl    %ebx, %eax             
-     movl    %eax, -20(%ebp)        
-     movl    -88(%ebp), %eax         #   7:     mul    t10 <- t8, t9
+     movl    -84(%ebp), %eax         #   6:     mul    t10 <- t8, t9
-     movl    -92(%ebp), %ebx        
+     movl    -88(%ebp), %ebx        
-     movl    -16(%ebp), %eax         #   8:     add    t12 <- t10, 7867
+     movl    -16(%ebp), %eax         #   7:     add    t11 <- t10, 7867
+     movl    %eax, -20(%ebp)        
+     movl    $3, %eax                #   8:     param  1 <- 3
+     pushl   %eax                   
+     movl    12(%ebp), %eax          #   9:     param  0 <- v2
+     pushl   %eax                   
+     call    DIM                     #  10:     call   t12 <- DIM
+     addl    $8, %esp               
-     movl    $3, %eax                #   9:     param  1 <- 3
+     movl    -20(%ebp), %eax         #  11:     mul    t13 <- t11, t12
+     movl    -24(%ebp), %ebx        
-     pushl   %eax                   
+     imull   %ebx                   
-     movl    12(%ebp), %eax          #  10:     param  0 <- v2
-     pushl   %eax                   
-     call    DIM                     #  11:     call   t13 <- DIM
-     addl    $8, %esp               
-     movl    -24(%ebp), %eax         #  12:     mul    t14 <- t12, t13
-     movl    -28(%ebp), %ebx        
-     imull   %ebx                   
-     movl    %eax, -32(%ebp)        
-     movl    -32(%ebp), %eax         #  13:     add    t15 <- t14, 31967
+     movl    -28(%ebp), %eax         #  12:     add    t14 <- t13, 31967
+     movl    %eax, -32(%ebp)        
+     movl    $4, %eax                #  13:     param  1 <- 4
+     pushl   %eax                   
+     movl    12(%ebp), %eax          #  14:     param  0 <- v2
+     pushl   %eax                   
+     call    DIM                     #  15:     call   t15 <- DIM
+     addl    $8, %esp               
-     movl    $4, %eax                #  14:     param  1 <- 4
+     movl    -32(%ebp), %eax         #  16:     mul    t16 <- t14, t15
+     movl    -36(%ebp), %ebx        
-     pushl   %eax                   
+     imull   %ebx                   
-     movl    12(%ebp), %eax          #  15:     param  0 <- v2
-     pushl   %eax                   
-     call    DIM                     #  16:     call   t16 <- DIM
-     addl    $8, %esp               
-     movl    -36(%ebp), %eax         #  17:     mul    t17 <- t15, t16
-     movl    -40(%ebp), %ebx        
-     imull   %ebx                   
-     movl    %eax, -44(%ebp)        
-     movl    -44(%ebp), %eax         #  18:     add    t18 <- t17, 64759
+     movl    -40(%ebp), %eax         #  17:     add    t17 <- t16, 64759
+     movl    %eax, -44(%ebp)        
+     movl    $5, %eax                #  18:     param  1 <- 5
+     pushl   %eax                   
+     movl    12(%ebp), %eax          #  19:     param  0 <- v2
+     pushl   %eax                   
+     call    DIM                     #  20:     call   t18 <- DIM
+     addl    $8, %esp               
-     movl    $5, %eax                #  19:     param  1 <- 5
+     movl    -44(%ebp), %eax         #  21:     mul    t19 <- t17, t18
+     movl    -48(%ebp), %ebx        
-     pushl   %eax                   
+     imull   %ebx                   
-     movl    12(%ebp), %eax          #  20:     param  0 <- v2
-     pushl   %eax                   
-     call    DIM                     #  21:     call   t19 <- DIM
-     addl    $8, %esp               
-     movl    -48(%ebp), %eax         #  22:     mul    t20 <- t18, t19
-     movl    -52(%ebp), %ebx        
-     imull   %ebx                   
-     movl    %eax, -56(%ebp)        
-     movl    -56(%ebp), %eax         #  23:     add    t21 <- t20, 37471
+     movl    -52(%ebp), %eax         #  22:     add    t20 <- t19, 37471
+     movl    %eax, -56(%ebp)        
+     movl    -56(%ebp), %eax         #  23:     mul    t21 <- t20, 4
+     movl    $4, %ebx               
+     imull   %ebx                   
-     movl    -60(%ebp), %eax         #  24:     mul    t22 <- t21, 4
+     movl    12(%ebp), %eax          #  24:     param  0 <- v2
-     movl    $4, %ebx               
-     imull   %ebx                   
+     pushl   %eax                   
+     call    DOFS                    #  25:     call   t22 <- DOFS
+     addl    $4, %esp               
-     movl    12(%ebp), %eax          #  25:     param  0 <- v2
+     movl    -60(%ebp), %eax         #  26:     add    t23 <- t21, t22
+     movl    -64(%ebp), %ebx        
-     pushl   %eax                   
-     call    DOFS                    #  26:     call   t23 <- DOFS
-     addl    $4, %esp               
+     addl    %ebx, %eax             
-     movl    -64(%ebp), %eax         #  27:     add    t24 <- t22, t23
+     movl    12(%ebp), %eax          #  27:     add    t24 <- v2, t23
-     movl    12(%ebp), %eax          #  28:     add    t25 <- v2, t24
+     movl    $33272, %eax            #  28:     assign @t24 <- 33272
-     movl    -72(%ebp), %ebx        
+     movl    -72(%ebp), %edi        
-     addl    %ebx, %eax             
+     movl    %eax, (%edi)           
+     call    ReadInt                 #  29:     call   t25 <- ReadInt
-     movl    $33272, %eax            #  29:     assign @t25 <- 33272
-     movl    -76(%ebp), %edi        
-     movl    %eax, (%edi)           
-     call    ReadInt                 #  30:     call   t26 <- ReadInt
-     movl    %eax, -80(%ebp)        
-     addl    $80, %esp               # remove locals
+     addl    $76, %esp               # remove locals
-     addl    $6, %esp               
+     addl    $12, %esp              
+     jmp     l_test_2                #   0:     goto   2
-     movl    $1, %eax                #   0:     assign t0 <- 1
+     movl    $1, %eax                #   1:     assign t0 <- 1
-     jmp     l_test_3                #   1:     goto   3
+     jmp     l_test_3                #   2:     goto   3
+ l_test_2:
-     movl    $0, %eax                #   2:     assign t0 <- 0
+     movl    $0, %eax                #   4:     assign t0 <- 0
-     movzbl  -13(%ebp), %eax         #   4:     assign v0 <- t0
+     movzbl  -13(%ebp), %eax         #   6:     assign v0 <- t0
-     jmp     l_test_8_while_body     #   7:     goto   8_while_body
+     jmp     l_test_8_while_body     #   9:     goto   8_while_body
+     jmp     l_test_6                #  10:     goto   6
-     movl    $17798, %eax            #  10:     if     17798 < 60460 goto 13_while_body
+     movl    $17798, %eax            #  13:     if     17798 < 60460 goto 13_while_body
-     jmp     l_test_11               #  11:     goto   11
+     jmp     l_test_11               #  14:     goto   11
-     jmp     l_test_12_while_cond    #  13:     goto   12_while_cond
+     jmp     l_test_12_while_cond    #  16:     goto   12_while_cond
-     jmp     l_test_7_while_cond     #  15:     goto   7_while_cond
+     jmp     l_test_7_while_cond     #  18:     goto   7_while_cond
+ l_test_6:
-     movl    $37809, %eax            #  16:     assign v1 <- 37809
+     movl    $37809, %eax            #  20:     assign v1 <- 37809
-     movl    $35783, %eax            #  17:     mul    t1 <- 35783, 98921
+     movl    $35783, %eax            #  21:     mul    t1 <- 35783, 98921
-     movl    -20(%ebp), %eax         #  18:     div    t2 <- t1, 25891
+     movl    -20(%ebp), %eax         #  22:     div    t2 <- t1, 25891
-     movl    -24(%ebp), %eax         #  19:     div    t3 <- t2, 87023
+     movl    -24(%ebp), %eax         #  23:     div    t3 <- t2, 87023
-     movl    -28(%ebp), %eax         #  20:     param  2 <- t3
+     movl    -28(%ebp), %eax         #  24:     param  2 <- t3
-     movl    $100, %eax              #  21:     param  1 <- 100
+     movl    $100, %eax              #  25:     param  1 <- 100
-     movl    $99, %eax               #  22:     param  0 <- 99
+     movl    $99, %eax               #  26:     param  0 <- 99
-     call    f0                      #  23:     call   t4 <- f0
+     call    f0                      #  27:     call   t4 <- f0
-     addl    $6, %esp               
+     addl    $12, %esp              
-     movl    $50446, %eax            #  24:     if     50446 = 66205 goto 21_if_true
+     movl    $50446, %eax            #  28:     if     50446 = 66205 goto 21_if_true
-     jmp     l_test_22_if_false      #  25:     goto   22_if_false
+     jmp     l_test_22_if_false      #  29:     goto   22_if_false
-     call    dummyBOOLfunc           #  27:     call   t5 <- dummyBOOLfunc
+     call    dummyBOOLfunc           #  31:     call   t5 <- dummyBOOLfunc
-     movl    $8643, %eax             #  28:     if     8643 < 6261 goto 26
+     movl    $8643, %eax             #  32:     if     8643 < 6261 goto 26
-     jmp     l_test_27               #  29:     goto   27
+     jmp     l_test_27               #  33:     goto   27
-     movl    $1, %eax                #  31:     assign t6 <- 1
+     movl    $1, %eax                #  35:     assign t6 <- 1
-     jmp     l_test_28               #  32:     goto   28
+     jmp     l_test_28               #  36:     goto   28
-     movl    $0, %eax                #  34:     assign t6 <- 0
+     movl    $0, %eax                #  38:     assign t6 <- 0
-     movzbl  -31(%ebp), %eax         #  36:     assign v0 <- t6
+     movzbl  -31(%ebp), %eax         #  40:     assign v0 <- t6
-     jmp     l_test_20               #  38:     goto   20
+     jmp     l_test_20               #  42:     goto   20
-     jmp     l_test_17               #  41:     goto   17
+     jmp     l_test_17               #  45:     goto   17
