+     jmp     l_f0_0                  #   1:     goto   0
+     jmp     l_f0_0                  #   2:     goto   0
-     jmp     l_f0_1_while_cond       #   1:     goto   1_while_cond
+     jmp     l_f0_1_while_cond       #   3:     goto   1_while_cond
+ l_f0_0:
-     movl    $20349, %eax            #   2:     if     20349 > 92037 goto 6_if_true
+     movl    $20349, %eax            #   5:     if     20349 > 92037 goto 6_if_true
-     jmp     l_f0_7_if_false         #   3:     goto   7_if_false
+     jmp     l_f0_7_if_false         #   6:     goto   7_if_false
-     call    dummyBOOLfunc           #   5:     call   t6 <- dummyBOOLfunc
+     call    dummyBOOLfunc           #   8:     call   t6 <- dummyBOOLfunc
-     call    dummyCHARfunc           #   6:     call   t7 <- dummyCHARfunc
+     call    dummyCHARfunc           #   9:     call   t7 <- dummyCHARfunc
-     jmp     l_f0_13_if_false        #   7:     goto   13_if_false
+     jmp     l_f0_13_if_false        #  10:     goto   13_if_false
-     jmp     l_f0_11                 #   8:     goto   11
+     jmp     l_f0_11                 #  11:     goto   11
-     jmp     l_f0_5                  #  11:     goto   5
+     jmp     l_f0_5                  #  14:     goto   5
-     call    dummyCHARfunc           #  14:     call   t8 <- dummyCHARfunc
+     call    dummyCHARfunc           #  17:     call   t8 <- dummyCHARfunc
-     movzbl  -15(%ebp), %eax         #  15:     return t8
+     movzbl  -15(%ebp), %eax         #  18:     return t8
-     addl    $1, %esp               
+     addl    $4, %esp               
+     jmp     l_test_0                #   1:     goto   0
-     movl    $100, %eax              #   2:     if     100 >= 98 goto 6_while_body
+     movl    $100, %eax              #   3:     if     100 >= 98 goto 6_while_body
-     jmp     l_test_4                #   3:     goto   4
+     jmp     l_test_4                #   4:     goto   4
-     jmp     l_test_5_while_cond     #   5:     goto   5_while_cond
+     jmp     l_test_5_while_cond     #   6:     goto   5_while_cond
-     movl    $68240, %eax            #   9:     if     68240 > 59606 goto 11
+     movl    $68240, %eax            #  10:     if     68240 > 59606 goto 11
-     jmp     l_test_12               #  10:     goto   12
+     jmp     l_test_12               #  11:     goto   12
-     movl    $1, %eax                #  12:     assign t0 <- 1
+     movl    $1, %eax                #  13:     assign t0 <- 1
-     jmp     l_test_13               #  13:     goto   13
+     jmp     l_test_13               #  14:     goto   13
-     movl    $0, %eax                #  15:     assign t0 <- 0
+     movl    $0, %eax                #  16:     assign t0 <- 0
-     movzbl  -13(%ebp), %eax         #  17:     assign v0 <- t0
+     movzbl  -13(%ebp), %eax         #  18:     assign v0 <- t0
-     call    dummyBOOLfunc           #  18:     call   t1 <- dummyBOOLfunc
+     call    dummyBOOLfunc           #  19:     call   t1 <- dummyBOOLfunc
-     jmp     l_test_1_while_cond     #  19:     goto   1_while_cond
+     jmp     l_test_1_while_cond     #  20:     goto   1_while_cond
+ l_test_0:
-     movl    $100, %eax              #  20:     assign v1 <- 100
+     movl    $100, %eax              #  22:     assign v1 <- 100
-     movl    $97, %eax               #  22:     if     97 >= 100 goto 19
+     movl    $97, %eax               #  24:     if     97 >= 100 goto 19
-     jmp     l_test_20               #  23:     goto   20
+     jmp     l_test_20               #  25:     goto   20
-     movl    $1, %eax                #  25:     assign t2 <- 1
+     movl    $1, %eax                #  27:     assign t2 <- 1
-     jmp     l_test_21               #  26:     goto   21
+     jmp     l_test_21               #  28:     goto   21
-     movl    $0, %eax                #  28:     assign t2 <- 0
+     movl    $0, %eax                #  30:     assign t2 <- 0
-     movzbl  -15(%ebp), %eax         #  30:     assign v0 <- t2
+     movzbl  -15(%ebp), %eax         #  32:     assign v0 <- t2
-     movl    $98, %eax               #  31:     if     98 >= 98 goto 26
+     movl    $98, %eax               #  33:     if     98 >= 98 goto 27
-     jge     l_test_26              
+     jge     l_test_27              
-     jmp     l_test_27               #  32:     goto   27
+     jmp     l_test_28               #  34:     goto   28
- l_test_26:
+ l_test_27:
-     movl    $1, %eax                #  34:     assign t3 <- 1
+     movl    $1, %eax                #  36:     assign t3 <- 1
-     jmp     l_test_28               #  35:     goto   28
+     jmp     l_test_29               #  37:     goto   29
- l_test_27:
+ l_test_28:
-     movl    $0, %eax                #  37:     assign t3 <- 0
+     movl    $0, %eax                #  39:     assign t3 <- 0
- l_test_28:
+ l_test_29:
-     movzbl  -16(%ebp), %eax         #  39:     param  2 <- t3
+     movzbl  -16(%ebp), %eax         #  41:     param  2 <- t3
-     leal    v2, %eax                #  40:     &()    t4 <- v2
+     leal    v2, %eax                #  42:     &()    t4 <- v2
-     movl    -20(%ebp), %eax         #  41:     param  1 <- t4
+     movl    -20(%ebp), %eax         #  43:     param  1 <- t4
-     movl    $99, %eax               #  42:     param  0 <- 99
+     movl    $99, %eax               #  44:     param  0 <- 99
-     call    f2                      #  43:     call   t5 <- f2
+     call    f2                      #  45:     call   t5 <- f2
-     addl    $6, %esp               
+     addl    $12, %esp              
-     movl    $97, %eax               #  44:     if     97 < t5 goto 24_if_true
+     movl    $97, %eax               #  46:     if     97 < t5 goto 24_if_true
-     jmp     l_test_25_if_false      #  45:     goto   25_if_false
+     jmp     l_test_25_if_false      #  47:     goto   25_if_false
-     jmp     l_test_23               #  47:     goto   23
+     jmp     l_test_23               #  49:     goto   23
