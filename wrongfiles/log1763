+     jmp     l_f0_13                 #  10:     goto   13
-     movl    $1, %eax                #  10:     assign t4 <- 1
+     movl    $1, %eax                #  11:     assign t4 <- 1
-     jmp     l_f0_13                 #  11:     goto   13
+     jmp     l_f0_14                 #  12:     goto   14
+ l_f0_13:
-     movl    $0, %eax                #  12:     assign t4 <- 0
+     movl    $0, %eax                #  14:     assign t4 <- 0
- l_f0_13:
+ l_f0_14:
+     jmp     l_f0_17                 #  16:     goto   17
+     jmp     l_f0_17                 #  17:     goto   17
-     movl    $1, %eax                #  14:     assign t5 <- 1
+     movl    $1, %eax                #  18:     assign t5 <- 1
-     jmp     l_f0_17                 #  15:     goto   17
+     jmp     l_f0_18                 #  19:     goto   18
+ l_f0_17:
-     movl    $0, %eax                #  16:     assign t5 <- 0
+     movl    $0, %eax                #  21:     assign t5 <- 0
- l_f0_17:
+ l_f0_18:
-     movzbl  -13(%ebp), %eax         #  18:     if     t4 = t5 goto 8
+     movzbl  -13(%ebp), %eax         #  23:     if     t4 = t5 goto 8
-     jmp     l_f0_9                  #  19:     goto   9
+     jmp     l_f0_9                  #  24:     goto   9
-     movl    $1, %eax                #  21:     assign t6 <- 1
+     movl    $1, %eax                #  26:     assign t6 <- 1
-     jmp     l_f0_10                 #  22:     goto   10
+     jmp     l_f0_10                 #  27:     goto   10
-     movl    $0, %eax                #  24:     assign t6 <- 0
+     movl    $0, %eax                #  29:     assign t6 <- 0
-     movzbl  -15(%ebp), %eax         #  26:     return t6
+     movzbl  -15(%ebp), %eax         #  31:     return t6
-     call    ReadInt                 #  27:     call   t7 <- ReadInt
+     call    ReadInt                 #  32:     call   t7 <- ReadInt
-     #    -80(%ebp)   4  [ $t26      <int> %ebp-80 ]
+     #    -77(%ebp)   1  [ $t4       <bool> %ebp-77 ]
-     #    -84(%ebp)   4  [ $t27      <int> %ebp-84 ]
+     #    -84(%ebp)   4  [ $t5       <int> %ebp-84 ]
+     #    -88(%ebp)   4  [ $t6       <int> %ebp-88 ]
-     #    -85(%ebp)   1  [ $t4       <bool> %ebp-85 ]
+     #    -89(%ebp)   1  [ $t7       <bool> %ebp-89 ]
-     #    -92(%ebp)   4  [ $t5       <int> %ebp-92 ]
-     #    -96(%ebp)   4  [ $t6       <int> %ebp-96 ]
+     #    -96(%ebp)   4  [ $t8       <int> %ebp-96 ]
-     #    -97(%ebp)   1  [ $t7       <bool> %ebp-97 ]
-     #   -104(%ebp)   4  [ $t8       <int> %ebp-104 ]
-     #   -108(%ebp)   4  [ $t9       <int> %ebp-108 ]
+     #   -100(%ebp)   4  [ $t9       <int> %ebp-100 ]
-     #   -109(%ebp)   1  [ $v5       <bool> %ebp-109 ]
+     #   -101(%ebp)   1  [ $v5       <bool> %ebp-101 ]
-     pushl   %ebp                   
-     movl    %esp, %ebp             
-     pushl   %ebx                    # save callee saved registers
-     pushl   %esi                   
+     pushl   %ebp                   
+     movl    %esp, %ebp             
+     pushl   %ebx                    # save callee saved registers
-     pushl   %edi                   
+     pushl   %esi                   
+     pushl   %edi                   
-     subl    $100, %esp              # make room for locals
+     subl    $92, %esp               # make room for locals
-     movl    $25, %ecx              
+     movl    $23, %ecx              
+     jmp     l_f2_12                 #   9:     goto   12
+     jmp     l_f2_12                 #  10:     goto   12
-     movl    $1, %eax                #   9:     assign t4 <- 1
+     movl    $1, %eax                #  11:     assign t4 <- 1
-     movb    %al, -85(%ebp)         
+     movb    %al, -77(%ebp)         
-     jmp     l_f2_13                 #  10:     goto   13
+     jmp     l_f2_13                 #  12:     goto   13
+ l_f2_12:
-     movl    $0, %eax                #  11:     assign t4 <- 0
+     movl    $0, %eax                #  14:     assign t4 <- 0
-     movb    %al, -85(%ebp)         
+     movb    %al, -77(%ebp)         
-     movzbl  -85(%ebp), %eax         #  13:     param  0 <- t4
+     movzbl  -77(%ebp), %eax         #  16:     param  0 <- t4
-     call    f1                      #  14:     call   t5 <- f1
+     call    f1                      #  17:     call   t5 <- f1
-     addl    $3, %esp               
+     addl    $12, %esp              
-     movl    %eax, -92(%ebp)        
+     movl    %eax, -84(%ebp)        
-     movl    -92(%ebp), %eax         #  15:     div    t6 <- t5, 9932
+     movl    -84(%ebp), %eax         #  18:     div    t6 <- t5, 9932
+     movl    %eax, -88(%ebp)        
+     movl    -88(%ebp), %eax         #  19:     return t6
+     jmp     l_f2_exit              
+     movl    $1737, %eax             #  20:     if     1737 > 95592 goto 16
+     movl    $95592, %ebx           
+     cmpl    %ebx, %eax             
+     jg      l_f2_16                
+     jmp     l_f2_17                 #  21:     goto   17
+ l_f2_16:
+     movl    $1, %eax                #  23:     assign t7 <- 1
+     movb    %al, -89(%ebp)         
+     jmp     l_f2_18                 #  24:     goto   18
+ l_f2_17:
+     movl    $0, %eax                #  26:     assign t7 <- 0
+     movb    %al, -89(%ebp)         
+ l_f2_18:
+     movl    $2, %eax                #  28:     param  1 <- 2
+     pushl   %eax                   
+     movl    8(%ebp), %eax           #  29:     param  0 <- v2
+     pushl   %eax                   
+     call    DIM                     #  30:     call   t8 <- DIM
+     addl    $8, %esp               
-     movl    -96(%ebp), %eax         #  16:     return t6
-     jmp     l_f2_exit              
-     movl    $1737, %eax             #  17:     if     1737 > 95592 goto 16
-     movl    $95592, %ebx           
-     cmpl    %ebx, %eax             
-     jg      l_f2_16                
-     jmp     l_f2_17                 #  18:     goto   17
- l_f2_16:
-     movl    $1, %eax                #  20:     assign t7 <- 1
-     movb    %al, -97(%ebp)         
-     jmp     l_f2_18                 #  21:     goto   18
- l_f2_17:
-     movl    $0, %eax                #  23:     assign t7 <- 0
-     movb    %al, -97(%ebp)         
- l_f2_18:
-     movl    $2, %eax                #  25:     param  1 <- 2
-     pushl   %eax                   
-     movl    8(%ebp), %eax           #  26:     param  0 <- v2
-     pushl   %eax                   
-     call    DIM                     #  27:     call   t8 <- DIM
-     addl    $8, %esp               
-     movl    %eax, -104(%ebp)       
-     movl    $83284, %eax            #  28:     mul    t9 <- 83284, t8
+     movl    $83284, %eax            #  31:     mul    t9 <- 83284, t8
-     movl    -104(%ebp), %ebx       
+     movl    -96(%ebp), %ebx        
-     movl    %eax, -108(%ebp)       
+     movl    %eax, -100(%ebp)       
-     movl    $90554, %eax            #  29:     div    t10 <- 90554, 71140
+     movl    $90554, %eax            #  32:     div    t10 <- 90554, 71140
-     movl    $56933, %eax            #  30:     add    t11 <- 56933, t10
+     movl    $56933, %eax            #  33:     add    t11 <- 56933, t10
-     movl    -108(%ebp), %eax        #  31:     add    t12 <- t9, t11
+     movl    -100(%ebp), %eax        #  34:     add    t12 <- t9, t11
-     movl    $3, %eax                #  32:     param  1 <- 3
+     movl    $3, %eax                #  35:     param  1 <- 3
-     movl    8(%ebp), %eax           #  33:     param  0 <- v2
+     movl    8(%ebp), %eax           #  36:     param  0 <- v2
-     call    DIM                     #  34:     call   t13 <- DIM
+     call    DIM                     #  37:     call   t13 <- DIM
-     movl    $90554, %eax            #  35:     div    t15 <- 90554, 71140
-     movl    $71140, %ebx           
-     cdq                            
-     idivl   %ebx                   
-     movl    %eax, -36(%ebp)        
-     movl    $56933, %eax            #  36:     add    t16 <- 56933, t15
-     movl    -36(%ebp), %ebx        
-     addl    %ebx, %eax             
-     movl    %eax, -40(%ebp)        
-     movl    -24(%ebp), %eax         #  37:     mul    t14 <- t12, t13
+     movl    -24(%ebp), %eax         #  38:     mul    t14 <- t12, t13
-     movl    -32(%ebp), %eax         #  38:     add    t17 <- t14, 14134
+     movl    -32(%ebp), %eax         #  39:     add    t15 <- t14, 14134
+     movl    %eax, -36(%ebp)        
+     movl    $4, %eax                #  40:     param  1 <- 4
+     pushl   %eax                   
+     movl    8(%ebp), %eax           #  41:     param  0 <- v2
+     pushl   %eax                   
+     call    DIM                     #  42:     call   t16 <- DIM
+     addl    $8, %esp               
+     movl    %eax, -40(%ebp)        
+     movl    -36(%ebp), %eax         #  43:     mul    t17 <- t15, t16
+     movl    -40(%ebp), %ebx        
+     imull   %ebx                   
+     movl    -44(%ebp), %eax         #  44:     add    t18 <- t17, 23330
+     movl    $23330, %ebx           
+     addl    %ebx, %eax             
+     movl    %eax, -48(%ebp)        
-     movl    $4, %eax                #  39:     param  1 <- 4
+     movl    $5, %eax                #  45:     param  1 <- 5
-     movl    8(%ebp), %eax           #  40:     param  0 <- v2
+     movl    8(%ebp), %eax           #  46:     param  0 <- v2
-     call    DIM                     #  41:     call   t18 <- DIM
+     call    DIM                     #  47:     call   t19 <- DIM
-     movl    %eax, -48(%ebp)        
+     movl    %eax, -52(%ebp)        
-     movl    -44(%ebp), %eax         #  42:     mul    t19 <- t17, t18
+     movl    -48(%ebp), %eax         #  48:     mul    t20 <- t18, t19
-     movl    -48(%ebp), %ebx        
+     movl    -52(%ebp), %ebx        
-     movl    %eax, -52(%ebp)        
-     movl    -52(%ebp), %eax         #  43:     add    t20 <- t19, 23330
-     movl    $23330, %ebx           
-     addl    %ebx, %eax             
-     movl    $5, %eax                #  44:     param  1 <- 5
-     pushl   %eax                   
-     movl    8(%ebp), %eax           #  45:     param  0 <- v2
+     movl    -56(%ebp), %eax         #  49:     add    t21 <- t20, 22469
+     movl    $22469, %ebx           
-     pushl   %eax                   
-     call    DIM                     #  46:     call   t21 <- DIM
-     addl    $8, %esp               
+     addl    %ebx, %eax             
-     movl    -56(%ebp), %eax         #  47:     mul    t22 <- t20, t21
+     movl    -60(%ebp), %eax         #  50:     mul    t22 <- t21, 1
-     movl    -60(%ebp), %ebx        
+     movl    $1, %ebx               
-     movl    -64(%ebp), %eax         #  48:     add    t23 <- t22, 22469
+     movl    8(%ebp), %eax           #  51:     param  0 <- v2
-     movl    $22469, %ebx           
+     pushl   %eax                   
+     call    DOFS                    #  52:     call   t23 <- DOFS
-     addl    %ebx, %eax             
+     addl    $4, %esp               
-     movl    -68(%ebp), %eax         #  49:     mul    t24 <- t23, 1
+     movl    -64(%ebp), %eax         #  53:     add    t24 <- t22, t23
+     movl    -68(%ebp), %ebx        
-     movl    $1, %ebx               
+     addl    %ebx, %eax             
-     imull   %ebx                   
-     movl    8(%ebp), %eax           #  50:     param  0 <- v2
+     movl    8(%ebp), %eax           #  54:     add    t25 <- v2, t24
+     movl    -72(%ebp), %ebx        
-     pushl   %eax                   
-     call    DOFS                    #  51:     call   t25 <- DOFS
-     addl    $4, %esp               
+     addl    %ebx, %eax             
-     movl    -72(%ebp), %eax         #  52:     add    t26 <- t24, t25
-     movl    -76(%ebp), %ebx        
-     addl    %ebx, %eax             
-     movl    %eax, -80(%ebp)        
-     movl    8(%ebp), %eax           #  53:     add    t27 <- v2, t26
-     movl    -80(%ebp), %ebx        
-     addl    %ebx, %eax             
-     movl    %eax, -84(%ebp)        
-     movzbl  -97(%ebp), %eax         #  54:     assign @t27 <- t7
+     movzbl  -89(%ebp), %eax         #  55:     assign @t25 <- t7
-     movl    -84(%ebp), %edi        
+     movl    -76(%ebp), %edi        
-     addl    $100, %esp              # remove locals
+     addl    $92, %esp               # remove locals
