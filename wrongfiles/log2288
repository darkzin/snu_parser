-     #    -68(%ebp)   4  [ $t23      <int> %ebp-68 ]
+     #    -65(%ebp)   1  [ $t23      <bool> %ebp-65 ]
-     #    -73(%ebp)   1  [ $t25      <bool> %ebp-73 ]
+     #    -76(%ebp)   4  [ $t25      <int> %ebp-76 ]
-     #   -136(%ebp)   4  [ $t40      <int> %ebp-136 ]
+     #   -133(%ebp)   1  [ $t40      <char> %ebp-133 ]
-     #   -140(%ebp)   4  [ $t41      <int> %ebp-140 ]
+     #   -140(%ebp)   4  [ $t5       <int> %ebp-140 ]
-     #   -141(%ebp)   1  [ $t42      <char> %ebp-141 ]
+     #   -144(%ebp)   4  [ $t6       <int> %ebp-144 ]
-     #   -148(%ebp)   4  [ $t5       <int> %ebp-148 ]
+     #   -148(%ebp)   4  [ $t7       <int> %ebp-148 ]
-     #   -152(%ebp)   4  [ $t6       <int> %ebp-152 ]
+     #   -152(%ebp)   4  [ $t8       <int> %ebp-152 ]
-     #   -156(%ebp)   4  [ $t7       <int> %ebp-156 ]
+     #   -156(%ebp)   4  [ $t9       <int> %ebp-156 ]
-     #   -160(%ebp)   4  [ $t8       <int> %ebp-160 ]
-     #   -164(%ebp)   4  [ $t9       <int> %ebp-164 ]
-     subl    $152, %esp              # make room for locals
+     subl    $144, %esp              # make room for locals
-     movl    $38, %ecx              
+     movl    $36, %ecx              
+     movl    %eax, -140(%ebp)       
+     movl    $43902, %eax            #   3:     mul    t6 <- 43902, t5
+     movl    -140(%ebp), %ebx       
+     imull   %ebx                   
+     movl    %eax, -144(%ebp)       
+     movl    -144(%ebp), %eax        #   4:     add    t7 <- t6, 45037
+     movl    $45037, %ebx           
+     addl    %ebx, %eax             
-     movl    $43902, %eax            #   3:     mul    t6 <- 43902, t5
+     movl    $3, %eax                #   5:     param  1 <- 3
-     movl    -148(%ebp), %ebx       
-     imull   %ebx                   
+     pushl   %eax                   
+     movl    8(%ebp), %eax           #   6:     param  0 <- v0
+     pushl   %eax                   
+     call    DIM                     #   7:     call   t8 <- DIM
+     addl    $8, %esp               
-     movl    -152(%ebp), %eax        #   4:     add    t7 <- t6, 45037
+     movl    -148(%ebp), %eax        #   8:     mul    t9 <- t7, t8
-     movl    $45037, %ebx           
+     movl    -152(%ebp), %ebx       
-     addl    %ebx, %eax             
+     imull   %ebx                   
-     movl    $3, %eax                #   5:     param  1 <- 3
-     pushl   %eax                   
-     movl    8(%ebp), %eax           #   6:     param  0 <- v0
-     pushl   %eax                   
-     call    DIM                     #   7:     call   t8 <- DIM
-     addl    $8, %esp               
-     movl    %eax, -160(%ebp)       
-     movl    -156(%ebp), %eax        #   8:     mul    t9 <- t7, t8
-     movl    -160(%ebp), %ebx       
-     imull   %ebx                   
-     movl    %eax, -164(%ebp)       
-     movl    -164(%ebp), %eax        #  11:     add    t12 <- t9, t11
+     movl    -156(%ebp), %eax        #  11:     add    t12 <- t9, t11
-     movl    $12795, %eax            #  15:     div    t15 <- 12795, 47208
+     movl    -24(%ebp), %eax         #  15:     mul    t14 <- t12, t13
-     movl    $47208, %ebx           
+     movl    -28(%ebp), %ebx        
-     cdq                            
-     idivl   %ebx                   
+     imull   %ebx                   
+     movl    %eax, -32(%ebp)        
+     movl    -32(%ebp), %eax         #  16:     add    t15 <- t14, 33641
+     movl    $33641, %ebx           
+     addl    %ebx, %eax             
+     movl    $5, %eax                #  17:     param  1 <- 5
-     movl    -36(%ebp), %eax         #  16:     div    t16 <- t15, 63298
-     movl    $63298, %ebx           
-     cdq                            
-     idivl   %ebx                   
+     pushl   %eax                   
+     movl    8(%ebp), %eax           #  18:     param  0 <- v0
+     pushl   %eax                   
+     call    DIM                     #  19:     call   t16 <- DIM
+     addl    $8, %esp               
-     movl    -24(%ebp), %eax         #  17:     mul    t14 <- t12, t13
+     movl    -36(%ebp), %eax         #  20:     mul    t17 <- t15, t16
-     movl    -28(%ebp), %ebx        
+     movl    -40(%ebp), %ebx        
-     movl    %eax, -32(%ebp)        
-     movl    -32(%ebp), %eax         #  18:     add    t17 <- t14, 33641
-     movl    $33641, %ebx           
-     addl    %ebx, %eax             
-     movl    $5, %eax                #  19:     param  1 <- 5
-     pushl   %eax                   
-     movl    8(%ebp), %eax           #  20:     param  0 <- v0
+     movl    -44(%ebp), %eax         #  21:     add    t18 <- t17, 76376
+     movl    $76376, %ebx           
-     pushl   %eax                   
-     call    DIM                     #  21:     call   t18 <- DIM
-     addl    $8, %esp               
+     addl    %ebx, %eax             
-     movl    -44(%ebp), %eax         #  22:     mul    t19 <- t17, t18
+     movl    -48(%ebp), %eax         #  22:     mul    t19 <- t18, 4
-     movl    -48(%ebp), %ebx        
+     movl    $4, %ebx               
-     movl    -52(%ebp), %eax         #  23:     add    t20 <- t19, 76376
+     movl    8(%ebp), %eax           #  23:     param  0 <- v0
-     movl    $76376, %ebx           
+     pushl   %eax                   
+     call    DOFS                    #  24:     call   t20 <- DOFS
-     addl    %ebx, %eax             
+     addl    $4, %esp               
-     movl    -56(%ebp), %eax         #  24:     mul    t21 <- t20, 4
+     movl    -52(%ebp), %eax         #  25:     add    t21 <- t19, t20
+     movl    -56(%ebp), %ebx        
-     movl    $4, %ebx               
+     addl    %ebx, %eax             
-     imull   %ebx                   
-     movl    8(%ebp), %eax           #  25:     param  0 <- v0
+     movl    8(%ebp), %eax           #  26:     add    t22 <- v0, t21
+     movl    -60(%ebp), %ebx        
-     pushl   %eax                   
-     call    DOFS                    #  26:     call   t22 <- DOFS
-     addl    $4, %esp               
+     addl    %ebx, %eax             
-     movl    -60(%ebp), %eax         #  27:     add    t23 <- t21, t22
-     movl    -64(%ebp), %ebx        
-     addl    %ebx, %eax             
-     movl    %eax, -68(%ebp)        
-     movl    8(%ebp), %eax           #  28:     add    t24 <- v0, t23
-     movl    -68(%ebp), %ebx        
-     addl    %ebx, %eax             
-     movl    %eax, -72(%ebp)        
-     movl    $81178, %eax            #  29:     assign @t24 <- 81178
+     movl    $81178, %eax            #  27:     assign @t22 <- 81178
-     movl    -72(%ebp), %edi        
+     movl    -64(%ebp), %edi        
-     call    dummyBOOLfunc           #  30:     call   t25 <- dummyBOOLfunc
+     call    dummyBOOLfunc           #  28:     call   t23 <- dummyBOOLfunc
-     movb    %al, -73(%ebp)         
+     movb    %al, -65(%ebp)         
-     movzbl  -73(%ebp), %eax         #  31:     if     t25 = 1 goto 2_if_true
+     movzbl  -65(%ebp), %eax         #  29:     if     t23 = 1 goto 2_if_true
-     jmp     l_f0_3_if_false         #  32:     goto   3_if_false
+     jmp     l_f0_3_if_false         #  30:     goto   3_if_false
-     movl    $62164, %eax            #  35:     if     62164 = 6131 goto 6_while_body
+     movl    $62164, %eax            #  33:     if     62164 = 6131 goto 6_while_body
-     jmp     l_f0_4                  #  36:     goto   4
+     jmp     l_f0_4                  #  34:     goto   4
-     jmp     l_f0_5_while_cond       #  38:     goto   5_while_cond
+     jmp     l_f0_5_while_cond       #  36:     goto   5_while_cond
-     jmp     l_f0_1                  #  40:     goto   1
+     jmp     l_f0_1                  #  38:     goto   1
-     movl    $9765, %eax             #  44:     if     9765 < 57763 goto 10_while_body
+     movl    $9765, %eax             #  42:     if     9765 < 57763 goto 10_while_body
-     jmp     l_f0_8                  #  45:     goto   8
+     jmp     l_f0_8                  #  43:     goto   8
-     movl    $2, %eax                #  47:     param  1 <- 2
+     movl    $2, %eax                #  45:     param  1 <- 2
-     movl    8(%ebp), %eax           #  48:     param  0 <- v0
+     movl    8(%ebp), %eax           #  46:     param  0 <- v0
-     call    DIM                     #  49:     call   t26 <- DIM
+     call    DIM                     #  47:     call   t24 <- DIM
+     addl    $8, %esp               
+     movl    %eax, -72(%ebp)        
+     movl    $93664, %eax            #  48:     mul    t25 <- 93664, t24
+     movl    -72(%ebp), %ebx        
+     imull   %ebx                   
+     movl    %eax, -76(%ebp)        
+     movl    -76(%ebp), %eax         #  49:     add    t26 <- t25, 95452
+     movl    $95452, %ebx           
-     addl    $8, %esp               
+     addl    %ebx, %eax             
-     movl    $93664, %eax            #  50:     mul    t27 <- 93664, t26
+     movl    $3, %eax                #  50:     param  1 <- 3
-     movl    -80(%ebp), %ebx        
-     imull   %ebx                   
+     pushl   %eax                   
+     movl    8(%ebp), %eax           #  51:     param  0 <- v0
+     pushl   %eax                   
+     call    DIM                     #  52:     call   t27 <- DIM
+     addl    $8, %esp               
-     movl    -84(%ebp), %eax         #  51:     add    t28 <- t27, 95452
+     movl    -80(%ebp), %eax         #  53:     mul    t28 <- t26, t27
-     movl    $95452, %ebx           
+     movl    -84(%ebp), %ebx        
-     addl    %ebx, %eax             
+     imull   %ebx                   
-     movl    $3, %eax                #  52:     param  1 <- 3
-     pushl   %eax                   
-     movl    8(%ebp), %eax           #  53:     param  0 <- v0
+     movl    -88(%ebp), %eax         #  54:     add    t29 <- t28, 31005
+     movl    $31005, %ebx           
-     pushl   %eax                   
-     call    DIM                     #  54:     call   t29 <- DIM
-     addl    $8, %esp               
+     addl    %ebx, %eax             
+     movl    $4, %eax                #  55:     param  1 <- 4
-     movl    -88(%ebp), %eax         #  55:     mul    t30 <- t28, t29
-     movl    -92(%ebp), %ebx        
-     imull   %ebx                   
+     pushl   %eax                   
+     movl    8(%ebp), %eax           #  56:     param  0 <- v0
+     pushl   %eax                   
+     call    DIM                     #  57:     call   t30 <- DIM
+     addl    $8, %esp               
-     movl    -96(%ebp), %eax         #  56:     add    t31 <- t30, 31005
+     movl    -92(%ebp), %eax         #  58:     mul    t31 <- t29, t30
-     movl    $31005, %ebx           
+     movl    -96(%ebp), %ebx        
-     addl    %ebx, %eax             
+     imull   %ebx                   
+     movl    -100(%ebp), %eax        #  59:     add    t32 <- t31, 74582
+     movl    $74582, %ebx           
-     movl    $4, %eax                #  57:     param  1 <- 4
-     pushl   %eax                   
-     movl    8(%ebp), %eax           #  58:     param  0 <- v0
-     pushl   %eax                   
-     call    DIM                     #  59:     call   t32 <- DIM
-     addl    $8, %esp               
+     addl    %ebx, %eax             
+     movl    $5, %eax                #  60:     param  1 <- 5
-     movl    -100(%ebp), %eax        #  60:     mul    t33 <- t31, t32
-     movl    -104(%ebp), %ebx       
-     imull   %ebx                   
+     pushl   %eax                   
+     movl    8(%ebp), %eax           #  61:     param  0 <- v0
+     pushl   %eax                   
+     call    DIM                     #  62:     call   t33 <- DIM
+     addl    $8, %esp               
-     movl    -108(%ebp), %eax        #  61:     add    t34 <- t33, 74582
+     movl    -104(%ebp), %eax        #  63:     mul    t34 <- t32, t33
-     movl    $74582, %ebx           
+     movl    -108(%ebp), %ebx       
-     addl    %ebx, %eax             
+     imull   %ebx                   
-     movl    $5, %eax                #  62:     param  1 <- 5
-     pushl   %eax                   
-     movl    8(%ebp), %eax           #  63:     param  0 <- v0
+     movl    -112(%ebp), %eax        #  64:     add    t35 <- t34, 18502
+     movl    $18502, %ebx           
-     pushl   %eax                   
-     call    DIM                     #  64:     call   t35 <- DIM
-     addl    $8, %esp               
+     addl    %ebx, %eax             
-     movl    -112(%ebp), %eax        #  65:     mul    t36 <- t34, t35
+     movl    -116(%ebp), %eax        #  65:     mul    t36 <- t35, 4
-     movl    -116(%ebp), %ebx       
+     movl    $4, %ebx               
-     movl    -120(%ebp), %eax        #  66:     add    t37 <- t36, 18502
+     movl    8(%ebp), %eax           #  66:     param  0 <- v0
-     movl    $18502, %ebx           
+     pushl   %eax                   
+     call    DOFS                    #  67:     call   t37 <- DOFS
-     addl    %ebx, %eax             
+     addl    $4, %esp               
-     movl    -124(%ebp), %eax        #  67:     mul    t38 <- t37, 4
+     movl    -120(%ebp), %eax        #  68:     add    t38 <- t36, t37
+     movl    -124(%ebp), %ebx       
-     movl    $4, %ebx               
+     addl    %ebx, %eax             
-     imull   %ebx                   
-     movl    8(%ebp), %eax           #  68:     param  0 <- v0
+     movl    8(%ebp), %eax           #  69:     add    t39 <- v0, t38
+     movl    -128(%ebp), %ebx       
-     pushl   %eax                   
-     call    DOFS                    #  69:     call   t39 <- DOFS
-     addl    $4, %esp               
+     addl    %ebx, %eax             
-     movl    -128(%ebp), %eax        #  70:     add    t40 <- t38, t39
-     movl    -132(%ebp), %ebx       
-     addl    %ebx, %eax             
-     movl    %eax, -136(%ebp)       
-     movl    8(%ebp), %eax           #  71:     add    t41 <- v0, t40
-     movl    -136(%ebp), %ebx       
-     addl    %ebx, %eax             
-     movl    %eax, -140(%ebp)       
-     movl    $4326, %eax             #  72:     assign @t41 <- 4326
+     movl    $4326, %eax             #  70:     assign @t39 <- 4326
-     movl    -140(%ebp), %edi       
+     movl    -132(%ebp), %edi       
-     call    dummyCHARfunc           #  73:     call   t42 <- dummyCHARfunc
+     call    dummyCHARfunc           #  71:     call   t40 <- dummyCHARfunc
-     movb    %al, -141(%ebp)        
+     movb    %al, -133(%ebp)        
-     jmp     l_f0_9_while_cond       #  74:     goto   9_while_cond
+     jmp     l_f0_9_while_cond       #  72:     goto   9_while_cond
-     addl    $152, %esp              # remove locals
+     addl    $144, %esp              # remove locals
-     jmp     l_f1_3                  #   1:     goto   3
+     jmp     l_f1_4                  #   1:     goto   4
-     jmp     l_f1_3                  #   2:     goto   3
+     jmp     l_f1_4                  #   2:     goto   4
-     jmp     l_f1_3                  #   3:     goto   3
+     jmp     l_f1_4                  #   3:     goto   4
+     jmp     l_f1_5                  #   4:     goto   5
- l_f1_3:
+ l_f1_4:
-     movl    $1, %eax                #   5:     assign t5 <- 1
+     movl    $1, %eax                #   6:     assign t5 <- 1
-     jmp     l_f1_5                  #   6:     goto   5
+     jmp     l_f1_6                  #   7:     goto   6
+ l_f1_5:
-     movl    $0, %eax                #   7:     assign t5 <- 0
+     movl    $0, %eax                #   9:     assign t5 <- 0
- l_f1_5:
+ l_f1_6:
-     movzbl  -13(%ebp), %eax         #   9:     if     t5 # 1 goto 2_while_body
+     movzbl  -13(%ebp), %eax         #  11:     if     t5 # 1 goto 2_while_body
-     jmp     l_f1_0                  #  10:     goto   0
+     jmp     l_f1_0                  #  12:     goto   0
-     movl    $99, %eax               #  12:     if     99 < 98 goto 11
+     movl    $99, %eax               #  14:     if     99 < 98 goto 11
-     jmp     l_f1_12                 #  13:     goto   12
+     jmp     l_f1_12                 #  15:     goto   12
-     movl    $1, %eax                #  15:     assign t6 <- 1
+     movl    $1, %eax                #  17:     assign t6 <- 1
-     jmp     l_f1_13                 #  16:     goto   13
+     jmp     l_f1_13                 #  18:     goto   13
-     movl    $0, %eax                #  18:     assign t6 <- 0
+     movl    $0, %eax                #  20:     assign t6 <- 0
-     movzbl  -14(%ebp), %eax         #  20:     assign v0 <- t6
+     movzbl  -14(%ebp), %eax         #  22:     assign v0 <- t6
-     movl    $98, %eax               #  22:     assign v2 <- 98
+     movl    $98, %eax               #  24:     assign v2 <- 98
-     call    dummyCHARfunc           #  23:     call   t7 <- dummyCHARfunc
+     call    dummyCHARfunc           #  25:     call   t7 <- dummyCHARfunc
-     jmp     l_f1_1_while_cond       #  24:     goto   1_while_cond
+     jmp     l_f1_1_while_cond       #  26:     goto   1_while_cond
-     movl    $7853, %eax             #  26:     mul    t8 <- 7853, 8271
+     movl    $7853, %eax             #  28:     mul    t8 <- 7853, 8271
-     movl    $12516, %eax            #  27:     if     12516 > t8 goto 19_if_true
+     movl    $12516, %eax            #  29:     if     12516 > t8 goto 19_if_true
-     jmp     l_f1_20_if_false        #  28:     goto   20_if_false
+     jmp     l_f1_20_if_false        #  30:     goto   20_if_false
-     movl    $98, %eax               #  31:     if     98 >= 98 goto 24_if_true
+     movl    $98, %eax               #  33:     if     98 >= 98 goto 24_if_true
-     jmp     l_f1_25_if_false        #  32:     goto   25_if_false
+     jmp     l_f1_25_if_false        #  34:     goto   25_if_false
-     jmp     l_f1_23                 #  34:     goto   23
+     jmp     l_f1_23                 #  36:     goto   23
-     jmp     l_f1_18                 #  37:     goto   18
+     jmp     l_f1_18                 #  39:     goto   18
-     call    dummyCHARfunc           #  40:     call   t9 <- dummyCHARfunc
+     call    dummyCHARfunc           #  42:     call   t9 <- dummyCHARfunc
-     movzbl  -21(%ebp), %eax         #  41:     assign v2 <- t9
+     movzbl  -21(%ebp), %eax         #  43:     assign v2 <- t9
