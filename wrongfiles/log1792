+     jmp     l_f0_8                  #   7:     goto   8
-     movl    $1, %eax                #   7:     assign t34 <- 1
+     movl    $1, %eax                #   8:     assign t34 <- 1
-     jmp     l_f0_9                  #   8:     goto   9
+     jmp     l_f0_9                  #   9:     goto   9
+ l_f0_8:
-     movl    $0, %eax                #   9:     assign t34 <- 0
+     movl    $0, %eax                #  11:     assign t34 <- 0
-     movzbl  -14(%ebp), %eax         #  11:     return t34
+     movzbl  -14(%ebp), %eax         #  13:     return t34
-     #-1603286852(%ebp)1603286808  [ $v1       <array 33 of <array 96 of <array 71 of <array 54 of <array 33 of <int>>>>>> %ebp-1603286852 ]
+     #   -1603286852(%ebp)  1603286808  [ $v1       <array 33 of <array 96 of <array 71 of <array 54 of <array 33 of <int>>>>>> %ebp-1603286852 ]
-     #-1628698460(%ebp)25411608  [ $v2       <array 47 of <array 16 of <array 64 of <array 88 of <array 6 of <bool>>>>>> %ebp-1628698460 ]
+     #   -1628698460(%ebp)  25411608  [ $v2       <array 47 of <array 16 of <array 64 of <array 88 of <array 6 of <bool>>>>>> %ebp-1628698460 ]
-     #-1662567284(%ebp)33868824  [ $v3       <array 1 of <array 96 of <array 75 of <array 49 of <array 96 of <bool>>>>>> %ebp-1662567284 ]
+     #   -1662567284(%ebp)  33868824  [ $v3       <array 1 of <array 96 of <array 75 of <array 49 of <array 96 of <bool>>>>>> %ebp-1662567284 ]
-     #294275188(%ebp)-1956842472  [ $v4       <array 44 of <array 46 of <array 76 of <array 100 of <array 38 of <int>>>>>> %ebp+294275188 ]
+     #   294275188(%ebp)  -1956842472  [ $v4       <array 44 of <array 46 of <array 76 of <array 100 of <array 38 of <int>>>>>> %ebp+294275188 ]
+     cld                             # memset local stack area to 0
+     xorl    %eax, %eax             
+     movl    $-73568800, %ecx       
+     mov     %esp, %edi             
+     rep     stosl                  
+     jmp     l_f2_2                  #   5:     goto   2
-     leal    294275188(%ebp), %eax   #   5:     &()    t36 <- v4
+     leal    294275188(%ebp), %eax   #   6:     &()    t36 <- v4
-     movl    -28(%ebp), %eax         #   6:     param  3 <- t36
+     movl    -28(%ebp), %eax         #   7:     param  3 <- t36
-     leal    -1662567284(%ebp), %eax #   7:     &()    t37 <- v3
+     leal    -1662567284(%ebp), %eax #   8:     &()    t37 <- v3
-     movl    -32(%ebp), %eax         #   8:     param  2 <- t37
+     movl    -32(%ebp), %eax         #   9:     param  2 <- t37
-     leal    -1628698460(%ebp), %eax #   9:     &()    t38 <- v2
+     leal    -1628698460(%ebp), %eax #  10:     &()    t38 <- v2
-     movl    -36(%ebp), %eax         #  10:     param  1 <- t38
+     movl    -36(%ebp), %eax         #  11:     param  1 <- t38
-     leal    -1603286852(%ebp), %eax #  11:     &()    t39 <- v1
+     leal    -1603286852(%ebp), %eax #  12:     &()    t39 <- v1
-     movl    -40(%ebp), %eax         #  12:     param  0 <- t39
+     movl    -40(%ebp), %eax         #  13:     param  0 <- t39
-     call    f0                      #  13:     call   t40 <- f0
+     call    f0                      #  14:     call   t40 <- f0
-     movzbl  -41(%ebp), %eax         #  14:     if     t40 = 1 goto 4_while_body
+     movzbl  -41(%ebp), %eax         #  15:     if     t40 = 1 goto 4_while_body
-     jmp     l_f2_2                  #  15:     goto   2
+     jmp     l_f2_2                  #  16:     goto   2
-     jmp     l_f2_3_while_cond       #  17:     goto   3_while_cond
+     jmp     l_f2_3_while_cond       #  18:     goto   3_while_cond
+     jmp     l_test_19_if_false      #  20:     goto   19_if_false
-     leal    v0, %eax                #  20:     &()    t4 <- v0
+     leal    v0, %eax                #  21:     &()    t4 <- v0
-     movl    -124(%ebp), %eax        #  21:     param  0 <- t4
+     movl    -124(%ebp), %eax        #  22:     param  0 <- t4
-     call    f2                      #  22:     call   t5 <- f2
+     call    f2                      #  23:     call   t5 <- f2
-     leal    v0, %eax                #  23:     &()    t6 <- v0
+     leal    v0, %eax                #  24:     &()    t6 <- v0
-     movl    $2, %eax                #  24:     param  1 <- 2
+     movl    $2, %eax                #  25:     param  1 <- 2
-     leal    v0, %eax                #  25:     &()    t7 <- v0
+     leal    v0, %eax                #  26:     &()    t7 <- v0
-     movl    -136(%ebp), %eax        #  26:     param  0 <- t7
+     movl    -136(%ebp), %eax        #  27:     param  0 <- t7
-     call    DIM                     #  27:     call   t8 <- DIM
+     call    DIM                     #  28:     call   t8 <- DIM
-     movl    $67544, %eax            #  28:     mul    t9 <- 67544, t8
+     movl    $67544, %eax            #  29:     mul    t9 <- 67544, t8
-     movl    -144(%ebp), %eax        #  29:     add    t10 <- t9, 49107
+     movl    -144(%ebp), %eax        #  30:     add    t10 <- t9, 49107
-     movl    $3, %eax                #  30:     param  1 <- 3
+     movl    $3, %eax                #  31:     param  1 <- 3
-     leal    v0, %eax                #  31:     &()    t11 <- v0
+     leal    v0, %eax                #  32:     &()    t11 <- v0
-     movl    -28(%ebp), %eax         #  32:     param  0 <- t11
+     movl    -28(%ebp), %eax         #  33:     param  0 <- t11
-     call    DIM                     #  33:     call   t12 <- DIM
+     call    DIM                     #  34:     call   t12 <- DIM
-     movl    -24(%ebp), %eax         #  34:     mul    t13 <- t10, t12
+     movl    -24(%ebp), %eax         #  35:     mul    t13 <- t10, t12
-     movl    -36(%ebp), %eax         #  35:     add    t14 <- t13, 86506
+     movl    -36(%ebp), %eax         #  36:     add    t14 <- t13, 86506
-     movl    $4, %eax                #  36:     param  1 <- 4
+     movl    $4, %eax                #  37:     param  1 <- 4
-     leal    v0, %eax                #  37:     &()    t15 <- v0
+     leal    v0, %eax                #  38:     &()    t15 <- v0
-     movl    -44(%ebp), %eax         #  38:     param  0 <- t15
+     movl    -44(%ebp), %eax         #  39:     param  0 <- t15
-     call    DIM                     #  39:     call   t16 <- DIM
+     call    DIM                     #  40:     call   t16 <- DIM
-     movl    -40(%ebp), %eax         #  40:     mul    t17 <- t14, t16
+     movl    -40(%ebp), %eax         #  41:     mul    t17 <- t14, t16
-     movl    -52(%ebp), %eax         #  41:     add    t18 <- t17, 16335
+     movl    -52(%ebp), %eax         #  42:     add    t18 <- t17, 16335
-     movl    $5, %eax                #  42:     param  1 <- 5
+     movl    $5, %eax                #  43:     param  1 <- 5
-     leal    v0, %eax                #  43:     &()    t19 <- v0
+     leal    v0, %eax                #  44:     &()    t19 <- v0
-     movl    -60(%ebp), %eax         #  44:     param  0 <- t19
+     movl    -60(%ebp), %eax         #  45:     param  0 <- t19
-     call    DIM                     #  45:     call   t20 <- DIM
+     call    DIM                     #  46:     call   t20 <- DIM
-     movl    -56(%ebp), %eax         #  46:     mul    t21 <- t18, t20
+     movl    -56(%ebp), %eax         #  47:     mul    t21 <- t18, t20
-     movl    -72(%ebp), %eax         #  47:     add    t22 <- t21, 42849
+     movl    -72(%ebp), %eax         #  48:     add    t22 <- t21, 42849
-     movl    -76(%ebp), %eax         #  48:     mul    t23 <- t22, 4
+     movl    -76(%ebp), %eax         #  49:     mul    t23 <- t22, 4
-     leal    v0, %eax                #  49:     &()    t24 <- v0
+     leal    v0, %eax                #  50:     &()    t24 <- v0
-     movl    -84(%ebp), %eax         #  50:     param  0 <- t24
+     movl    -84(%ebp), %eax         #  51:     param  0 <- t24
-     call    DOFS                    #  51:     call   t25 <- DOFS
+     call    DOFS                    #  52:     call   t25 <- DOFS
-     movl    -80(%ebp), %eax         #  52:     add    t26 <- t23, t25
+     movl    -80(%ebp), %eax         #  53:     add    t26 <- t23, t25
-     movl    -132(%ebp), %eax        #  53:     add    t27 <- t6, t26
+     movl    -132(%ebp), %eax        #  54:     add    t27 <- t6, t26
-     movl    $73652, %eax            #  54:     assign @t27 <- 73652
+     movl    $73652, %eax            #  55:     assign @t27 <- 73652
-     leal    v5, %eax                #  55:     &()    t28 <- v5
+     leal    v5, %eax                #  56:     &()    t28 <- v5
-     movl    -100(%ebp), %eax        #  56:     param  3 <- t28
+     movl    -100(%ebp), %eax        #  57:     param  3 <- t28
-     leal    v4, %eax                #  57:     &()    t29 <- v4
+     leal    v4, %eax                #  58:     &()    t29 <- v4
-     movl    -104(%ebp), %eax        #  58:     param  2 <- t29
+     movl    -104(%ebp), %eax        #  59:     param  2 <- t29
-     leal    v3, %eax                #  59:     &()    t30 <- v3
+     leal    v3, %eax                #  60:     &()    t30 <- v3
-     movl    -112(%ebp), %eax        #  60:     param  1 <- t30
+     movl    -112(%ebp), %eax        #  61:     param  1 <- t30
-     leal    v2, %eax                #  61:     &()    t31 <- v2
+     leal    v2, %eax                #  62:     &()    t31 <- v2
-     movl    -116(%ebp), %eax        #  62:     param  0 <- t31
+     movl    -116(%ebp), %eax        #  63:     param  0 <- t31
-     call    f0                      #  63:     call   t32 <- f0
+     call    f0                      #  64:     call   t32 <- f0
-     jmp     l_test_27_if_false      #  64:     goto   27_if_false
+     jmp     l_test_27_if_false      #  65:     goto   27_if_false
-     jmp     l_test_25               #  65:     goto   25
+     jmp     l_test_25               #  66:     goto   25
-     jmp     l_test_17               #  68:     goto   17
+     jmp     l_test_17               #  69:     goto   17
+ l_test_19_if_false:
