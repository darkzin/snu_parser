+     jmp     l_f1_13_if_false        #  16:     goto   13_if_false
-     call    dummyINTfunc            #  17:     call   t4 <- dummyINTfunc
+     call    dummyINTfunc            #  18:     call   t4 <- dummyINTfunc
-     jmp     l_f1_11                 #  18:     goto   11
+     jmp     l_f1_11                 #  19:     goto   11
+ l_f1_13_if_false:
-     movl    $28567, %eax            #  21:     if     28567 = 43764 goto 18_while_body
+     movl    $28567, %eax            #  23:     if     28567 = 43764 goto 18_while_body
-     jmp     l_f1_16                 #  22:     goto   16
+     jmp     l_f1_16                 #  24:     goto   16
-     leal    _str_1, %eax            #  24:     &()    t5 <- _str_1
+     leal    _str_1, %eax            #  26:     &()    t5 <- _str_1
-     movl    -28(%ebp), %eax         #  25:     param  0 <- t5
+     movl    -28(%ebp), %eax         #  27:     param  0 <- t5
-     call    WriteStr                #  26:     call   WriteStr
+     call    WriteStr                #  28:     call   WriteStr
-     jmp     l_f1_22_while_cond      #  28:     goto   22_while_cond
+     jmp     l_f1_22_while_cond      #  30:     goto   22_while_cond
-     jmp     l_f1_17_while_cond      #  29:     goto   17_while_cond
+     jmp     l_f1_17_while_cond      #  31:     goto   17_while_cond
-     #    -64(%ebp)   4  [ $t21      <int> %ebp-64 ]
-     #    -65(%ebp)   1  [ $t22      <char> %ebp-65 ]
+     #    -61(%ebp)   1  [ $t21      <char> %ebp-61 ]
-     #    -66(%ebp)   1  [ $t3       <bool> %ebp-66 ]
+     #    -62(%ebp)   1  [ $t3       <bool> %ebp-62 ]
+     #    -68(%ebp)   4  [ $t4       <int> %ebp-68 ]
-     #    -72(%ebp)   4  [ $t4       <int> %ebp-72 ]
+     #    -72(%ebp)   4  [ $t5       <int> %ebp-72 ]
-     #    -76(%ebp)   4  [ $t5       <int> %ebp-76 ]
+     #    -76(%ebp)   4  [ $t6       <int> %ebp-76 ]
-     #    -80(%ebp)   4  [ $t6       <int> %ebp-80 ]
+     #    -80(%ebp)   4  [ $t7       <int> %ebp-80 ]
-     #    -84(%ebp)   4  [ $t7       <int> %ebp-84 ]
+     #    -84(%ebp)   4  [ $t8       <int> %ebp-84 ]
-     #    -88(%ebp)   4  [ $t8       <int> %ebp-88 ]
+     #    -88(%ebp)   4  [ $t9       <int> %ebp-88 ]
-     #    -92(%ebp)   4  [ $t9       <int> %ebp-92 ]
-     #    -93(%ebp)   1  [ $v5       <bool> %ebp-93 ]
+     #    -89(%ebp)   1  [ $v5       <bool> %ebp-89 ]
-     pushl   %ebp                   
-     movl    %esp, %ebp             
-     pushl   %ebx                    # save callee saved registers
-     pushl   %esi                   
+     pushl   %ebp                   
+     movl    %esp, %ebp             
+     pushl   %ebx                    # save callee saved registers
-     pushl   %edi                   
+     pushl   %esi                   
+     pushl   %edi                   
-     subl    $84, %esp               # make room for locals
+     subl    $80, %esp               # make room for locals
-     movl    $21, %ecx              
+     movl    $20, %ecx              
+     jmp     l_f2_2                  #   0:     goto   2
+     jmp     l_f2_2                  #   1:     goto   2
-     movl    $1, %eax                #   0:     assign t2 <- 1
+     movl    $1, %eax                #   2:     assign t2 <- 1
-     jmp     l_f2_3                  #   1:     goto   3
+     jmp     l_f2_3                  #   3:     goto   3
+ l_f2_2:
-     movl    $0, %eax                #   2:     assign t2 <- 0
+     movl    $0, %eax                #   5:     assign t2 <- 0
-     movzbl  -53(%ebp), %eax         #   4:     assign v5 <- t2
+     movzbl  -53(%ebp), %eax         #   7:     assign v5 <- t2
-     movb    %al, -93(%ebp)         
+     movb    %al, -89(%ebp)         
-     movl    $30140, %eax            #   5:     if     30140 # 87058 goto 8
+     movl    $30140, %eax            #   8:     if     30140 # 87058 goto 8
-     jmp     l_f2_9                  #   6:     goto   9
+     jmp     l_f2_9                  #   9:     goto   9
-     movl    $1, %eax                #   8:     assign t3 <- 1
+     movl    $1, %eax                #  11:     assign t3 <- 1
-     movb    %al, -66(%ebp)         
+     movb    %al, -62(%ebp)         
-     jmp     l_f2_10                 #   9:     goto   10
+     jmp     l_f2_10                 #  12:     goto   10
-     movl    $0, %eax                #  11:     assign t3 <- 0
+     movl    $0, %eax                #  14:     assign t3 <- 0
-     movb    %al, -66(%ebp)         
+     movb    %al, -62(%ebp)         
-     call    dummyINTfunc            #  13:     call   t4 <- dummyINTfunc
+     call    dummyINTfunc            #  16:     call   t4 <- dummyINTfunc
+     movl    %eax, -68(%ebp)        
+     movl    $2, %eax                #  17:     param  1 <- 2
+     pushl   %eax                   
+     movl    8(%ebp), %eax           #  18:     param  0 <- v2
+     pushl   %eax                   
+     call    DIM                     #  19:     call   t5 <- DIM
+     addl    $8, %esp               
+     movl    -68(%ebp), %eax         #  20:     mul    t6 <- t4, t5
+     movl    -72(%ebp), %ebx        
+     imull   %ebx                   
+     movl    %eax, -76(%ebp)        
+     movl    -76(%ebp), %eax         #  21:     add    t7 <- t6, 80745
+     movl    $80745, %ebx           
+     addl    %ebx, %eax             
+     movl    %eax, -80(%ebp)        
-     movl    $2, %eax                #  14:     param  1 <- 2
+     movl    $3, %eax                #  22:     param  1 <- 3
-     movl    8(%ebp), %eax           #  15:     param  0 <- v2
+     movl    8(%ebp), %eax           #  23:     param  0 <- v2
-     call    DIM                     #  16:     call   t5 <- DIM
+     call    DIM                     #  24:     call   t8 <- DIM
-     movl    %eax, -76(%ebp)        
-     call    dummyINTfunc            #  17:     call   t7 <- dummyINTfunc
-     movl    -72(%ebp), %eax         #  18:     mul    t6 <- t4, t5
+     movl    -80(%ebp), %eax         #  25:     mul    t9 <- t7, t8
-     movl    -76(%ebp), %ebx        
+     movl    -84(%ebp), %ebx        
-     movl    %eax, -80(%ebp)        
-     movl    -80(%ebp), %eax         #  19:     add    t8 <- t6, 80745
-     movl    $80745, %ebx           
-     addl    %ebx, %eax             
+     movl    -88(%ebp), %eax         #  26:     add    t10 <- t9, 33426
+     movl    $33426, %ebx           
+     addl    %ebx, %eax             
+     movl    %eax, -16(%ebp)        
-     movl    $3, %eax                #  20:     param  1 <- 3
+     movl    $4, %eax                #  27:     param  1 <- 4
-     movl    8(%ebp), %eax           #  21:     param  0 <- v2
+     movl    8(%ebp), %eax           #  28:     param  0 <- v2
-     call    DIM                     #  22:     call   t9 <- DIM
+     call    DIM                     #  29:     call   t11 <- DIM
-     movl    %eax, -92(%ebp)        
+     movl    %eax, -20(%ebp)        
-     movl    -88(%ebp), %eax         #  23:     mul    t10 <- t8, t9
+     movl    -16(%ebp), %eax         #  30:     mul    t12 <- t10, t11
-     movl    -92(%ebp), %ebx        
+     movl    -20(%ebp), %ebx        
-     movl    %eax, -16(%ebp)        
-     movl    -16(%ebp), %eax         #  24:     add    t11 <- t10, 33426
-     movl    $33426, %ebx           
-     addl    %ebx, %eax             
-     movl    %eax, -20(%ebp)        
+     movl    %eax, -24(%ebp)        
+     movl    -24(%ebp), %eax         #  31:     add    t13 <- t12, 11732
+     movl    $11732, %ebx           
+     addl    %ebx, %eax             
+     movl    %eax, -28(%ebp)        
-     movl    $4, %eax                #  25:     param  1 <- 4
+     movl    $5, %eax                #  32:     param  1 <- 5
-     movl    8(%ebp), %eax           #  26:     param  0 <- v2
+     movl    8(%ebp), %eax           #  33:     param  0 <- v2
-     call    DIM                     #  27:     call   t12 <- DIM
+     call    DIM                     #  34:     call   t14 <- DIM
-     movl    %eax, -24(%ebp)        
+     movl    %eax, -32(%ebp)        
-     movl    -20(%ebp), %eax         #  28:     mul    t13 <- t11, t12
+     movl    -28(%ebp), %eax         #  35:     mul    t15 <- t13, t14
-     movl    -24(%ebp), %ebx        
+     movl    -32(%ebp), %ebx        
-     movl    %eax, -28(%ebp)        
-     movl    -28(%ebp), %eax         #  29:     add    t14 <- t13, 11732
-     movl    $11732, %ebx           
-     addl    %ebx, %eax             
-     movl    %eax, -32(%ebp)        
-     movl    $5, %eax                #  30:     param  1 <- 5
-     pushl   %eax                   
-     movl    8(%ebp), %eax           #  31:     param  0 <- v2
-     pushl   %eax                   
-     call    DIM                     #  32:     call   t15 <- DIM
-     addl    $8, %esp               
-     movl    -32(%ebp), %eax         #  33:     mul    t16 <- t14, t15
+     movl    -36(%ebp), %eax         #  36:     add    t16 <- t15, 58790
-     movl    -36(%ebp), %ebx        
+     movl    $58790, %ebx           
-     imull   %ebx                   
+     addl    %ebx, %eax             
-     movl    -40(%ebp), %eax         #  34:     add    t17 <- t16, 58790
-     movl    $58790, %ebx           
-     addl    %ebx, %eax             
-     movl    %eax, -44(%ebp)        
-     movl    -44(%ebp), %eax         #  35:     mul    t18 <- t17, 1
+     movl    -40(%ebp), %eax         #  37:     mul    t17 <- t16, 1
+     movl    %eax, -44(%ebp)        
+     movl    8(%ebp), %eax           #  38:     param  0 <- v2
+     pushl   %eax                   
+     call    DOFS                    #  39:     call   t18 <- DOFS
+     addl    $4, %esp               
-     movl    8(%ebp), %eax           #  36:     param  0 <- v2
+     movl    -44(%ebp), %eax         #  40:     add    t19 <- t17, t18
+     movl    -48(%ebp), %ebx        
-     pushl   %eax                   
-     call    DOFS                    #  37:     call   t19 <- DOFS
-     addl    $4, %esp               
+     addl    %ebx, %eax             
-     movl    -48(%ebp), %eax         #  38:     add    t20 <- t18, t19
+     movl    8(%ebp), %eax           #  41:     add    t20 <- v2, t19
-     movl    8(%ebp), %eax           #  39:     add    t21 <- v2, t20
-     movl    -60(%ebp), %ebx        
-     addl    %ebx, %eax             
-     movl    %eax, -64(%ebp)        
-     movzbl  -66(%ebp), %eax         #  40:     assign @t21 <- t3
+     movzbl  -62(%ebp), %eax         #  42:     assign @t20 <- t3
-     movl    -64(%ebp), %edi        
+     movl    -60(%ebp), %edi        
-     call    dummyCHARfunc           #  41:     call   t22 <- dummyCHARfunc
+     call    dummyCHARfunc           #  43:     call   t21 <- dummyCHARfunc
-     movb    %al, -65(%ebp)         
+     movb    %al, -61(%ebp)         
-     movzbl  -65(%ebp), %eax         #  42:     return t22
+     movzbl  -61(%ebp), %eax         #  44:     return t21
-     addl    $84, %esp               # remove locals
+     addl    $80, %esp               # remove locals
