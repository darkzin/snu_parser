+     jmp     l_f1_3_if_false         #   6:     goto   3_if_false
-     jmp     l_f1_1                  #   6:     goto   1
+     jmp     l_f1_1                  #   7:     goto   1
-     movl    $99, %eax               #   9:     if     99 > 99 goto 6_if_true
+     movl    $99, %eax               #  10:     if     99 > 99 goto 6_if_true
-     jmp     l_f1_7_if_false         #  10:     goto   7_if_false
+     jmp     l_f1_7_if_false         #  11:     goto   7_if_false
-     movl    $7669, %eax             #  12:     if     7669 <= 4842 goto 10_if_true
+     movl    $7669, %eax             #  13:     if     7669 <= 4842 goto 10_if_true
-     jmp     l_f1_11_if_false        #  13:     goto   11_if_false
+     jmp     l_f1_11_if_false        #  14:     goto   11_if_false
-     jmp     l_f1_9                  #  15:     goto   9
+     jmp     l_f1_9                  #  16:     goto   9
-     movl    $92444, %eax            #  18:     if     92444 <= 58427 goto 14_if_true
+     movl    $92444, %eax            #  19:     if     92444 <= 58427 goto 14_if_true
-     jmp     l_f1_15_if_false        #  19:     goto   15_if_false
+     jmp     l_f1_15_if_false        #  20:     goto   15_if_false
-     jmp     l_f1_13                 #  21:     goto   13
+     jmp     l_f1_13                 #  22:     goto   13
-     movl    $99, %eax               #  24:     if     99 > 99 goto 18_if_true
+     movl    $99, %eax               #  25:     if     99 > 99 goto 18_if_true
-     jmp     l_f1_19_if_false        #  25:     goto   19_if_false
+     jmp     l_f1_19_if_false        #  26:     goto   19_if_false
-     jmp     l_f1_17                 #  27:     goto   17
+     jmp     l_f1_17                 #  28:     goto   17
-     jmp     l_f1_21                 #  31:     goto   21
+     jmp     l_f1_21                 #  32:     goto   21
-     jmp     l_f1_22_while_cond      #  32:     goto   22_while_cond
+     jmp     l_f1_22_while_cond      #  33:     goto   22_while_cond
-     movl    $18424, %eax            #  34:     if     18424 >= 3308 goto 25
+     movl    $18424, %eax            #  35:     if     18424 >= 3308 goto 25
-     jmp     l_f1_26                 #  35:     goto   26
+     jmp     l_f1_26                 #  36:     goto   26
-     movl    $1, %eax                #  37:     assign t4 <- 1
+     movl    $1, %eax                #  38:     assign t4 <- 1
-     jmp     l_f1_27                 #  38:     goto   27
+     jmp     l_f1_27                 #  39:     goto   27
-     movl    $0, %eax                #  40:     assign t4 <- 0
+     movl    $0, %eax                #  41:     assign t4 <- 0
-     movzbl  -18(%ebp), %eax         #  42:     assign v2 <- t4
+     movzbl  -18(%ebp), %eax         #  43:     assign v2 <- t4
-     movl    $58064, %eax            #  43:     return 58064
+     movl    $58064, %eax            #  44:     return 58064
-     call    ReadInt                 #  44:     call   t5 <- ReadInt
+     call    ReadInt                 #  45:     call   t5 <- ReadInt
-     jmp     l_f1_5                  #  45:     goto   5
+     jmp     l_f1_5                  #  46:     goto   5
+     jmp     l_f2_8                  #  34:     goto   8
+     jmp     l_f2_8                  #  35:     goto   8
+     jmp     l_f2_8                  #  36:     goto   8
-     movl    $2, %eax                #  34:     param  1 <- 2
+     movl    $2, %eax                #  37:     param  1 <- 2
-     movl    8(%ebp), %eax           #  35:     param  0 <- v1
+     movl    8(%ebp), %eax           #  38:     param  0 <- v1
-     call    DIM                     #  36:     call   t19 <- DIM
+     call    DIM                     #  39:     call   t19 <- DIM
-     movl    $64588, %eax            #  37:     mul    t20 <- 64588, t19
+     movl    $64588, %eax            #  40:     mul    t20 <- 64588, t19
-     movl    -60(%ebp), %eax         #  38:     add    t21 <- t20, 46115
+     movl    -60(%ebp), %eax         #  41:     add    t21 <- t20, 46115
-     movl    $3, %eax                #  39:     param  1 <- 3
+     movl    $3, %eax                #  42:     param  1 <- 3
-     movl    8(%ebp), %eax           #  40:     param  0 <- v1
+     movl    8(%ebp), %eax           #  43:     param  0 <- v1
-     call    DIM                     #  41:     call   t22 <- DIM
+     call    DIM                     #  44:     call   t22 <- DIM
-     movl    -64(%ebp), %eax         #  42:     mul    t23 <- t21, t22
+     movl    -64(%ebp), %eax         #  45:     mul    t23 <- t21, t22
-     movl    -72(%ebp), %eax         #  43:     add    t24 <- t23, 24734
+     movl    -72(%ebp), %eax         #  46:     add    t24 <- t23, 24734
-     movl    $4, %eax                #  44:     param  1 <- 4
+     movl    $4, %eax                #  47:     param  1 <- 4
-     movl    8(%ebp), %eax           #  45:     param  0 <- v1
+     movl    8(%ebp), %eax           #  48:     param  0 <- v1
-     call    DIM                     #  46:     call   t25 <- DIM
+     call    DIM                     #  49:     call   t25 <- DIM
-     movl    -76(%ebp), %eax         #  47:     mul    t26 <- t24, t25
+     movl    -76(%ebp), %eax         #  50:     mul    t26 <- t24, t25
-     movl    -84(%ebp), %eax         #  48:     add    t27 <- t26, 81326
+     movl    -84(%ebp), %eax         #  51:     add    t27 <- t26, 81326
-     movl    $5, %eax                #  49:     param  1 <- 5
+     movl    $5, %eax                #  52:     param  1 <- 5
-     movl    8(%ebp), %eax           #  50:     param  0 <- v1
+     movl    8(%ebp), %eax           #  53:     param  0 <- v1
-     call    DIM                     #  51:     call   t28 <- DIM
+     call    DIM                     #  54:     call   t28 <- DIM
-     movl    -88(%ebp), %eax         #  52:     mul    t29 <- t27, t28
+     movl    -88(%ebp), %eax         #  55:     mul    t29 <- t27, t28
-     movl    -96(%ebp), %eax         #  53:     add    t30 <- t29, 70010
+     movl    -96(%ebp), %eax         #  56:     add    t30 <- t29, 70010
-     movl    -104(%ebp), %eax        #  54:     mul    t31 <- t30, 1
+     movl    -104(%ebp), %eax        #  57:     mul    t31 <- t30, 1
-     movl    8(%ebp), %eax           #  55:     param  0 <- v1
+     movl    8(%ebp), %eax           #  58:     param  0 <- v1
-     call    DOFS                    #  56:     call   t32 <- DOFS
+     call    DOFS                    #  59:     call   t32 <- DOFS
-     movl    -108(%ebp), %eax        #  57:     add    t33 <- t31, t32
+     movl    -108(%ebp), %eax        #  60:     add    t33 <- t31, t32
-     movl    8(%ebp), %eax           #  58:     add    t34 <- v1, t33
+     movl    8(%ebp), %eax           #  61:     add    t34 <- v1, t33
-     movl    $97, %eax               #  59:     assign @t34 <- 97
+     movl    $97, %eax               #  62:     assign @t34 <- 97
-     jmp     l_f2_9_while_cond       #  60:     goto   9_while_cond
+     jmp     l_f2_9_while_cond       #  63:     goto   9_while_cond
+ l_f2_8:
+     jmp     l_test_13_if_false      #  17:     goto   13_if_false
+     jmp     l_test_13_if_false      #  18:     goto   13_if_false
+     jmp     l_test_13_if_false      #  19:     goto   13_if_false
+     jmp     l_test_13_if_false      #  20:     goto   13_if_false
-     jmp     l_test_11               #  17:     goto   11
+     jmp     l_test_11               #  21:     goto   11
+ l_test_13_if_false:
