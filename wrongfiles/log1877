-     addl    $1, %esp               
+     addl    $4, %esp               
+     jmp     l_f1_2_if_false         #   1:     goto   2_if_false
-     jmp     l_f1_6_if_false         #   2:     goto   6_if_false
+     jmp     l_f1_6_if_false         #   3:     goto   6_if_false
-     jmp     l_f1_4                  #   3:     goto   4
+     jmp     l_f1_4                  #   4:     goto   4
-     movl    $83436, %eax            #   6:     assign v3 <- 83436
+     movl    $83436, %eax            #   7:     assign v3 <- 83436
-     jmp     l_f1_8                  #   7:     goto   8
+     jmp     l_f1_8                  #   8:     goto   8
-     jmp     l_f1_11                 #  10:     goto   11
+     jmp     l_f1_11                 #  11:     goto   11
-     jmp     l_f1_12_while_cond      #  11:     goto   12_while_cond
+     jmp     l_f1_12_while_cond      #  12:     goto   12_while_cond
-     movl    $73098, %eax            #  13:     param  0 <- 73098
+     movl    $73098, %eax            #  14:     param  0 <- 73098
-     call    WriteInt                #  14:     call   WriteInt
+     call    WriteInt                #  15:     call   WriteInt
-     movl    $97, %eax               #  16:     if     97 >= 99 goto 17_while_body
+     movl    $97, %eax               #  17:     if     97 >= 99 goto 17_while_body
-     jmp     l_f1_15                 #  17:     goto   15
+     jmp     l_f1_15                 #  18:     goto   15
-     jmp     l_f1_16_while_cond      #  19:     goto   16_while_cond
+     jmp     l_f1_16_while_cond      #  20:     goto   16_while_cond
-     movl    $51388, %eax            #  21:     assign v3 <- 51388
+     movl    $51388, %eax            #  22:     assign v3 <- 51388
-     movl    $98, %eax               #  23:     if     98 > 97 goto 22_while_body
+     movl    $98, %eax               #  24:     if     98 > 97 goto 22_while_body
-     jmp     l_f1_20                 #  24:     goto   20
+     jmp     l_f1_20                 #  25:     goto   20
-     jmp     l_f1_21_while_cond      #  26:     goto   21_while_cond
+     jmp     l_f1_21_while_cond      #  27:     goto   21_while_cond
-     jmp     l_f1_0                  #  28:     goto   0
+     jmp     l_f1_0                  #  29:     goto   0
+ l_f1_2_if_false:
-     movl    $0, %eax                #  32:     assign v2 <- 0
+     movl    $0, %eax                #  34:     assign v2 <- 0
-     movl    $98, %eax               #  33:     if     98 > 97 goto 30_if_true
+     movl    $98, %eax               #  35:     if     98 > 97 goto 30_if_true
-     jmp     l_f1_31_if_false        #  34:     goto   31_if_false
+     jmp     l_f1_31_if_false        #  36:     goto   31_if_false
-     jmp     l_f1_29                 #  36:     goto   29
+     jmp     l_f1_29                 #  38:     goto   29
-     jmp     l_f1_25_while_cond      #  39:     goto   25_while_cond
+     jmp     l_f1_25_while_cond      #  41:     goto   25_while_cond
-     jmp     l_f1_35_while_body      #  41:     goto   35_while_body
+     jmp     l_f1_35_while_body      #  43:     goto   35_while_body
-     jmp     l_f1_34_while_cond      #  43:     goto   34_while_cond
+     jmp     l_f1_34_while_cond      #  45:     goto   34_while_cond
+     jmp     l_test_2_if_false       #   1:     goto   2_if_false
-     call    WriteLn                 #   2:     call   WriteLn
+     call    WriteLn                 #   3:     call   WriteLn
-     movl    $77050, %eax            #   3:     assign v0 <- 77050
+     movl    $77050, %eax            #   4:     assign v0 <- 77050
-     jmp     l_test_0                #   4:     goto   0
+     jmp     l_test_0                #   5:     goto   0
+ l_test_2_if_false:
-     call    dummyBOOLfunc           #   8:     call   t0 <- dummyBOOLfunc
+     call    dummyBOOLfunc           #  10:     call   t0 <- dummyBOOLfunc
-     movzbl  -13(%ebp), %eax         #   9:     if     t0 = 1 goto 9_while_body
+     movzbl  -13(%ebp), %eax         #  11:     if     t0 = 1 goto 9_while_body
-     jmp     l_test_7                #  10:     goto   7
+     jmp     l_test_7                #  12:     goto   7
-     jmp     l_test_8_while_cond     #  12:     goto   8_while_cond
+     jmp     l_test_8_while_cond     #  14:     goto   8_while_cond
-     jmp     l_test_11               #  14:     goto   11
+     jmp     l_test_11               #  16:     goto   11
+     jmp     l_test_12               #  17:     goto   12
+     jmp     l_test_12               #  18:     goto   12
+     jmp     l_test_12               #  19:     goto   12
-     movl    $1, %eax                #  16:     assign t1 <- 1
+     movl    $1, %eax                #  21:     assign t1 <- 1
-     jmp     l_test_13               #  17:     goto   13
+     jmp     l_test_13               #  22:     goto   13
+ l_test_12:
-     movl    $0, %eax                #  18:     assign t1 <- 0
+     movl    $0, %eax                #  24:     assign t1 <- 0
-     movzbl  -14(%ebp), %eax         #  20:     assign v1 <- t1
+     movzbl  -14(%ebp), %eax         #  26:     assign v1 <- t1
-     jmp     l_test_21_while_body    #  23:     goto   21_while_body
+     jmp     l_test_21_while_body    #  29:     goto   21_while_body
+     jmp     l_test_19               #  30:     goto   19
-     jmp     l_test_24_while_cond    #  26:     goto   24_while_cond
+     jmp     l_test_24_while_cond    #  33:     goto   24_while_cond
-     call    dummyINTfunc            #  28:     call   t2 <- dummyINTfunc
+     call    dummyINTfunc            #  35:     call   t2 <- dummyINTfunc
-     leal    v5, %eax                #  29:     &()    t3 <- v5
+     leal    v5, %eax                #  36:     &()    t3 <- v5
-     movl    -24(%ebp), %eax         #  30:     param  3 <- t3
+     movl    -24(%ebp), %eax         #  37:     param  3 <- t3
-     leal    v4, %eax                #  31:     &()    t4 <- v4
+     leal    v4, %eax                #  38:     &()    t4 <- v4
-     movl    -28(%ebp), %eax         #  32:     param  2 <- t4
+     movl    -28(%ebp), %eax         #  39:     param  2 <- t4
-     leal    v3, %eax                #  33:     &()    t5 <- v3
+     leal    v3, %eax                #  40:     &()    t5 <- v3
-     movl    -32(%ebp), %eax         #  34:     param  1 <- t5
+     movl    -32(%ebp), %eax         #  41:     param  1 <- t5
-     leal    v2, %eax                #  35:     &()    t6 <- v2
+     leal    v2, %eax                #  42:     &()    t6 <- v2
-     movl    -36(%ebp), %eax         #  36:     param  0 <- t6
+     movl    -36(%ebp), %eax         #  43:     param  0 <- t6
-     call    f2                      #  37:     call   t7 <- f2
+     call    f2                      #  44:     call   t7 <- f2
-     jmp     l_test_20_while_cond    #  39:     goto   20_while_cond
+     jmp     l_test_20_while_cond    #  46:     goto   20_while_cond
+ l_test_19:
