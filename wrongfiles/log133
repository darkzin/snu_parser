-     #    -60(%ebp)   4  [ $t19      <int> %ebp-60 ]
+     #    -60(%ebp)   4  [ $t19      <ptr(4) to <array 5 of <char>>> %ebp-60 ]
-     #    -68(%ebp)   4  [ $t20      <int> %ebp-68 ]
+     #    -68(%ebp)   4  [ $t3       <int> %ebp-68 ]
-     #    -72(%ebp)   4  [ $t21      <int> %ebp-72 ]
+     #    -72(%ebp)   4  [ $t4       <int> %ebp-72 ]
-     #    -76(%ebp)   4  [ $t22      <ptr(4) to <array 5 of <char>>> %ebp-76 ]
+     #    -76(%ebp)   4  [ $t5       <int> %ebp-76 ]
-     #    -80(%ebp)   4  [ $t3       <int> %ebp-80 ]
+     #    -80(%ebp)   4  [ $t6       <int> %ebp-80 ]
-     #    -84(%ebp)   4  [ $t4       <int> %ebp-84 ]
+     #    -84(%ebp)   4  [ $t7       <int> %ebp-84 ]
-     #    -88(%ebp)   4  [ $t5       <int> %ebp-88 ]
+     #    -88(%ebp)   4  [ $t8       <int> %ebp-88 ]
-     #    -92(%ebp)   4  [ $t6       <int> %ebp-92 ]
+     #    -92(%ebp)   4  [ $t9       <int> %ebp-92 ]
-     #    -96(%ebp)   4  [ $t7       <int> %ebp-96 ]
-     #   -100(%ebp)   4  [ $t8       <int> %ebp-100 ]
-     #   -104(%ebp)   4  [ $t9       <int> %ebp-104 ]
-     #   -105(%ebp)   1  [ $v4       <char> %ebp-105 ]
+     #    -93(%ebp)   1  [ $v4       <char> %ebp-93 ]
-     pushl   %ebp                   
-     movl    %esp, %ebp             
-     pushl   %ebx                    # save callee saved registers
-     pushl   %esi                   
+     pushl   %ebp                   
+     movl    %esp, %ebp             
+     pushl   %ebx                    # save callee saved registers
-     pushl   %edi                   
+     pushl   %esi                   
+     pushl   %edi                   
-     subl    $96, %esp               # make room for locals
+     subl    $84, %esp               # make room for locals
-     movl    $24, %ecx              
+     movl    $21, %ecx              
+     movl    %eax, -68(%ebp)        
+     movl    -64(%ebp), %eax         #   8:     mul    t4 <- t2, t3
+     movl    -68(%ebp), %ebx        
+     imull   %ebx                   
+     movl    %eax, -72(%ebp)        
+     movl    -72(%ebp), %eax         #   9:     add    t5 <- t4, 87302
+     movl    $87302, %ebx           
+     addl    %ebx, %eax             
+     movl    %eax, -76(%ebp)        
+     movl    $4, %eax                #  10:     param  1 <- 4
+     pushl   %eax                   
+     movl    8(%ebp), %eax           #  11:     param  0 <- v0
+     pushl   %eax                   
+     call    DIM                     #  12:     call   t6 <- DIM
+     addl    $8, %esp               
-     movl    -64(%ebp), %eax         #   8:     mul    t4 <- t2, t3
+     movl    -76(%ebp), %eax         #  13:     mul    t7 <- t5, t6
-     movl    -84(%ebp), %eax         #   9:     add    t5 <- t4, 87302
-     movl    $87302, %ebx           
-     addl    %ebx, %eax             
-     movl    %eax, -88(%ebp)        
-     movl    $4, %eax                #  10:     param  1 <- 4
-     pushl   %eax                   
-     movl    8(%ebp), %eax           #  11:     param  0 <- v0
-     pushl   %eax                   
-     call    DIM                     #  12:     call   t6 <- DIM
-     addl    $8, %esp               
-     movl    %eax, -92(%ebp)        
-     movl    -88(%ebp), %eax         #  13:     mul    t7 <- t5, t6
-     movl    -92(%ebp), %ebx        
-     imull   %ebx                   
-     movl    %eax, -96(%ebp)        
-     movl    %eax, -100(%ebp)       
+     movl    %eax, -88(%ebp)        
-     movl    -100(%ebp), %eax        #  15:     sub    t9 <- t8, 14390
+     movl    -88(%ebp), %eax         #  15:     sub    t9 <- t8, 14390
-     movl    %eax, -104(%ebp)       
+     movl    %eax, -92(%ebp)        
-     movl    -104(%ebp), %eax        #  16:     add    t10 <- t9, 99893
+     movl    -92(%ebp), %eax         #  16:     add    t10 <- t9, 99893
-     movl    -96(%ebp), %eax         #  17:     add    t11 <- t7, t10
+     movl    -84(%ebp), %eax         #  17:     add    t11 <- t7, t10
-     movl    $76214, %eax            #  21:     sub    t14 <- 76214, 31007
-     movl    $31007, %ebx           
-     subl    %ebx, %eax             
-     movl    %eax, -40(%ebp)        
-     movl    -40(%ebp), %eax         #  22:     sub    t15 <- t14, 14390
-     movl    $14390, %ebx           
-     subl    %ebx, %eax             
-     movl    %eax, -44(%ebp)        
-     movl    -44(%ebp), %eax         #  23:     add    t16 <- t15, 99893
-     movl    $99893, %ebx           
-     addl    %ebx, %eax             
-     movl    %eax, -48(%ebp)        
-     movl    -28(%ebp), %eax         #  24:     mul    t13 <- t11, t12
+     movl    -28(%ebp), %eax         #  21:     mul    t13 <- t11, t12
-     movl    -36(%ebp), %eax         #  25:     add    t17 <- t13, 13008
+     movl    -36(%ebp), %eax         #  22:     add    t14 <- t13, 13008
-     movl    %eax, -52(%ebp)        
+     movl    %eax, -40(%ebp)        
-     movl    -52(%ebp), %eax         #  26:     mul    t18 <- t17, 1
+     movl    -40(%ebp), %eax         #  23:     mul    t15 <- t14, 1
+     movl    %eax, -44(%ebp)        
+     movl    8(%ebp), %eax           #  24:     param  0 <- v0
+     pushl   %eax                   
+     call    DOFS                    #  25:     call   t16 <- DOFS
+     addl    $4, %esp               
+     movl    %eax, -48(%ebp)        
+     movl    -44(%ebp), %eax         #  26:     add    t17 <- t15, t16
+     movl    -48(%ebp), %ebx        
+     addl    %ebx, %eax             
+     movl    %eax, -52(%ebp)        
+     movl    8(%ebp), %eax           #  27:     add    t18 <- v0, t17
+     movl    -52(%ebp), %ebx        
+     addl    %ebx, %eax             
-     movl    8(%ebp), %eax           #  27:     param  0 <- v0
-     pushl   %eax                   
-     call    DOFS                    #  28:     call   t19 <- DOFS
-     addl    $4, %esp               
+     movl    $97, %eax               #  28:     assign @t18 <- 97
+     movl    -56(%ebp), %edi        
+     movb    %al, (%edi)            
+     leal    _str_1, %eax            #  29:     &()    t19 <- _str_1
-     movl    -56(%ebp), %eax         #  29:     add    t20 <- t18, t19
-     movl    -60(%ebp), %ebx        
-     addl    %ebx, %eax             
-     movl    %eax, -68(%ebp)        
-     movl    8(%ebp), %eax           #  30:     add    t21 <- v0, t20
-     movl    -68(%ebp), %ebx        
-     addl    %ebx, %eax             
-     movl    %eax, -72(%ebp)        
-     movl    $97, %eax               #  31:     assign @t21 <- 97
-     movl    -72(%ebp), %edi        
-     movb    %al, (%edi)            
-     leal    _str_1, %eax            #  32:     &()    t22 <- _str_1
-     movl    %eax, -76(%ebp)        
-     movl    -76(%ebp), %eax         #  33:     param  0 <- t22
+     movl    -60(%ebp), %eax         #  30:     param  0 <- t19
-     call    WriteStr                #  34:     call   WriteStr
+     call    WriteStr                #  31:     call   WriteStr
+     jmp     l_f0_2                  #  33:     goto   2
-     movl    $81211, %eax            #  37:     if     81211 = 31525 goto 10_while_body
+     movl    $81211, %eax            #  35:     if     81211 = 31525 goto 10_while_body
-     jmp     l_f0_8                  #  38:     goto   8
+     jmp     l_f0_8                  #  36:     goto   8
-     jmp     l_f0_9_while_cond       #  40:     goto   9_while_cond
+     jmp     l_f0_9_while_cond       #  38:     goto   9_while_cond
-     jmp     l_f0_3_while_cond       #  42:     goto   3_while_cond
+     jmp     l_f0_3_while_cond       #  40:     goto   3_while_cond
+ l_f0_2:
-     addl    $96, %esp               # remove locals
+     addl    $84, %esp               # remove locals
-     # -19252(%ebp)19224  [ $v3       <array 10 of <array 3 of <array 8 of <array 8 of <array 10 of <char>>>>>> %ebp-19252 ]
+     #   -19252(%ebp)  19224  [ $v3       <array 10 of <array 3 of <array 8 of <array 8 of <array 10 of <char>>>>>> %ebp-19252 ]
-     # -79756(%ebp)60504  [ $v4       <array 5 of <array 7 of <array 9 of <array 6 of <array 8 of <int>>>>>> %ebp-79756 ]
+     #   -79756(%ebp)  60504  [ $v4       <array 5 of <array 7 of <array 9 of <array 6 of <array 8 of <int>>>>>> %ebp-79756 ]
-     addl    $13, %esp              
+     addl    $16, %esp              
-     # -19256(%ebp)19224  [ $v4       <array 10 of <array 3 of <array 8 of <array 8 of <array 10 of <char>>>>>> %ebp-19256 ]
+     #   -19256(%ebp)  19224  [ $v4       <array 10 of <array 3 of <array 8 of <array 8 of <array 10 of <char>>>>>> %ebp-19256 ]
-     # -79760(%ebp)60504  [ $v5       <array 5 of <array 7 of <array 9 of <array 6 of <array 8 of <int>>>>>> %ebp-79760 ]
+     #   -79760(%ebp)  60504  [ $v5       <array 5 of <array 7 of <array 9 of <array 6 of <array 8 of <int>>>>>> %ebp-79760 ]
-     movl    $99, %eax               #   0:     if     99 >= 100 goto 3
+     movl    $99, %eax               #   0:     if     99 >= 100 goto 4
-     jge     l_f2_3                 
+     jge     l_f2_4                 
-     jmp     l_f2_4                  #   1:     goto   4
+     jmp     l_f2_5                  #   1:     goto   5
- l_f2_3:
+ l_f2_4:
-     jmp     l_f2_5                  #   4:     goto   5
+     jmp     l_f2_6                  #   4:     goto   6
- l_f2_4:
+ l_f2_5:
- l_f2_5:
+ l_f2_6:
+     jmp     l_f2_26                 #  32:     goto   26
-     call    dummyBOOLfunc           #  32:     call   t2 <- dummyBOOLfunc
+     call    dummyBOOLfunc           #  33:     call   t2 <- dummyBOOLfunc
-     movzbl  -15(%ebp), %eax         #  33:     if     t2 = 1 goto 25
+     movzbl  -15(%ebp), %eax         #  34:     if     t2 = 1 goto 25
-     jmp     l_f2_26                 #  34:     goto   26
+     jmp     l_f2_26                 #  35:     goto   26
-     movl    $1, %eax                #  36:     assign t3 <- 1
+     movl    $1, %eax                #  37:     assign t3 <- 1
-     jmp     l_f2_27                 #  37:     goto   27
+     jmp     l_f2_27                 #  38:     goto   27
-     movl    $0, %eax                #  39:     assign t3 <- 0
+     movl    $0, %eax                #  40:     assign t3 <- 0
-     movzbl  -16(%ebp), %eax         #  41:     assign v3 <- t3
+     movzbl  -16(%ebp), %eax         #  42:     assign v3 <- t3
-     jmp     l_f2_29                 #  43:     goto   29
+     jmp     l_f2_29                 #  44:     goto   29
-     leal    -79760(%ebp), %eax      #  45:     &()    t4 <- v5
+     leal    -79760(%ebp), %eax      #  46:     &()    t4 <- v5
-     movl    -20(%ebp), %eax         #  46:     param  3 <- t4
+     movl    -20(%ebp), %eax         #  47:     param  3 <- t4
-     movl    $0, %eax                #  47:     param  2 <- 0
+     movl    $0, %eax                #  48:     param  2 <- 0
-     movl    $3861, %eax             #  48:     sub    t5 <- 3861, 6153
+     movl    $3861, %eax             #  49:     sub    t5 <- 3861, 6153
-     movl    -24(%ebp), %eax         #  49:     param  1 <- t5
+     movl    -24(%ebp), %eax         #  50:     param  1 <- t5
-     leal    -19256(%ebp), %eax      #  50:     &()    t6 <- v4
+     leal    -19256(%ebp), %eax      #  51:     &()    t6 <- v4
-     movl    -28(%ebp), %eax         #  51:     param  0 <- t6
+     movl    -28(%ebp), %eax         #  52:     param  0 <- t6
-     call    f0                      #  52:     call   t7 <- f0
+     call    f0                      #  53:     call   t7 <- f0
-     addl    $13, %esp              
+     addl    $16, %esp              
-     movl    $98, %eax               #  53:     if     98 >= t7 goto 34_while_body
+     movl    $98, %eax               #  54:     if     98 >= t7 goto 34_while_body
-     jmp     l_f2_32                 #  54:     goto   32
+     jmp     l_f2_32                 #  55:     goto   32
-     jmp     l_f2_33_while_cond      #  56:     goto   33_while_cond
+     jmp     l_f2_33_while_cond      #  57:     goto   33_while_cond
-     jmp     l_f2_30_while_cond      #  58:     goto   30_while_cond
+     jmp     l_f2_30_while_cond      #  59:     goto   30_while_cond
