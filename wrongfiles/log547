+     jmp     l_f1_12                 #   8:     goto   12
-     movl    $1, %eax                #   8:     assign t5 <- 1
+     movl    $1, %eax                #   9:     assign t5 <- 1
-     jmp     l_f1_12                 #   9:     goto   12
+     jmp     l_f1_13                 #  10:     goto   13
+ l_f1_12:
-     movl    $0, %eax                #  10:     assign t5 <- 0
+     movl    $0, %eax                #  12:     assign t5 <- 0
- l_f1_12:
+ l_f1_13:
-     movzbl  -17(%ebp), %eax         #  12:     param  2 <- t5
+     movzbl  -17(%ebp), %eax         #  14:     param  2 <- t5
-     movl    $1, %eax                #  13:     if     1 = 0 goto 14
+     movl    $1, %eax                #  15:     if     1 = 0 goto 15
-     je      l_f1_14                
+     je      l_f1_15                
-     jmp     l_f1_15                 #  14:     goto   15
+     jmp     l_f1_16                 #  16:     goto   16
- l_f1_14:
+ l_f1_15:
-     movl    $1, %eax                #  16:     assign t6 <- 1
+     movl    $1, %eax                #  18:     assign t6 <- 1
-     jmp     l_f1_16                 #  17:     goto   16
+     jmp     l_f1_17                 #  19:     goto   17
- l_f1_15:
+ l_f1_16:
-     movl    $0, %eax                #  19:     assign t6 <- 0
+     movl    $0, %eax                #  21:     assign t6 <- 0
- l_f1_16:
+ l_f1_17:
-     movzbl  -18(%ebp), %eax         #  21:     param  1 <- t6
+     movzbl  -18(%ebp), %eax         #  23:     param  1 <- t6
-     movl    $97, %eax               #  22:     param  0 <- 97
+     movl    $97, %eax               #  24:     param  0 <- 97
-     call    f0                      #  23:     call   t7 <- f0
+     call    f0                      #  25:     call   t7 <- f0
-     addl    $3, %esp               
+     addl    $12, %esp              
-     movl    $99, %eax               #  24:     if     99 < t7 goto 7
+     movl    $99, %eax               #  26:     if     99 < t7 goto 7
-     jmp     l_f1_8                  #  25:     goto   8
+     jmp     l_f1_8                  #  27:     goto   8
-     movl    $1, %eax                #  27:     assign t8 <- 1
+     movl    $1, %eax                #  29:     assign t8 <- 1
-     jmp     l_f1_9                  #  28:     goto   9
+     jmp     l_f1_9                  #  30:     goto   9
-     movl    $0, %eax                #  30:     assign t8 <- 0
+     movl    $0, %eax                #  32:     assign t8 <- 0
-     movzbl  -20(%ebp), %eax         #  32:     return t8
+     movzbl  -20(%ebp), %eax         #  34:     return t8
-     movl    $37922, %eax            #  33:     div    t9 <- 37922, 2226
+     movl    $37922, %eax            #  35:     div    t9 <- 37922, 2226
-     movl    -24(%ebp), %eax         #  34:     div    t10 <- t9, 97377
+     movl    -24(%ebp), %eax         #  36:     div    t10 <- t9, 97377
-     movl    -16(%ebp), %eax         #  35:     assign v1 <- t10
+     movl    -16(%ebp), %eax         #  37:     assign v1 <- t10
+     jmp     l_f2_2_if_false         #   1:     goto   2_if_false
-     jmp     l_f2_0                  #   2:     goto   0
+     jmp     l_f2_0                  #   3:     goto   0
+ l_f2_2_if_false:
-     call    dummyCHARfunc           #   6:     call   t5 <- dummyCHARfunc
+     call    dummyCHARfunc           #   8:     call   t5 <- dummyCHARfunc
-     movzbl  -13(%ebp), %eax         #   7:     if     t5 >= 97 goto 8_while_body
+     movzbl  -13(%ebp), %eax         #   9:     if     t5 >= 97 goto 8_while_body
-     jmp     l_f2_6                  #   8:     goto   6
+     jmp     l_f2_6                  #  10:     goto   6
-     jmp     l_f2_7_while_cond       #  10:     goto   7_while_cond
+     jmp     l_f2_7_while_cond       #  12:     goto   7_while_cond
-     addl    $3, %esp               
+     addl    $12, %esp              
