-     #   -108(%ebp)   4  [ $t31      <int> %ebp-108 ]
+     #   -108(%ebp)   4  [ $t31      <ptr(4) to <array 37 of <array 19 of <array 61 of <array 72 of <array 28 of <int>>>>>>> %ebp-108 ]
-     #   -124(%ebp)   4  [ $t35      <int> %ebp-124 ]
-     #   -128(%ebp)   4  [ $t36      <ptr(4) to <array 37 of <array 19 of <array 61 of <array 72 of <array 28 of <int>>>>>>> %ebp-128 ]
+     #   -124(%ebp)   4  [ $t35      <ptr(4) to <array 37 of <array 19 of <array 61 of <array 72 of <array 28 of <int>>>>>>> %ebp-124 ]
+     #   -128(%ebp)   4  [ $t36      <int> %ebp-128 ]
-     #   -140(%ebp)   4  [ $t39      <int> %ebp-140 ]
+     #   -140(%ebp)   4  [ $t39      <ptr(4) to <array 37 of <array 19 of <array 61 of <array 72 of <array 28 of <int>>>>>>> %ebp-140 ]
-     #   -148(%ebp)   4  [ $t40      <ptr(4) to <array 37 of <array 19 of <array 61 of <array 72 of <array 28 of <int>>>>>>> %ebp-148 ]
+     #   -148(%ebp)   4  [ $t40      <int> %ebp-148 ]
-     #   -180(%ebp)   4  [ $t48      <int> %ebp-180 ]
-     #   -184(%ebp)   4  [ $t49      <ptr(4) to <array 37 of <array 19 of <array 61 of <array 72 of <array 28 of <int>>>>>>> %ebp-184 ]
+     #   -180(%ebp)   4  [ $t48      <ptr(4) to <array 37 of <array 19 of <array 61 of <array 72 of <array 28 of <int>>>>>>> %ebp-180 ]
+     #   -181(%ebp)   1  [ $t49      <bool> %ebp-181 ]
-     #   -192(%ebp)   4  [ $t50      <int> %ebp-192 ]
+     #   -192(%ebp)   4  [ $t6       <int> %ebp-192 ]
-     #   -196(%ebp)   4  [ $t51      <int> %ebp-196 ]
+     #   -196(%ebp)   4  [ $t7       <int> %ebp-196 ]
-     #   -200(%ebp)   4  [ $t52      <int> %ebp-200 ]
+     #   -200(%ebp)   4  [ $t8       <int> %ebp-200 ]
-     #   -204(%ebp)   4  [ $t53      <ptr(4) to <array 37 of <array 19 of <array 61 of <array 72 of <array 28 of <int>>>>>>> %ebp-204 ]
-     #   -205(%ebp)   1  [ $t54      <bool> %ebp-205 ]
-     #   -212(%ebp)   4  [ $t6       <int> %ebp-212 ]
-     #   -216(%ebp)   4  [ $t7       <int> %ebp-216 ]
-     #   -220(%ebp)   4  [ $t8       <int> %ebp-220 ]
-     #   -224(%ebp)   4  [ $t9       <int> %ebp-224 ]
+     #   -204(%ebp)   4  [ $t9       <int> %ebp-204 ]
-     #-345808760(%ebp)345808536  [ $v4       <array 37 of <array 19 of <array 61 of <array 72 of <array 28 of <int>>>>>> %ebp-345808760 ]
+     #   -345808740(%ebp)  345808536  [ $v4       <array 37 of <array 19 of <array 61 of <array 72 of <array 28 of <int>>>>>> %ebp-345808740 ]
-     #-345808764(%ebp)   4  [ $v5       <int> %ebp-345808764 ]
+     #   -345808744(%ebp)   4  [ $v5       <int> %ebp-345808744 ]
-     pushl   %ebp                   
-     movl    %esp, %ebp             
-     pushl   %ebx                    # save callee saved registers
-     pushl   %esi                   
+     pushl   %ebp                   
+     movl    %esp, %ebp             
+     pushl   %ebx                    # save callee saved registers
-     pushl   %edi                   
+     pushl   %esi                   
+     pushl   %edi                   
-     subl    $345808752, %esp        # make room for locals
+     subl    $345808732, %esp        # make room for locals
-     movl    $86452188, %ecx        
+     movl    $86452183, %ecx        
-     movl    $5,-345808760(%ebp)     # local array 'v4': 5 dimensions
+     movl    $5,-345808740(%ebp)     # local array 'v4': 5 dimensions
-     movl    $37,-345808756(%ebp)    #   dimension 1: 37 elements
+     movl    $37,-345808736(%ebp)    #   dimension 1: 37 elements
-     movl    $19,-345808752(%ebp)    #   dimension 2: 19 elements
+     movl    $19,-345808732(%ebp)    #   dimension 2: 19 elements
-     movl    $61,-345808748(%ebp)    #   dimension 3: 61 elements
+     movl    $61,-345808728(%ebp)    #   dimension 3: 61 elements
-     movl    $72,-345808744(%ebp)    #   dimension 4: 72 elements
+     movl    $72,-345808724(%ebp)    #   dimension 4: 72 elements
-     movl    $28,-345808740(%ebp)    #   dimension 5: 28 elements
+     movl    $28,-345808720(%ebp)    #   dimension 5: 28 elements
-     leal    -345808760(%ebp), %eax  #   4:     &()    t2 <- v4
+     leal    -345808740(%ebp), %eax  #   4:     &()    t2 <- v4
-     movl    %eax, -212(%ebp)       
+     movl    %eax, -192(%ebp)       
-     movl    %eax, -216(%ebp)       
+     movl    %eax, -196(%ebp)       
-     movl    -212(%ebp), %eax        #  15:     mul    t8 <- t6, t7
+     movl    -192(%ebp), %eax        #  15:     mul    t8 <- t6, t7
-     movl    -216(%ebp), %ebx       
+     movl    -196(%ebp), %ebx       
-     movl    %eax, -220(%ebp)       
+     movl    %eax, -200(%ebp)       
-     movl    -220(%ebp), %eax        #  16:     add    t9 <- t8, 77043
+     movl    -200(%ebp), %eax        #  16:     add    t9 <- t8, 77043
-     movl    %eax, -224(%ebp)       
+     movl    %eax, -204(%ebp)       
-     movl    -224(%ebp), %eax        #  20:     mul    t11 <- t9, t10
+     movl    -204(%ebp), %eax        #  20:     mul    t11 <- t9, t10
-     leal    -345808760(%ebp), %eax  #  36:     &()    t21 <- v4
+     leal    -345808740(%ebp), %eax  #  36:     &()    t21 <- v4
-     leal    -345808760(%ebp), %eax  #  43:     &()    t27 <- v4
+     leal    -345808740(%ebp), %eax  #  43:     &()    t27 <- v4
-     movl    $92507, %eax            #  46:     mul    t30 <- 92507, 80224
+     movl    -84(%ebp), %eax         #  46:     mul    t29 <- t26, t28
+     movl    -92(%ebp), %ebx        
+     imull   %ebx                   
+     movl    %eax, -96(%ebp)        
+     movl    -96(%ebp), %eax         #  47:     add    t30 <- t29, 74943
-     movl    $80224, %ebx           
+     movl    $74943, %ebx           
-     imull   %ebx                   
+     addl    %ebx, %eax             
+     movl    $3, %eax                #  48:     param  1 <- 3
-     movl    -104(%ebp), %eax        #  47:     mul    t31 <- t30, 74572
-     movl    $74572, %ebx           
-     imull   %ebx                   
+     pushl   %eax                   
+     leal    -345808740(%ebp), %eax  #  49:     &()    t31 <- v4
-     movl    -108(%ebp), %eax        #  48:     mul    t32 <- t31, 18041
+     movl    -108(%ebp), %eax        #  50:     param  0 <- t31
-     movl    $18041, %ebx           
-     imull   %ebx                   
+     pushl   %eax                   
+     call    DIM                     #  51:     call   t32 <- DIM
+     addl    $8, %esp               
-     movl    -112(%ebp), %eax        #  49:     div    t33 <- t32, 99299
+     movl    -104(%ebp), %eax        #  52:     mul    t33 <- t30, t32
-     movl    $99299, %ebx           
+     movl    -112(%ebp), %ebx       
-     cdq                            
-     idivl   %ebx                   
+     imull   %ebx                   
-     movl    -116(%ebp), %eax        #  50:     div    t34 <- t33, 41962
+     movl    -116(%ebp), %eax        #  53:     add    t34 <- t33, 12975
-     movl    $41962, %ebx           
+     movl    $12975, %ebx           
-     cdq                            
-     idivl   %ebx                   
+     addl    %ebx, %eax             
+     movl    $4, %eax                #  54:     param  1 <- 4
-     movl    -84(%ebp), %eax         #  51:     mul    t29 <- t26, t28
-     movl    -92(%ebp), %ebx        
-     imull   %ebx                   
+     pushl   %eax                   
+     leal    -345808740(%ebp), %eax  #  55:     &()    t35 <- v4
-     movl    %eax, -96(%ebp)        
-     movl    -96(%ebp), %eax         #  52:     add    t35 <- t29, 74943
-     movl    $74943, %ebx           
-     addl    %ebx, %eax             
-     movl    $3, %eax                #  53:     param  1 <- 3
+     movl    -124(%ebp), %eax        #  56:     param  0 <- t35
-     leal    -345808760(%ebp), %eax  #  54:     &()    t36 <- v4
+     call    DIM                     #  57:     call   t36 <- DIM
+     addl    $8, %esp               
-     movl    -128(%ebp), %eax        #  55:     param  0 <- t36
+     movl    -120(%ebp), %eax        #  58:     mul    t37 <- t34, t36
+     movl    -128(%ebp), %ebx       
-     pushl   %eax                   
+     imull   %ebx                   
-     call    DIM                     #  56:     call   t37 <- DIM
-     addl    $8, %esp               
-     movl    -124(%ebp), %eax        #  57:     mul    t38 <- t35, t37
+     movl    -132(%ebp), %eax        #  59:     add    t38 <- t37, 79113
-     movl    -132(%ebp), %ebx       
+     movl    $79113, %ebx           
-     imull   %ebx                   
+     addl    %ebx, %eax             
-     movl    -136(%ebp), %eax        #  58:     add    t39 <- t38, 12975
-     movl    $12975, %ebx           
-     addl    %ebx, %eax             
+     movl    $5, %eax                #  60:     param  1 <- 5
+     pushl   %eax                   
+     leal    -345808740(%ebp), %eax  #  61:     &()    t39 <- v4
-     movl    $4, %eax                #  59:     param  1 <- 4
+     movl    -140(%ebp), %eax        #  62:     param  0 <- t39
-     leal    -345808760(%ebp), %eax  #  60:     &()    t40 <- v4
+     call    DIM                     #  63:     call   t40 <- DIM
+     addl    $8, %esp               
-     movl    -148(%ebp), %eax        #  61:     param  0 <- t40
+     movl    -136(%ebp), %eax        #  64:     mul    t41 <- t38, t40
+     movl    -148(%ebp), %ebx       
-     pushl   %eax                   
+     imull   %ebx                   
-     call    DIM                     #  62:     call   t41 <- DIM
-     addl    $8, %esp               
-     movl    -140(%ebp), %eax        #  63:     mul    t42 <- t39, t41
+     movl    -152(%ebp), %eax        #  65:     add    t42 <- t41, 35344
-     movl    -152(%ebp), %ebx       
+     movl    $35344, %ebx           
-     imull   %ebx                   
+     addl    %ebx, %eax             
-     movl    -156(%ebp), %eax        #  64:     add    t43 <- t42, 79113
+     movl    -156(%ebp), %eax        #  66:     mul    t43 <- t42, 4
-     movl    $79113, %ebx           
+     movl    $4, %ebx               
-     addl    %ebx, %eax             
+     imull   %ebx                   
-     movl    $5, %eax                #  65:     param  1 <- 5
-     pushl   %eax                   
-     leal    -345808760(%ebp), %eax  #  66:     &()    t44 <- v4
+     leal    -345808740(%ebp), %eax  #  67:     &()    t44 <- v4
-     movl    -164(%ebp), %eax        #  67:     param  0 <- t44
+     movl    -164(%ebp), %eax        #  68:     param  0 <- t44
-     call    DIM                     #  68:     call   t45 <- DIM
+     call    DOFS                    #  69:     call   t45 <- DOFS
-     addl    $8, %esp               
+     addl    $4, %esp               
-     movl    -160(%ebp), %eax        #  69:     mul    t46 <- t43, t45
+     movl    -160(%ebp), %eax        #  70:     add    t46 <- t43, t45
-     imull   %ebx                   
+     addl    %ebx, %eax             
-     movl    -172(%ebp), %eax        #  70:     add    t47 <- t46, 35344
+     movl    -64(%ebp), %eax         #  71:     add    t47 <- t21, t46
-     movl    $35344, %ebx           
+     movl    -172(%ebp), %ebx       
-     movl    -176(%ebp), %eax        #  71:     mul    t48 <- t47, 4
+     movl    -60(%ebp), %eax         #  72:     assign @t47 <- t20
+     movl    -176(%ebp), %edi       
+     movl    %eax, (%edi)           
+     movl    $38998, %eax            #  73:     if     38998 >= 35271 goto 8_if_true
-     movl    $4, %ebx               
+     movl    $35271, %ebx           
-     imull   %ebx                   
+     cmpl    %ebx, %eax             
+     jge     l_f2_8_if_true         
+     jmp     l_f2_9_if_false         #  74:     goto   9_if_false
+ l_f2_8_if_true:
+     movl    $98, %eax               #  76:     return 98
+     jmp     l_f2_exit              
+     leal    -345808740(%ebp), %eax  #  77:     &()    t48 <- v4
-     leal    -345808760(%ebp), %eax  #  72:     &()    t49 <- v4
-     movl    %eax, -184(%ebp)       
-     movl    -184(%ebp), %eax        #  73:     param  0 <- t49
+     movl    -180(%ebp), %eax        #  78:     param  0 <- t48
-     call    DOFS                    #  74:     call   t50 <- DOFS
+     call    f1                      #  79:     call   t49 <- f1
-     movl    %eax, -192(%ebp)       
-     movl    -180(%ebp), %eax        #  75:     add    t51 <- t48, t50
-     movl    -192(%ebp), %ebx       
-     addl    %ebx, %eax             
-     movl    %eax, -196(%ebp)       
-     movl    -64(%ebp), %eax         #  76:     add    t52 <- t21, t51
-     movl    -196(%ebp), %ebx       
-     addl    %ebx, %eax             
-     movl    %eax, -200(%ebp)       
-     movl    -60(%ebp), %eax         #  77:     assign @t52 <- t20
-     movl    -200(%ebp), %edi       
-     movl    %eax, (%edi)           
-     movl    $38998, %eax            #  78:     if     38998 >= 35271 goto 8_if_true
-     movl    $35271, %ebx           
-     cmpl    %ebx, %eax             
-     jge     l_f2_8_if_true         
-     jmp     l_f2_9_if_false         #  79:     goto   9_if_false
- l_f2_8_if_true:
-     movl    $98, %eax               #  81:     return 98
-     jmp     l_f2_exit              
-     leal    -345808760(%ebp), %eax  #  82:     &()    t53 <- v4
-     movl    %eax, -204(%ebp)       
-     movl    -204(%ebp), %eax        #  83:     param  0 <- t53
-     pushl   %eax                   
-     call    f1                      #  84:     call   t54 <- f1
-     addl    $4, %esp               
-     movb    %al, -205(%ebp)        
+     movb    %al, -181(%ebp)        
-     jmp     l_f2_7                  #  85:     goto   7
+     jmp     l_f2_7                  #  80:     goto   7
-     addl    $345808752, %esp        # remove locals
+     addl    $345808732, %esp        # remove locals
+     jmp     l_test_14               #  11:     goto   14
-     movl    $1, %eax                #  11:     assign t1 <- 1
+     movl    $1, %eax                #  12:     assign t1 <- 1
-     jmp     l_test_14               #  12:     goto   14
+     jmp     l_test_15               #  13:     goto   15
+ l_test_14:
-     movl    $0, %eax                #  13:     assign t1 <- 0
+     movl    $0, %eax                #  15:     assign t1 <- 0
- l_test_14:
+ l_test_15:
-     movl    $1, %eax                #  15:     if     1 = t1 goto 11_while_body
+     movl    $1, %eax                #  17:     if     1 = t1 goto 11_while_body
-     jmp     l_test_9                #  16:     goto   9
+     jmp     l_test_9                #  18:     goto   9
-     jmp     l_test_10_while_cond    #  18:     goto   10_while_cond
+     jmp     l_test_10_while_cond    #  20:     goto   10_while_cond
-     movl    $98, %eax               #  21:     if     98 <= 97 goto 22
+     movl    $98, %eax               #  23:     if     98 <= 97 goto 22
-     jmp     l_test_19               #  22:     goto   19
+     jmp     l_test_19               #  24:     goto   19
+     jmp     l_test_19               #  26:     goto   19
-     jmp     l_test_20_while_cond    #  24:     goto   20_while_cond
+     jmp     l_test_20_while_cond    #  27:     goto   20_while_cond
