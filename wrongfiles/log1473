-     #    -72(%ebp)   4  [ $t23      <int> %ebp-72 ]
-     #    -73(%ebp)   1  [ $t3       <char> %ebp-73 ]
+     #    -69(%ebp)   1  [ $t3       <char> %ebp-69 ]
+     #    -76(%ebp)   4  [ $t4       <int> %ebp-76 ]
-     #    -80(%ebp)   4  [ $t4       <int> %ebp-80 ]
+     #    -80(%ebp)   4  [ $t5       <int> %ebp-80 ]
-     #    -84(%ebp)   4  [ $t5       <int> %ebp-84 ]
+     #    -84(%ebp)   4  [ $t6       <int> %ebp-84 ]
-     #    -88(%ebp)   4  [ $t6       <int> %ebp-88 ]
+     #    -88(%ebp)   4  [ $t7       <int> %ebp-88 ]
-     #    -92(%ebp)   4  [ $t7       <int> %ebp-92 ]
+     #    -92(%ebp)   4  [ $t8       <int> %ebp-92 ]
-     #    -96(%ebp)   4  [ $t8       <int> %ebp-96 ]
+     #    -96(%ebp)   4  [ $t9       <int> %ebp-96 ]
-     #   -100(%ebp)   4  [ $t9       <int> %ebp-100 ]
-     #   -101(%ebp)   1  [ $v2       <bool> %ebp-101 ]
+     #    -97(%ebp)   1  [ $v2       <bool> %ebp-97 ]
-     pushl   %ebp                   
-     movl    %esp, %ebp             
-     pushl   %ebx                    # save callee saved registers
-     pushl   %esi                   
+     pushl   %ebp                   
+     movl    %esp, %ebp             
+     pushl   %ebx                    # save callee saved registers
-     pushl   %edi                   
+     pushl   %esi                   
+     pushl   %edi                   
-     subl    $92, %esp               # make room for locals
+     subl    $88, %esp               # make room for locals
-     movl    $23, %ecx              
+     movl    $22, %ecx              
+     jmp     l_f0_2                  #   1:     goto   2
-     movl    $1, %eax                #   2:     assign t2 <- 1
+     movl    $1, %eax                #   3:     assign t2 <- 1
-     jmp     l_f0_3                  #   3:     goto   3
+     jmp     l_f0_3                  #   4:     goto   3
+ l_f0_2:
-     movl    $0, %eax                #   4:     assign t2 <- 0
+     movl    $0, %eax                #   6:     assign t2 <- 0
-     movzbl  -53(%ebp), %eax         #   6:     assign v2 <- t2
+     movzbl  -53(%ebp), %eax         #   8:     assign v2 <- t2
-     movb    %al, -101(%ebp)        
+     movb    %al, -97(%ebp)         
-     call    dummyCHARfunc           #   7:     call   t3 <- dummyCHARfunc
+     call    dummyCHARfunc           #   9:     call   t3 <- dummyCHARfunc
-     movb    %al, -73(%ebp)         
+     movb    %al, -69(%ebp)         
-     movzbl  -73(%ebp), %eax         #   8:     return t3
+     movzbl  -69(%ebp), %eax         #  10:     return t3
-     movl    $80267, %eax            #   9:     div    t4 <- 80267, 15928
+     movl    $80267, %eax            #  11:     div    t4 <- 80267, 15928
-     movl    %eax, -80(%ebp)        
+     movl    %eax, -76(%ebp)        
-     movl    -80(%ebp), %eax         #  10:     mul    t5 <- t4, 7265
+     movl    -76(%ebp), %eax         #  12:     mul    t5 <- t4, 7265
-     movl    %eax, -84(%ebp)        
+     movl    %eax, -80(%ebp)        
-     movl    $17885, %eax            #  11:     sub    t6 <- 17885, 1048
+     movl    $17885, %eax            #  13:     sub    t6 <- 17885, 1048
+     movl    %eax, -84(%ebp)        
+     movl    $2, %eax                #  14:     param  1 <- 2
+     pushl   %eax                   
+     movl    8(%ebp), %eax           #  15:     param  0 <- v0
+     pushl   %eax                   
+     call    DIM                     #  16:     call   t7 <- DIM
+     addl    $8, %esp               
-     movl    $2, %eax                #  12:     param  1 <- 2
+     movl    -84(%ebp), %eax         #  17:     mul    t8 <- t6, t7
+     movl    -88(%ebp), %ebx        
-     pushl   %eax                   
+     imull   %ebx                   
-     movl    8(%ebp), %eax           #  13:     param  0 <- v0
-     pushl   %eax                   
-     call    DIM                     #  14:     call   t7 <- DIM
-     addl    $8, %esp               
-     movl    $17885, %eax            #  15:     sub    t9 <- 17885, 1048
-     movl    $1048, %ebx            
-     subl    %ebx, %eax             
-     movl    %eax, -100(%ebp)       
-     movl    -88(%ebp), %eax         #  16:     mul    t8 <- t6, t7
-     movl    -92(%ebp), %ebx        
-     imull   %ebx                   
-     movl    %eax, -96(%ebp)        
-     movl    -96(%ebp), %eax         #  17:     add    t10 <- t8, 10289
+     movl    -92(%ebp), %eax         #  18:     add    t9 <- t8, 10289
+     movl    %eax, -96(%ebp)        
+     movl    $3, %eax                #  19:     param  1 <- 3
+     pushl   %eax                   
+     movl    8(%ebp), %eax           #  20:     param  0 <- v0
+     pushl   %eax                   
+     call    DIM                     #  21:     call   t10 <- DIM
+     addl    $8, %esp               
-     movl    $3, %eax                #  18:     param  1 <- 3
+     movl    -96(%ebp), %eax         #  22:     mul    t11 <- t9, t10
+     movl    -16(%ebp), %ebx        
-     pushl   %eax                   
+     imull   %ebx                   
-     movl    8(%ebp), %eax           #  19:     param  0 <- v0
-     pushl   %eax                   
-     call    DIM                     #  20:     call   t11 <- DIM
-     addl    $8, %esp               
-     movl    -16(%ebp), %eax         #  21:     mul    t12 <- t10, t11
-     movl    -20(%ebp), %ebx        
-     imull   %ebx                   
-     movl    %eax, -24(%ebp)        
-     movl    -24(%ebp), %eax         #  22:     add    t13 <- t12, 92086
+     movl    -20(%ebp), %eax         #  23:     add    t12 <- t11, 92086
+     movl    %eax, -24(%ebp)        
+     movl    $4, %eax                #  24:     param  1 <- 4
+     pushl   %eax                   
+     movl    8(%ebp), %eax           #  25:     param  0 <- v0
+     pushl   %eax                   
+     call    DIM                     #  26:     call   t13 <- DIM
+     addl    $8, %esp               
-     movl    $4, %eax                #  23:     param  1 <- 4
+     movl    -24(%ebp), %eax         #  27:     mul    t14 <- t12, t13
+     movl    -28(%ebp), %ebx        
-     pushl   %eax                   
+     imull   %ebx                   
-     movl    8(%ebp), %eax           #  24:     param  0 <- v0
-     pushl   %eax                   
-     call    DIM                     #  25:     call   t14 <- DIM
-     addl    $8, %esp               
-     movl    -28(%ebp), %eax         #  26:     mul    t15 <- t13, t14
-     movl    -32(%ebp), %ebx        
-     imull   %ebx                   
-     movl    %eax, -36(%ebp)        
-     movl    -36(%ebp), %eax         #  27:     add    t16 <- t15, 58112
+     movl    -32(%ebp), %eax         #  28:     add    t15 <- t14, 58112
+     movl    %eax, -36(%ebp)        
+     movl    $5, %eax                #  29:     param  1 <- 5
+     pushl   %eax                   
+     movl    8(%ebp), %eax           #  30:     param  0 <- v0
+     pushl   %eax                   
+     call    DIM                     #  31:     call   t16 <- DIM
+     addl    $8, %esp               
-     movl    $5, %eax                #  28:     param  1 <- 5
+     movl    -36(%ebp), %eax         #  32:     mul    t17 <- t15, t16
+     movl    -40(%ebp), %ebx        
-     pushl   %eax                   
+     imull   %ebx                   
-     movl    8(%ebp), %eax           #  29:     param  0 <- v0
-     pushl   %eax                   
-     call    DIM                     #  30:     call   t17 <- DIM
-     addl    $8, %esp               
-     movl    -40(%ebp), %eax         #  31:     mul    t18 <- t16, t17
-     movl    -44(%ebp), %ebx        
-     imull   %ebx                   
-     movl    %eax, -48(%ebp)        
-     movl    -48(%ebp), %eax         #  32:     add    t19 <- t18, 869
+     movl    -44(%ebp), %eax         #  33:     add    t18 <- t17, 869
-     movl    %eax, -52(%ebp)        
+     movl    %eax, -48(%ebp)        
-     movl    -52(%ebp), %eax         #  33:     mul    t20 <- t19, 4
+     movl    -48(%ebp), %eax         #  34:     mul    t19 <- t18, 4
+     movl    %eax, -52(%ebp)        
+     movl    8(%ebp), %eax           #  35:     param  0 <- v0
+     pushl   %eax                   
+     call    DOFS                    #  36:     call   t20 <- DOFS
+     addl    $4, %esp               
-     movl    8(%ebp), %eax           #  34:     param  0 <- v0
+     movl    -52(%ebp), %eax         #  37:     add    t21 <- t19, t20
+     movl    -60(%ebp), %ebx        
-     pushl   %eax                   
-     call    DOFS                    #  35:     call   t21 <- DOFS
-     addl    $4, %esp               
+     addl    %ebx, %eax             
-     movl    -60(%ebp), %eax         #  36:     add    t22 <- t20, t21
+     movl    8(%ebp), %eax           #  38:     add    t22 <- v0, t21
-     movl    8(%ebp), %eax           #  37:     add    t23 <- v0, t22
-     movl    -68(%ebp), %ebx        
-     addl    %ebx, %eax             
-     movl    %eax, -72(%ebp)        
-     movl    -84(%ebp), %eax         #  38:     assign @t23 <- t5
+     movl    -80(%ebp), %eax         #  39:     assign @t22 <- t5
-     movl    -72(%ebp), %edi        
+     movl    -68(%ebp), %edi        
-     addl    $92, %esp               # remove locals
+     addl    $88, %esp               # remove locals
-     addl    $1, %esp               
+     addl    $4, %esp               
+     jmp     l_test_6                #   7:     goto   6
-     jmp     l_test_11_while_cond    #   8:     goto   11_while_cond
+     jmp     l_test_11_while_cond    #   9:     goto   11_while_cond
-     movl    $100, %eax              #   9:     if     100 = 100 goto 14
+     movl    $100, %eax              #  10:     if     100 = 100 goto 14
-     jmp     l_test_15               #  10:     goto   15
+     jmp     l_test_15               #  11:     goto   15
-     movl    $1, %eax                #  12:     assign t1 <- 1
+     movl    $1, %eax                #  13:     assign t1 <- 1
-     jmp     l_test_16               #  13:     goto   16
+     jmp     l_test_16               #  14:     goto   16
-     movl    $0, %eax                #  15:     assign t1 <- 0
+     movl    $0, %eax                #  16:     assign t1 <- 0
-     movzbl  -14(%ebp), %eax         #  17:     assign v0 <- t1
+     movzbl  -14(%ebp), %eax         #  18:     assign v0 <- t1
-     jmp     l_test_7_while_cond     #  18:     goto   7_while_cond
+     jmp     l_test_7_while_cond     #  19:     goto   7_while_cond
+ l_test_6:
