-     #    -84(%ebp)   4  [ $t25      <int> %ebp-84 ]
+     #    -84(%ebp)   4  [ $t3       <int> %ebp-84 ]
-     #    -88(%ebp)   4  [ $t3       <int> %ebp-88 ]
+     #    -88(%ebp)   4  [ $t4       <int> %ebp-88 ]
-     #    -92(%ebp)   4  [ $t4       <int> %ebp-92 ]
+     #    -92(%ebp)   4  [ $t5       <int> %ebp-92 ]
-     #    -96(%ebp)   4  [ $t5       <int> %ebp-96 ]
+     #    -96(%ebp)   4  [ $t6       <int> %ebp-96 ]
-     #   -100(%ebp)   4  [ $t6       <int> %ebp-100 ]
+     #   -100(%ebp)   4  [ $t7       <int> %ebp-100 ]
-     #   -104(%ebp)   4  [ $t7       <int> %ebp-104 ]
+     #   -104(%ebp)   4  [ $t8       <int> %ebp-104 ]
-     #   -108(%ebp)   4  [ $t8       <int> %ebp-108 ]
+     #   -108(%ebp)   4  [ $t9       <int> %ebp-108 ]
-     #   -112(%ebp)   4  [ $t9       <int> %ebp-112 ]
-     #   -113(%ebp)   1  [ $v3       <char> %ebp-113 ]
+     #   -109(%ebp)   1  [ $v3       <char> %ebp-109 ]
-     pushl   %ebp                   
-     movl    %esp, %ebp             
-     pushl   %ebx                    # save callee saved registers
-     pushl   %esi                   
+     pushl   %ebp                   
+     movl    %esp, %ebp             
+     pushl   %ebx                    # save callee saved registers
-     pushl   %edi                   
+     pushl   %esi                   
+     pushl   %edi                   
-     subl    $104, %esp              # make room for locals
+     subl    $100, %esp              # make room for locals
-     movl    $26, %ecx              
+     movl    $25, %ecx              
-     movl    %eax, -88(%ebp)        
+     movl    %eax, -84(%ebp)        
-     movl    -88(%ebp), %eax         #   4:     if     t3 > 71685 goto 2_while_body
+     movl    -84(%ebp), %eax         #   4:     if     t3 > 71685 goto 2_while_body
-     movl    %eax, -92(%ebp)        
+     movl    %eax, -88(%ebp)        
-     movl    -92(%ebp), %eax         #  10:     sub    t5 <- t4, 55693
+     movl    -88(%ebp), %eax         #  10:     sub    t5 <- t4, 55693
-     movl    %eax, -96(%ebp)        
+     movl    %eax, -92(%ebp)        
-     movl    -96(%ebp), %eax         #  11:     sub    t6 <- t5, 45735
+     movl    -92(%ebp), %eax         #  11:     sub    t6 <- t5, 45735
+     movl    %eax, -96(%ebp)        
+     movl    -96(%ebp), %eax         #  12:     add    t7 <- t6, 18998
+     movl    $18998, %ebx           
+     addl    %ebx, %eax             
-     movl    -100(%ebp), %eax        #  12:     add    t7 <- t6, 18998
-     movl    $18998, %ebx           
-     addl    %ebx, %eax             
-     movl    %eax, -104(%ebp)       
-     movl    -104(%ebp), %eax        #  13:     return t7
+     movl    -100(%ebp), %eax        #  13:     return t7
+     movl    %eax, -104(%ebp)       
+     movl    $51281, %eax            #  17:     mul    t9 <- 51281, t8
+     movl    -104(%ebp), %ebx       
+     imull   %ebx                   
-     movl    $51281, %eax            #  17:     mul    t9 <- 51281, t8
-     movl    -108(%ebp), %ebx       
-     imull   %ebx                   
-     movl    %eax, -112(%ebp)       
-     movl    -112(%ebp), %eax        #  19:     add    t11 <- t9, t10
+     movl    -108(%ebp), %eax        #  19:     add    t11 <- t9, t10
-     call    ReadInt                 #  23:     call   t14 <- ReadInt
-     movl    %eax, -36(%ebp)        
-     movl    -24(%ebp), %eax         #  24:     mul    t13 <- t11, t12
+     movl    -24(%ebp), %eax         #  23:     mul    t13 <- t11, t12
-     movl    -32(%ebp), %eax         #  25:     add    t15 <- t13, 32403
+     movl    -32(%ebp), %eax         #  24:     add    t14 <- t13, 32403
+     movl    %eax, -36(%ebp)        
+     movl    $4, %eax                #  25:     param  1 <- 4
+     pushl   %eax                   
+     movl    8(%ebp), %eax           #  26:     param  0 <- v2
+     pushl   %eax                   
+     call    DIM                     #  27:     call   t15 <- DIM
+     addl    $8, %esp               
+     movl    -36(%ebp), %eax         #  28:     mul    t16 <- t14, t15
+     movl    -40(%ebp), %ebx        
+     imull   %ebx                   
+     movl    %eax, -44(%ebp)        
+     movl    -44(%ebp), %eax         #  29:     add    t17 <- t16, 28666
+     movl    $28666, %ebx           
+     addl    %ebx, %eax             
+     movl    %eax, -48(%ebp)        
-     movl    $4, %eax                #  26:     param  1 <- 4
+     movl    $5, %eax                #  30:     param  1 <- 5
-     movl    8(%ebp), %eax           #  27:     param  0 <- v2
+     movl    8(%ebp), %eax           #  31:     param  0 <- v2
-     call    DIM                     #  28:     call   t16 <- DIM
+     call    DIM                     #  32:     call   t18 <- DIM
-     movl    %eax, -44(%ebp)        
+     movl    %eax, -52(%ebp)        
-     movl    -40(%ebp), %eax         #  29:     mul    t17 <- t15, t16
+     movl    -48(%ebp), %eax         #  33:     mul    t19 <- t17, t18
-     movl    -44(%ebp), %ebx        
+     movl    -52(%ebp), %ebx        
-     movl    %eax, -48(%ebp)        
-     movl    -48(%ebp), %eax         #  30:     add    t18 <- t17, 28666
-     movl    $28666, %ebx           
-     addl    %ebx, %eax             
-     movl    %eax, -52(%ebp)        
-     movl    $5, %eax                #  31:     param  1 <- 5
-     pushl   %eax                   
-     movl    8(%ebp), %eax           #  32:     param  0 <- v2
-     pushl   %eax                   
-     call    DIM                     #  33:     call   t19 <- DIM
-     addl    $8, %esp               
-     movl    -52(%ebp), %eax         #  34:     mul    t20 <- t18, t19
+     movl    -56(%ebp), %eax         #  34:     add    t20 <- t19, 24308
-     movl    -56(%ebp), %ebx        
+     movl    $24308, %ebx           
-     imull   %ebx                   
+     addl    %ebx, %eax             
-     movl    -64(%ebp), %eax         #  35:     add    t21 <- t20, 24308
-     movl    $24308, %ebx           
-     addl    %ebx, %eax             
-     movl    %eax, -68(%ebp)        
-     movl    -68(%ebp), %eax         #  36:     mul    t22 <- t21, 1
+     movl    -64(%ebp), %eax         #  35:     mul    t21 <- t20, 1
+     movl    %eax, -68(%ebp)        
+     movl    8(%ebp), %eax           #  36:     param  0 <- v2
+     pushl   %eax                   
+     call    DOFS                    #  37:     call   t22 <- DOFS
+     addl    $4, %esp               
-     movl    8(%ebp), %eax           #  37:     param  0 <- v2
+     movl    -68(%ebp), %eax         #  38:     add    t23 <- t21, t22
+     movl    -72(%ebp), %ebx        
-     pushl   %eax                   
-     call    DOFS                    #  38:     call   t23 <- DOFS
-     addl    $4, %esp               
+     addl    %ebx, %eax             
-     movl    -72(%ebp), %eax         #  39:     add    t24 <- t22, t23
+     movl    8(%ebp), %eax           #  39:     add    t24 <- v2, t23
-     movl    8(%ebp), %eax           #  40:     add    t25 <- v2, t24
-     movl    -80(%ebp), %ebx        
-     addl    %ebx, %eax             
-     movl    %eax, -84(%ebp)        
-     movl    $97, %eax               #  41:     assign @t25 <- 97
+     movl    $97, %eax               #  40:     assign @t24 <- 97
-     movl    -84(%ebp), %edi        
+     movl    -80(%ebp), %edi        
-     addl    $104, %esp              # remove locals
+     addl    $100, %esp              # remove locals
+     jmp     l_test_1                #   2:     goto   1
-     jmp     l_test_2_while_cond     #   3:     goto   2_while_cond
+     jmp     l_test_2_while_cond     #   4:     goto   2_while_cond
+ l_test_1:
-     movl    $0, %eax                #   4:     if     0 = 1 goto 7_if_true
+     movl    $0, %eax                #   6:     if     0 = 1 goto 7_if_true
-     jmp     l_test_8_if_false       #   5:     goto   8_if_false
+     jmp     l_test_8_if_false       #   7:     goto   8_if_false
-     movl    $98, %eax               #   7:     assign v0 <- 98
+     movl    $98, %eax               #   9:     assign v0 <- 98
-     movl    $1, %eax                #   8:     assign v1 <- 1
+     movl    $1, %eax                #  10:     assign v1 <- 1
-     jmp     l_test_15               #  13:     goto   15
+     jmp     l_test_15               #  15:     goto   15
-     jmp     l_test_16_while_cond    #  14:     goto   16_while_cond
+     jmp     l_test_16_while_cond    #  16:     goto   16_while_cond
-     jmp     l_test_6                #  16:     goto   6
+     jmp     l_test_6                #  18:     goto   6
-     movl    $48154, %eax            #  20:     if     48154 < 48590 goto 20_while_body
+     movl    $48154, %eax            #  22:     if     48154 < 48590 goto 20_while_body
-     jmp     l_test_18               #  21:     goto   18
+     jmp     l_test_18               #  23:     goto   18
-     jmp     l_test_23_while_cond    #  24:     goto   23_while_cond
+     jmp     l_test_23_while_cond    #  26:     goto   23_while_cond
-     call    dummyINTfunc            #  25:     call   t0 <- dummyINTfunc
+     call    dummyINTfunc            #  27:     call   t0 <- dummyINTfunc
-     jmp     l_test_27_while_cond    #  27:     goto   27_while_cond
+     jmp     l_test_27_while_cond    #  29:     goto   27_while_cond
-     jmp     l_test_19_while_cond    #  28:     goto   19_while_cond
+     jmp     l_test_19_while_cond    #  30:     goto   19_while_cond
-     movl    $97, %eax               #  32:     if     97 > 99 goto 32_while_body
+     movl    $97, %eax               #  34:     if     97 > 99 goto 32_while_body
-     jmp     l_test_30               #  33:     goto   30
+     jmp     l_test_30               #  35:     goto   30
-     jmp     l_test_31_while_cond    #  36:     goto   31_while_cond
+     jmp     l_test_31_while_cond    #  38:     goto   31_while_cond
