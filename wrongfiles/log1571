+     jmp     l_f0_2                  #   0:     goto   2
-     movl    $1, %eax                #   0:     assign t2 <- 1
+     movl    $1, %eax                #   1:     assign t2 <- 1
-     jmp     l_f0_3                  #   1:     goto   3
+     jmp     l_f0_3                  #   2:     goto   3
+ l_f0_2:
-     movl    $0, %eax                #   2:     assign t2 <- 0
+     movl    $0, %eax                #   4:     assign t2 <- 0
-     movzbl  -13(%ebp), %eax         #   4:     return t2
+     movzbl  -13(%ebp), %eax         #   6:     return t2
-     jmp     l_f0_5                  #   6:     goto   5
+     jmp     l_f0_5                  #   8:     goto   5
-     movl    $16925, %eax            #   7:     assign v4 <- 16925
+     movl    $16925, %eax            #   9:     assign v4 <- 16925
-     jmp     l_f0_10_while_cond      #   9:     goto   10_while_cond
+     jmp     l_f0_10_while_cond      #  11:     goto   10_while_cond
-     call    WriteLn                 #  10:     call   WriteLn
+     call    WriteLn                 #  12:     call   WriteLn
-     movl    $98, %eax               #  12:     if     98 <= 98 goto 15_while_body
+     movl    $98, %eax               #  14:     if     98 <= 98 goto 15_while_body
-     jmp     l_f0_13                 #  13:     goto   13
+     jmp     l_f0_13                 #  15:     goto   13
-     jmp     l_f0_14_while_cond      #  15:     goto   14_while_cond
+     jmp     l_f0_14_while_cond      #  17:     goto   14_while_cond
-     jmp     l_f0_6_while_cond       #  17:     goto   6_while_cond
+     jmp     l_f0_6_while_cond       #  19:     goto   6_while_cond
-     movl    $19431, %eax            #  20:     assign v4 <- 19431
+     movl    $19431, %eax            #  22:     assign v4 <- 19431
-     movl    $67053, %eax            #  21:     mul    t3 <- 67053, 20962
+     movl    $67053, %eax            #  23:     mul    t3 <- 67053, 20962
-     movl    $97640, %eax            #  22:     if     97640 = t3 goto 22
+     movl    $97640, %eax            #  24:     if     97640 = t3 goto 22
-     jmp     l_f0_23                 #  23:     goto   23
+     jmp     l_f0_23                 #  25:     goto   23
-     movl    $1, %eax                #  25:     assign t4 <- 1
+     movl    $1, %eax                #  27:     assign t4 <- 1
-     jmp     l_f0_24                 #  26:     goto   24
+     jmp     l_f0_24                 #  28:     goto   24
-     movl    $0, %eax                #  28:     assign t4 <- 0
+     movl    $0, %eax                #  30:     assign t4 <- 0
-     movzbl  -21(%ebp), %eax         #  30:     return t4
+     movzbl  -21(%ebp), %eax         #  32:     return t4
-     jmp     l_f0_18_while_cond      #  31:     goto   18_while_cond
+     jmp     l_f0_18_while_cond      #  33:     goto   18_while_cond
-     #-287205652(%ebp)287205624  [ $v1       <array 20 of <array 66 of <array 23 of <array 43 of <array 55 of <int>>>>>> %ebp-287205652 ]
+     #   -287205652(%ebp)  287205624  [ $v1       <array 20 of <array 66 of <array 23 of <array 43 of <array 55 of <int>>>>>> %ebp-287205652 ]
+     jmp     l_f2_6                  #  14:     goto   6
-     movl    $1, %eax                #  14:     assign t4 <- 1
+     movl    $1, %eax                #  15:     assign t4 <- 1
-     jmp     l_f2_7                  #  15:     goto   7
+     jmp     l_f2_7                  #  16:     goto   7
-     movl    $0, %eax                #  17:     assign t4 <- 0
+     movl    $0, %eax                #  18:     assign t4 <- 0
-     movzbl  -18(%ebp), %eax         #  19:     param  2 <- t4
+     movzbl  -18(%ebp), %eax         #  20:     param  2 <- t4
-     movl    $37234, %eax            #  20:     if     37234 # 86506 goto 11
+     movl    $37234, %eax            #  21:     if     37234 # 86506 goto 11
-     jmp     l_f2_12                 #  21:     goto   12
+     jmp     l_f2_12                 #  22:     goto   12
-     movl    $1, %eax                #  23:     assign t5 <- 1
+     movl    $1, %eax                #  24:     assign t5 <- 1
-     jmp     l_f2_13                 #  24:     goto   13
+     jmp     l_f2_13                 #  25:     goto   13
-     movl    $0, %eax                #  26:     assign t5 <- 0
+     movl    $0, %eax                #  27:     assign t5 <- 0
-     movzbl  -19(%ebp), %eax         #  28:     param  1 <- t5
+     movzbl  -19(%ebp), %eax         #  29:     param  1 <- t5
-     movl    $97, %eax               #  29:     param  0 <- 97
+     movl    $97, %eax               #  30:     param  0 <- 97
-     call    f0                      #  30:     call   t6 <- f0
+     call    f0                      #  31:     call   t6 <- f0
-     addl    $4, %esp               
+     addl    $16, %esp              
-     movl    $99949, %eax            #  31:     mul    t7 <- 99949, 46727
+     movl    $99949, %eax            #  32:     mul    t7 <- 99949, 46727
-     movl    -24(%ebp), %eax         #  32:     sub    t8 <- t7, 27412
+     movl    -24(%ebp), %eax         #  33:     sub    t8 <- t7, 27412
-     movl    -28(%ebp), %eax         #  33:     return t8
+     movl    -28(%ebp), %eax         #  34:     return t8
+     jmp     l_test_0                #   5:     goto   0
-     jmp     l_test_1_while_cond     #   5:     goto   1_while_cond
+     jmp     l_test_1_while_cond     #   6:     goto   1_while_cond
-     call    dummyBOOLfunc           #   8:     call   t1 <- dummyBOOLfunc
+     call    dummyBOOLfunc           #   9:     call   t1 <- dummyBOOLfunc
-     movl    $376, %eax              #   9:     assign v0 <- 376
+     movl    $376, %eax              #  10:     assign v0 <- 376
+     jmp     l_test_9                #  12:     goto   9
-     jmp     l_test_17_if_false      #  11:     goto   17_if_false
+     jmp     l_test_17_if_false      #  13:     goto   17_if_false
-     jmp     l_test_15               #  12:     goto   15
+     jmp     l_test_15               #  14:     goto   15
-     movl    $54586, %eax            #  16:     if     54586 < 50814 goto 20_while_body
+     movl    $54586, %eax            #  18:     if     54586 < 50814 goto 20_while_body
-     jmp     l_test_18               #  17:     goto   18
+     jmp     l_test_18               #  19:     goto   18
-     jmp     l_test_19_while_cond    #  19:     goto   19_while_cond
+     jmp     l_test_19_while_cond    #  21:     goto   19_while_cond
-     jmp     l_test_10_while_cond    #  21:     goto   10_while_cond
+     jmp     l_test_10_while_cond    #  23:     goto   10_while_cond
+ l_test_9:
