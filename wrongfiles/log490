+     jmp     l_f1_2_if_false         #   0:     goto   2_if_false
-     call    dummyINTfunc            #   0:     call   t3 <- dummyINTfunc
+     call    dummyINTfunc            #   1:     call   t3 <- dummyINTfunc
-     movl    $76150, %eax            #   3:     if     76150 > 34077 goto 8_while_body
+     movl    $76150, %eax            #   4:     if     76150 > 34077 goto 8_while_body
-     jmp     l_f1_6                  #   4:     goto   6
+     jmp     l_f1_6                  #   5:     goto   6
-     jmp     l_f1_7_while_cond       #   6:     goto   7_while_cond
+     jmp     l_f1_7_while_cond       #   7:     goto   7_while_cond
-     leal    _str_1, %eax            #   8:     &()    t4 <- _str_1
+     leal    _str_1, %eax            #   9:     &()    t4 <- _str_1
-     movl    -20(%ebp), %eax         #   9:     param  0 <- t4
+     movl    -20(%ebp), %eax         #  10:     param  0 <- t4
-     call    WriteStr                #  10:     call   WriteStr
+     call    WriteStr                #  11:     call   WriteStr
-     movl    $1, %eax                #  11:     if     1 = 1 goto 12_if_true
+     movl    $1, %eax                #  12:     if     1 = 1 goto 12_if_true
-     jmp     l_f1_13_if_false        #  12:     goto   13_if_false
+     jmp     l_f1_13_if_false        #  13:     goto   13_if_false
-     jmp     l_f1_11                 #  14:     goto   11
+     jmp     l_f1_11                 #  15:     goto   11
-     jmp     l_f1_0                  #  17:     goto   0
+     jmp     l_f1_0                  #  18:     goto   0
+ l_f1_2_if_false:
+     jmp     l_f1_17                 #  21:     goto   17
+     jmp     l_f1_17                 #  22:     goto   17
-     movl    $1, %eax                #  19:     assign t5 <- 1
+     movl    $1, %eax                #  23:     assign t5 <- 1
-     jmp     l_f1_18                 #  20:     goto   18
+     jmp     l_f1_18                 #  24:     goto   18
+ l_f1_17:
-     movl    $0, %eax                #  21:     assign t5 <- 0
+     movl    $0, %eax                #  26:     assign t5 <- 0
-     movzbl  -21(%ebp), %eax         #  23:     assign v0 <- t5
+     movzbl  -21(%ebp), %eax         #  28:     assign v0 <- t5
-     call    ReadInt                 #  24:     call   t6 <- ReadInt
+     call    ReadInt                 #  29:     call   t6 <- ReadInt
-     #  -1564(%ebp)1536  [ $v1       <array 9 of <array 2 of <array 1 of <array 3 of <array 7 of <int>>>>>> %ebp-1564 ]
+     #   -1564(%ebp)  1536  [ $v1       <array 9 of <array 2 of <array 1 of <array 3 of <array 7 of <int>>>>>> %ebp-1564 ]
-     #  -1568(%ebp)   4  [ $v2       <int> %ebp-1568 ]
+     #   -1568(%ebp)   4  [ $v2       <int> %ebp-1568 ]
