-     #    -64(%ebp)   4  [ $t22      <int> %ebp-64 ]
+     #    -61(%ebp)   1  [ $t22      <char> %ebp-61 ]
-     #    -68(%ebp)   4  [ $t23      <int> %ebp-68 ]
+     #    -68(%ebp)   4  [ $t3       <int> %ebp-68 ]
-     #    -72(%ebp)   4  [ $t24      <int> %ebp-72 ]
+     #    -72(%ebp)   4  [ $t4       <int> %ebp-72 ]
-     #    -73(%ebp)   1  [ $t25      <char> %ebp-73 ]
+     #    -76(%ebp)   4  [ $t5       <int> %ebp-76 ]
-     #    -80(%ebp)   4  [ $t3       <int> %ebp-80 ]
+     #    -80(%ebp)   4  [ $t6       <int> %ebp-80 ]
-     #    -84(%ebp)   4  [ $t4       <int> %ebp-84 ]
+     #    -84(%ebp)   4  [ $t7       <int> %ebp-84 ]
-     #    -88(%ebp)   4  [ $t5       <int> %ebp-88 ]
+     #    -88(%ebp)   4  [ $t8       <int> %ebp-88 ]
-     #    -92(%ebp)   4  [ $t6       <int> %ebp-92 ]
+     #    -92(%ebp)   4  [ $t9       <int> %ebp-92 ]
-     #    -96(%ebp)   4  [ $t7       <int> %ebp-96 ]
-     #   -100(%ebp)   4  [ $t8       <int> %ebp-100 ]
-     #   -104(%ebp)   4  [ $t9       <int> %ebp-104 ]
-     subl    $92, %esp               # make room for locals
+     subl    $80, %esp               # make room for locals
-     movl    $23, %ecx              
+     movl    $20, %ecx              
-     movl    %eax, -80(%ebp)        
+     movl    %eax, -68(%ebp)        
-     movl    -80(%ebp), %ebx        
+     movl    -68(%ebp), %ebx        
-     movl    %eax, -84(%ebp)        
+     movl    %eax, -72(%ebp)        
-     movl    %eax, -88(%ebp)        
+     movl    %eax, -76(%ebp)        
-     movl    -88(%ebp), %eax         #   5:     mul    t6 <- t5, 59415
+     movl    -76(%ebp), %eax         #   5:     mul    t6 <- t5, 59415
-     movl    %eax, -92(%ebp)        
+     movl    %eax, -80(%ebp)        
-     movl    -84(%ebp), %eax         #   6:     add    t7 <- t4, t6
+     movl    -72(%ebp), %eax         #   6:     add    t7 <- t4, t6
-     movl    -92(%ebp), %ebx        
+     movl    -80(%ebp), %ebx        
-     movl    %eax, -96(%ebp)        
+     movl    %eax, -84(%ebp)        
-     movl    %eax, -100(%ebp)       
+     movl    %eax, -88(%ebp)        
+     movl    -84(%ebp), %eax         #  10:     mul    t9 <- t7, t8
+     movl    -88(%ebp), %ebx        
+     imull   %ebx                   
+     movl    %eax, -92(%ebp)        
-     movl    $38993, %eax            #  10:     div    t10 <- 38993, 38213
+     movl    $9877, %eax             #  11:     div    t10 <- 9877, 84255
-     movl    $38213, %ebx           
+     movl    $84255, %ebx           
-     movl    -16(%ebp), %eax         #  11:     mul    t11 <- t10, 59415
+     movl    -92(%ebp), %eax         #  12:     add    t11 <- t9, t10
-     movl    $59415, %ebx           
+     movl    -16(%ebp), %ebx        
-     imull   %ebx                   
+     addl    %ebx, %eax             
+     movl    $4, %eax                #  13:     param  1 <- 4
-     movl    -96(%ebp), %eax         #  12:     mul    t9 <- t7, t8
-     movl    -100(%ebp), %ebx       
-     imull   %ebx                   
+     pushl   %eax                   
+     movl    16(%ebp), %eax          #  14:     param  0 <- v2
-     movl    %eax, -104(%ebp)       
-     movl    $9877, %eax             #  13:     div    t12 <- 9877, 84255
-     movl    $84255, %ebx           
-     cdq                            
-     idivl   %ebx                   
+     pushl   %eax                   
+     call    DIM                     #  15:     call   t12 <- DIM
+     addl    $8, %esp               
-     movl    -104(%ebp), %eax        #  14:     add    t13 <- t9, t12
+     movl    -20(%ebp), %eax         #  16:     mul    t13 <- t11, t12
-     addl    %ebx, %eax             
+     imull   %ebx                   
+     movl    -28(%ebp), %eax         #  17:     add    t14 <- t13, 81555
+     movl    $81555, %ebx           
+     addl    %ebx, %eax             
+     movl    %eax, -32(%ebp)        
-     movl    $4, %eax                #  15:     param  1 <- 4
+     movl    $5, %eax                #  18:     param  1 <- 5
-     movl    16(%ebp), %eax          #  16:     param  0 <- v2
+     movl    16(%ebp), %eax          #  19:     param  0 <- v2
-     call    DIM                     #  17:     call   t14 <- DIM
+     call    DIM                     #  20:     call   t15 <- DIM
-     movl    %eax, -32(%ebp)        
+     movl    %eax, -36(%ebp)        
-     movl    $9877, %eax             #  18:     div    t16 <- 9877, 84255
+     movl    -32(%ebp), %eax         #  21:     mul    t16 <- t14, t15
-     movl    $84255, %ebx           
+     movl    -36(%ebp), %ebx        
-     cdq                            
-     idivl   %ebx                   
+     imull   %ebx                   
-     movl    -28(%ebp), %eax         #  19:     mul    t15 <- t13, t14
-     movl    -32(%ebp), %ebx        
-     imull   %ebx                   
-     movl    %eax, -36(%ebp)        
-     movl    -36(%ebp), %eax         #  20:     add    t17 <- t15, 81555
+     movl    -40(%ebp), %eax         #  22:     add    t17 <- t16, 46192
-     movl    $81555, %ebx           
+     movl    $46192, %ebx           
-     movl    $5, %eax                #  21:     param  1 <- 5
+     movl    -44(%ebp), %eax         #  23:     mul    t18 <- t17, 4
+     movl    $4, %ebx               
-     pushl   %eax                   
+     imull   %ebx                   
-     movl    16(%ebp), %eax          #  22:     param  0 <- v2
-     pushl   %eax                   
-     call    DIM                     #  23:     call   t18 <- DIM
-     addl    $8, %esp               
-     movl    -44(%ebp), %eax         #  24:     mul    t19 <- t17, t18
+     movl    16(%ebp), %eax          #  24:     param  0 <- v2
-     movl    -48(%ebp), %ebx        
-     imull   %ebx                   
+     pushl   %eax                   
+     call    DOFS                    #  25:     call   t19 <- DOFS
+     addl    $4, %esp               
-     movl    -52(%ebp), %eax         #  25:     add    t20 <- t19, 46192
+     movl    -48(%ebp), %eax         #  26:     add    t20 <- t18, t19
-     movl    $46192, %ebx           
+     movl    -52(%ebp), %ebx        
-     movl    -56(%ebp), %eax         #  26:     mul    t21 <- t20, 4
+     movl    16(%ebp), %eax          #  27:     add    t21 <- v2, t20
+     movl    -56(%ebp), %ebx        
-     movl    $4, %ebx               
+     addl    %ebx, %eax             
-     imull   %ebx                   
-     movl    16(%ebp), %eax          #  27:     param  0 <- v2
-     pushl   %eax                   
-     call    DOFS                    #  28:     call   t22 <- DOFS
-     addl    $4, %esp               
-     movl    %eax, -64(%ebp)        
-     movl    -60(%ebp), %eax         #  29:     add    t23 <- t21, t22
-     movl    -64(%ebp), %ebx        
-     addl    %ebx, %eax             
-     movl    %eax, -68(%ebp)        
-     movl    16(%ebp), %eax          #  30:     add    t24 <- v2, t23
-     movl    -68(%ebp), %ebx        
-     addl    %ebx, %eax             
-     movl    %eax, -72(%ebp)        
-     movl    $93203, %eax            #  31:     assign @t24 <- 93203
+     movl    $93203, %eax            #  28:     assign @t21 <- 93203
-     movl    -72(%ebp), %edi        
+     movl    -60(%ebp), %edi        
-     movl    $97, %eax               #  32:     return 97
+     movl    $97, %eax               #  29:     return 97
-     jmp     l_f1_4_if_false         #  33:     goto   4_if_false
+     jmp     l_f1_4_if_false         #  30:     goto   4_if_false
-     call    dummyCHARfunc           #  34:     call   t25 <- dummyCHARfunc
+     call    dummyCHARfunc           #  31:     call   t22 <- dummyCHARfunc
-     movb    %al, -73(%ebp)         
+     movb    %al, -61(%ebp)         
-     jmp     l_f1_2                  #  35:     goto   2
+     jmp     l_f1_2                  #  32:     goto   2
-     addl    $92, %esp               # remove locals
+     addl    $80, %esp               # remove locals
+     jmp     l_f2_10                 #   2:     goto   10
+     jmp     l_f2_10                 #   3:     goto   10
-     jmp     l_f2_4                  #   2:     goto   4
+     jmp     l_f2_5                  #   4:     goto   5
+ l_f2_10:
-     jmp     l_f2_4                  #   3:     goto   4
+     jmp     l_f2_5                  #   6:     goto   5
+     jmp     l_f2_6                  #   7:     goto   6
- l_f2_4:
+ l_f2_5:
-     movl    $1, %eax                #   5:     assign t3 <- 1
+     movl    $1, %eax                #   9:     assign t3 <- 1
-     jmp     l_f2_6                  #   6:     goto   6
+     jmp     l_f2_7                  #  10:     goto   7
+ l_f2_6:
-     movl    $0, %eax                #   7:     assign t3 <- 0
+     movl    $0, %eax                #  12:     assign t3 <- 0
- l_f2_6:
+ l_f2_7:
-     movzbl  -13(%ebp), %eax         #   9:     if     t3 = 0 goto 3_while_body
+     movzbl  -13(%ebp), %eax         #  14:     if     t3 = 0 goto 3_while_body
-     jmp     l_f2_1                  #  10:     goto   1
+     jmp     l_f2_1                  #  15:     goto   1
-     jmp     l_f2_2_while_cond       #  12:     goto   2_while_cond
+     jmp     l_f2_2_while_cond       #  17:     goto   2_while_cond
-     movl    $94853, %eax            #  14:     div    t4 <- 94853, 99626
+     movl    $94853, %eax            #  19:     div    t4 <- 94853, 99626
-     movl    -20(%ebp), %eax         #  15:     mul    t5 <- t4, 99474
+     movl    -20(%ebp), %eax         #  20:     mul    t5 <- t4, 99474
-     movl    -24(%ebp), %eax         #  16:     div    t6 <- t5, 31144
+     movl    -24(%ebp), %eax         #  21:     div    t6 <- t5, 31144
-     movl    -28(%ebp), %eax         #  17:     div    t7 <- t6, 65271
+     movl    -28(%ebp), %eax         #  22:     div    t7 <- t6, 65271
-     movl    -32(%ebp), %eax         #  18:     return t7
+     movl    -32(%ebp), %eax         #  23:     return t7
+     jmp     l_test_3                #   6:     goto   3
-     jmp     l_test_4_while_cond     #   6:     goto   4_while_cond
+     jmp     l_test_4_while_cond     #   7:     goto   4_while_cond
+ l_test_3:
-     call    dummyCHARfunc           #   7:     call   t2 <- dummyCHARfunc
+     call    dummyCHARfunc           #   9:     call   t2 <- dummyCHARfunc
-     movl    $97, %eax               #   8:     if     97 >= t2 goto 9_if_true
+     movl    $97, %eax               #  10:     if     97 >= t2 goto 9_if_true
-     jmp     l_test_10_if_false      #   9:     goto   10_if_false
+     jmp     l_test_10_if_false      #  11:     goto   10_if_false
-     jmp     l_test_8                #  11:     goto   8
+     jmp     l_test_8                #  13:     goto   8
