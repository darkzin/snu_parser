-     #    -72(%ebp)   4  [ $t23      <int> %ebp-72 ]
-     #    -76(%ebp)   4  [ $t24      <int> %ebp-76 ]
-     #    -77(%ebp)   1  [ $t3       <char> %ebp-77 ]
+     #    -69(%ebp)   1  [ $t3       <char> %ebp-69 ]
-     #    -78(%ebp)   1  [ $t4       <bool> %ebp-78 ]
+     #    -70(%ebp)   1  [ $t4       <bool> %ebp-70 ]
+     #    -76(%ebp)   4  [ $t5       <int> %ebp-76 ]
+     #    -80(%ebp)   4  [ $t6       <int> %ebp-80 ]
-     #    -84(%ebp)   4  [ $t5       <int> %ebp-84 ]
+     #    -84(%ebp)   4  [ $t7       <int> %ebp-84 ]
-     #    -88(%ebp)   4  [ $t6       <int> %ebp-88 ]
+     #    -88(%ebp)   4  [ $t8       <int> %ebp-88 ]
-     #    -92(%ebp)   4  [ $t7       <int> %ebp-92 ]
+     #    -92(%ebp)   4  [ $t9       <int> %ebp-92 ]
-     #    -96(%ebp)   4  [ $t8       <int> %ebp-96 ]
-     #   -100(%ebp)   4  [ $t9       <int> %ebp-100 ]
-     #   -101(%ebp)   1  [ $v4       <bool> %ebp-101 ]
+     #    -93(%ebp)   1  [ $v4       <bool> %ebp-93 ]
-     pushl   %ebp                   
-     movl    %esp, %ebp             
-     pushl   %ebx                    # save callee saved registers
-     pushl   %esi                   
+     pushl   %ebp                   
+     movl    %esp, %ebp             
+     pushl   %ebx                    # save callee saved registers
-     pushl   %edi                   
+     pushl   %esi                   
+     pushl   %edi                   
-     subl    $92, %esp               # make room for locals
+     subl    $84, %esp               # make room for locals
-     movl    $23, %ecx              
+     movl    $21, %ecx              
-     movb    %al, -77(%ebp)         
+     movb    %al, -69(%ebp)         
-     movb    %al, -78(%ebp)         
+     movb    %al, -70(%ebp)         
-     movb    %al, -78(%ebp)         
+     movb    %al, -70(%ebp)         
-     movzbl  -78(%ebp), %eax         #  19:     return t4
+     movzbl  -70(%ebp), %eax         #  19:     return t4
-     movl    %eax, -84(%ebp)        
+     movl    %eax, -76(%ebp)        
-     movl    -84(%ebp), %ebx        
+     movl    -76(%ebp), %ebx        
-     movl    %eax, -88(%ebp)        
+     movl    %eax, -80(%ebp)        
+     movl    %eax, -84(%ebp)        
+     movl    -84(%ebp), %eax         #  28:     add    t8 <- t7, 26701
+     movl    $26701, %ebx           
+     addl    %ebx, %eax             
+     movl    %eax, -88(%ebp)        
+     movl    -80(%ebp), %eax         #  29:     add    t9 <- t6, t8
+     movl    -88(%ebp), %ebx        
+     addl    %ebx, %eax             
-     movl    -92(%ebp), %eax         #  28:     add    t8 <- t7, 26701
-     movl    $26701, %ebx           
-     addl    %ebx, %eax             
-     movl    %eax, -96(%ebp)        
-     movl    -88(%ebp), %eax         #  29:     add    t9 <- t6, t8
-     movl    -96(%ebp), %ebx        
-     addl    %ebx, %eax             
-     movl    %eax, -100(%ebp)       
-     movl    $10459, %eax            #  33:     sub    t12 <- 10459, 16551
-     movl    $16551, %ebx           
-     subl    %ebx, %eax             
-     movl    %eax, -24(%ebp)        
-     movl    -24(%ebp), %eax         #  34:     add    t13 <- t12, 26701
-     movl    $26701, %ebx           
-     addl    %ebx, %eax             
-     movl    %eax, -28(%ebp)        
-     movl    -100(%ebp), %eax        #  35:     mul    t11 <- t9, t10
+     movl    -92(%ebp), %eax         #  33:     mul    t11 <- t9, t10
-     movl    -20(%ebp), %eax         #  36:     add    t14 <- t11, 4966
+     movl    -20(%ebp), %eax         #  34:     add    t12 <- t11, 4966
+     movl    %eax, -24(%ebp)        
+     movl    $4, %eax                #  35:     param  1 <- 4
+     pushl   %eax                   
+     movl    8(%ebp), %eax           #  36:     param  0 <- v0
+     pushl   %eax                   
+     call    DIM                     #  37:     call   t13 <- DIM
+     addl    $8, %esp               
+     movl    %eax, -28(%ebp)        
+     movl    -24(%ebp), %eax         #  38:     mul    t14 <- t12, t13
+     movl    -28(%ebp), %ebx        
+     imull   %ebx                   
+     movl    -32(%ebp), %eax         #  39:     add    t15 <- t14, 3071
+     movl    $3071, %ebx            
+     addl    %ebx, %eax             
+     movl    %eax, -36(%ebp)        
-     movl    $4, %eax                #  37:     param  1 <- 4
+     movl    $5, %eax                #  40:     param  1 <- 5
-     movl    8(%ebp), %eax           #  38:     param  0 <- v0
+     movl    8(%ebp), %eax           #  41:     param  0 <- v0
-     call    DIM                     #  39:     call   t15 <- DIM
+     call    DIM                     #  42:     call   t16 <- DIM
-     movl    %eax, -36(%ebp)        
+     movl    %eax, -40(%ebp)        
-     movl    -32(%ebp), %eax         #  40:     mul    t16 <- t14, t15
+     movl    -36(%ebp), %eax         #  43:     mul    t17 <- t15, t16
-     movl    -36(%ebp), %ebx        
+     movl    -40(%ebp), %ebx        
-     movl    %eax, -40(%ebp)        
-     movl    -40(%ebp), %eax         #  41:     add    t17 <- t16, 3071
-     movl    $3071, %ebx            
-     addl    %ebx, %eax             
-     movl    $5, %eax                #  42:     param  1 <- 5
-     pushl   %eax                   
-     movl    8(%ebp), %eax           #  43:     param  0 <- v0
+     movl    -44(%ebp), %eax         #  44:     add    t18 <- t17, 75038
+     movl    $75038, %ebx           
-     pushl   %eax                   
-     call    DIM                     #  44:     call   t18 <- DIM
-     addl    $8, %esp               
+     addl    %ebx, %eax             
-     movl    -44(%ebp), %eax         #  45:     mul    t19 <- t17, t18
+     movl    -48(%ebp), %eax         #  45:     mul    t19 <- t18, 1
-     movl    -48(%ebp), %ebx        
+     movl    $1, %ebx               
-     movl    -52(%ebp), %eax         #  46:     add    t20 <- t19, 75038
+     movl    8(%ebp), %eax           #  46:     param  0 <- v0
-     movl    $75038, %ebx           
+     pushl   %eax                   
+     call    DOFS                    #  47:     call   t20 <- DOFS
-     addl    %ebx, %eax             
+     addl    $4, %esp               
-     movl    -60(%ebp), %eax         #  47:     mul    t21 <- t20, 1
+     movl    -52(%ebp), %eax         #  48:     add    t21 <- t19, t20
+     movl    -60(%ebp), %ebx        
-     movl    $1, %ebx               
+     addl    %ebx, %eax             
-     imull   %ebx                   
-     movl    8(%ebp), %eax           #  48:     param  0 <- v0
+     movl    8(%ebp), %eax           #  49:     add    t22 <- v0, t21
+     movl    -64(%ebp), %ebx        
-     pushl   %eax                   
-     call    DOFS                    #  49:     call   t22 <- DOFS
-     addl    $4, %esp               
+     addl    %ebx, %eax             
-     movl    -64(%ebp), %eax         #  50:     add    t23 <- t21, t22
-     movl    -68(%ebp), %ebx        
-     addl    %ebx, %eax             
-     movl    %eax, -72(%ebp)        
-     movl    8(%ebp), %eax           #  51:     add    t24 <- v0, t23
-     movl    -72(%ebp), %ebx        
-     addl    %ebx, %eax             
-     movl    %eax, -76(%ebp)        
-     movl    $0, %eax                #  52:     assign @t24 <- 0
+     movl    $0, %eax                #  50:     assign @t22 <- 0
-     movl    -76(%ebp), %edi        
+     movl    -68(%ebp), %edi        
-     addl    $92, %esp               # remove locals
+     addl    $84, %esp               # remove locals
-     jmp     l_f1_11                 #   5:     goto   11
+     jmp     l_f1_17                 #   5:     goto   17
-     jmp     l_f1_11                 #   6:     goto   11
+     jmp     l_f1_12                 #   6:     goto   12
- l_f1_11:
+ l_f1_17:
+     jmp     l_f1_12                 #   8:     goto   12
+ l_f1_12:
-     movl    $1, %eax                #   8:     assign t2 <- 1
+     movl    $1, %eax                #  10:     assign t2 <- 1
-     jmp     l_f1_13                 #   9:     goto   13
+     jmp     l_f1_14                 #  11:     goto   14
-     movl    $0, %eax                #  10:     assign t2 <- 0
+     movl    $0, %eax                #  12:     assign t2 <- 0
- l_f1_13:
+ l_f1_14:
-     movzbl  -13(%ebp), %eax         #  12:     if     t2 = 0 goto 8
+     movzbl  -13(%ebp), %eax         #  14:     if     t2 = 0 goto 8
-     jmp     l_f1_9                  #  13:     goto   9
+     jmp     l_f1_9                  #  15:     goto   9
-     movl    $1, %eax                #  15:     assign t3 <- 1
+     movl    $1, %eax                #  17:     assign t3 <- 1
-     jmp     l_f1_10                 #  16:     goto   10
+     jmp     l_f1_10                 #  18:     goto   10
-     movl    $0, %eax                #  18:     assign t3 <- 0
+     movl    $0, %eax                #  20:     assign t3 <- 0
-     movzbl  -14(%ebp), %eax         #  20:     return t3
+     movzbl  -14(%ebp), %eax         #  22:     return t3
