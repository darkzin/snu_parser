+     jmp     l_f2_4                  #   0:     goto   4
+ l_f2_4:
-     movl    $1, %eax                #   0:     assign t7 <- 1
+     movl    $1, %eax                #   2:     assign t7 <- 1
-     jmp     l_f2_3                  #   1:     goto   3
+     jmp     l_f2_3                  #   3:     goto   3
-     movl    $0, %eax                #   2:     assign t7 <- 0
+     movl    $0, %eax                #   4:     assign t7 <- 0
-     movzbl  -13(%ebp), %eax         #   4:     return t7
+     movzbl  -13(%ebp), %eax         #   6:     return t7
-     movl    $28023, %eax            #   5:     if     28023 # 90427 goto 10
+     movl    $28023, %eax            #   7:     if     28023 # 90427 goto 10
+     jmp     l_f2_11                 #   8:     goto   11
-     movl    $1, %eax                #   7:     assign t8 <- 1
+     movl    $1, %eax                #  10:     assign t8 <- 1
-     jmp     l_f2_12                 #   8:     goto   12
+     jmp     l_f2_12                 #  11:     goto   12
+ l_f2_11:
-     movl    $0, %eax                #   9:     assign t8 <- 0
+     movl    $0, %eax                #  13:     assign t8 <- 0
-     movzbl  -14(%ebp), %eax         #  11:     return t8
+     movzbl  -14(%ebp), %eax         #  15:     return t8
-     call    ReadInt                 #  12:     call   t9 <- ReadInt
+     call    ReadInt                 #  16:     call   t9 <- ReadInt
+     jmp     l_test_1                #   3:     goto   1
-     movl    $67871, %eax            #   4:     if     67871 = 79925 goto 6_if_true
+     movl    $67871, %eax            #   5:     if     67871 = 79925 goto 6_if_true
-     jmp     l_test_7_if_false       #   5:     goto   7_if_false
+     jmp     l_test_7_if_false       #   6:     goto   7_if_false
-     jmp     l_test_5                #   7:     goto   5
+     jmp     l_test_5                #   8:     goto   5
-     jmp     l_test_2_while_cond     #  10:     goto   2_while_cond
+     jmp     l_test_2_while_cond     #  11:     goto   2_while_cond
+ l_test_1:
-     call    dummyCHARfunc           #  13:     call   t0 <- dummyCHARfunc
+     call    dummyCHARfunc           #  15:     call   t0 <- dummyCHARfunc
-     movzbl  -13(%ebp), %eax         #  14:     if     t0 = 99 goto 12_while_body
+     movzbl  -13(%ebp), %eax         #  16:     if     t0 = 99 goto 12_while_body
-     jmp     l_test_10               #  15:     goto   10
+     jmp     l_test_10               #  17:     goto   10
-     jmp     l_test_16_if_false      #  17:     goto   16_if_false
+     jmp     l_test_16_if_false      #  19:     goto   16_if_false
-     jmp     l_test_14               #  18:     goto   14
+     jmp     l_test_14               #  20:     goto   14
-     movl    $98, %eax               #  22:     if     98 = 98 goto 19_if_true
+     movl    $98, %eax               #  24:     if     98 = 98 goto 19_if_true
-     jmp     l_test_20_if_false      #  23:     goto   20_if_false
+     jmp     l_test_20_if_false      #  25:     goto   20_if_false
-     jmp     l_test_18               #  25:     goto   18
+     jmp     l_test_18               #  27:     goto   18
-     jmp     l_test_11_while_cond    #  28:     goto   11_while_cond
+     jmp     l_test_11_while_cond    #  30:     goto   11_while_cond
-     movl    $73950, %eax            #  30:     if     73950 <= 39206 goto 23_if_true
+     movl    $73950, %eax            #  32:     if     73950 <= 39206 goto 23_if_true
-     jmp     l_test_24_if_false      #  31:     goto   24_if_false
+     jmp     l_test_24_if_false      #  33:     goto   24_if_false
-     call    dummyCHARfunc           #  33:     call   t1 <- dummyCHARfunc
+     call    dummyCHARfunc           #  35:     call   t1 <- dummyCHARfunc
-     call    dummyINTfunc            #  34:     call   t2 <- dummyINTfunc
+     call    dummyINTfunc            #  36:     call   t2 <- dummyINTfunc
-     call    dummyINTfunc            #  35:     call   t3 <- dummyINTfunc
+     call    dummyINTfunc            #  37:     call   t3 <- dummyINTfunc
-     movl    $99333, %eax            #  37:     if     99333 >= 74952 goto 31_while_body
+     movl    $99333, %eax            #  39:     if     99333 >= 74952 goto 31_while_body
-     jmp     l_test_29               #  38:     goto   29
+     jmp     l_test_29               #  40:     goto   29
-     jmp     l_test_30_while_cond    #  40:     goto   30_while_cond
+     jmp     l_test_30_while_cond    #  42:     goto   30_while_cond
-     jmp     l_test_33               #  42:     goto   33
+     jmp     l_test_33               #  44:     goto   33
-     call    dummyCHARfunc           #  44:     call   t4 <- dummyCHARfunc
+     call    dummyCHARfunc           #  46:     call   t4 <- dummyCHARfunc
-     jmp     l_test_38_while_cond    #  46:     goto   38_while_cond
+     jmp     l_test_38_while_cond    #  48:     goto   38_while_cond
-     movl    $0, %eax                #  47:     assign v1 <- 0
+     movl    $0, %eax                #  49:     assign v1 <- 0
-     movl    $99, %eax               #  49:     if     99 > 100 goto 43_while_body
+     movl    $99, %eax               #  51:     if     99 > 100 goto 43_while_body
-     jmp     l_test_41               #  50:     goto   41
+     jmp     l_test_41               #  52:     goto   41
-     jmp     l_test_42_while_cond    #  52:     goto   42_while_cond
+     jmp     l_test_42_while_cond    #  54:     goto   42_while_cond
-     jmp     l_test_22               #  54:     goto   22
+     jmp     l_test_22               #  56:     goto   22
-     jmp     l_test_47_if_false      #  57:     goto   47_if_false
+     jmp     l_test_47_if_false      #  59:     goto   47_if_false
-     movl    $99, %eax               #  58:     if     99 = 100 goto 49_if_true
+     movl    $99, %eax               #  60:     if     99 = 100 goto 49_if_true
-     jmp     l_test_50_if_false      #  59:     goto   50_if_false
+     jmp     l_test_50_if_false      #  61:     goto   50_if_false
-     jmp     l_test_48               #  61:     goto   48
+     jmp     l_test_48               #  63:     goto   48
-     movl    $1462, %eax             #  64:     assign v2 <- 1462
+     movl    $1462, %eax             #  66:     assign v2 <- 1462
-     movl    $24660, %eax            #  65:     sub    t5 <- 24660, 64947
+     movl    $24660, %eax            #  67:     sub    t5 <- 24660, 64947
-     movl    -32(%ebp), %eax         #  66:     sub    t6 <- t5, 49285
+     movl    -32(%ebp), %eax         #  68:     sub    t6 <- t5, 49285
-     movl    -36(%ebp), %eax         #  67:     assign v2 <- t6
+     movl    -36(%ebp), %eax         #  69:     assign v2 <- t6
-     jmp     l_test_45               #  68:     goto   45
+     jmp     l_test_45               #  70:     goto   45
