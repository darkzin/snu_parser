-     #   -112(%ebp)   4  [ $t34      <int> %ebp-112 ]
-     #   -116(%ebp)   4  [ $t35      <int> %ebp-116 ]
-     #   -120(%ebp)   4  [ $t36      <int> %ebp-120 ]
-     #   -124(%ebp)   4  [ $t37      <int> %ebp-124 ]
-     #   -125(%ebp)   1  [ $t38      <bool> %ebp-125 ]
+     #   -109(%ebp)   1  [ $t34      <bool> %ebp-109 ]
-     #   -126(%ebp)   1  [ $t8       <bool> %ebp-126 ]
+     #   -110(%ebp)   1  [ $t8       <bool> %ebp-110 ]
-     #   -127(%ebp)   1  [ $t9       <char> %ebp-127 ]
+     #   -111(%ebp)   1  [ $t9       <char> %ebp-111 ]
-     #   -128(%ebp)   1  [ $v3       <char> %ebp-128 ]
+     #   -112(%ebp)   1  [ $v3       <char> %ebp-112 ]
-     pushl   %ebp                   
-     movl    %esp, %ebp             
-     pushl   %ebx                    # save callee saved registers
-     pushl   %esi                   
+     pushl   %ebp                   
+     movl    %esp, %ebp             
+     pushl   %ebx                    # save callee saved registers
-     pushl   %edi                   
+     pushl   %esi                   
+     pushl   %edi                   
-     subl    $116, %esp              # make room for locals
+     subl    $100, %esp              # make room for locals
-     movl    $29, %ecx              
+     movl    $25, %ecx              
-     movb    %al, -126(%ebp)        
+     movb    %al, -110(%ebp)        
-     movb    %al, -126(%ebp)        
+     movb    %al, -110(%ebp)        
-     movzbl  -126(%ebp), %eax        #  14:     return t8
+     movzbl  -110(%ebp), %eax        #  14:     return t8
-     movb    %al, -127(%ebp)        
+     movb    %al, -111(%ebp)        
-     movl    $37298, %eax            #  32:     sub    t20 <- 37298, 50358
-     movl    $50358, %ebx           
-     subl    %ebx, %eax             
-     movl    %eax, -56(%ebp)        
-     movl    -56(%ebp), %eax         #  33:     sub    t21 <- t20, 16360
-     movl    $16360, %ebx           
-     subl    %ebx, %eax             
-     movl    %eax, -60(%ebp)        
-     movl    -60(%ebp), %eax         #  34:     sub    t22 <- t21, 31282
-     movl    $31282, %ebx           
-     subl    %ebx, %eax             
-     movl    %eax, -64(%ebp)        
-     movl    -64(%ebp), %eax         #  35:     add    t23 <- t22, 13395
-     movl    $13395, %ebx           
-     addl    %ebx, %eax             
-     movl    %eax, -68(%ebp)        
-     movl    -44(%ebp), %eax         #  36:     mul    t19 <- t17, t18
+     movl    -44(%ebp), %eax         #  32:     mul    t19 <- t17, t18
-     movl    -52(%ebp), %eax         #  37:     add    t24 <- t19, 53490
+     movl    -52(%ebp), %eax         #  33:     add    t20 <- t19, 53490
+     movl    %eax, -56(%ebp)        
+     movl    $4, %eax                #  34:     param  1 <- 4
+     pushl   %eax                   
+     movl    12(%ebp), %eax          #  35:     param  0 <- v2
+     pushl   %eax                   
+     call    DIM                     #  36:     call   t21 <- DIM
+     addl    $8, %esp               
+     movl    %eax, -60(%ebp)        
+     movl    -56(%ebp), %eax         #  37:     mul    t22 <- t20, t21
+     movl    -60(%ebp), %ebx        
+     imull   %ebx                   
+     movl    %eax, -64(%ebp)        
+     movl    -64(%ebp), %eax         #  38:     add    t23 <- t22, 77250
+     movl    $77250, %ebx           
+     addl    %ebx, %eax             
+     movl    %eax, -68(%ebp)        
+     movl    $5, %eax                #  39:     param  1 <- 5
+     pushl   %eax                   
+     movl    12(%ebp), %eax          #  40:     param  0 <- v2
+     pushl   %eax                   
+     call    DIM                     #  41:     call   t24 <- DIM
+     addl    $8, %esp               
-     movl    $4, %eax                #  38:     param  1 <- 4
+     movl    -68(%ebp), %eax         #  42:     mul    t25 <- t23, t24
+     movl    -72(%ebp), %ebx        
-     pushl   %eax                   
+     imull   %ebx                   
-     movl    12(%ebp), %eax          #  39:     param  0 <- v2
-     pushl   %eax                   
-     call    DIM                     #  40:     call   t25 <- DIM
-     addl    $8, %esp               
-     movl    -72(%ebp), %eax         #  41:     mul    t26 <- t24, t25
+     movl    -76(%ebp), %eax         #  43:     add    t26 <- t25, 64973
-     movl    -76(%ebp), %ebx        
+     movl    $64973, %ebx           
-     imull   %ebx                   
+     addl    %ebx, %eax             
-     movl    -80(%ebp), %eax         #  42:     add    t27 <- t26, 77250
-     movl    $77250, %ebx           
-     addl    %ebx, %eax             
-     movl    %eax, -84(%ebp)        
-     movl    $5, %eax                #  43:     param  1 <- 5
-     pushl   %eax                   
-     movl    12(%ebp), %eax          #  44:     param  0 <- v2
-     pushl   %eax                   
-     call    DIM                     #  45:     call   t28 <- DIM
-     addl    $8, %esp               
-     movl    %eax, -88(%ebp)        
-     movl    -84(%ebp), %eax         #  46:     mul    t29 <- t27, t28
+     movl    -80(%ebp), %eax         #  44:     mul    t27 <- t26, 1
-     movl    -88(%ebp), %ebx        
-     imull   %ebx                   
-     movl    %eax, -92(%ebp)        
-     movl    -92(%ebp), %eax         #  47:     add    t30 <- t29, 64973
-     movl    $64973, %ebx           
-     addl    %ebx, %eax             
-     movl    %eax, -96(%ebp)        
-     movl    -96(%ebp), %eax         #  48:     mul    t31 <- t30, 1
-     movl    %eax, -100(%ebp)       
+     movl    %eax, -84(%ebp)        
-     movl    12(%ebp), %eax          #  49:     param  0 <- v2
+     movl    12(%ebp), %eax          #  45:     param  0 <- v2
-     call    DOFS                    #  50:     call   t32 <- DOFS
+     call    DOFS                    #  46:     call   t28 <- DOFS
-     movl    %eax, -104(%ebp)       
-     movl    -100(%ebp), %eax        #  51:     add    t33 <- t31, t32
-     movl    -104(%ebp), %ebx       
-     addl    %ebx, %eax             
-     movl    %eax, -108(%ebp)       
+     movl    %eax, -88(%ebp)        
-     movl    12(%ebp), %eax          #  52:     add    t34 <- v2, t33
+     movl    -84(%ebp), %eax         #  47:     add    t29 <- t27, t28
-     movl    -108(%ebp), %ebx       
+     movl    -88(%ebp), %ebx        
-     movl    %eax, -112(%ebp)       
+     movl    %eax, -92(%ebp)        
+     movl    12(%ebp), %eax          #  48:     add    t30 <- v2, t29
+     movl    -92(%ebp), %ebx        
+     addl    %ebx, %eax             
+     movl    %eax, -96(%ebp)        
-     movzbl  -13(%ebp), %eax         #  53:     assign @t34 <- t10
+     movzbl  -13(%ebp), %eax         #  49:     assign @t30 <- t10
-     movl    -112(%ebp), %edi       
+     movl    -96(%ebp), %edi        
-     movl    $86675, %eax            #  54:     div    t35 <- 86675, 96388
+     movl    $86675, %eax            #  50:     div    t31 <- 86675, 96388
-     movl    %eax, -116(%ebp)       
+     movl    %eax, -100(%ebp)       
-     movl    -116(%ebp), %eax        #  55:     div    t36 <- t35, 73365
+     movl    -100(%ebp), %eax        #  51:     div    t32 <- t31, 73365
-     movl    %eax, -120(%ebp)       
+     movl    %eax, -104(%ebp)       
-     movl    $55696, %eax            #  56:     sub    t37 <- 55696, t36
+     movl    $55696, %eax            #  52:     sub    t33 <- 55696, t32
-     movl    -120(%ebp), %ebx       
+     movl    -104(%ebp), %ebx       
-     movl    %eax, -124(%ebp)       
+     movl    %eax, -108(%ebp)       
-     movl    -124(%ebp), %eax        #  57:     if     t37 # 81142 goto 15
+     movl    -108(%ebp), %eax        #  53:     if     t33 # 81142 goto 15
-     jmp     l_f0_16                 #  58:     goto   16
+     jmp     l_f0_16                 #  54:     goto   16
-     movl    $1, %eax                #  60:     assign t38 <- 1
+     movl    $1, %eax                #  56:     assign t34 <- 1
-     movb    %al, -125(%ebp)        
+     movb    %al, -109(%ebp)        
-     jmp     l_f0_17                 #  61:     goto   17
+     jmp     l_f0_17                 #  57:     goto   17
-     movl    $0, %eax                #  63:     assign t38 <- 0
+     movl    $0, %eax                #  59:     assign t34 <- 0
-     movb    %al, -125(%ebp)        
+     movb    %al, -109(%ebp)        
-     movzbl  -125(%ebp), %eax        #  65:     return t38
+     movzbl  -109(%ebp), %eax        #  61:     return t34
-     addl    $116, %esp              # remove locals
+     addl    $100, %esp              # remove locals
+     jmp     l_f1_3_if_false         #   2:     goto   3_if_false
-     movl    $95188, %eax            #   3:     return 95188
+     movl    $95188, %eax            #   4:     return 95188
-     jmp     l_f1_1                  #   4:     goto   1
+     jmp     l_f1_1                  #   5:     goto   1
+ l_f1_3_if_false:
-     call    dummyBOOLfunc           #   6:     call   t9 <- dummyBOOLfunc
+     call    dummyBOOLfunc           #   8:     call   t9 <- dummyBOOLfunc
-     movzbl  -14(%ebp), %eax         #   7:     if     t9 = 1 goto 7_if_true
+     movzbl  -14(%ebp), %eax         #   9:     if     t9 = 1 goto 7_if_true
-     jmp     l_f1_8_if_false         #   8:     goto   8_if_false
+     jmp     l_f1_8_if_false         #  10:     goto   8_if_false
-     movl    $99, %eax               #  10:     if     99 >= 99 goto 10_if_true
+     movl    $99, %eax               #  12:     if     99 >= 99 goto 10_if_true
-     jmp     l_f1_11_if_false        #  11:     goto   11_if_false
+     jmp     l_f1_11_if_false        #  13:     goto   11_if_false
-     jmp     l_f1_9                  #  13:     goto   9
+     jmp     l_f1_9                  #  15:     goto   9
-     jmp     l_f1_6                  #  16:     goto   6
+     jmp     l_f1_6                  #  18:     goto   6
-     jmp     l_test_11               #  17:     goto   11
+     jmp     l_test_12               #  17:     goto   12
- l_test_11:
+ l_test_12:
-     jmp     l_test_13               #  20:     goto   13
+     jmp     l_test_14               #  20:     goto   14
- l_test_13:
+ l_test_14:
