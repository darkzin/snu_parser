+     jmp     l_f0_16                 #  18:     goto   16
+     jmp     l_f0_16                 #  19:     goto   16
-     movl    $1, %eax                #  18:     assign t3 <- 1
+     movl    $1, %eax                #  20:     assign t3 <- 1
-     jmp     l_f0_17                 #  19:     goto   17
+     jmp     l_f0_17                 #  21:     goto   17
+ l_f0_16:
-     movl    $0, %eax                #  20:     assign t3 <- 0
+     movl    $0, %eax                #  23:     assign t3 <- 0
-     movzbl  -15(%ebp), %eax         #  22:     return t3
+     movzbl  -15(%ebp), %eax         #  25:     return t3
-     movl    $70728, %eax            #  23:     if     70728 < 45986 goto 26
+     movl    $70728, %eax            #  26:     if     70728 < 45986 goto 26
-     jmp     l_f0_27                 #  24:     goto   27
+     jmp     l_f0_27                 #  27:     goto   27
-     movl    $1, %eax                #  26:     assign t4 <- 1
+     movl    $1, %eax                #  29:     assign t4 <- 1
-     jmp     l_f0_28                 #  27:     goto   28
+     jmp     l_f0_28                 #  30:     goto   28
-     movl    $0, %eax                #  29:     assign t4 <- 0
+     movl    $0, %eax                #  32:     assign t4 <- 0
-     movzbl  -16(%ebp), %eax         #  31:     return t4
+     movzbl  -16(%ebp), %eax         #  34:     return t4
-     jmp     l_f0_30                 #  33:     goto   30
+     jmp     l_f0_30                 #  36:     goto   30
-     jmp     l_f0_31_while_cond      #  34:     goto   31_while_cond
+     jmp     l_f0_31_while_cond      #  37:     goto   31_while_cond
-     jmp     l_f0_22                 #  36:     goto   22
+     jmp     l_f0_22                 #  39:     goto   22
-     #    -52(%ebp)   4  [ $t18      <int> %ebp-52 ]
-     #    -53(%ebp)   1  [ $t19      <char> %ebp-53 ]
+     #    -49(%ebp)   1  [ $t18      <char> %ebp-49 ]
+     #    -50(%ebp)   1  [ $t19      <bool> %ebp-50 ]
-     #    -60(%ebp)   4  [ $t2       <int> %ebp-60 ]
+     #    -56(%ebp)   4  [ $t2       <int> %ebp-56 ]
-     #    -61(%ebp)   1  [ $t20      <bool> %ebp-61 ]
+     #    -57(%ebp)   1  [ $t20      <bool> %ebp-57 ]
-     #    -62(%ebp)   1  [ $t21      <bool> %ebp-62 ]
+     #    -64(%ebp)   4  [ $t3       <int> %ebp-64 ]
-     #    -68(%ebp)   4  [ $t3       <int> %ebp-68 ]
+     #    -68(%ebp)   4  [ $t4       <int> %ebp-68 ]
-     #    -72(%ebp)   4  [ $t4       <int> %ebp-72 ]
+     #    -72(%ebp)   4  [ $t5       <int> %ebp-72 ]
-     #    -76(%ebp)   4  [ $t5       <int> %ebp-76 ]
+     #    -76(%ebp)   4  [ $t6       <int> %ebp-76 ]
-     #    -80(%ebp)   4  [ $t6       <int> %ebp-80 ]
+     #    -80(%ebp)   4  [ $t7       <int> %ebp-80 ]
-     #    -84(%ebp)   4  [ $t7       <int> %ebp-84 ]
+     #    -84(%ebp)   4  [ $t8       <int> %ebp-84 ]
-     #    -88(%ebp)   4  [ $t8       <int> %ebp-88 ]
+     #    -88(%ebp)   4  [ $t9       <int> %ebp-88 ]
-     #    -92(%ebp)   4  [ $t9       <int> %ebp-92 ]
-     #    -93(%ebp)   1  [ $v3       <char> %ebp-93 ]
+     #    -89(%ebp)   1  [ $v3       <char> %ebp-89 ]
-     pushl   %ebp                   
-     movl    %esp, %ebp             
-     pushl   %ebx                    # save callee saved registers
-     pushl   %esi                   
+     pushl   %ebp                   
+     movl    %esp, %ebp             
+     pushl   %ebx                    # save callee saved registers
-     pushl   %edi                   
+     pushl   %esi                   
+     pushl   %edi                   
-     subl    $84, %esp               # make room for locals
+     subl    $80, %esp               # make room for locals
-     movl    $21, %ecx              
+     movl    $20, %ecx              
-     movl    %eax, -60(%ebp)        
+     movl    %eax, -56(%ebp)        
+     movl    %eax, -64(%ebp)        
+     movl    -56(%ebp), %eax         #   5:     add    t4 <- t2, t3
+     movl    -64(%ebp), %ebx        
+     addl    %ebx, %eax             
-     movl    -60(%ebp), %eax         #   5:     add    t4 <- t2, t3
-     movl    -68(%ebp), %ebx        
-     addl    %ebx, %eax             
-     movl    %eax, -72(%ebp)        
+     movl    %eax, -72(%ebp)        
+     movl    -68(%ebp), %eax         #   9:     mul    t6 <- t4, t5
+     movl    -72(%ebp), %ebx        
+     imull   %ebx                   
-     movl    $45854, %eax            #   9:     add    t7 <- 45854, 2900
+     movl    -76(%ebp), %eax         #  10:     add    t7 <- t6, 17017
-     movl    $2900, %ebx            
+     movl    $17017, %ebx           
+     addl    %ebx, %eax             
+     movl    %eax, -80(%ebp)        
+     movl    $4, %eax                #  11:     param  1 <- 4
+     pushl   %eax                   
+     movl    12(%ebp), %eax          #  12:     param  0 <- v2
+     pushl   %eax                   
+     call    DIM                     #  13:     call   t8 <- DIM
-     addl    %ebx, %eax             
+     addl    $8, %esp               
-     movl    -72(%ebp), %eax         #  10:     mul    t6 <- t4, t5
+     movl    -80(%ebp), %eax         #  14:     mul    t9 <- t7, t8
-     movl    -76(%ebp), %ebx        
+     movl    -84(%ebp), %ebx        
-     movl    %eax, -80(%ebp)        
-     movl    -80(%ebp), %eax         #  11:     add    t8 <- t6, 17017
-     movl    $17017, %ebx           
-     addl    %ebx, %eax             
+     movl    -88(%ebp), %eax         #  15:     add    t10 <- t9, 69997
+     movl    $69997, %ebx           
+     addl    %ebx, %eax             
+     movl    %eax, -20(%ebp)        
-     movl    $4, %eax                #  12:     param  1 <- 4
+     movl    $5, %eax                #  16:     param  1 <- 5
-     movl    12(%ebp), %eax          #  13:     param  0 <- v2
+     movl    12(%ebp), %eax          #  17:     param  0 <- v2
-     call    DIM                     #  14:     call   t9 <- DIM
+     call    DIM                     #  18:     call   t11 <- DIM
-     movl    %eax, -92(%ebp)        
+     movl    %eax, -24(%ebp)        
-     movl    -88(%ebp), %eax         #  15:     mul    t10 <- t8, t9
+     movl    -20(%ebp), %eax         #  19:     mul    t12 <- t10, t11
-     movl    -92(%ebp), %ebx        
+     movl    -24(%ebp), %ebx        
-     movl    %eax, -20(%ebp)        
-     movl    -20(%ebp), %eax         #  16:     add    t11 <- t10, 69997
-     movl    $69997, %ebx           
-     addl    %ebx, %eax             
-     movl    %eax, -24(%ebp)        
-     movl    $5, %eax                #  17:     param  1 <- 5
-     pushl   %eax                   
-     movl    12(%ebp), %eax          #  18:     param  0 <- v2
-     pushl   %eax                   
-     call    DIM                     #  19:     call   t12 <- DIM
-     addl    $8, %esp               
-     movl    -24(%ebp), %eax         #  20:     mul    t13 <- t11, t12
+     movl    -28(%ebp), %eax         #  20:     add    t13 <- t12, 84850
-     movl    -28(%ebp), %ebx        
+     movl    $84850, %ebx           
-     imull   %ebx                   
+     addl    %ebx, %eax             
-     movl    -32(%ebp), %eax         #  21:     add    t14 <- t13, 84850
-     movl    $84850, %ebx           
-     addl    %ebx, %eax             
-     movl    %eax, -36(%ebp)        
-     movl    -36(%ebp), %eax         #  22:     mul    t15 <- t14, 1
+     movl    -32(%ebp), %eax         #  21:     mul    t14 <- t13, 1
+     movl    %eax, -36(%ebp)        
+     movl    12(%ebp), %eax          #  22:     param  0 <- v2
+     pushl   %eax                   
+     call    DOFS                    #  23:     call   t15 <- DOFS
+     addl    $4, %esp               
-     movl    12(%ebp), %eax          #  23:     param  0 <- v2
+     movl    -36(%ebp), %eax         #  24:     add    t16 <- t14, t15
+     movl    -40(%ebp), %ebx        
-     pushl   %eax                   
-     call    DOFS                    #  24:     call   t16 <- DOFS
-     addl    $4, %esp               
+     addl    %ebx, %eax             
-     movl    -40(%ebp), %eax         #  25:     add    t17 <- t15, t16
+     movl    12(%ebp), %eax          #  25:     add    t17 <- v2, t16
-     movl    12(%ebp), %eax          #  26:     add    t18 <- v2, t17
-     movl    -48(%ebp), %ebx        
-     addl    %ebx, %eax             
-     movl    %eax, -52(%ebp)        
-     movl    $99, %eax               #  27:     assign @t18 <- 99
+     movl    $99, %eax               #  26:     assign @t17 <- 99
-     movl    -52(%ebp), %edi        
+     movl    -48(%ebp), %edi        
-     call    dummyCHARfunc           #  28:     call   t19 <- dummyCHARfunc
+     call    dummyCHARfunc           #  27:     call   t18 <- dummyCHARfunc
-     movb    %al, -53(%ebp)         
-     movzbl  -53(%ebp), %eax         #  29:     assign v3 <- t19
-     movb    %al, -93(%ebp)         
+     movb    %al, -49(%ebp)         
+     movzbl  -49(%ebp), %eax         #  28:     assign v3 <- t18
+     movb    %al, -89(%ebp)         
-     call    dummyBOOLfunc           #  30:     call   t20 <- dummyBOOLfunc
+     call    dummyBOOLfunc           #  29:     call   t19 <- dummyBOOLfunc
-     movb    %al, -61(%ebp)         
+     movb    %al, -50(%ebp)         
-     movzbl  -61(%ebp), %eax         #  31:     if     t20 = 1 goto 3
+     movzbl  -50(%ebp), %eax         #  30:     if     t19 = 1 goto 3
+     jmp     l_f1_4                  #  31:     goto   4
-     movl    $1, %eax                #  33:     assign t21 <- 1
+     movl    $1, %eax                #  33:     assign t20 <- 1
-     movb    %al, -62(%ebp)         
+     movb    %al, -57(%ebp)         
+ l_f1_4:
-     movl    $0, %eax                #  35:     assign t21 <- 0
+     movl    $0, %eax                #  36:     assign t20 <- 0
-     movb    %al, -62(%ebp)         
+     movb    %al, -57(%ebp)         
-     movzbl  -62(%ebp), %eax         #  37:     return t21
+     movzbl  -57(%ebp), %eax         #  38:     return t20
-     addl    $84, %esp               # remove locals
+     addl    $80, %esp               # remove locals
+     jmp     l_f2_0                  #   1:     goto   0
-     movl    $98, %eax               #   1:     if     98 > 100 goto 5
+     movl    $98, %eax               #   2:     if     98 > 100 goto 5
-     jmp     l_f2_6                  #   2:     goto   6
+     jmp     l_f2_6                  #   3:     goto   6
-     movl    $1, %eax                #   4:     assign t1 <- 1
+     movl    $1, %eax                #   5:     assign t1 <- 1
-     jmp     l_f2_7                  #   5:     goto   7
+     jmp     l_f2_7                  #   6:     goto   7
-     movl    $0, %eax                #   7:     assign t1 <- 0
+     movl    $0, %eax                #   8:     assign t1 <- 0
-     movzbl  -13(%ebp), %eax         #   9:     assign v3 <- t1
+     movzbl  -13(%ebp), %eax         #  10:     assign v3 <- t1
-     jmp     l_f2_1_while_cond       #  10:     goto   1_while_cond
+     jmp     l_f2_1_while_cond       #  11:     goto   1_while_cond
+ l_f2_0:
-     movl    $88441, %eax            #  12:     if     88441 > 13212 goto 11_while_body
+     movl    $88441, %eax            #  14:     if     88441 > 13212 goto 11_while_body
-     jmp     l_f2_9                  #  13:     goto   9
+     jmp     l_f2_9                  #  15:     goto   9
-     call    ReadInt                 #  15:     call   t2 <- ReadInt
+     call    ReadInt                 #  17:     call   t2 <- ReadInt
-     jmp     l_f2_10_while_cond      #  16:     goto   10_while_cond
+     jmp     l_f2_10_while_cond      #  18:     goto   10_while_cond
-     movl    $45239, %eax            #  18:     sub    t3 <- 45239, 56490
+     movl    $45239, %eax            #  20:     sub    t3 <- 45239, 56490
-     movl    -24(%ebp), %eax         #  19:     add    t4 <- t3, 78325
+     movl    -24(%ebp), %eax         #  21:     add    t4 <- t3, 78325
-     movl    $25610, %eax            #  20:     sub    t5 <- 25610, 95728
+     movl    $25610, %eax            #  22:     sub    t5 <- 25610, 95728
-     movl    -32(%ebp), %eax         #  21:     add    t6 <- t5, 14350
+     movl    -32(%ebp), %eax         #  23:     add    t6 <- t5, 14350
-     movl    -36(%ebp), %eax         #  22:     add    t7 <- t6, 31182
+     movl    -36(%ebp), %eax         #  24:     add    t7 <- t6, 31182
-     movl    -40(%ebp), %eax         #  23:     add    t8 <- t7, 12400
+     movl    -40(%ebp), %eax         #  25:     add    t8 <- t7, 12400
-     movl    -44(%ebp), %eax         #  24:     sub    t9 <- t8, 87358
+     movl    -44(%ebp), %eax         #  26:     sub    t9 <- t8, 87358
-     movl    -28(%ebp), %eax         #  25:     if     t4 > t9 goto 15
+     movl    -28(%ebp), %eax         #  27:     if     t4 > t9 goto 15
-     jmp     l_f2_16                 #  26:     goto   16
+     jmp     l_f2_16                 #  28:     goto   16
-     movl    $1, %eax                #  28:     assign t10 <- 1
+     movl    $1, %eax                #  30:     assign t10 <- 1
-     jmp     l_f2_17                 #  29:     goto   17
+     jmp     l_f2_17                 #  31:     goto   17
-     movl    $0, %eax                #  31:     assign t10 <- 0
+     movl    $0, %eax                #  33:     assign t10 <- 0
-     movzbl  -14(%ebp), %eax         #  33:     return t10
+     movzbl  -14(%ebp), %eax         #  35:     return t10
+     jmp     l_test_7                #   2:     goto   7
+ l_test_7:
-     jmp     l_test_3_while_body     #   2:     goto   3_while_body
+     jmp     l_test_3_while_body     #   4:     goto   3_while_body
-     jmp     l_test_3_while_body     #   3:     goto   3_while_body
+     jmp     l_test_3_while_body     #   5:     goto   3_while_body
-     jmp     l_test_2_while_cond     #   5:     goto   2_while_cond
+     jmp     l_test_2_while_cond     #   7:     goto   2_while_cond
-     jmp     l_test_15_if_false      #   6:     goto   15_if_false
+     jmp     l_test_15_if_false      #   8:     goto   15_if_false
-     jmp     l_test_17               #   9:     goto   17
+     jmp     l_test_17               #  11:     goto   17
-     jmp     l_test_18_while_cond    #  10:     goto   18_while_cond
+     jmp     l_test_18_while_cond    #  12:     goto   18_while_cond
-     movl    $100, %eax              #  13:     if     100 > 99 goto 22_while_body
+     movl    $100, %eax              #  15:     if     100 > 99 goto 22_while_body
-     jmp     l_test_20               #  14:     goto   20
+     jmp     l_test_20               #  16:     goto   20
-     jmp     l_test_21_while_cond    #  16:     goto   21_while_cond
+     jmp     l_test_21_while_cond    #  18:     goto   21_while_cond
-     jmp     l_test_26_if_false      #  18:     goto   26_if_false
+     jmp     l_test_26_if_false      #  20:     goto   26_if_false
-     jmp     l_test_24               #  19:     goto   24
+     jmp     l_test_24               #  21:     goto   24
-     movl    $1, %eax                #  24:     if     1 # 0 goto 30_while_body
+     movl    $1, %eax                #  26:     if     1 # 0 goto 30_while_body
-     jmp     l_test_28               #  25:     goto   28
+     jmp     l_test_28               #  27:     goto   28
-     jmp     l_test_29_while_cond    #  27:     goto   29_while_cond
+     jmp     l_test_29_while_cond    #  29:     goto   29_while_cond
-     jmp     l_test_13               #  29:     goto   13
+     jmp     l_test_13               #  31:     goto   13
-     call    ReadInt                 #  32:     call   t0 <- ReadInt
+     call    ReadInt                 #  34:     call   t0 <- ReadInt
-     movl    -16(%ebp), %eax         #  33:     assign v1 <- t0
+     movl    -16(%ebp), %eax         #  35:     assign v1 <- t0
-     jmp     l_test_34_if_true       #  34:     goto   34_if_true
-     jmp     l_test_34_if_true       #  35:     goto   34_if_true
+     jmp     l_test_34_if_true       #  37:     goto   34_if_true
+     jmp     l_test_34_if_true       #  38:     goto   34_if_true
+     jmp     l_test_35_if_false      #  39:     goto   35_if_false
-     jmp     l_test_33               #  38:     goto   33
+     jmp     l_test_33               #  41:     goto   33
+ l_test_35_if_false:
