+     jmp     l_f1_2                  #   1:     goto   2
-     movl    $1, %eax                #   2:     assign t2 <- 1
+     movl    $1, %eax                #   3:     assign t2 <- 1
-     jmp     l_f1_3                  #   3:     goto   3
+     jmp     l_f1_3                  #   4:     goto   3
+ l_f1_2:
-     movl    $0, %eax                #   4:     assign t2 <- 0
+     movl    $0, %eax                #   6:     assign t2 <- 0
-     movzbl  -53(%ebp), %eax         #   6:     assign v4 <- t2
+     movzbl  -53(%ebp), %eax         #   8:     assign v4 <- t2
-     movl    $20780, %eax            #   7:     sub    t3 <- 20780, 82757
+     movl    $20780, %eax            #   9:     sub    t3 <- 20780, 82757
-     movl    -80(%ebp), %eax         #   8:     add    t4 <- t3, 65413
+     movl    -80(%ebp), %eax         #  10:     add    t4 <- t3, 65413
-     movl    -84(%ebp), %eax         #   9:     if     t4 < 69304 goto 7_if_true
+     movl    -84(%ebp), %eax         #  11:     if     t4 < 69304 goto 7_if_true
-     jmp     l_f1_8_if_false         #  10:     goto   8_if_false
+     jmp     l_f1_8_if_false         #  12:     goto   8_if_false
-     call    dummyCHARfunc           #  12:     call   t5 <- dummyCHARfunc
+     call    dummyCHARfunc           #  14:     call   t5 <- dummyCHARfunc
-     jmp     l_f1_11                 #  13:     goto   11
+     jmp     l_f1_11                 #  15:     goto   11
-     jmp     l_f1_15_while_cond      #  16:     goto   15_while_cond
+     jmp     l_f1_15_while_cond      #  18:     goto   15_while_cond
-     movl    $63788, %eax            #  17:     if     63788 < 68891 goto 18_if_true
+     movl    $63788, %eax            #  19:     if     63788 < 68891 goto 18_if_true
-     jmp     l_f1_19_if_false        #  18:     goto   19_if_false
+     jmp     l_f1_19_if_false        #  20:     goto   19_if_false
-     jmp     l_f1_17                 #  20:     goto   17
+     jmp     l_f1_17                 #  22:     goto   17
-     call    dummyCHARfunc           #  23:     call   t6 <- dummyCHARfunc
+     call    dummyCHARfunc           #  25:     call   t6 <- dummyCHARfunc
-     call    dummyINTfunc            #  24:     call   t7 <- dummyINTfunc
+     call    dummyINTfunc            #  26:     call   t7 <- dummyINTfunc
-     jmp     l_f1_6                  #  25:     goto   6
+     jmp     l_f1_6                  #  27:     goto   6
-     jmp     l_f1_25_if_false        #  28:     goto   25_if_false
+     jmp     l_f1_25_if_false        #  30:     goto   25_if_false
-     movl    $97, %eax               #  29:     if     97 <= 100 goto 27
+     movl    $97, %eax               #  31:     if     97 <= 100 goto 27
-     jmp     l_f1_28                 #  30:     goto   28
+     jmp     l_f1_28                 #  32:     goto   28
-     movl    $1, %eax                #  32:     assign t8 <- 1
+     movl    $1, %eax                #  34:     assign t8 <- 1
-     jmp     l_f1_29                 #  33:     goto   29
+     jmp     l_f1_29                 #  35:     goto   29
-     movl    $0, %eax                #  35:     assign t8 <- 0
+     movl    $0, %eax                #  37:     assign t8 <- 0
-     movzbl  -93(%ebp), %eax         #  37:     return t8
+     movzbl  -93(%ebp), %eax         #  39:     return t8
-     movl    $1, %eax                #  38:     return 1
+     movl    $1, %eax                #  40:     return 1
-     movl    $43882, %eax            #  39:     assign v0 <- 43882
+     movl    $43882, %eax            #  41:     assign v0 <- 43882
-     movl    $2, %eax                #  40:     param  1 <- 2
+     movl    $2, %eax                #  42:     param  1 <- 2
-     movl    12(%ebp), %eax          #  41:     param  0 <- v1
+     movl    12(%ebp), %eax          #  43:     param  0 <- v1
-     call    DIM                     #  42:     call   t9 <- DIM
+     call    DIM                     #  44:     call   t9 <- DIM
-     movl    $93548, %eax            #  43:     mul    t10 <- 93548, t9
+     movl    $93548, %eax            #  45:     mul    t10 <- 93548, t9
-     movl    -16(%ebp), %eax         #  44:     add    t11 <- t10, 29251
+     movl    -16(%ebp), %eax         #  46:     add    t11 <- t10, 29251
-     movl    $3, %eax                #  45:     param  1 <- 3
+     movl    $3, %eax                #  47:     param  1 <- 3
-     movl    12(%ebp), %eax          #  46:     param  0 <- v1
+     movl    12(%ebp), %eax          #  48:     param  0 <- v1
-     call    DIM                     #  47:     call   t12 <- DIM
+     call    DIM                     #  49:     call   t12 <- DIM
-     movl    -20(%ebp), %eax         #  48:     mul    t13 <- t11, t12
+     movl    -20(%ebp), %eax         #  50:     mul    t13 <- t11, t12
-     movl    -28(%ebp), %eax         #  49:     add    t14 <- t13, 17192
+     movl    -28(%ebp), %eax         #  51:     add    t14 <- t13, 17192
-     movl    $4, %eax                #  50:     param  1 <- 4
+     movl    $4, %eax                #  52:     param  1 <- 4
-     movl    12(%ebp), %eax          #  51:     param  0 <- v1
+     movl    12(%ebp), %eax          #  53:     param  0 <- v1
-     call    DIM                     #  52:     call   t15 <- DIM
+     call    DIM                     #  54:     call   t15 <- DIM
-     movl    -32(%ebp), %eax         #  53:     mul    t16 <- t14, t15
+     movl    -32(%ebp), %eax         #  55:     mul    t16 <- t14, t15
-     movl    -40(%ebp), %eax         #  54:     add    t17 <- t16, 16249
+     movl    -40(%ebp), %eax         #  56:     add    t17 <- t16, 16249
-     movl    $5, %eax                #  55:     param  1 <- 5
+     movl    $5, %eax                #  57:     param  1 <- 5
-     movl    12(%ebp), %eax          #  56:     param  0 <- v1
+     movl    12(%ebp), %eax          #  58:     param  0 <- v1
-     call    DIM                     #  57:     call   t18 <- DIM
+     call    DIM                     #  59:     call   t18 <- DIM
-     movl    -44(%ebp), %eax         #  58:     mul    t19 <- t17, t18
+     movl    -44(%ebp), %eax         #  60:     mul    t19 <- t17, t18
-     movl    -52(%ebp), %eax         #  59:     add    t20 <- t19, 48420
+     movl    -52(%ebp), %eax         #  61:     add    t20 <- t19, 48420
-     movl    -60(%ebp), %eax         #  60:     mul    t21 <- t20, 1
+     movl    -60(%ebp), %eax         #  62:     mul    t21 <- t20, 1
-     movl    12(%ebp), %eax          #  61:     param  0 <- v1
+     movl    12(%ebp), %eax          #  63:     param  0 <- v1
-     call    DOFS                    #  62:     call   t22 <- DOFS
+     call    DOFS                    #  64:     call   t22 <- DOFS
-     movl    -64(%ebp), %eax         #  63:     add    t23 <- t21, t22
+     movl    -64(%ebp), %eax         #  65:     add    t23 <- t21, t22
-     movl    12(%ebp), %eax          #  64:     add    t24 <- v1, t23
+     movl    12(%ebp), %eax          #  66:     add    t24 <- v1, t23
-     movl    $0, %eax                #  65:     assign @t24 <- 0
+     movl    $0, %eax                #  67:     assign @t24 <- 0
-     movl    $0, %eax                #  66:     if     0 # 0 goto 35_if_true
+     movl    $0, %eax                #  68:     if     0 # 0 goto 35_if_true
-     jmp     l_f1_36_if_false        #  67:     goto   36_if_false
+     jmp     l_f1_36_if_false        #  69:     goto   36_if_false
-     jmp     l_f1_34                 #  69:     goto   34
+     jmp     l_f1_34                 #  71:     goto   34
-     jmp     l_f1_23                 #  72:     goto   23
+     jmp     l_f1_23                 #  74:     goto   23
-     #   -640(%ebp) 600  [ $v4       <array 6 of <array 2 of <array 4 of <array 4 of <array 3 of <bool>>>>>> %ebp-640 ]
+     #   -640(%ebp)  600  [ $v4       <array 6 of <array 2 of <array 4 of <array 4 of <array 3 of <bool>>>>>> %ebp-640 ]
-     #  -1528(%ebp) 888  [ $v5       <array 2 of <array 4 of <array 1 of <array 9 of <array 3 of <int>>>>>> %ebp-1528 ]
+     #   -1528(%ebp)  888  [ $v5       <array 2 of <array 4 of <array 1 of <array 9 of <array 3 of <int>>>>>> %ebp-1528 ]
-     #  -2812(%ebp)1284  [ $v6       <array 9 of <array 4 of <array 7 of <array 1 of <array 5 of <char>>>>>> %ebp-2812 ]
+     #   -2812(%ebp)  1284  [ $v6       <array 9 of <array 4 of <array 7 of <array 1 of <array 5 of <char>>>>>> %ebp-2812 ]
+     jmp     l_test_7_if_false       #   9:     goto   7_if_false
-     movl    $98, %eax               #  11:     if     98 < 98 goto 16_while_body
+     movl    $98, %eax               #  12:     if     98 < 98 goto 16_while_body
-     jmp     l_test_14               #  12:     goto   14
+     jmp     l_test_14               #  13:     goto   14
-     jmp     l_test_15_while_cond    #  14:     goto   15_while_cond
+     jmp     l_test_15_while_cond    #  15:     goto   15_while_cond
-     call    WriteLn                 #  16:     call   WriteLn
+     call    WriteLn                 #  17:     call   WriteLn
-     movl    $97, %eax               #  17:     if     97 < 99 goto 20_if_true
+     movl    $97, %eax               #  18:     if     97 < 99 goto 20_if_true
-     jmp     l_test_21_if_false      #  18:     goto   21_if_false
+     jmp     l_test_21_if_false      #  19:     goto   21_if_false
-     jmp     l_test_19               #  20:     goto   19
+     jmp     l_test_19               #  21:     goto   19
-     jmp     l_test_5                #  23:     goto   5
+     jmp     l_test_5                #  24:     goto   5
+ l_test_7_if_false:
-     call    dummyINTfunc            #  25:     call   t0 <- dummyINTfunc
+     call    dummyINTfunc            #  27:     call   t0 <- dummyINTfunc
-     call    dummyCHARfunc           #  26:     call   t1 <- dummyCHARfunc
+     call    dummyCHARfunc           #  28:     call   t1 <- dummyCHARfunc
-     movzbl  -17(%ebp), %eax         #  27:     param  0 <- t1
+     movzbl  -17(%ebp), %eax         #  29:     param  0 <- t1
-     call    WriteChar               #  28:     call   WriteChar
+     call    WriteChar               #  30:     call   WriteChar
-     addl    $1, %esp               
+     addl    $4, %esp               
