+     jmp     l_f1_2                  #   0:     goto   2
-     movl    $1, %eax                #   0:     assign t3 <- 1
+     movl    $1, %eax                #   1:     assign t3 <- 1
-     jmp     l_f1_3                  #   1:     goto   3
+     jmp     l_f1_3                  #   2:     goto   3
+ l_f1_2:
-     movl    $0, %eax                #   2:     assign t3 <- 0
+     movl    $0, %eax                #   4:     assign t3 <- 0
-     movzbl  -13(%ebp), %eax         #   4:     return t3
+     movzbl  -13(%ebp), %eax         #   6:     return t3
-     call    dummyCHARfunc           #   5:     call   t4 <- dummyCHARfunc
+     call    dummyCHARfunc           #   7:     call   t4 <- dummyCHARfunc
-     call    ReadInt                 #   6:     call   t5 <- ReadInt
+     call    ReadInt                 #   8:     call   t5 <- ReadInt
-     movl    -20(%ebp), %eax         #   7:     sub    t6 <- t5, 49586
+     movl    -20(%ebp), %eax         #   9:     sub    t6 <- t5, 49586
-     movl    -24(%ebp), %eax         #   8:     if     t6 = 90335 goto 7
+     movl    -24(%ebp), %eax         #  10:     if     t6 = 90335 goto 7
-     jmp     l_f1_8                  #   9:     goto   8
+     jmp     l_f1_8                  #  11:     goto   8
-     movl    $1, %eax                #  11:     assign t7 <- 1
+     movl    $1, %eax                #  13:     assign t7 <- 1
-     jmp     l_f1_9                  #  12:     goto   9
+     jmp     l_f1_9                  #  14:     goto   9
-     movl    $0, %eax                #  14:     assign t7 <- 0
+     movl    $0, %eax                #  16:     assign t7 <- 0
-     movzbl  -25(%ebp), %eax         #  16:     return t7
+     movzbl  -25(%ebp), %eax         #  18:     return t7
-     #-232848076(%ebp)232848024  [ $v2       <array 55 of <array 100 of <array 12 of <array 98 of <array 9 of <int>>>>>> %ebp-232848076 ]
+     #   -232848076(%ebp)  232848024  [ $v2       <array 55 of <array 100 of <array 12 of <array 98 of <array 9 of <int>>>>>> %ebp-232848076 ]
-     #-364281220(%ebp)131433144  [ $v3       <array 59 of <array 32 of <array 91 of <array 9 of <array 85 of <char>>>>>> %ebp-364281220 ]
+     #   -364281220(%ebp)  131433144  [ $v3       <array 59 of <array 32 of <array 91 of <array 9 of <array 85 of <char>>>>>> %ebp-364281220 ]
-     #-378656044(%ebp)14374824  [ $v4       <array 33 of <array 55 of <array 18 of <array 22 of <array 5 of <int>>>>>> %ebp-378656044 ]
+     #   -378656044(%ebp)  14374824  [ $v4       <array 33 of <array 55 of <array 18 of <array 22 of <array 5 of <int>>>>>> %ebp-378656044 ]
-     #-990842468(%ebp)612186424  [ $v5       <array 70 of <array 92 of <array 97 of <array 28 of <array 35 of <bool>>>>>> %ebp-990842468 ]
+     #   -990842468(%ebp)  612186424  [ $v5       <array 70 of <array 92 of <array 97 of <array 28 of <array 35 of <bool>>>>>> %ebp-990842468 ]
-     #-990842469(%ebp)   1  [ $v6       <char> %ebp-990842469 ]
+     #   -990842469(%ebp)   1  [ $v6       <char> %ebp-990842469 ]
+     jmp     l_test_0                #   2:     goto   0
-     jmp     l_test_1_while_cond     #   3:     goto   1_while_cond
+     jmp     l_test_1_while_cond     #   4:     goto   1_while_cond
+ l_test_0:
-     movl    $97, %eax               #   4:     if     97 >= 97 goto 8
+     movl    $97, %eax               #   6:     if     97 >= 97 goto 8
-     jmp     l_test_6_if_false       #   5:     goto   6_if_false
+     jmp     l_test_6_if_false       #   7:     goto   6_if_false
+     jmp     l_test_6_if_false       #   9:     goto   6_if_false
+     jmp     l_test_6_if_false       #  10:     goto   6_if_false
-     jmp     l_test_4                #   7:     goto   4
+     jmp     l_test_4                #  11:     goto   4
-     movl    $45358, %eax            #  10:     if     45358 < 42200 goto 11_if_true
+     movl    $45358, %eax            #  14:     if     45358 < 42200 goto 11_if_true
-     jmp     l_test_12_if_false      #  11:     goto   12_if_false
+     jmp     l_test_12_if_false      #  15:     goto   12_if_false
-     jmp     l_test_17_if_false      #  14:     goto   17_if_false
+     jmp     l_test_17_if_false      #  18:     goto   17_if_false
-     jmp     l_test_15               #  15:     goto   15
+     jmp     l_test_15               #  19:     goto   15
-     movl    $21078, %eax            #  18:     assign v0 <- 21078
+     movl    $21078, %eax            #  22:     assign v0 <- 21078
-     jmp     l_test_19               #  19:     goto   19
+     jmp     l_test_19               #  23:     goto   19
-     jmp     l_test_10               #  21:     goto   10
+     jmp     l_test_10               #  25:     goto   10
-     call    dummyINTfunc            #  24:     call   t0 <- dummyINTfunc
+     call    dummyINTfunc            #  28:     call   t0 <- dummyINTfunc
+     jmp     l_test_25_if_false      #  29:     goto   25_if_false
-     movl    $29899, %eax            #  25:     assign v0 <- 29899
+     movl    $29899, %eax            #  30:     assign v0 <- 29899
-     movl    $0, %eax                #  26:     if     0 # 1 goto 29
+     movl    $0, %eax                #  31:     if     0 # 1 goto 29
-     jmp     l_test_30               #  27:     goto   30
+     jmp     l_test_30               #  32:     goto   30
-     movl    $1, %eax                #  29:     assign t1 <- 1
+     movl    $1, %eax                #  34:     assign t1 <- 1
-     jmp     l_test_31               #  30:     goto   31
+     jmp     l_test_31               #  35:     goto   31
-     movl    $0, %eax                #  32:     assign t1 <- 0
+     movl    $0, %eax                #  37:     assign t1 <- 0
-     movzbl  -17(%ebp), %eax         #  34:     assign v1 <- t1
+     movzbl  -17(%ebp), %eax         #  39:     assign v1 <- t1
-     jmp     l_test_23               #  35:     goto   23
+     jmp     l_test_23               #  40:     goto   23
+ l_test_25_if_false:
-     call    dummyBOOLfunc           #  37:     call   t2 <- dummyBOOLfunc
+     call    dummyBOOLfunc           #  43:     call   t2 <- dummyBOOLfunc
