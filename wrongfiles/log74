-     addl    $1, %esp               
+     addl    $4, %esp               
-     #    -64(%ebp)   4  [ $t20      <int> %ebp-64 ]
+     #    -64(%ebp)   4  [ $t3       <int> %ebp-64 ]
-     #    -68(%ebp)   4  [ $t21      <int> %ebp-68 ]
+     #    -68(%ebp)   4  [ $t4       <int> %ebp-68 ]
-     #    -72(%ebp)   4  [ $t3       <int> %ebp-72 ]
+     #    -72(%ebp)   4  [ $t5       <int> %ebp-72 ]
-     #    -76(%ebp)   4  [ $t4       <int> %ebp-76 ]
+     #    -76(%ebp)   4  [ $t6       <int> %ebp-76 ]
-     #    -80(%ebp)   4  [ $t5       <int> %ebp-80 ]
+     #    -80(%ebp)   4  [ $t7       <int> %ebp-80 ]
-     #    -84(%ebp)   4  [ $t6       <int> %ebp-84 ]
+     #    -84(%ebp)   4  [ $t8       <int> %ebp-84 ]
-     #    -88(%ebp)   4  [ $t7       <int> %ebp-88 ]
+     #    -88(%ebp)   4  [ $t9       <int> %ebp-88 ]
-     #    -92(%ebp)   4  [ $t8       <int> %ebp-92 ]
-     #    -96(%ebp)   4  [ $t9       <int> %ebp-96 ]
-     #    -97(%ebp)   1  [ $v2       <char> %ebp-97 ]
+     #    -89(%ebp)   1  [ $v2       <char> %ebp-89 ]
-     pushl   %ebp                   
-     movl    %esp, %ebp             
-     pushl   %ebx                    # save callee saved registers
-     pushl   %esi                   
+     pushl   %ebp                   
+     movl    %esp, %ebp             
+     pushl   %ebx                    # save callee saved registers
-     pushl   %edi                   
+     pushl   %esi                   
+     pushl   %edi                   
-     subl    $88, %esp               # make room for locals
+     subl    $80, %esp               # make room for locals
-     movl    $22, %ecx              
+     movl    $20, %ecx              
-     movl    %eax, -72(%ebp)        
+     movl    %eax, -64(%ebp)        
+     movl    %eax, -68(%ebp)        
+     movl    -68(%ebp), %eax         #   7:     add    t5 <- t4, 87509
+     movl    $87509, %ebx           
+     addl    %ebx, %eax             
+     movl    %eax, -72(%ebp)        
+     movl    -64(%ebp), %eax         #   8:     add    t6 <- t3, t5
+     movl    -72(%ebp), %ebx        
+     addl    %ebx, %eax             
-     movl    -76(%ebp), %eax         #   7:     add    t5 <- t4, 87509
-     movl    $87509, %ebx           
-     addl    %ebx, %eax             
-     movl    %eax, -80(%ebp)        
-     movl    -72(%ebp), %eax         #   8:     add    t6 <- t3, t5
-     movl    -80(%ebp), %ebx        
-     addl    %ebx, %eax             
-     movl    %eax, -84(%ebp)        
+     movl    %eax, -80(%ebp)        
+     movl    -76(%ebp), %eax         #  12:     mul    t8 <- t6, t7
+     movl    -80(%ebp), %ebx        
+     imull   %ebx                   
+     movl    %eax, -84(%ebp)        
+     movl    -84(%ebp), %eax         #  13:     add    t9 <- t8, 49663
+     movl    $49663, %ebx           
+     addl    %ebx, %eax             
+     movl    $4, %eax                #  14:     param  1 <- 4
-     movl    $18427, %eax            #  12:     sub    t9 <- 18427, 69596
-     movl    $69596, %ebx           
-     subl    %ebx, %eax             
+     pushl   %eax                   
-     movl    %eax, -96(%ebp)        
-     movl    -96(%ebp), %eax         #  13:     add    t10 <- t9, 87509
+     movl    8(%ebp), %eax           #  15:     param  0 <- v0
-     movl    $87509, %ebx           
+     pushl   %eax                   
+     call    DIM                     #  16:     call   t10 <- DIM
-     addl    %ebx, %eax             
+     addl    $8, %esp               
-     movl    -84(%ebp), %eax         #  14:     mul    t8 <- t6, t7
+     movl    -88(%ebp), %eax         #  17:     mul    t11 <- t9, t10
-     movl    -88(%ebp), %ebx        
+     movl    -20(%ebp), %ebx        
-     movl    %eax, -92(%ebp)        
-     movl    -92(%ebp), %eax         #  15:     add    t11 <- t8, 49663
-     movl    $49663, %ebx           
-     addl    %ebx, %eax             
+     movl    -24(%ebp), %eax         #  18:     add    t12 <- t11, 55182
+     movl    $55182, %ebx           
+     addl    %ebx, %eax             
+     movl    %eax, -28(%ebp)        
-     movl    $4, %eax                #  16:     param  1 <- 4
+     movl    $5, %eax                #  19:     param  1 <- 5
-     movl    8(%ebp), %eax           #  17:     param  0 <- v0
+     movl    8(%ebp), %eax           #  20:     param  0 <- v0
-     call    DIM                     #  18:     call   t12 <- DIM
+     call    DIM                     #  21:     call   t13 <- DIM
-     movl    %eax, -28(%ebp)        
+     movl    %eax, -32(%ebp)        
-     movl    -24(%ebp), %eax         #  19:     mul    t13 <- t11, t12
+     movl    -28(%ebp), %eax         #  22:     mul    t14 <- t12, t13
-     movl    -28(%ebp), %ebx        
+     movl    -32(%ebp), %ebx        
-     movl    %eax, -32(%ebp)        
-     movl    -32(%ebp), %eax         #  20:     add    t14 <- t13, 55182
-     movl    $55182, %ebx           
-     addl    %ebx, %eax             
-     movl    $5, %eax                #  21:     param  1 <- 5
-     pushl   %eax                   
-     movl    8(%ebp), %eax           #  22:     param  0 <- v0
+     movl    -36(%ebp), %eax         #  23:     add    t15 <- t14, 1575
+     movl    $1575, %ebx            
-     pushl   %eax                   
-     call    DIM                     #  23:     call   t15 <- DIM
-     addl    $8, %esp               
+     addl    %ebx, %eax             
-     movl    -36(%ebp), %eax         #  24:     mul    t16 <- t14, t15
+     movl    -40(%ebp), %eax         #  24:     mul    t16 <- t15, 1
-     movl    -40(%ebp), %ebx        
+     movl    $1, %ebx               
-     movl    -44(%ebp), %eax         #  25:     add    t17 <- t16, 1575
+     movl    8(%ebp), %eax           #  25:     param  0 <- v0
-     movl    $1575, %ebx            
+     pushl   %eax                   
+     call    DOFS                    #  26:     call   t17 <- DOFS
-     addl    %ebx, %eax             
+     addl    $4, %esp               
-     movl    -48(%ebp), %eax         #  26:     mul    t18 <- t17, 1
+     movl    -44(%ebp), %eax         #  27:     add    t18 <- t16, t17
+     movl    -48(%ebp), %ebx        
-     movl    $1, %ebx               
+     addl    %ebx, %eax             
-     imull   %ebx                   
-     movl    8(%ebp), %eax           #  27:     param  0 <- v0
+     movl    8(%ebp), %eax           #  28:     add    t19 <- v0, t18
+     movl    -52(%ebp), %ebx        
-     pushl   %eax                   
-     call    DOFS                    #  28:     call   t19 <- DOFS
-     addl    $4, %esp               
+     addl    %ebx, %eax             
-     movl    -52(%ebp), %eax         #  29:     add    t20 <- t18, t19
-     movl    -56(%ebp), %ebx        
-     addl    %ebx, %eax             
-     movl    %eax, -64(%ebp)        
-     movl    8(%ebp), %eax           #  30:     add    t21 <- v0, t20
-     movl    -64(%ebp), %ebx        
-     addl    %ebx, %eax             
-     movl    %eax, -68(%ebp)        
-     movzbl  -13(%ebp), %eax         #  31:     assign @t21 <- t1
+     movzbl  -13(%ebp), %eax         #  29:     assign @t19 <- t1
-     movl    -68(%ebp), %edi        
+     movl    -56(%ebp), %edi        
+     jmp     l_f1_4_while_body       #  31:     goto   4_while_body
+     jmp     l_f1_4_while_body       #  32:     goto   4_while_body
+     jmp     l_f1_2                  #  34:     goto   2
-     jmp     l_f1_4_while_body       #  34:     goto   4_while_body
-     jmp     l_f1_4_while_body       #  35:     goto   4_while_body
-     jmp     l_f1_3_while_cond       #  37:     goto   3_while_cond
+     jmp     l_f1_3_while_cond       #  36:     goto   3_while_cond
+ l_f1_2:
-     addl    $88, %esp               # remove locals
+     addl    $80, %esp               # remove locals
+     jmp     l_f2_2                  #   0:     goto   2
-     movl    $1, %eax                #   0:     assign t1 <- 1
+     movl    $1, %eax                #   1:     assign t1 <- 1
-     jmp     l_f2_3                  #   1:     goto   3
+     jmp     l_f2_3                  #   2:     goto   3
+ l_f2_2:
-     movl    $0, %eax                #   2:     assign t1 <- 0
+     movl    $0, %eax                #   4:     assign t1 <- 0
-     movzbl  -13(%ebp), %eax         #   4:     assign v1 <- t1
+     movzbl  -13(%ebp), %eax         #   6:     assign v1 <- t1
-     movl    $97, %eax               #   5:     return 97
+     movl    $97, %eax               #   7:     return 97
-     movl    $0, %eax                #   7:     if     0 = 0 goto 11_while_body
+     movl    $0, %eax                #   9:     if     0 = 0 goto 11_while_body
-     jmp     l_f2_9                  #   8:     goto   9
+     jmp     l_f2_9                  #  10:     goto   9
-     jmp     l_f2_10_while_cond      #  10:     goto   10_while_cond
+     jmp     l_f2_10_while_cond      #  12:     goto   10_while_cond
-     movl    $99, %eax               #  13:     if     99 > 97 goto 15_while_body
+     movl    $99, %eax               #  15:     if     99 > 97 goto 15_while_body
-     jmp     l_f2_13                 #  14:     goto   13
+     jmp     l_f2_13                 #  16:     goto   13
-     jmp     l_f2_14_while_cond      #  16:     goto   14_while_cond
+     jmp     l_f2_14_while_cond      #  18:     goto   14_while_cond
-     movl    $100, %eax              #  18:     if     100 < 99 goto 18
+     movl    $100, %eax              #  20:     if     100 < 99 goto 18
-     jmp     l_f2_19                 #  19:     goto   19
+     jmp     l_f2_19                 #  21:     goto   19
-     movl    $1, %eax                #  21:     assign t2 <- 1
+     movl    $1, %eax                #  23:     assign t2 <- 1
-     jmp     l_f2_20                 #  22:     goto   20
+     jmp     l_f2_20                 #  24:     goto   20
-     movl    $0, %eax                #  24:     assign t2 <- 0
+     movl    $0, %eax                #  26:     assign t2 <- 0
-     movzbl  -14(%ebp), %eax         #  26:     assign v1 <- t2
+     movzbl  -14(%ebp), %eax         #  28:     assign v1 <- t2
-     jmp     l_f2_5                  #  27:     goto   5
+     jmp     l_f2_5                  #  29:     goto   5
-     movl    $49028, %eax            #  29:     assign v2 <- 49028
+     movl    $49028, %eax            #  31:     assign v2 <- 49028
