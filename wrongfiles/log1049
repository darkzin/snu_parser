+     jmp     l_f0_0                  #   5:     goto   0
-     jmp     l_f0_1_while_cond       #   6:     goto   1_while_cond
+     jmp     l_f0_1_while_cond       #   7:     goto   1_while_cond
+ l_f0_0:
-     movl    $40096, %eax            #   7:     if     40096 < 13130 goto 7_if_true
+     movl    $40096, %eax            #   9:     if     40096 < 13130 goto 7_if_true
-     jmp     l_f0_8_if_false         #   8:     goto   8_if_false
+     jmp     l_f0_8_if_false         #  10:     goto   8_if_false
-     call    dummyINTfunc            #  10:     call   t12 <- dummyINTfunc
+     call    dummyINTfunc            #  12:     call   t12 <- dummyINTfunc
-     jmp     l_f0_6                  #  11:     goto   6
+     jmp     l_f0_6                  #  13:     goto   6
-     jmp     l_f0_14                 #  15:     goto   14
+     jmp     l_f0_14                 #  17:     goto   14
-     movl    $1, %eax                #  16:     if     1 = 0 goto 18_if_true
+     movl    $1, %eax                #  18:     if     1 = 0 goto 18_if_true
-     jmp     l_f0_19_if_false        #  17:     goto   19_if_false
+     jmp     l_f0_19_if_false        #  19:     goto   19_if_false
-     jmp     l_f0_17                 #  19:     goto   17
+     jmp     l_f0_17                 #  21:     goto   17
-     jmp     l_f0_15_while_cond      #  22:     goto   15_while_cond
+     jmp     l_f0_15_while_cond      #  24:     goto   15_while_cond
-     jmp     l_f0_11                 #  24:     goto   11
+     jmp     l_f0_11                 #  26:     goto   11
-     jmp     l_f2_4                  #   0:     goto   4
+     jmp     l_f2_5                  #   0:     goto   5
-     jmp     l_f2_4                  #   1:     goto   4
+     jmp     l_f2_5                  #   1:     goto   5
+     jmp     l_f2_6                  #   2:     goto   6
- l_f2_4:
+ l_f2_5:
-     movl    $1, %eax                #   3:     assign t11 <- 1
+     movl    $1, %eax                #   4:     assign t11 <- 1
-     jmp     l_f2_6                  #   4:     goto   6
+     jmp     l_f2_7                  #   5:     goto   7
+ l_f2_6:
-     movl    $0, %eax                #   5:     assign t11 <- 0
+     movl    $0, %eax                #   7:     assign t11 <- 0
- l_f2_6:
+ l_f2_7:
-     movl    $1, %eax                #   7:     if     1 = t11 goto 1
+     movl    $1, %eax                #   9:     if     1 = t11 goto 1
-     jmp     l_f2_2                  #   8:     goto   2
+     jmp     l_f2_2                  #  10:     goto   2
-     movl    $1, %eax                #  10:     assign t12 <- 1
+     movl    $1, %eax                #  12:     assign t12 <- 1
-     jmp     l_f2_3                  #  11:     goto   3
+     jmp     l_f2_3                  #  13:     goto   3
-     movl    $0, %eax                #  13:     assign t12 <- 0
+     movl    $0, %eax                #  15:     assign t12 <- 0
-     movzbl  -14(%ebp), %eax         #  15:     assign v1 <- t12
+     movzbl  -14(%ebp), %eax         #  17:     assign v1 <- t12
-     movl    $99, %eax               #  17:     if     99 <= 98 goto 13_while_body
+     movl    $99, %eax               #  19:     if     99 <= 98 goto 13_while_body
-     jmp     l_f2_11                 #  18:     goto   11
+     jmp     l_f2_11                 #  20:     goto   11
-     jmp     l_f2_12_while_cond      #  20:     goto   12_while_cond
+     jmp     l_f2_12_while_cond      #  22:     goto   12_while_cond
-     jmp     l_f2_15                 #  23:     goto   15
+     jmp     l_f2_15                 #  25:     goto   15
-     movl    $5382, %eax             #  24:     assign v2 <- 5382
+     movl    $5382, %eax             #  26:     assign v2 <- 5382
-     call    dummyCHARfunc           #  25:     call   t13 <- dummyCHARfunc
+     call    dummyCHARfunc           #  27:     call   t13 <- dummyCHARfunc
-     movl    $100, %eax              #  27:     if     100 = 99 goto 25_while_body
+     movl    $100, %eax              #  29:     if     100 = 99 goto 25_while_body
-     jmp     l_f2_23                 #  28:     goto   23
+     jmp     l_f2_23                 #  30:     goto   23
-     jmp     l_f2_24_while_cond      #  30:     goto   24_while_cond
+     jmp     l_f2_24_while_cond      #  32:     goto   24_while_cond
-     jmp     l_f2_18                 #  32:     goto   18
+     jmp     l_f2_18                 #  34:     goto   18
-     jmp     l_f2_16_while_cond      #  34:     goto   16_while_cond
+     jmp     l_f2_16_while_cond      #  36:     goto   16_while_cond
-     addl    $1, %esp               
+     addl    $4, %esp               
