-     #-89670284(%ebp)89670264  [ $v3       <array 33 of <array 37 of <array 96 of <array 45 of <array 17 of <bool>>>>>> %ebp-89670284 ]
+     #   -89670284(%ebp)  89670264  [ $v3       <array 33 of <array 37 of <array 96 of <array 45 of <array 17 of <bool>>>>>> %ebp-89670284 ]
+     jmp     l_f1_3_if_false         #   1:     goto   3_if_false
-     leal    -89670284(%ebp), %eax   #   1:     &()    t1 <- v3
+     leal    -89670284(%ebp), %eax   #   2:     &()    t1 <- v3
-     movl    -16(%ebp), %eax         #   2:     param  0 <- t1
+     movl    -16(%ebp), %eax         #   3:     param  0 <- t1
-     call    f0                      #   3:     call   t2 <- f0
+     call    f0                      #   4:     call   t2 <- f0
-     movzbl  -17(%ebp), %eax         #   4:     if     t2 = 1 goto 2_if_true
+     movzbl  -17(%ebp), %eax         #   5:     if     t2 = 1 goto 2_if_true
-     jmp     l_f1_3_if_false         #   5:     goto   3_if_false
+     jmp     l_f1_3_if_false         #   6:     goto   3_if_false
-     jmp     l_f1_1                  #   7:     goto   1
+     jmp     l_f1_1                  #   8:     goto   1
-     call    dummyCHARfunc           #  10:     call   t3 <- dummyCHARfunc
+     call    dummyCHARfunc           #  11:     call   t3 <- dummyCHARfunc
-     movzbl  -18(%ebp), %eax         #  11:     return t3
+     movzbl  -18(%ebp), %eax         #  12:     return t3
-     #-89670288(%ebp)89670264  [ $v2       <array 33 of <array 37 of <array 96 of <array 45 of <array 17 of <bool>>>>>> %ebp-89670288 ]
+     #   -89670288(%ebp)  89670264  [ $v2       <array 33 of <array 37 of <array 96 of <array 45 of <array 17 of <bool>>>>>> %ebp-89670288 ]
-     #-89670289(%ebp)   1  [ $v3       <char> %ebp-89670289 ]
+     #   -89670289(%ebp)   1  [ $v3       <char> %ebp-89670289 ]
+     jmp     l_f2_2                  #   0:     goto   2
+     jmp     l_f2_2                  #   1:     goto   2
-     movl    $1, %eax                #   0:     assign t1 <- 1
+     movl    $1, %eax                #   2:     assign t1 <- 1
-     jmp     l_f2_3                  #   1:     goto   3
+     jmp     l_f2_3                  #   3:     goto   3
+ l_f2_2:
-     movl    $0, %eax                #   2:     assign t1 <- 0
+     movl    $0, %eax                #   5:     assign t1 <- 0
-     movzbl  -13(%ebp), %eax         #   4:     return t1
+     movzbl  -13(%ebp), %eax         #   7:     return t1
-     leal    -89670288(%ebp), %eax   #   6:     &()    t2 <- v2
+     leal    -89670288(%ebp), %eax   #   9:     &()    t2 <- v2
-     movl    -20(%ebp), %eax         #   7:     param  0 <- t2
+     movl    -20(%ebp), %eax         #  10:     param  0 <- t2
-     call    f0                      #   8:     call   t3 <- f0
+     call    f0                      #  11:     call   t3 <- f0
-     movzbl  -21(%ebp), %eax         #   9:     if     t3 = 1 goto 9_while_body
+     movzbl  -21(%ebp), %eax         #  12:     if     t3 = 1 goto 9_while_body
-     jmp     l_f2_7                  #  10:     goto   7
+     jmp     l_f2_7                  #  13:     goto   7
-     jmp     l_f2_8_while_cond       #  12:     goto   8_while_cond
+     jmp     l_f2_8_while_cond       #  15:     goto   8_while_cond
-     movl    $52150, %eax            #  15:     if     52150 > 49451 goto 12_while_body
+     movl    $52150, %eax            #  18:     if     52150 > 49451 goto 12_while_body
-     jmp     l_f2_10                 #  16:     goto   10
+     jmp     l_f2_10                 #  19:     goto   10
-     movl    $97, %eax               #  18:     if     97 >= 100 goto 15_if_true
+     movl    $97, %eax               #  21:     if     97 >= 100 goto 15_if_true
-     jmp     l_f2_16_if_false        #  19:     goto   16_if_false
+     jmp     l_f2_16_if_false        #  22:     goto   16_if_false
-     movl    $100, %eax              #  21:     assign v3 <- 100
+     movl    $100, %eax              #  24:     assign v3 <- 100
-     jmp     l_f2_19                 #  23:     goto   19
+     jmp     l_f2_19                 #  26:     goto   19
-     jmp     l_f2_20_while_cond      #  24:     goto   20_while_cond
+     jmp     l_f2_20_while_cond      #  27:     goto   20_while_cond
-     jmp     l_f2_14                 #  26:     goto   14
+     jmp     l_f2_14                 #  29:     goto   14
-     jmp     l_f2_11_while_cond      #  29:     goto   11_while_cond
+     jmp     l_f2_11_while_cond      #  32:     goto   11_while_cond
+     jmp     l_test_14               #  22:     goto   14
+     jmp     l_test_14               #  23:     goto   14
-     jmp     l_test_15_while_cond    #  23:     goto   15_while_cond
+     jmp     l_test_15_while_cond    #  25:     goto   15_while_cond
+ l_test_14:
-     movl    $1, %eax                #  25:     assign v0 <- 1
+     movl    $1, %eax                #  28:     assign v0 <- 1
-     movl    $96357, %eax            #  27:     if     96357 > 85933 goto 24_while_body
+     movl    $96357, %eax            #  30:     if     96357 > 85933 goto 24_while_body
-     jmp     l_test_22               #  28:     goto   22
+     jmp     l_test_22               #  31:     goto   22
-     movl    $90184, %eax            #  30:     if     90184 # 35071 goto 27_if_true
+     movl    $90184, %eax            #  33:     if     90184 # 35071 goto 27_if_true
-     jmp     l_test_28_if_false      #  31:     goto   28_if_false
+     jmp     l_test_28_if_false      #  34:     goto   28_if_false
-     jmp     l_test_26               #  33:     goto   26
+     jmp     l_test_26               #  36:     goto   26
-     jmp     l_test_23_while_cond    #  36:     goto   23_while_cond
+     jmp     l_test_23_while_cond    #  39:     goto   23_while_cond
