+     jmp     l_f0_8                  #  16:     goto   8
-     jmp     l_f0_5                  #  16:     goto   5
+     jmp     l_f0_5                  #  17:     goto   5
+ l_f0_8:
-     movl    $1, %eax                #  18:     assign t11 <- 1
+     movl    $1, %eax                #  20:     assign t11 <- 1
-     jmp     l_f0_7                  #  19:     goto   7
+     jmp     l_f0_7                  #  21:     goto   7
-     movl    $0, %eax                #  20:     assign t11 <- 0
+     movl    $0, %eax                #  22:     assign t11 <- 0
-     movzbl  -21(%ebp), %eax         #  22:     return t11
+     movzbl  -21(%ebp), %eax         #  24:     return t11
-     movl    $31651, %eax            #  24:     if     31651 = 77772 goto 15_while_body
+     movl    $31651, %eax            #  26:     if     31651 = 77772 goto 15_while_body
-     jmp     l_f0_13                 #  25:     goto   13
+     jmp     l_f0_13                 #  27:     goto   13
-     jmp     l_f0_14_while_cond      #  27:     goto   14_while_cond
+     jmp     l_f0_14_while_cond      #  29:     goto   14_while_cond
-     jmp     l_f0_17                 #  29:     goto   17
+     jmp     l_f0_17                 #  31:     goto   17
-     jmp     l_f0_10                 #  31:     goto   10
+     jmp     l_f0_10                 #  33:     goto   10
+     jmp     l_f1_5                  #   0:     goto   5
-     movl    $1, %eax                #   0:     assign t1 <- 1
+     movl    $1, %eax                #   1:     assign t1 <- 1
-     jmp     l_f1_5                  #   1:     goto   5
+     jmp     l_f1_6                  #   2:     goto   6
+ l_f1_5:
-     movl    $0, %eax                #   2:     assign t1 <- 0
+     movl    $0, %eax                #   4:     assign t1 <- 0
- l_f1_5:
+ l_f1_6:
-     movzbl  -13(%ebp), %eax         #   4:     if     t1 # 1 goto 1_if_true
+     movzbl  -13(%ebp), %eax         #   6:     if     t1 # 1 goto 1_if_true
-     jmp     l_f1_2_if_false         #   5:     goto   2_if_false
+     jmp     l_f1_2_if_false         #   7:     goto   2_if_false
-     movl    $100, %eax              #   7:     assign v0 <- 100
+     movl    $100, %eax              #   9:     assign v0 <- 100
-     jmp     l_f1_0                  #   8:     goto   0
+     jmp     l_f1_0                  #  10:     goto   0
-     movl    $63124, %eax            #  11:     assign v1 <- 63124
+     movl    $63124, %eax            #  13:     assign v1 <- 63124
-     movl    $0, %eax                #  12:     assign v2 <- 0
+     movl    $0, %eax                #  14:     assign v2 <- 0
-     jmp     l_f1_10                 #  13:     goto   10
+     jmp     l_f1_10                 #  15:     goto   10
+     jmp     l_f2_0                  #   2:     goto   0
-     jmp     l_f2_1_while_cond       #   3:     goto   1_while_cond
+     jmp     l_f2_1_while_cond       #   4:     goto   1_while_cond
+ l_f2_0:
-     movl    $99, %eax               #   4:     return 99
+     movl    $99, %eax               #   6:     return 99
-     movl    $100, %eax              #   6:     if     100 <= 98 goto 8_while_body
+     movl    $100, %eax              #   8:     if     100 <= 98 goto 8_while_body
-     jmp     l_f2_6                  #   7:     goto   6
+     jmp     l_f2_6                  #   9:     goto   6
-     call    dummyCHARfunc           #   9:     call   t1 <- dummyCHARfunc
+     call    dummyCHARfunc           #  11:     call   t1 <- dummyCHARfunc
-     movzbl  -13(%ebp), %eax         #  10:     return t1
+     movzbl  -13(%ebp), %eax         #  12:     return t1
-     jmp     l_f2_7_while_cond       #  11:     goto   7_while_cond
+     jmp     l_f2_7_while_cond       #  13:     goto   7_while_cond
