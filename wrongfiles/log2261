-     addl    $1, %esp               
+     addl    $4, %esp               
-     addl    $1, %esp               
+     addl    $4, %esp               
+     jmp     l_f1_6                  #  12:     goto   6
-     jmp     l_f1_7_while_cond       #  12:     goto   7_while_cond
+     jmp     l_f1_7_while_cond       #  13:     goto   7_while_cond
+ l_f1_6:
+     jmp     l_test_5                #   1:     goto   5
-     movl    $1, %eax                #   1:     assign t0 <- 1
+     movl    $1, %eax                #   2:     assign t0 <- 1
-     jmp     l_test_6                #   2:     goto   6
+     jmp     l_test_6                #   3:     goto   6
+ l_test_5:
-     movl    $0, %eax                #   3:     assign t0 <- 0
+     movl    $0, %eax                #   5:     assign t0 <- 0
-     movzbl  -13(%ebp), %eax         #   5:     assign v0 <- t0
+     movzbl  -13(%ebp), %eax         #   7:     assign v0 <- t0
-     jmp     l_test_1_while_cond     #   6:     goto   1_while_cond
+     jmp     l_test_1_while_cond     #   8:     goto   1_while_cond
-     call    dummyCHARfunc           #   7:     call   t1 <- dummyCHARfunc
+     call    dummyCHARfunc           #   9:     call   t1 <- dummyCHARfunc
-     movzbl  -14(%ebp), %eax         #   8:     assign v1 <- t1
+     movzbl  -14(%ebp), %eax         #  10:     assign v1 <- t1
-     call    dummyINTfunc            #   9:     call   t2 <- dummyINTfunc
+     call    dummyINTfunc            #  11:     call   t2 <- dummyINTfunc
