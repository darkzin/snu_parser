+     jmp     l_f1_0                  #   1:     goto   0
-     jmp     l_f1_1_while_cond       #   1:     goto   1_while_cond
+     jmp     l_f1_1_while_cond       #   2:     goto   1_while_cond
+ l_f1_0:
-     call    WriteLn                 #   2:     call   WriteLn
+     call    WriteLn                 #   4:     call   WriteLn
-     movl    $1, %eax                #   4:     assign t3 <- 1
+     movl    $1, %eax                #   6:     assign t3 <- 1
-     jmp     l_f1_11                 #   5:     goto   11
+     jmp     l_f1_12                 #   7:     goto   12
-     movl    $0, %eax                #   6:     assign t3 <- 0
+     movl    $0, %eax                #   8:     assign t3 <- 0
- l_f1_11:
+ l_f1_12:
-     movzbl  -13(%ebp), %eax         #   8:     if     t3 # 1 goto 8_while_body
+     movzbl  -13(%ebp), %eax         #  10:     if     t3 # 1 goto 8_while_body
-     jmp     l_f1_6                  #   9:     goto   6
+     jmp     l_f1_6                  #  11:     goto   6
-     movl    $97, %eax               #  11:     assign v3 <- 97
+     movl    $97, %eax               #  13:     assign v3 <- 97
-     movl    $99, %eax               #  12:     assign v3 <- 99
+     movl    $99, %eax               #  14:     assign v3 <- 99
-     movl    $30929, %eax            #  13:     assign v4 <- 30929
+     movl    $30929, %eax            #  15:     assign v4 <- 30929
-     movl    $100, %eax              #  14:     assign v3 <- 100
+     movl    $100, %eax              #  16:     assign v3 <- 100
-     jmp     l_f1_19_while_cond      #  16:     goto   19_while_cond
+     jmp     l_f1_19_while_cond      #  18:     goto   19_while_cond
-     jmp     l_f1_7_while_cond       #  17:     goto   7_while_cond
+     jmp     l_f1_7_while_cond       #  19:     goto   7_while_cond
+     jmp     l_f2_2                  #   0:     goto   2
+     jmp     l_f2_2                  #   1:     goto   2
+     jmp     l_f2_2                  #   2:     goto   2
-     movl    $1, %eax                #   0:     assign t3 <- 1
+     movl    $1, %eax                #   3:     assign t3 <- 1
-     jmp     l_f2_3                  #   1:     goto   3
+     jmp     l_f2_3                  #   4:     goto   3
+ l_f2_2:
-     movl    $0, %eax                #   2:     assign t3 <- 0
+     movl    $0, %eax                #   6:     assign t3 <- 0
-     movzbl  -13(%ebp), %eax         #   4:     return t3
+     movzbl  -13(%ebp), %eax         #   8:     return t3
-     call    dummyCHARfunc           #   5:     call   t4 <- dummyCHARfunc
+     call    dummyCHARfunc           #   9:     call   t4 <- dummyCHARfunc
-     movzbl  -14(%ebp), %eax         #   6:     param  0 <- t4
+     movzbl  -14(%ebp), %eax         #  10:     param  0 <- t4
-     call    f0                      #   7:     call   t5 <- f0
+     call    f0                      #  11:     call   t5 <- f0
-     addl    $1, %esp               
+     addl    $4, %esp               
-     movl    -20(%ebp), %eax         #   8:     assign v3 <- t5
+     movl    -20(%ebp), %eax         #  12:     assign v3 <- t5
-     movl    $35607, %eax            #   9:     if     35607 = 31365 goto 11_if_true
+     movl    $35607, %eax            #  13:     if     35607 = 31365 goto 11_if_true
-     jmp     l_f2_12_if_false        #  10:     goto   12_if_false
+     jmp     l_f2_12_if_false        #  14:     goto   12_if_false
-     movl    $99, %eax               #  12:     assign v4 <- 99
+     movl    $99, %eax               #  16:     assign v4 <- 99
-     jmp     l_f2_17_if_false        #  13:     goto   17_if_false
+     jmp     l_f2_17_if_false        #  17:     goto   17_if_false
-     jmp     l_f2_15                 #  14:     goto   15
+     jmp     l_f2_15                 #  18:     goto   15
-     jmp     l_f2_10                 #  17:     goto   10
+     jmp     l_f2_10                 #  21:     goto   10
