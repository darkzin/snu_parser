+     jmp     l_f0_4                  #   3:     goto   4
-     movl    $1, %eax                #   4:     assign t10 <- 1
+     movl    $1, %eax                #   5:     assign t10 <- 1
-     jmp     l_f0_5                  #   5:     goto   5
+     jmp     l_f0_5                  #   6:     goto   5
+ l_f0_4:
-     movl    $0, %eax                #   6:     assign t10 <- 0
+     movl    $0, %eax                #   8:     assign t10 <- 0
-     movzbl  -13(%ebp), %eax         #   8:     return t10
+     movzbl  -13(%ebp), %eax         #  10:     return t10
+     jmp     l_f2_5                  #   3:     goto   5
+     jmp     l_f2_5                  #   4:     goto   5
+ l_f2_5:
+     jmp     l_f2_2                  #   6:     goto   2
-     jmp     l_f2_3_while_cond       #   3:     goto   3_while_cond
+     jmp     l_f2_3_while_cond       #   7:     goto   3_while_cond
+ l_f2_2:
+     jmp     l_test_10               #  18:     goto   10
-     jmp     l_test_11_while_cond    #  19:     goto   11_while_cond
+     jmp     l_test_11_while_cond    #  20:     goto   11_while_cond
+ l_test_10:
-     movl    $98834, %eax            #  22:     div    t2 <- 98834, 57505
+     movl    $98834, %eax            #  24:     div    t2 <- 98834, 57505
-     movl    -24(%ebp), %eax         #  23:     div    t3 <- t2, 13794
+     movl    -24(%ebp), %eax         #  25:     div    t3 <- t2, 13794
-     movl    -28(%ebp), %eax         #  24:     if     t3 = 69322 goto 17_while_body
+     movl    -28(%ebp), %eax         #  26:     if     t3 = 69322 goto 17_while_body
-     jmp     l_test_15               #  25:     goto   15
+     jmp     l_test_15               #  27:     goto   15
-     leal    v2, %eax                #  27:     &()    t4 <- v2
+     leal    v2, %eax                #  29:     &()    t4 <- v2
-     movl    -32(%ebp), %eax         #  28:     param  1 <- t4
+     movl    -32(%ebp), %eax         #  30:     param  1 <- t4
-     leal    v1, %eax                #  29:     &()    t5 <- v1
+     leal    v1, %eax                #  31:     &()    t5 <- v1
-     movl    -36(%ebp), %eax         #  30:     param  0 <- t5
+     movl    -36(%ebp), %eax         #  32:     param  0 <- t5
-     call    f0                      #  31:     call   t6 <- f0
+     call    f0                      #  33:     call   t6 <- f0
-     movl    $98, %eax               #  32:     if     98 <= 99 goto 21_if_true
+     movl    $98, %eax               #  34:     if     98 <= 99 goto 21_if_true
-     jmp     l_test_22_if_false      #  33:     goto   22_if_false
+     jmp     l_test_22_if_false      #  35:     goto   22_if_false
-     jmp     l_test_20               #  35:     goto   20
+     jmp     l_test_20               #  37:     goto   20
-     call    dummyCHARfunc           #  38:     call   t7 <- dummyCHARfunc
+     call    dummyCHARfunc           #  40:     call   t7 <- dummyCHARfunc
-     call    WriteLn                 #  39:     call   WriteLn
+     call    WriteLn                 #  41:     call   WriteLn
-     movl    $68883, %eax            #  40:     assign v0 <- 68883
+     movl    $68883, %eax            #  42:     assign v0 <- 68883
-     movl    $98, %eax               #  41:     param  0 <- 98
+     movl    $98, %eax               #  43:     param  0 <- 98
-     call    WriteChar               #  42:     call   WriteChar
+     call    WriteChar               #  44:     call   WriteChar
-     addl    $1, %esp               
+     addl    $4, %esp               
-     movl    $90894, %eax            #  43:     assign v0 <- 90894
+     movl    $90894, %eax            #  45:     assign v0 <- 90894
-     jmp     l_test_16_while_cond    #  44:     goto   16_while_cond
+     jmp     l_test_16_while_cond    #  46:     goto   16_while_cond
