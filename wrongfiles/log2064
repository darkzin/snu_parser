+     jmp     l_f0_2_if_false         #   1:     goto   2_if_false
-     jmp     l_f0_0                  #   2:     goto   0
+     jmp     l_f0_0                  #   3:     goto   0
+ l_f0_2_if_false:
-     movl    $1, %eax                #   4:     if     1 = 0 goto 6_if_true
+     movl    $1, %eax                #   6:     if     1 = 0 goto 6_if_true
-     jmp     l_f0_7_if_false         #   5:     goto   7_if_false
+     jmp     l_f0_7_if_false         #   7:     goto   7_if_false
-     jmp     l_f0_9                  #   8:     goto   9
+     jmp     l_f0_9                  #  10:     goto   9
-     jmp     l_f0_10_while_cond      #   9:     goto   10_while_cond
+     jmp     l_f0_10_while_cond      #  11:     goto   10_while_cond
-     movl    $57761, %eax            #  11:     assign v0 <- 57761
+     movl    $57761, %eax            #  13:     assign v0 <- 57761
-     movl    $0, %eax                #  12:     return 0
+     movl    $0, %eax                #  14:     return 0
-     jmp     l_f0_14                 #  13:     goto   14
+     jmp     l_f0_14                 #  15:     goto   14
-     movl    $24114, %eax            #  16:     if     24114 <= 15820 goto 19_while_body
+     movl    $24114, %eax            #  18:     if     24114 <= 15820 goto 19_while_body
-     jmp     l_f0_17                 #  17:     goto   17
+     jmp     l_f0_17                 #  19:     goto   17
-     jmp     l_f0_18_while_cond      #  19:     goto   18_while_cond
+     jmp     l_f0_18_while_cond      #  21:     goto   18_while_cond
-     jmp     l_f0_5                  #  21:     goto   5
+     jmp     l_f0_5                  #  23:     goto   5
-     movl    $100, %eax              #  24:     if     100 < 99 goto 22_if_true
+     movl    $100, %eax              #  26:     if     100 < 99 goto 22_if_true
-     jmp     l_f0_23_if_false        #  25:     goto   23_if_false
+     jmp     l_f0_23_if_false        #  27:     goto   23_if_false
-     movl    $1, %eax                #  27:     return 1
+     movl    $1, %eax                #  29:     return 1
-     jmp     l_f0_21                 #  28:     goto   21
+     jmp     l_f0_21                 #  30:     goto   21
+     jmp     l_f2_2                  #   2:     goto   2
-     movl    $1, %eax                #   3:     assign t5 <- 1
+     movl    $1, %eax                #   4:     assign t5 <- 1
-     jmp     l_f2_3                  #   4:     goto   3
+     jmp     l_f2_3                  #   5:     goto   3
+ l_f2_2:
-     movl    $0, %eax                #   5:     assign t5 <- 0
+     movl    $0, %eax                #   7:     assign t5 <- 0
-     movzbl  -14(%ebp), %eax         #   7:     return t5
+     movzbl  -14(%ebp), %eax         #   9:     return t5
-     movl    $54463, %eax            #   8:     mul    t6 <- 54463, 91317
+     movl    $54463, %eax            #  10:     mul    t6 <- 54463, 91317
-     movl    -20(%ebp), %eax         #   9:     if     t6 # 50238 goto 6_if_true
+     movl    -20(%ebp), %eax         #  11:     if     t6 # 50238 goto 6_if_true
-     jmp     l_f2_7_if_false         #  10:     goto   7_if_false
+     jmp     l_f2_7_if_false         #  12:     goto   7_if_false
-     movl    $97, %eax               #  12:     if     97 < 97 goto 10_if_true
+     movl    $97, %eax               #  14:     if     97 < 97 goto 10_if_true
-     jmp     l_f2_11_if_false        #  13:     goto   11_if_false
+     jmp     l_f2_11_if_false        #  15:     goto   11_if_false
-     jmp     l_f2_9                  #  15:     goto   9
+     jmp     l_f2_9                  #  17:     goto   9
-     movl    $97, %eax               #  18:     if     97 <= 99 goto 14_if_true
+     movl    $97, %eax               #  20:     if     97 <= 99 goto 14_if_true
-     jmp     l_f2_15_if_false        #  19:     goto   15_if_false
+     jmp     l_f2_15_if_false        #  21:     goto   15_if_false
-     jmp     l_f2_13                 #  21:     goto   13
+     jmp     l_f2_13                 #  23:     goto   13
-     jmp     l_f2_5                  #  24:     goto   5
+     jmp     l_f2_5                  #  26:     goto   5
-     movl    $93443, %eax            #  27:     assign v0 <- 93443
+     movl    $93443, %eax            #  29:     assign v0 <- 93443
-     addl    $9, %esp               
+     addl    $12, %esp              
