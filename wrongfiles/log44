-     #    -92(%ebp)   4  [ $t29      <int> %ebp-92 ]
-     #    -96(%ebp)   4  [ $t30      <int> %ebp-96 ]
-     #    -97(%ebp)   1  [ $t8       <char> %ebp-97 ]
+     #    -89(%ebp)   1  [ $t8       <char> %ebp-89 ]
-     #    -98(%ebp)   1  [ $t9       <bool> %ebp-98 ]
+     #    -90(%ebp)   1  [ $t9       <bool> %ebp-90 ]
-     #    -99(%ebp)   1  [ $v3       <bool> %ebp-99 ]
+     #    -91(%ebp)   1  [ $v3       <bool> %ebp-91 ]
-     pushl   %ebp                   
-     movl    %esp, %ebp             
-     pushl   %ebx                    # save callee saved registers
-     pushl   %esi                   
+     pushl   %ebp                   
+     movl    %esp, %ebp             
+     pushl   %ebx                    # save callee saved registers
-     pushl   %edi                   
+     pushl   %esi                   
+     pushl   %edi                   
-     subl    $88, %esp               # make room for locals
+     subl    $80, %esp               # make room for locals
-     movl    $22, %ecx              
+     movl    $20, %ecx              
-     movb    %al, -97(%ebp)         
+     movb    %al, -89(%ebp)         
-     movzbl  -97(%ebp), %ebx        
+     movzbl  -89(%ebp), %ebx        
-     movb    %al, -98(%ebp)         
+     movb    %al, -90(%ebp)         
-     movb    %al, -98(%ebp)         
+     movb    %al, -90(%ebp)         
-     movzbl  -98(%ebp), %eax         #  13:     return t9
+     movzbl  -90(%ebp), %eax         #  13:     return t9
-     movl    $71852, %eax            #  35:     sub    t18 <- 71852, 32502
-     movl    $32502, %ebx           
-     subl    %ebx, %eax             
-     movl    %eax, -48(%ebp)        
-     movl    -48(%ebp), %eax         #  36:     add    t19 <- t18, 52695
-     movl    $52695, %ebx           
-     addl    %ebx, %eax             
-     movl    %eax, -52(%ebp)        
-     movl    -36(%ebp), %eax         #  37:     mul    t17 <- t15, t16
+     movl    -36(%ebp), %eax         #  35:     mul    t17 <- t15, t16
-     movl    -44(%ebp), %eax         #  38:     add    t20 <- t17, 90791
+     movl    -44(%ebp), %eax         #  36:     add    t18 <- t17, 90791
+     movl    %eax, -48(%ebp)        
+     movl    $4, %eax                #  37:     param  1 <- 4
+     pushl   %eax                   
+     movl    8(%ebp), %eax           #  38:     param  0 <- v0
+     pushl   %eax                   
+     call    DIM                     #  39:     call   t19 <- DIM
+     addl    $8, %esp               
+     movl    %eax, -52(%ebp)        
+     movl    -48(%ebp), %eax         #  40:     mul    t20 <- t18, t19
+     movl    -52(%ebp), %ebx        
+     imull   %ebx                   
+     movl    -56(%ebp), %eax         #  41:     add    t21 <- t20, 598
+     movl    $598, %ebx             
+     addl    %ebx, %eax             
+     movl    %eax, -60(%ebp)        
-     movl    $4, %eax                #  39:     param  1 <- 4
+     movl    $5, %eax                #  42:     param  1 <- 5
-     movl    8(%ebp), %eax           #  40:     param  0 <- v0
+     movl    8(%ebp), %eax           #  43:     param  0 <- v0
-     call    DIM                     #  41:     call   t21 <- DIM
+     call    DIM                     #  44:     call   t22 <- DIM
-     movl    %eax, -60(%ebp)        
+     movl    %eax, -64(%ebp)        
-     movl    -56(%ebp), %eax         #  42:     mul    t22 <- t20, t21
+     movl    -60(%ebp), %eax         #  45:     mul    t23 <- t21, t22
-     movl    -60(%ebp), %ebx        
+     movl    -64(%ebp), %ebx        
-     movl    %eax, -64(%ebp)        
-     movl    -64(%ebp), %eax         #  43:     add    t23 <- t22, 598
-     movl    $598, %ebx             
-     addl    %ebx, %eax             
-     movl    $5, %eax                #  44:     param  1 <- 5
-     pushl   %eax                   
-     movl    8(%ebp), %eax           #  45:     param  0 <- v0
+     movl    -68(%ebp), %eax         #  46:     add    t24 <- t23, 83263
+     movl    $83263, %ebx           
-     pushl   %eax                   
-     call    DIM                     #  46:     call   t24 <- DIM
-     addl    $8, %esp               
+     addl    %ebx, %eax             
-     movl    -68(%ebp), %eax         #  47:     mul    t25 <- t23, t24
+     movl    -72(%ebp), %eax         #  47:     mul    t25 <- t24, 1
-     movl    -72(%ebp), %ebx        
+     movl    $1, %ebx               
-     movl    -76(%ebp), %eax         #  48:     add    t26 <- t25, 83263
+     movl    8(%ebp), %eax           #  48:     param  0 <- v0
-     movl    $83263, %ebx           
+     pushl   %eax                   
+     call    DOFS                    #  49:     call   t26 <- DOFS
-     addl    %ebx, %eax             
+     addl    $4, %esp               
-     movl    -80(%ebp), %eax         #  49:     mul    t27 <- t26, 1
+     movl    -76(%ebp), %eax         #  50:     add    t27 <- t25, t26
+     movl    -80(%ebp), %ebx        
-     movl    $1, %ebx               
+     addl    %ebx, %eax             
-     imull   %ebx                   
-     movl    8(%ebp), %eax           #  50:     param  0 <- v0
+     movl    8(%ebp), %eax           #  51:     add    t28 <- v0, t27
+     movl    -84(%ebp), %ebx        
-     pushl   %eax                   
-     call    DOFS                    #  51:     call   t28 <- DOFS
-     addl    $4, %esp               
+     addl    %ebx, %eax             
-     movl    -84(%ebp), %eax         #  52:     add    t29 <- t27, t28
-     movl    -88(%ebp), %ebx        
-     addl    %ebx, %eax             
-     movl    %eax, -92(%ebp)        
-     movl    8(%ebp), %eax           #  53:     add    t30 <- v0, t29
-     movl    -92(%ebp), %ebx        
-     addl    %ebx, %eax             
-     movl    %eax, -96(%ebp)        
-     movzbl  -13(%ebp), %eax         #  54:     assign @t30 <- t10
+     movzbl  -13(%ebp), %eax         #  52:     assign @t28 <- t10
-     movl    -96(%ebp), %edi        
+     movl    -88(%ebp), %edi        
-     jmp     l_f1_16_if_true         #  55:     goto   16_if_true
+     jmp     l_f1_16_if_true         #  53:     goto   16_if_true
-     movl    $33705, %eax            #  57:     assign v1 <- 33705
+     movl    $33705, %eax            #  55:     assign v1 <- 33705
-     call    dummyProcedure          #  58:     call   dummyProcedure
+     call    dummyProcedure          #  56:     call   dummyProcedure
-     jmp     l_f1_15                 #  59:     goto   15
+     jmp     l_f1_15                 #  57:     goto   15
-     addl    $88, %esp               # remove locals
+     addl    $80, %esp               # remove locals
+     jmp     l_f2_2_if_false         #   0:     goto   2_if_false
-     movl    $99, %eax               #   0:     return 99
+     movl    $99, %eax               #   1:     return 99
-     jmp     l_f2_0                  #   1:     goto   0
+     jmp     l_f2_0                  #   2:     goto   0
+ l_f2_2_if_false:
-     movl    $4343, %eax             #   3:     div    t8 <- 4343, 70812
+     movl    $4343, %eax             #   5:     div    t8 <- 4343, 70812
-     movl    -16(%ebp), %eax         #   4:     assign v0 <- t8
+     movl    -16(%ebp), %eax         #   6:     assign v0 <- t8
-     call    dummyCHARfunc           #   5:     call   t9 <- dummyCHARfunc
+     call    dummyCHARfunc           #   7:     call   t9 <- dummyCHARfunc
-     movzbl  -17(%ebp), %eax         #   6:     return t9
+     movzbl  -17(%ebp), %eax         #   8:     return t9
+     jmp     l_test_2                #  14:     goto   2
-     jmp     l_test_3_while_cond     #  14:     goto   3_while_cond
+     jmp     l_test_3_while_cond     #  15:     goto   3_while_cond
-     movl    $97, %eax               #  16:     if     97 >= 99 goto 9
+     movl    $97, %eax               #  17:     if     97 >= 99 goto 9
-     jmp     l_test_10               #  17:     goto   10
+     jmp     l_test_10               #  18:     goto   10
-     movl    $1, %eax                #  19:     assign t7 <- 1
+     movl    $1, %eax                #  20:     assign t7 <- 1
-     jmp     l_test_11               #  20:     goto   11
+     jmp     l_test_11               #  21:     goto   11
-     movl    $0, %eax                #  22:     assign t7 <- 0
+     movl    $0, %eax                #  23:     assign t7 <- 0
-     movzbl  -38(%ebp), %eax         #  24:     assign v1 <- t7
+     movzbl  -38(%ebp), %eax         #  25:     assign v1 <- t7
