+     jmp     l_f1_2_if_false         #   0:     goto   2_if_false
-     jmp     l_f1_5_while_cond       #   1:     goto   5_while_cond
+     jmp     l_f1_5_while_cond       #   2:     goto   5_while_cond
-     jmp     l_f1_0                  #   2:     goto   0
+     jmp     l_f1_0                  #   3:     goto   0
+ l_f1_2_if_false:
-     call    dummyCHARfunc           #   4:     call   t4 <- dummyCHARfunc
+     call    dummyCHARfunc           #   6:     call   t4 <- dummyCHARfunc
-     movl    $98, %eax               #   5:     if     98 <= t4 goto 8
+     movl    $98, %eax               #   7:     if     98 <= t4 goto 8
-     jmp     l_f1_9                  #   6:     goto   9
+     jmp     l_f1_9                  #   8:     goto   9
-     movl    $1, %eax                #   8:     assign t5 <- 1
+     movl    $1, %eax                #  10:     assign t5 <- 1
-     jmp     l_f1_10                 #   9:     goto   10
+     jmp     l_f1_10                 #  11:     goto   10
-     movl    $0, %eax                #  11:     assign t5 <- 0
+     movl    $0, %eax                #  13:     assign t5 <- 0
-     movzbl  -14(%ebp), %eax         #  13:     assign v4 <- t5
+     movzbl  -14(%ebp), %eax         #  15:     assign v4 <- t5
-     movl    $98, %eax               #  14:     if     98 # 98 goto 13_if_true
+     movl    $98, %eax               #  16:     if     98 # 98 goto 13_if_true
-     jmp     l_f1_14_if_false        #  15:     goto   14_if_false
+     jmp     l_f1_14_if_false        #  17:     goto   14_if_false
-     movl    $1, %eax                #  17:     assign v4 <- 1
+     movl    $1, %eax                #  19:     assign v4 <- 1
-     jmp     l_f1_12                 #  18:     goto   12
+     jmp     l_f1_12                 #  20:     goto   12
+     jmp     l_f2_0                  #   4:     goto   0
-     jmp     l_f2_1_while_cond       #   5:     goto   1_while_cond
+     jmp     l_f2_1_while_cond       #   6:     goto   1_while_cond
+ l_f2_0:
-     movl    $100, %eax              #   6:     if     100 # 99 goto 8_if_true
+     movl    $100, %eax              #   8:     if     100 # 99 goto 8_if_true
-     jmp     l_f2_9_if_false         #   7:     goto   9_if_false
+     jmp     l_f2_9_if_false         #   9:     goto   9_if_false
-     movl    $0, %eax                #   9:     return 0
+     movl    $0, %eax                #  11:     return 0
-     call    ReadInt                 #  10:     call   t4 <- ReadInt
+     call    ReadInt                 #  12:     call   t4 <- ReadInt
-     movl    $0, %eax                #  12:     if     0 = 1 goto 15_while_body
+     movl    $0, %eax                #  14:     if     0 = 1 goto 15_while_body
-     jmp     l_f2_13                 #  13:     goto   13
+     jmp     l_f2_13                 #  15:     goto   13
-     jmp     l_f2_14_while_cond      #  15:     goto   14_while_cond
+     jmp     l_f2_14_while_cond      #  17:     goto   14_while_cond
-     jmp     l_f2_7                  #  17:     goto   7
+     jmp     l_f2_7                  #  19:     goto   7
-     jmp     l_f2_18                 #  20:     goto   18
-     jmp     l_f2_18                 #  21:     goto   18
+     jmp     l_f2_18                 #  23:     goto   18
+     jmp     l_f2_18                 #  24:     goto   18
-     movl    $1, %eax                #  24:     assign t5 <- 1
+     movl    $1, %eax                #  26:     assign t5 <- 1
-     jmp     l_f2_20                 #  25:     goto   20
+     jmp     l_f2_20                 #  27:     goto   20
-     movl    $0, %eax                #  26:     assign t5 <- 0
+     movl    $0, %eax                #  28:     assign t5 <- 0
-     movzbl  -17(%ebp), %eax         #  28:     return t5
+     movzbl  -17(%ebp), %eax         #  30:     return t5
