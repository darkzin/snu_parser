+     jmp     l_f0_7_if_false         #   8:     goto   7_if_false
+     jmp     l_f0_7_if_false         #   9:     goto   7_if_false
-     movl    $1, %eax                #   9:     if     1 # 0 goto 11_while_body
+     movl    $1, %eax                #  11:     if     1 # 0 goto 11_while_body
-     jmp     l_f0_9                  #  10:     goto   9
+     jmp     l_f0_9                  #  12:     goto   9
-     jmp     l_f0_10_while_cond      #  12:     goto   10_while_cond
+     jmp     l_f0_10_while_cond      #  14:     goto   10_while_cond
-     movl    $99, %eax               #  14:     assign v0 <- 99
+     movl    $99, %eax               #  16:     assign v0 <- 99
-     jmp     l_f0_5                  #  15:     goto   5
+     jmp     l_f0_5                  #  17:     goto   5
+ l_f0_7_if_false:
-     movl    $98, %eax               #  18:     if     98 # 98 goto 16_while_body
+     movl    $98, %eax               #  21:     if     98 # 98 goto 16_while_body
-     jmp     l_f0_14                 #  19:     goto   14
+     jmp     l_f0_14                 #  22:     goto   14
-     jmp     l_f0_15_while_cond      #  21:     goto   15_while_cond
+     jmp     l_f0_15_while_cond      #  24:     goto   15_while_cond
+     jmp     l_f1_3                  #   2:     goto   3
-     jmp     l_f1_4_while_cond       #   2:     goto   4_while_cond
+     jmp     l_f1_4_while_cond       #   3:     goto   4_while_cond
+ l_f1_3:
-     jmp     l_f1_0                  #   3:     goto   0
+     jmp     l_f1_0                  #   5:     goto   0
-     movl    $88307, %eax            #   7:     mul    t2 <- 88307, 5297
+     movl    $88307, %eax            #   9:     mul    t2 <- 88307, 5297
-     movl    $28881, %eax            #   8:     if     28881 <= t2 goto 10_while_body
+     movl    $28881, %eax            #  10:     if     28881 <= t2 goto 10_while_body
-     jmp     l_f1_8                  #   9:     goto   8
+     jmp     l_f1_8                  #  11:     goto   8
-     jmp     l_f1_9_while_cond       #  11:     goto   9_while_cond
+     jmp     l_f1_9_while_cond       #  13:     goto   9_while_cond
-     jmp     l_f1_13_if_true         #  13:     goto   13_if_true
+     jmp     l_f1_13_if_true         #  15:     goto   13_if_true
-     movl    $25225, %eax            #  15:     assign v1 <- 25225
+     movl    $25225, %eax            #  17:     assign v1 <- 25225
-     jmp     l_f1_20_if_false        #  16:     goto   20_if_false
+     jmp     l_f1_20_if_false        #  18:     goto   20_if_false
-     jmp     l_f1_18                 #  17:     goto   18
+     jmp     l_f1_18                 #  19:     goto   18
-     jmp     l_f1_21                 #  20:     goto   21
+     jmp     l_f1_21                 #  22:     goto   21
-     jmp     l_f1_12                 #  22:     goto   12
+     jmp     l_f1_12                 #  24:     goto   12
+     jmp     l_f2_2_if_false         #   2:     goto   2_if_false
-     movl    $97, %eax               #   4:     if     97 <= 97 goto 7_while_body
+     movl    $97, %eax               #   5:     if     97 <= 97 goto 7_while_body
-     jmp     l_f2_5                  #   5:     goto   5
+     jmp     l_f2_5                  #   6:     goto   5
-     jmp     l_f2_6_while_cond       #   7:     goto   6_while_cond
+     jmp     l_f2_6_while_cond       #   8:     goto   6_while_cond
-     movl    $15494, %eax            #   9:     assign v2 <- 15494
+     movl    $15494, %eax            #  10:     assign v2 <- 15494
-     jmp     l_f2_0                  #  10:     goto   0
+     jmp     l_f2_0                  #  11:     goto   0
+ l_f2_2_if_false:
-     call    dummyCHARfunc           #  12:     call   t2 <- dummyCHARfunc
+     call    dummyCHARfunc           #  14:     call   t2 <- dummyCHARfunc
-     movl    $99, %eax               #  13:     if     99 < t2 goto 11
+     movl    $99, %eax               #  15:     if     99 < t2 goto 11
-     jmp     l_f2_12                 #  14:     goto   12
+     jmp     l_f2_12                 #  16:     goto   12
-     movl    $1, %eax                #  16:     assign t3 <- 1
+     movl    $1, %eax                #  18:     assign t3 <- 1
-     jmp     l_f2_13                 #  17:     goto   13
+     jmp     l_f2_13                 #  19:     goto   13
-     movl    $0, %eax                #  19:     assign t3 <- 0
+     movl    $0, %eax                #  21:     assign t3 <- 0
-     movzbl  -14(%ebp), %eax         #  21:     assign v1 <- t3
+     movzbl  -14(%ebp), %eax         #  23:     assign v1 <- t3
-     movl    $97, %eax               #  22:     if     97 <= 98 goto 16_if_true
+     movl    $97, %eax               #  24:     if     97 <= 98 goto 16_if_true
-     jmp     l_f2_17_if_false        #  23:     goto   17_if_false
+     jmp     l_f2_17_if_false        #  25:     goto   17_if_false
-     movl    $99, %eax               #  25:     assign v3 <- 99
+     movl    $99, %eax               #  27:     assign v3 <- 99
-     call    dummyINTfunc            #  26:     call   t4 <- dummyINTfunc
+     call    dummyINTfunc            #  28:     call   t4 <- dummyINTfunc
-     call    dummyCHARfunc           #  27:     call   t5 <- dummyCHARfunc
+     call    dummyCHARfunc           #  29:     call   t5 <- dummyCHARfunc
-     jmp     l_f2_15                 #  28:     goto   15
+     jmp     l_f2_15                 #  30:     goto   15
