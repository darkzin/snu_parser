-     addl    $1, %esp               
+     addl    $4, %esp               
+     jmp     l_f1_6                  #   1:     goto   6
-     movl    $1, %eax                #   1:     assign t3 <- 1
+     movl    $1, %eax                #   2:     assign t3 <- 1
-     jmp     l_f1_6                  #   2:     goto   6
+     jmp     l_f1_7                  #   3:     goto   7
+ l_f1_6:
-     movl    $0, %eax                #   3:     assign t3 <- 0
+     movl    $0, %eax                #   5:     assign t3 <- 0
- l_f1_6:
+ l_f1_7:
-     movzbl  -14(%ebp), %eax         #   5:     if     t3 = 1 goto 2_if_true
+     movzbl  -14(%ebp), %eax         #   7:     if     t3 = 1 goto 2_if_true
-     jmp     l_f1_3_if_false         #   6:     goto   3_if_false
+     jmp     l_f1_3_if_false         #   8:     goto   3_if_false
-     movl    $19724, %eax            #   8:     if     19724 >= 20344 goto 10_if_true
+     movl    $19724, %eax            #  10:     if     19724 >= 20344 goto 10_if_true
-     jmp     l_f1_11_if_false        #   9:     goto   11_if_false
+     jmp     l_f1_11_if_false        #  11:     goto   11_if_false
-     jmp     l_f1_9                  #  11:     goto   9
+     jmp     l_f1_9                  #  13:     goto   9
-     movl    $99, %eax               #  14:     return 99
+     movl    $99, %eax               #  16:     return 99
-     jmp     l_f1_1                  #  15:     goto   1
+     jmp     l_f1_1                  #  17:     goto   1
-     movl    $97, %eax               #  18:     return 97
+     movl    $97, %eax               #  20:     return 97
-     #   -144(%ebp)   4  [ $t40      <int> %ebp-144 ]
+     #   -144(%ebp)   4  [ $t5       <int> %ebp-144 ]
-     #   -148(%ebp)   4  [ $t41      <int> %ebp-148 ]
+     #   -148(%ebp)   4  [ $t6       <int> %ebp-148 ]
-     #   -152(%ebp)   4  [ $t42      <int> %ebp-152 ]
+     #   -152(%ebp)   4  [ $t7       <int> %ebp-152 ]
-     #   -156(%ebp)   4  [ $t5       <int> %ebp-156 ]
+     #   -156(%ebp)   4  [ $t8       <int> %ebp-156 ]
-     #   -160(%ebp)   4  [ $t6       <int> %ebp-160 ]
+     #   -160(%ebp)   4  [ $t9       <int> %ebp-160 ]
-     #   -164(%ebp)   4  [ $t7       <int> %ebp-164 ]
-     #   -168(%ebp)   4  [ $t8       <int> %ebp-168 ]
-     #   -172(%ebp)   4  [ $t9       <int> %ebp-172 ]
-     #   -173(%ebp)   1  [ $v1       <bool> %ebp-173 ]
+     #   -161(%ebp)   1  [ $v1       <bool> %ebp-161 ]
-     #   -174(%ebp)   1  [ $v2       <char> %ebp-174 ]
+     #   -162(%ebp)   1  [ $v2       <char> %ebp-162 ]
-     pushl   %ebp                   
-     movl    %esp, %ebp             
-     pushl   %ebx                    # save callee saved registers
-     pushl   %esi                   
+     pushl   %ebp                   
+     movl    %esp, %ebp             
+     pushl   %ebx                    # save callee saved registers
-     pushl   %edi                   
+     pushl   %esi                   
+     pushl   %edi                   
-     subl    $164, %esp              # make room for locals
+     subl    $152, %esp              # make room for locals
-     movl    $41, %ecx              
+     movl    $38, %ecx              
+     movl    %eax, -144(%ebp)       
+     movl    -144(%ebp), %eax        #  30:     add    t6 <- t5, 25630
+     movl    $25630, %ebx           
+     addl    %ebx, %eax             
+     movl    %eax, -148(%ebp)       
+     movl    $3, %eax                #  31:     param  1 <- 3
+     pushl   %eax                   
+     movl    8(%ebp), %eax           #  32:     param  0 <- v0
+     pushl   %eax                   
+     call    DIM                     #  33:     call   t7 <- DIM
+     addl    $8, %esp               
+     movl    %eax, -152(%ebp)       
+     movl    -148(%ebp), %eax        #  34:     mul    t8 <- t6, t7
+     movl    -152(%ebp), %ebx       
+     imull   %ebx                   
-     movl    -156(%ebp), %eax        #  30:     add    t6 <- t5, 25630
+     movl    -156(%ebp), %eax        #  35:     add    t9 <- t8, 31429
-     movl    $25630, %ebx           
+     movl    $31429, %ebx           
-     movl    $3, %eax                #  31:     param  1 <- 3
-     pushl   %eax                   
-     movl    8(%ebp), %eax           #  32:     param  0 <- v0
-     pushl   %eax                   
-     call    DIM                     #  33:     call   t7 <- DIM
-     addl    $8, %esp               
-     movl    %eax, -164(%ebp)       
-     movl    -160(%ebp), %eax        #  34:     mul    t8 <- t6, t7
-     movl    -164(%ebp), %ebx       
-     imull   %ebx                   
-     movl    %eax, -168(%ebp)       
-     movl    -168(%ebp), %eax        #  35:     add    t9 <- t8, 31429
-     movl    $31429, %ebx           
-     addl    %ebx, %eax             
-     movl    %eax, -172(%ebp)       
-     movl    -172(%ebp), %eax        #  39:     mul    t11 <- t9, t10
+     movl    -160(%ebp), %eax        #  39:     mul    t11 <- t9, t10
-     movb    %al, -174(%ebp)        
+     movb    %al, -162(%ebp)        
+     movl    -68(%ebp), %eax         #  68:     mul    t25 <- t23, t24
+     movl    -72(%ebp), %ebx        
+     imull   %ebx                   
+     movl    %eax, -76(%ebp)        
-     movl    $4697, %eax             #  68:     add    t26 <- 4697, 83471
+     movl    -76(%ebp), %eax         #  69:     add    t26 <- t25, 14645
-     movl    $83471, %ebx           
+     movl    $14645, %ebx           
+     movl    $3, %eax                #  70:     param  1 <- 3
+     pushl   %eax                   
-     movl    -80(%ebp), %eax         #  69:     add    t27 <- t26, 84758
+     movl    8(%ebp), %eax           #  71:     param  0 <- v0
-     movl    $84758, %ebx           
+     pushl   %eax                   
+     call    DIM                     #  72:     call   t27 <- DIM
-     addl    %ebx, %eax             
+     addl    $8, %esp               
-     movl    -84(%ebp), %eax         #  70:     sub    t28 <- t27, 67763
+     movl    -80(%ebp), %eax         #  73:     mul    t28 <- t26, t27
-     movl    $67763, %ebx           
+     movl    -84(%ebp), %ebx        
-     subl    %ebx, %eax             
+     imull   %ebx                   
-     movl    -68(%ebp), %eax         #  71:     mul    t25 <- t23, t24
-     movl    -72(%ebp), %ebx        
-     imull   %ebx                   
-     movl    %eax, -76(%ebp)        
-     movl    -76(%ebp), %eax         #  72:     add    t29 <- t25, 14645
+     movl    -88(%ebp), %eax         #  74:     add    t29 <- t28, 72159
-     movl    $14645, %ebx           
+     movl    $72159, %ebx           
-     movl    $3, %eax                #  73:     param  1 <- 3
+     movl    $4, %eax                #  75:     param  1 <- 4
-     movl    8(%ebp), %eax           #  74:     param  0 <- v0
+     movl    8(%ebp), %eax           #  76:     param  0 <- v0
-     call    DIM                     #  75:     call   t30 <- DIM
+     call    DIM                     #  77:     call   t30 <- DIM
-     movl    -92(%ebp), %eax         #  76:     mul    t31 <- t29, t30
+     movl    -92(%ebp), %eax         #  78:     mul    t31 <- t29, t30
-     movl    -104(%ebp), %eax        #  77:     add    t32 <- t31, 72159
+     movl    -104(%ebp), %eax        #  79:     add    t32 <- t31, 57825
-     movl    $72159, %ebx           
+     movl    $57825, %ebx           
-     movl    $4, %eax                #  78:     param  1 <- 4
+     movl    $5, %eax                #  80:     param  1 <- 5
-     movl    8(%ebp), %eax           #  79:     param  0 <- v0
+     movl    8(%ebp), %eax           #  81:     param  0 <- v0
-     call    DIM                     #  80:     call   t33 <- DIM
+     call    DIM                     #  82:     call   t33 <- DIM
-     movl    -108(%ebp), %eax        #  81:     mul    t34 <- t32, t33
+     movl    -108(%ebp), %eax        #  83:     mul    t34 <- t32, t33
-     movl    -116(%ebp), %eax        #  82:     add    t35 <- t34, 57825
+     movl    -116(%ebp), %eax        #  84:     add    t35 <- t34, 6378
-     movl    $57825, %ebx           
+     movl    $6378, %ebx            
-     movl    $5, %eax                #  83:     param  1 <- 5
+     movl    -120(%ebp), %eax        #  85:     mul    t36 <- t35, 1
+     movl    $1, %ebx               
-     pushl   %eax                   
+     imull   %ebx                   
-     movl    8(%ebp), %eax           #  84:     param  0 <- v0
-     pushl   %eax                   
-     call    DIM                     #  85:     call   t36 <- DIM
-     addl    $8, %esp               
-     movl    -120(%ebp), %eax        #  86:     mul    t37 <- t35, t36
+     movl    8(%ebp), %eax           #  86:     param  0 <- v0
-     movl    -124(%ebp), %ebx       
-     imull   %ebx                   
+     pushl   %eax                   
+     call    DOFS                    #  87:     call   t37 <- DOFS
+     addl    $4, %esp               
-     movl    -128(%ebp), %eax        #  87:     add    t38 <- t37, 6378
+     movl    -124(%ebp), %eax        #  88:     add    t38 <- t36, t37
-     movl    $6378, %ebx            
+     movl    -128(%ebp), %ebx       
-     movl    -132(%ebp), %eax        #  88:     mul    t39 <- t38, 1
+     movl    8(%ebp), %eax           #  89:     add    t39 <- v0, t38
+     movl    -132(%ebp), %ebx       
-     movl    $1, %ebx               
+     addl    %ebx, %eax             
-     imull   %ebx                   
-     movl    8(%ebp), %eax           #  89:     param  0 <- v0
-     pushl   %eax                   
-     call    DOFS                    #  90:     call   t40 <- DOFS
-     addl    $4, %esp               
-     movl    %eax, -144(%ebp)       
-     movl    -136(%ebp), %eax        #  91:     add    t41 <- t39, t40
-     movl    -144(%ebp), %ebx       
-     addl    %ebx, %eax             
-     movl    %eax, -148(%ebp)       
-     movl    8(%ebp), %eax           #  92:     add    t42 <- v0, t41
-     movl    -148(%ebp), %ebx       
-     addl    %ebx, %eax             
-     movl    %eax, -152(%ebp)       
-     movzbl  -54(%ebp), %eax         #  93:     assign @t42 <- t20
+     movzbl  -54(%ebp), %eax         #  90:     assign @t39 <- t20
-     movl    -152(%ebp), %edi       
+     movl    -136(%ebp), %edi       
-     addl    $164, %esp              # remove locals
+     addl    $152, %esp              # remove locals
