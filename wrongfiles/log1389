-     #    -13(%ebp)   1  [ $t33      <char> %ebp-13 ]
+     #    -13(%ebp)   1  [ $t29      <char> %ebp-13 ]
-     #    -14(%ebp)   1  [ $t34      <bool> %ebp-14 ]
+     #    -14(%ebp)   1  [ $t30      <bool> %ebp-14 ]
-     #    -20(%ebp)   4  [ $t35      <int> %ebp-20 ]
+     #    -20(%ebp)   4  [ $t31      <int> %ebp-20 ]
-     #    -21(%ebp)   1  [ $t36      <char> %ebp-21 ]
+     #    -21(%ebp)   1  [ $t32      <char> %ebp-21 ]
-     #    -28(%ebp)   4  [ $t37      <int> %ebp-28 ]
+     #    -28(%ebp)   4  [ $t33      <int> %ebp-28 ]
-     #    -29(%ebp)   1  [ $t38      <bool> %ebp-29 ]
+     #    -29(%ebp)   1  [ $t34      <bool> %ebp-29 ]
-     call    dummyCHARfunc           #   0:     call   t33 <- dummyCHARfunc
+     call    dummyCHARfunc           #   0:     call   t29 <- dummyCHARfunc
+     jmp     l_f0_2                  #   3:     goto   2
-     movl    $97, %eax               #   3:     if     97 >= 97 goto 8
+     movl    $97, %eax               #   4:     if     97 >= 97 goto 8
-     jmp     l_f0_9                  #   4:     goto   9
+     jmp     l_f0_9                  #   5:     goto   9
-     movl    $1, %eax                #   6:     assign t34 <- 1
+     movl    $1, %eax                #   7:     assign t30 <- 1
-     jmp     l_f0_10                 #   7:     goto   10
+     jmp     l_f0_10                 #   8:     goto   10
-     movl    $0, %eax                #   9:     assign t34 <- 0
+     movl    $0, %eax                #  10:     assign t30 <- 0
-     movzbl  -14(%ebp), %eax         #  11:     assign v0 <- t34
+     movzbl  -14(%ebp), %eax         #  12:     assign v0 <- t30
-     call    ReadInt                 #  12:     call   t35 <- ReadInt
+     call    ReadInt                 #  13:     call   t31 <- ReadInt
-     movl    $97, %eax               #  13:     if     97 > 98 goto 14_if_true
+     movl    $97, %eax               #  14:     if     97 > 98 goto 14_if_true
-     jmp     l_f0_15_if_false        #  14:     goto   15_if_false
+     jmp     l_f0_15_if_false        #  15:     goto   15_if_false
-     jmp     l_f0_13                 #  16:     goto   13
+     jmp     l_f0_13                 #  17:     goto   13
-     call    dummyCHARfunc           #  19:     call   t36 <- dummyCHARfunc
+     call    dummyCHARfunc           #  20:     call   t32 <- dummyCHARfunc
-     call    dummyINTfunc            #  20:     call   t37 <- dummyINTfunc
+     call    dummyINTfunc            #  21:     call   t33 <- dummyINTfunc
-     call    dummyBOOLfunc           #  21:     call   t38 <- dummyBOOLfunc
+     call    dummyBOOLfunc           #  22:     call   t34 <- dummyBOOLfunc
-     jmp     l_f0_3_while_cond       #  22:     goto   3_while_cond
+     jmp     l_f0_3_while_cond       #  23:     goto   3_while_cond
+ l_f0_2:
-     #    -13(%ebp)   1  [ $t33      <bool> %ebp-13 ]
+     #    -13(%ebp)   1  [ $t29      <bool> %ebp-13 ]
-     #    -14(%ebp)   1  [ $t34      <char> %ebp-14 ]
+     #    -14(%ebp)   1  [ $t30      <char> %ebp-14 ]
-     #    -15(%ebp)   1  [ $t35      <bool> %ebp-15 ]
+     #    -15(%ebp)   1  [ $t31      <bool> %ebp-15 ]
-     call    dummyBOOLfunc           #   0:     call   t33 <- dummyBOOLfunc
+     call    dummyBOOLfunc           #   0:     call   t29 <- dummyBOOLfunc
-     call    dummyCHARfunc           #   1:     call   t34 <- dummyCHARfunc
+     call    dummyCHARfunc           #   1:     call   t30 <- dummyCHARfunc
-     movzbl  -14(%ebp), %eax         #   2:     return t34
+     movzbl  -14(%ebp), %eax         #   2:     return t30
-     call    dummyBOOLfunc           #   3:     call   t35 <- dummyBOOLfunc
+     call    dummyBOOLfunc           #   3:     call   t31 <- dummyBOOLfunc
-     #    -16(%ebp)   4  [ $t33      <int> %ebp-16 ]
+     #    -16(%ebp)   4  [ $t29      <int> %ebp-16 ]
-     #    -20(%ebp)   4  [ $t34      <int> %ebp-20 ]
+     #    -20(%ebp)   4  [ $t30      <int> %ebp-20 ]
-     #    -21(%ebp)   1  [ $t35      <bool> %ebp-21 ]
+     #    -21(%ebp)   1  [ $t31      <bool> %ebp-21 ]
-     call    dummyINTfunc            #   0:     call   t33 <- dummyINTfunc
+     call    dummyINTfunc            #   0:     call   t29 <- dummyINTfunc
-     movl    $66424, %eax            #   1:     mul    t34 <- 66424, t33
+     movl    $66424, %eax            #   1:     mul    t30 <- 66424, t29
-     movl    -20(%ebp), %eax         #   2:     assign v2 <- t34
+     movl    -20(%ebp), %eax         #   2:     assign v2 <- t30
-     call    dummyBOOLfunc           #   3:     call   t35 <- dummyBOOLfunc
+     call    dummyBOOLfunc           #   3:     call   t31 <- dummyBOOLfunc
-     #    -68(%ebp)   4  [ $t20      <int> %ebp-68 ]
+     #    -68(%ebp)   4  [ $t20      <ptr(4) to <array 6 of <array 58 of <array 2 of <array 7 of <array 4 of <char>>>>>>> %ebp-68 ]
+     #    -84(%ebp)   4  [ $t24      <int> %ebp-84 ]
-     #    -84(%ebp)   4  [ $t24      <ptr(4) to <array 6 of <array 58 of <array 2 of <array 7 of <array 4 of <char>>>>>>> %ebp-84 ]
+     #    -88(%ebp)   4  [ $t25      <ptr(4) to <array 6 of <array 58 of <array 2 of <array 7 of <array 4 of <char>>>>>>> %ebp-88 ]
-     #    -88(%ebp)   4  [ $t25      <int> %ebp-88 ]
-     #   -104(%ebp)   4  [ $t29      <ptr(4) to <array 6 of <array 58 of <array 2 of <array 7 of <array 4 of <char>>>>>>> %ebp-104 ]
+     #   -104(%ebp)   4  [ $t3       <ptr(4) to <array 6 of <array 58 of <array 2 of <array 7 of <array 4 of <char>>>>>>> %ebp-104 ]
-     #   -108(%ebp)   4  [ $t3       <ptr(4) to <array 6 of <array 58 of <array 2 of <array 7 of <array 4 of <char>>>>>>> %ebp-108 ]
+     #   -108(%ebp)   4  [ $t4       <ptr(4) to <array 6 of <array 58 of <array 2 of <array 7 of <array 4 of <char>>>>>>> %ebp-108 ]
-     #   -112(%ebp)   4  [ $t30      <int> %ebp-112 ]
+     #   -112(%ebp)   4  [ $t5       <int> %ebp-112 ]
-     #   -116(%ebp)   4  [ $t31      <int> %ebp-116 ]
+     #   -116(%ebp)   4  [ $t6       <int> %ebp-116 ]
-     #   -120(%ebp)   4  [ $t32      <int> %ebp-120 ]
+     #   -120(%ebp)   4  [ $t7       <int> %ebp-120 ]
-     #   -124(%ebp)   4  [ $t4       <ptr(4) to <array 6 of <array 58 of <array 2 of <array 7 of <array 4 of <char>>>>>>> %ebp-124 ]
+     #   -124(%ebp)   4  [ $t8       <ptr(4) to <array 6 of <array 58 of <array 2 of <array 7 of <array 4 of <char>>>>>>> %ebp-124 ]
-     #   -128(%ebp)   4  [ $t5       <int> %ebp-128 ]
+     #   -128(%ebp)   4  [ $t9       <int> %ebp-128 ]
-     #   -132(%ebp)   4  [ $t6       <int> %ebp-132 ]
-     #   -136(%ebp)   4  [ $t7       <int> %ebp-136 ]
-     #   -140(%ebp)   4  [ $t8       <ptr(4) to <array 6 of <array 58 of <array 2 of <array 7 of <array 4 of <char>>>>>>> %ebp-140 ]
-     #   -144(%ebp)   4  [ $t9       <int> %ebp-144 ]
-     pushl   %ebp                   
-     movl    %esp, %ebp             
-     pushl   %ebx                    # save callee saved registers
-     pushl   %esi                   
+     pushl   %ebp                   
+     movl    %esp, %ebp             
+     pushl   %ebx                    # save callee saved registers
-     pushl   %edi                   
+     pushl   %esi                   
+     pushl   %edi                   
-     subl    $132, %esp              # make room for locals
+     subl    $116, %esp              # make room for locals
-     movl    $33, %ecx              
+     movl    $29, %ecx              
-     addl    $5, %esp               
+     addl    $8, %esp               
+     movl    %eax, -104(%ebp)       
+     movl    $2, %eax                #  33:     param  1 <- 2
+     pushl   %eax                   
+     leal    v0, %eax                #  34:     &()    t4 <- v0
-     movl    $2, %eax                #  33:     param  1 <- 2
-     pushl   %eax                   
-     leal    v0, %eax                #  34:     &()    t4 <- v0
-     movl    %eax, -124(%ebp)       
-     movl    -124(%ebp), %eax        #  35:     param  0 <- t4
+     movl    -108(%ebp), %eax        #  35:     param  0 <- t4
-     movl    %eax, -128(%ebp)       
+     movl    %eax, -112(%ebp)       
-     movl    -128(%ebp), %ebx       
+     movl    -112(%ebp), %ebx       
-     movl    %eax, -132(%ebp)       
+     movl    %eax, -116(%ebp)       
-     movl    -132(%ebp), %eax        #  38:     add    t7 <- t6, 70856
+     movl    -116(%ebp), %eax        #  38:     add    t7 <- t6, 70856
-     movl    %eax, -136(%ebp)       
+     movl    %eax, -120(%ebp)       
-     movl    %eax, -140(%ebp)       
+     movl    %eax, -124(%ebp)       
-     movl    -140(%ebp), %eax        #  41:     param  0 <- t8
+     movl    -124(%ebp), %eax        #  41:     param  0 <- t8
-     movl    %eax, -144(%ebp)       
+     movl    %eax, -128(%ebp)       
-     movl    -136(%ebp), %eax        #  43:     mul    t10 <- t7, t9
+     movl    -120(%ebp), %eax        #  43:     mul    t10 <- t7, t9
-     movl    -144(%ebp), %ebx       
+     movl    -128(%ebp), %ebx       
-     movl    $43231, %eax            #  53:     mul    t19 <- 43231, 18553
+     movl    -44(%ebp), %eax         #  53:     mul    t18 <- t15, t17
+     movl    -52(%ebp), %ebx        
+     imull   %ebx                   
+     movl    %eax, -56(%ebp)        
+     movl    -56(%ebp), %eax         #  54:     add    t19 <- t18, 95459
-     movl    $18553, %ebx           
+     movl    $95459, %ebx           
-     imull   %ebx                   
+     addl    %ebx, %eax             
+     movl    $5, %eax                #  55:     param  1 <- 5
-     movl    -60(%ebp), %eax         #  54:     sub    t20 <- t19, 66070
-     movl    $66070, %ebx           
-     subl    %ebx, %eax             
+     pushl   %eax                   
+     leal    v0, %eax                #  56:     &()    t20 <- v0
-     movl    -68(%ebp), %eax         #  55:     sub    t21 <- t20, 10155
+     movl    -68(%ebp), %eax         #  57:     param  0 <- t20
-     movl    $10155, %ebx           
-     subl    %ebx, %eax             
+     pushl   %eax                   
+     call    DIM                     #  58:     call   t21 <- DIM
+     addl    $8, %esp               
-     movl    -72(%ebp), %eax         #  56:     add    t22 <- t21, 37519
+     movl    -60(%ebp), %eax         #  59:     mul    t22 <- t19, t21
-     movl    $37519, %ebx           
+     movl    -72(%ebp), %ebx        
-     addl    %ebx, %eax             
+     imull   %ebx                   
-     movl    -44(%ebp), %eax         #  57:     mul    t18 <- t15, t17
-     movl    -52(%ebp), %ebx        
-     imull   %ebx                   
-     movl    %eax, -56(%ebp)        
-     movl    -56(%ebp), %eax         #  58:     add    t23 <- t18, 95459
+     movl    -76(%ebp), %eax         #  60:     add    t23 <- t22, 49504
-     movl    $95459, %ebx           
+     movl    $49504, %ebx           
-     movl    $5, %eax                #  59:     param  1 <- 5
+     movl    -80(%ebp), %eax         #  61:     mul    t24 <- t23, 1
+     movl    $1, %ebx               
-     pushl   %eax                   
+     imull   %ebx                   
-     leal    v0, %eax                #  60:     &()    t24 <- v0
-     movl    -84(%ebp), %eax         #  61:     param  0 <- t24
-     pushl   %eax                   
-     call    DIM                     #  62:     call   t25 <- DIM
+     leal    v0, %eax                #  62:     &()    t25 <- v0
-     addl    $8, %esp               
-     movl    -80(%ebp), %eax         #  63:     mul    t26 <- t23, t25
+     movl    -88(%ebp), %eax         #  63:     param  0 <- t25
-     movl    -88(%ebp), %ebx        
-     imull   %ebx                   
+     pushl   %eax                   
+     call    DOFS                    #  64:     call   t26 <- DOFS
+     addl    $4, %esp               
-     movl    -92(%ebp), %eax         #  64:     add    t27 <- t26, 49504
+     movl    -84(%ebp), %eax         #  65:     add    t27 <- t24, t26
-     movl    $49504, %ebx           
+     movl    -92(%ebp), %ebx        
-     movl    -96(%ebp), %eax         #  65:     mul    t28 <- t27, 1
+     movl    -104(%ebp), %eax        #  66:     add    t28 <- t3, t27
+     movl    -96(%ebp), %ebx        
-     movl    $1, %ebx               
+     addl    %ebx, %eax             
-     imull   %ebx                   
-     leal    v0, %eax                #  66:     &()    t29 <- v0
-     movl    %eax, -104(%ebp)       
-     movl    -104(%ebp), %eax        #  67:     param  0 <- t29
-     pushl   %eax                   
-     call    DOFS                    #  68:     call   t30 <- DOFS
-     addl    $4, %esp               
-     movl    %eax, -112(%ebp)       
-     movl    -100(%ebp), %eax        #  69:     add    t31 <- t28, t30
-     movl    -112(%ebp), %ebx       
-     addl    %ebx, %eax             
-     movl    %eax, -116(%ebp)       
-     movl    -108(%ebp), %eax        #  70:     add    t32 <- t3, t31
-     movl    -116(%ebp), %ebx       
-     addl    %ebx, %eax             
-     movl    %eax, -120(%ebp)       
-     movl    $98, %eax               #  71:     assign @t32 <- 98
+     movl    $98, %eax               #  67:     assign @t28 <- 98
-     movl    -120(%ebp), %edi       
+     movl    -100(%ebp), %edi       
-     addl    $132, %esp              # remove locals
+     addl    $116, %esp              # remove locals
