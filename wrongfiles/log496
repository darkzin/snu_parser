-     #    -64(%ebp)   4  [ $t20      <int> %ebp-64 ]
+     #    -64(%ebp)   4  [ $t3       <int> %ebp-64 ]
-     #    -68(%ebp)   4  [ $t21      <int> %ebp-68 ]
+     #    -68(%ebp)   4  [ $t4       <int> %ebp-68 ]
-     #    -72(%ebp)   4  [ $t3       <int> %ebp-72 ]
+     #    -72(%ebp)   4  [ $t5       <int> %ebp-72 ]
-     #    -76(%ebp)   4  [ $t4       <int> %ebp-76 ]
+     #    -76(%ebp)   4  [ $t6       <int> %ebp-76 ]
-     #    -80(%ebp)   4  [ $t5       <int> %ebp-80 ]
+     #    -80(%ebp)   4  [ $t7       <int> %ebp-80 ]
-     #    -84(%ebp)   4  [ $t6       <int> %ebp-84 ]
+     #    -84(%ebp)   4  [ $t8       <int> %ebp-84 ]
-     #    -88(%ebp)   4  [ $t7       <int> %ebp-88 ]
+     #    -88(%ebp)   4  [ $t9       <int> %ebp-88 ]
-     #    -92(%ebp)   4  [ $t8       <int> %ebp-92 ]
-     #    -96(%ebp)   4  [ $t9       <int> %ebp-96 ]
-     #    -97(%ebp)   1  [ $v1       <char> %ebp-97 ]
+     #    -89(%ebp)   1  [ $v1       <char> %ebp-89 ]
-     pushl   %ebp                   
-     movl    %esp, %ebp             
-     pushl   %ebx                    # save callee saved registers
-     pushl   %esi                   
+     pushl   %ebp                   
+     movl    %esp, %ebp             
+     pushl   %ebx                    # save callee saved registers
-     pushl   %edi                   
+     pushl   %esi                   
+     pushl   %edi                   
-     subl    $88, %esp               # make room for locals
+     subl    $80, %esp               # make room for locals
-     movl    $22, %ecx              
+     movl    $20, %ecx              
+     movl    %eax, -64(%ebp)        
+     movl    -60(%ebp), %eax         #   5:     mul    t4 <- t2, t3
+     movl    -64(%ebp), %ebx        
+     imull   %ebx                   
+     movl    %eax, -68(%ebp)        
+     movl    -68(%ebp), %eax         #   6:     add    t5 <- t4, 38255
+     movl    $38255, %ebx           
+     addl    %ebx, %eax             
-     movl    $11304, %eax            #   5:     add    t5 <- 11304, 24079
+     movl    $3, %eax                #   7:     param  1 <- 3
-     movl    $24079, %ebx           
+     pushl   %eax                   
+     movl    8(%ebp), %eax           #   8:     param  0 <- v0
+     pushl   %eax                   
+     call    DIM                     #   9:     call   t6 <- DIM
-     addl    %ebx, %eax             
+     addl    $8, %esp               
+     movl    %eax, -76(%ebp)        
+     movl    -72(%ebp), %eax         #  10:     mul    t7 <- t5, t6
+     movl    -76(%ebp), %ebx        
+     imull   %ebx                   
-     movl    -80(%ebp), %eax         #   6:     add    t6 <- t5, 49048
+     movl    -80(%ebp), %eax         #  11:     add    t8 <- t7, 13265
-     movl    $49048, %ebx           
+     movl    $13265, %ebx           
+     movl    $4, %eax                #  12:     param  1 <- 4
-     movl    -60(%ebp), %eax         #   7:     mul    t4 <- t2, t3
-     movl    -72(%ebp), %ebx        
-     imull   %ebx                   
+     pushl   %eax                   
-     movl    %eax, -76(%ebp)        
-     movl    -76(%ebp), %eax         #   8:     add    t7 <- t4, 38255
+     movl    8(%ebp), %eax           #  13:     param  0 <- v0
-     movl    $38255, %ebx           
+     pushl   %eax                   
+     call    DIM                     #  14:     call   t9 <- DIM
-     addl    %ebx, %eax             
+     addl    $8, %esp               
-     movl    $3, %eax                #   9:     param  1 <- 3
-     pushl   %eax                   
-     movl    8(%ebp), %eax           #  10:     param  0 <- v0
-     pushl   %eax                   
-     call    DIM                     #  11:     call   t8 <- DIM
-     addl    $8, %esp               
-     movl    %eax, -92(%ebp)        
-     movl    -88(%ebp), %eax         #  12:     mul    t9 <- t7, t8
+     movl    -84(%ebp), %eax         #  15:     mul    t10 <- t8, t9
-     movl    -92(%ebp), %ebx        
+     movl    -88(%ebp), %ebx        
-     movl    %eax, -96(%ebp)        
-     movl    -96(%ebp), %eax         #  13:     add    t10 <- t9, 13265
-     movl    $13265, %ebx           
-     addl    %ebx, %eax             
-     movl    $4, %eax                #  14:     param  1 <- 4
-     pushl   %eax                   
-     movl    8(%ebp), %eax           #  15:     param  0 <- v0
+     movl    -20(%ebp), %eax         #  16:     add    t11 <- t10, 93475
+     movl    $93475, %ebx           
-     pushl   %eax                   
-     call    DIM                     #  16:     call   t11 <- DIM
-     addl    $8, %esp               
+     addl    %ebx, %eax             
+     movl    $5, %eax                #  17:     param  1 <- 5
-     movl    -20(%ebp), %eax         #  17:     mul    t12 <- t10, t11
-     movl    -24(%ebp), %ebx        
-     imull   %ebx                   
+     pushl   %eax                   
+     movl    8(%ebp), %eax           #  18:     param  0 <- v0
+     pushl   %eax                   
+     call    DIM                     #  19:     call   t12 <- DIM
+     addl    $8, %esp               
-     movl    -28(%ebp), %eax         #  18:     add    t13 <- t12, 93475
+     movl    -24(%ebp), %eax         #  20:     mul    t13 <- t11, t12
-     movl    $93475, %ebx           
+     movl    -28(%ebp), %ebx        
-     addl    %ebx, %eax             
+     imull   %ebx                   
+     movl    $32310, %eax            #  21:     add    t14 <- 32310, 67610
+     movl    $67610, %ebx           
-     movl    $5, %eax                #  19:     param  1 <- 5
-     pushl   %eax                   
-     movl    8(%ebp), %eax           #  20:     param  0 <- v0
-     pushl   %eax                   
-     call    DIM                     #  21:     call   t14 <- DIM
-     addl    $8, %esp               
+     addl    %ebx, %eax             
-     movl    -32(%ebp), %eax         #  22:     mul    t15 <- t13, t14
+     movl    -32(%ebp), %eax         #  22:     add    t15 <- t13, t14
-     imull   %ebx                   
+     addl    %ebx, %eax             
-     movl    $32310, %eax            #  23:     add    t16 <- 32310, 67610
+     movl    -40(%ebp), %eax         #  23:     mul    t16 <- t15, 1
-     movl    $67610, %ebx           
+     movl    $1, %ebx               
-     addl    %ebx, %eax             
+     imull   %ebx                   
-     movl    -40(%ebp), %eax         #  24:     add    t17 <- t15, t16
+     movl    8(%ebp), %eax           #  24:     param  0 <- v0
-     movl    -44(%ebp), %ebx        
+     pushl   %eax                   
+     call    DOFS                    #  25:     call   t17 <- DOFS
-     addl    %ebx, %eax             
+     addl    $4, %esp               
-     movl    -48(%ebp), %eax         #  25:     mul    t18 <- t17, 1
+     movl    -44(%ebp), %eax         #  26:     add    t18 <- t16, t17
+     movl    -48(%ebp), %ebx        
-     movl    $1, %ebx               
+     addl    %ebx, %eax             
-     imull   %ebx                   
-     movl    8(%ebp), %eax           #  26:     param  0 <- v0
+     movl    8(%ebp), %eax           #  27:     add    t19 <- v0, t18
+     movl    -52(%ebp), %ebx        
-     pushl   %eax                   
-     call    DOFS                    #  27:     call   t19 <- DOFS
-     addl    $4, %esp               
+     addl    %ebx, %eax             
-     movl    -52(%ebp), %eax         #  28:     add    t20 <- t18, t19
-     movl    -56(%ebp), %ebx        
-     addl    %ebx, %eax             
-     movl    %eax, -64(%ebp)        
-     movl    8(%ebp), %eax           #  29:     add    t21 <- v0, t20
-     movl    -64(%ebp), %ebx        
-     addl    %ebx, %eax             
-     movl    %eax, -68(%ebp)        
-     movl    $99, %eax               #  30:     assign @t21 <- 99
+     movl    $99, %eax               #  28:     assign @t19 <- 99
-     movl    -68(%ebp), %edi        
+     movl    -56(%ebp), %edi        
-     addl    $88, %esp               # remove locals
+     addl    $80, %esp               # remove locals
-     #  -7244(%ebp)7224  [ $v1       <array 10 of <array 9 of <array 8 of <array 10 of <array 1 of <char>>>>>> %ebp-7244 ]
+     #   -7244(%ebp)  7224  [ $v1       <array 10 of <array 9 of <array 8 of <array 10 of <array 1 of <char>>>>>> %ebp-7244 ]
-     #  -7245(%ebp)   1  [ $v2       <char> %ebp-7245 ]
+     #   -7245(%ebp)   1  [ $v2       <char> %ebp-7245 ]
+     jmp     l_f1_0                  #   2:     goto   0
-     movl    $97, %eax               #   3:     param  0 <- 97
+     movl    $97, %eax               #   4:     param  0 <- 97
-     call    WriteChar               #   4:     call   WriteChar
+     call    WriteChar               #   5:     call   WriteChar
-     addl    $1, %esp               
+     addl    $4, %esp               
-     jmp     l_f1_1_while_cond       #   5:     goto   1_while_cond
+     jmp     l_f1_1_while_cond       #   6:     goto   1_while_cond
+ l_f1_0:
-     movl    $100, %eax              #   7:     if     100 > 97 goto 7_while_body
+     movl    $100, %eax              #   9:     if     100 > 97 goto 7_while_body
-     jmp     l_f1_5                  #   8:     goto   5
+     jmp     l_f1_5                  #  10:     goto   5
-     call    dummyCHARfunc           #  10:     call   t1 <- dummyCHARfunc
+     call    dummyCHARfunc           #  12:     call   t1 <- dummyCHARfunc
-     movl    $97, %eax               #  12:     if     97 >= 100 goto 12_while_body
+     movl    $97, %eax               #  14:     if     97 >= 100 goto 12_while_body
-     jmp     l_f1_10                 #  13:     goto   10
+     jmp     l_f1_10                 #  15:     goto   10
-     jmp     l_f1_11_while_cond      #  15:     goto   11_while_cond
+     jmp     l_f1_11_while_cond      #  17:     goto   11_while_cond
-     movl    $0, %eax                #  17:     return 0
+     movl    $0, %eax                #  19:     return 0
-     leal    -7244(%ebp), %eax       #  18:     &()    t2 <- v1
+     leal    -7244(%ebp), %eax       #  20:     &()    t2 <- v1
-     movl    -20(%ebp), %eax         #  19:     param  0 <- t2
+     movl    -20(%ebp), %eax         #  21:     param  0 <- t2
-     call    f0                      #  20:     call   f0
+     call    f0                      #  22:     call   f0
-     jmp     l_f1_6_while_cond       #  21:     goto   6_while_cond
+     jmp     l_f1_6_while_cond       #  23:     goto   6_while_cond
-     movl    $99, %eax               #  23:     assign v2 <- 99
+     movl    $99, %eax               #  25:     assign v2 <- 99
