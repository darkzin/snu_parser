+     jmp     l_f0_4                  #   0:     goto   4
+ l_f0_4:
+     jmp     l_f0_2                  #   2:     goto   2
-     movl    $1, %eax                #   0:     assign t5 <- 1
+     movl    $1, %eax                #   3:     assign t5 <- 1
-     jmp     l_f0_3                  #   1:     goto   3
+     jmp     l_f0_3                  #   4:     goto   3
+ l_f0_2:
-     movl    $0, %eax                #   2:     assign t5 <- 0
+     movl    $0, %eax                #   6:     assign t5 <- 0
-     movzbl  -13(%ebp), %eax         #   4:     return t5
+     movzbl  -13(%ebp), %eax         #   8:     return t5
-     call    dummyBOOLfunc           #   5:     call   t6 <- dummyBOOLfunc
+     call    dummyBOOLfunc           #   9:     call   t6 <- dummyBOOLfunc
-     movl    $88259, %eax            #   7:     if     88259 < 33852 goto 9_while_body
+     movl    $88259, %eax            #  11:     if     88259 < 33852 goto 9_while_body
-     jmp     l_f0_7                  #   8:     goto   7
+     jmp     l_f0_7                  #  12:     goto   7
-     jmp     l_f0_13_if_false        #  10:     goto   13_if_false
+     jmp     l_f0_13_if_false        #  14:     goto   13_if_false
-     jmp     l_f0_11                 #  11:     goto   11
+     jmp     l_f0_11                 #  15:     goto   11
-     jmp     l_f0_16_if_false        #  14:     goto   16_if_false
+     jmp     l_f0_16_if_false        #  18:     goto   16_if_false
-     jmp     l_f0_14                 #  15:     goto   14
+     jmp     l_f0_14                 #  19:     goto   14
-     movl    $2175, %eax             #  18:     if     2175 <= 85022 goto 18_if_true
+     movl    $2175, %eax             #  22:     if     2175 <= 85022 goto 18_if_true
-     jmp     l_f0_19_if_false        #  19:     goto   19_if_false
+     jmp     l_f0_19_if_false        #  23:     goto   19_if_false
-     jmp     l_f0_17                 #  21:     goto   17
+     jmp     l_f0_17                 #  25:     goto   17
-     call    ReadInt                 #  24:     call   t7 <- ReadInt
+     call    ReadInt                 #  28:     call   t7 <- ReadInt
-     call    dummyCHARfunc           #  25:     call   t8 <- dummyCHARfunc
+     call    dummyCHARfunc           #  29:     call   t8 <- dummyCHARfunc
-     jmp     l_f0_8_while_cond       #  26:     goto   8_while_cond
+     jmp     l_f0_8_while_cond       #  30:     goto   8_while_cond
-     #    -80(%ebp)   4  [ $t26      <int> %ebp-80 ]
+     #    -80(%ebp)   4  [ $t26      <ptr(4) to <array 3 of <array 10 of <array 10 of <array 10 of <array 1 of <int>>>>>>> %ebp-80 ]
-     #    -84(%ebp)   4  [ $t27      <int> %ebp-84 ]
+     #    -81(%ebp)   1  [ $t27      <bool> %ebp-81 ]
-     #    -88(%ebp)   4  [ $t28      <int> %ebp-88 ]
+     #    -88(%ebp)   4  [ $t28      <ptr(4) to <array 9 of <array 2 of <array 1 of <array 5 of <array 5 of <bool>>>>>>> %ebp-88 ]
-     #    -92(%ebp)   4  [ $t29      <int> %ebp-92 ]
+     #    -89(%ebp)   1  [ $t29      <bool> %ebp-89 ]
+     #    -90(%ebp)   1  [ $t30      <bool> %ebp-90 ]
+     #    -91(%ebp)   1  [ $t31      <bool> %ebp-91 ]
-     #    -96(%ebp)   4  [ $t30      <int> %ebp-96 ]
+     #    -96(%ebp)   4  [ $t5       <int> %ebp-96 ]
-     #   -100(%ebp)   4  [ $t31      <ptr(4) to <array 3 of <array 10 of <array 10 of <array 10 of <array 1 of <int>>>>>>> %ebp-100 ]
-     #   -101(%ebp)   1  [ $t32      <bool> %ebp-101 ]
-     #   -108(%ebp)   4  [ $t33      <ptr(4) to <array 9 of <array 2 of <array 1 of <array 5 of <array 5 of <bool>>>>>>> %ebp-108 ]
-     #   -109(%ebp)   1  [ $t34      <bool> %ebp-109 ]
-     #   -110(%ebp)   1  [ $t35      <bool> %ebp-110 ]
-     #   -111(%ebp)   1  [ $t36      <bool> %ebp-111 ]
-     #   -116(%ebp)   4  [ $t5       <int> %ebp-116 ]
-     #   -120(%ebp)   4  [ $t6       <int> %ebp-120 ]
+     #   -100(%ebp)   4  [ $t6       <int> %ebp-100 ]
-     #   -124(%ebp)   4  [ $t7       <int> %ebp-124 ]
+     #   -104(%ebp)   4  [ $t7       <int> %ebp-104 ]
-     #   -128(%ebp)   4  [ $t8       <int> %ebp-128 ]
+     #   -108(%ebp)   4  [ $t8       <int> %ebp-108 ]
-     #   -132(%ebp)   4  [ $t9       <int> %ebp-132 ]
+     #   -112(%ebp)   4  [ $t9       <int> %ebp-112 ]
-     #   -133(%ebp)   1  [ $v4       <bool> %ebp-133 ]
+     #   -113(%ebp)   1  [ $v4       <bool> %ebp-113 ]
-     #   -608(%ebp) 474  [ $v5       <array 9 of <array 2 of <array 1 of <array 5 of <array 5 of <bool>>>>>> %ebp-608 ]
+     #   -588(%ebp)  474  [ $v5       <array 9 of <array 2 of <array 1 of <array 5 of <array 5 of <bool>>>>>> %ebp-588 ]
-     # -12632(%ebp)12024  [ $v6       <array 3 of <array 10 of <array 10 of <array 10 of <array 1 of <int>>>>>> %ebp-12632 ]
+     #   -12612(%ebp)  12024  [ $v6       <array 3 of <array 10 of <array 10 of <array 10 of <array 1 of <int>>>>>> %ebp-12612 ]
-     pushl   %ebp                   
-     movl    %esp, %ebp             
-     pushl   %ebx                    # save callee saved registers
-     pushl   %esi                   
+     pushl   %ebp                   
+     movl    %esp, %ebp             
+     pushl   %ebx                    # save callee saved registers
-     pushl   %edi                   
+     pushl   %esi                   
+     pushl   %edi                   
-     subl    $12620, %esp            # make room for locals
+     subl    $12600, %esp            # make room for locals
-     movl    $3155, %ecx            
+     movl    $3150, %ecx            
-     movl    $5,-608(%ebp)           # local array 'v5': 5 dimensions
+     movl    $5,-588(%ebp)           # local array 'v5': 5 dimensions
-     movl    $9,-604(%ebp)           #   dimension 1: 9 elements
+     movl    $9,-584(%ebp)           #   dimension 1: 9 elements
-     movl    $2,-600(%ebp)           #   dimension 2: 2 elements
+     movl    $2,-580(%ebp)           #   dimension 2: 2 elements
-     movl    $1,-596(%ebp)           #   dimension 3: 1 elements
+     movl    $1,-576(%ebp)           #   dimension 3: 1 elements
-     movl    $5,-592(%ebp)           #   dimension 4: 5 elements
+     movl    $5,-572(%ebp)           #   dimension 4: 5 elements
-     movl    $5,-588(%ebp)           #   dimension 5: 5 elements
+     movl    $5,-568(%ebp)           #   dimension 5: 5 elements
-     movl    $5,-12632(%ebp)         # local array 'v6': 5 dimensions
+     movl    $5,-12612(%ebp)         # local array 'v6': 5 dimensions
-     movl    $3,-12628(%ebp)         #   dimension 1: 3 elements
+     movl    $3,-12608(%ebp)         #   dimension 1: 3 elements
-     movl    $10,-12624(%ebp)        #   dimension 2: 10 elements
+     movl    $10,-12604(%ebp)        #   dimension 2: 10 elements
-     movl    $10,-12620(%ebp)        #   dimension 3: 10 elements
+     movl    $10,-12600(%ebp)        #   dimension 3: 10 elements
-     movl    $10,-12616(%ebp)        #   dimension 4: 10 elements
+     movl    $10,-12596(%ebp)        #   dimension 4: 10 elements
-     movl    $1,-12612(%ebp)         #   dimension 5: 1 elements
+     movl    $1,-12592(%ebp)         #   dimension 5: 1 elements
-     movl    %eax, -116(%ebp)       
+     movl    %eax, -96(%ebp)        
-     movl    -116(%ebp), %eax        #   1:     div    t6 <- t5, 1828
+     movl    -96(%ebp), %eax         #   1:     div    t6 <- t5, 1828
-     movl    %eax, -120(%ebp)       
+     movl    %eax, -100(%ebp)       
-     movl    -120(%ebp), %eax        #   2:     add    t7 <- t6, 43883
+     movl    -100(%ebp), %eax        #   2:     add    t7 <- t6, 43883
-     movl    %eax, -124(%ebp)       
+     movl    %eax, -104(%ebp)       
-     movl    -124(%ebp), %eax        #   3:     sub    t8 <- t7, 51521
+     movl    -104(%ebp), %eax        #   3:     sub    t8 <- t7, 51521
-     movl    %eax, -128(%ebp)       
+     movl    %eax, -108(%ebp)       
-     movl    -128(%ebp), %eax        #   4:     sub    t9 <- t8, 54141
+     movl    -108(%ebp), %eax        #   4:     sub    t9 <- t8, 54141
-     movl    %eax, -132(%ebp)       
+     movl    %eax, -112(%ebp)       
-     movl    $41264, %eax            #   8:     mul    t12 <- 41264, 47319
-     movl    $47319, %ebx           
-     imull   %ebx                   
-     movl    %eax, -24(%ebp)        
-     movl    -24(%ebp), %eax         #   9:     div    t13 <- t12, 1828
-     movl    $1828, %ebx            
-     cdq                            
-     idivl   %ebx                   
-     movl    %eax, -28(%ebp)        
-     movl    -28(%ebp), %eax         #  10:     add    t14 <- t13, 43883
-     movl    $43883, %ebx           
-     addl    %ebx, %eax             
-     movl    %eax, -32(%ebp)        
-     movl    -32(%ebp), %eax         #  11:     sub    t15 <- t14, 51521
-     movl    $51521, %ebx           
-     subl    %ebx, %eax             
-     movl    %eax, -36(%ebp)        
-     movl    -36(%ebp), %eax         #  12:     sub    t16 <- t15, 54141
-     movl    $54141, %ebx           
-     subl    %ebx, %eax             
-     movl    %eax, -40(%ebp)        
-     movl    -132(%ebp), %eax        #  13:     mul    t11 <- t9, t10
+     movl    -112(%ebp), %eax        #   8:     mul    t11 <- t9, t10
-     movl    -20(%ebp), %eax         #  14:     add    t17 <- t11, 80569
+     movl    -20(%ebp), %eax         #   9:     add    t12 <- t11, 80569
+     movl    %eax, -24(%ebp)        
+     movl    $3, %eax                #  10:     param  1 <- 3
+     pushl   %eax                   
+     movl    12(%ebp), %eax          #  11:     param  0 <- v1
+     pushl   %eax                   
+     call    DIM                     #  12:     call   t13 <- DIM
+     addl    $8, %esp               
+     movl    %eax, -28(%ebp)        
+     movl    -24(%ebp), %eax         #  13:     mul    t14 <- t12, t13
+     movl    -28(%ebp), %ebx        
+     imull   %ebx                   
+     movl    %eax, -32(%ebp)        
+     movl    -32(%ebp), %eax         #  14:     add    t15 <- t14, 44308
+     movl    $44308, %ebx           
+     addl    %ebx, %eax             
+     movl    %eax, -36(%ebp)        
+     movl    $4, %eax                #  15:     param  1 <- 4
+     pushl   %eax                   
+     movl    12(%ebp), %eax          #  16:     param  0 <- v1
+     pushl   %eax                   
+     call    DIM                     #  17:     call   t16 <- DIM
+     addl    $8, %esp               
+     movl    %eax, -40(%ebp)        
+     movl    -36(%ebp), %eax         #  18:     mul    t17 <- t15, t16
+     movl    -40(%ebp), %ebx        
+     imull   %ebx                   
+     movl    -44(%ebp), %eax         #  19:     add    t18 <- t17, 51794
+     movl    $51794, %ebx           
+     addl    %ebx, %eax             
+     movl    %eax, -48(%ebp)        
-     movl    $3, %eax                #  15:     param  1 <- 3
+     movl    $5, %eax                #  20:     param  1 <- 5
-     movl    12(%ebp), %eax          #  16:     param  0 <- v1
+     movl    12(%ebp), %eax          #  21:     param  0 <- v1
-     call    DIM                     #  17:     call   t18 <- DIM
+     call    DIM                     #  22:     call   t19 <- DIM
-     movl    %eax, -48(%ebp)        
+     movl    %eax, -52(%ebp)        
-     movl    -44(%ebp), %eax         #  18:     mul    t19 <- t17, t18
+     movl    -48(%ebp), %eax         #  23:     mul    t20 <- t18, t19
-     movl    -48(%ebp), %ebx        
+     movl    -52(%ebp), %ebx        
-     movl    %eax, -52(%ebp)        
-     movl    -52(%ebp), %eax         #  19:     add    t20 <- t19, 44308
-     movl    $44308, %ebx           
-     addl    %ebx, %eax             
-     movl    $4, %eax                #  20:     param  1 <- 4
-     pushl   %eax                   
-     movl    12(%ebp), %eax          #  21:     param  0 <- v1
+     movl    -56(%ebp), %eax         #  24:     add    t21 <- t20, 16517
+     movl    $16517, %ebx           
-     pushl   %eax                   
-     call    DIM                     #  22:     call   t21 <- DIM
-     addl    $8, %esp               
+     addl    %ebx, %eax             
-     movl    -56(%ebp), %eax         #  23:     mul    t22 <- t20, t21
+     movl    -60(%ebp), %eax         #  25:     mul    t22 <- t21, 1
-     movl    -60(%ebp), %ebx        
+     movl    $1, %ebx               
-     movl    -64(%ebp), %eax         #  24:     add    t23 <- t22, 51794
+     movl    12(%ebp), %eax          #  26:     param  0 <- v1
-     movl    $51794, %ebx           
+     pushl   %eax                   
+     call    DOFS                    #  27:     call   t23 <- DOFS
-     addl    %ebx, %eax             
+     addl    $4, %esp               
-     movl    $5, %eax                #  25:     param  1 <- 5
-     pushl   %eax                   
-     movl    12(%ebp), %eax          #  26:     param  0 <- v1
+     movl    -64(%ebp), %eax         #  28:     add    t24 <- t22, t23
+     movl    -68(%ebp), %ebx        
-     pushl   %eax                   
-     call    DIM                     #  27:     call   t24 <- DIM
-     addl    $8, %esp               
+     addl    %ebx, %eax             
-     movl    -68(%ebp), %eax         #  28:     mul    t25 <- t23, t24
+     movl    12(%ebp), %eax          #  29:     add    t25 <- v1, t24
-     imull   %ebx                   
+     addl    %ebx, %eax             
-     movl    -76(%ebp), %eax         #  29:     add    t26 <- t25, 16517
+     movl    $97, %eax               #  30:     assign @t25 <- 97
+     movl    -76(%ebp), %edi        
-     movl    $16517, %ebx           
+     movb    %al, (%edi)            
-     addl    %ebx, %eax             
+     leal    -12612(%ebp), %eax      #  31:     &()    t26 <- v6
-     movl    -80(%ebp), %eax         #  30:     mul    t27 <- t26, 1
-     movl    $1, %ebx               
-     imull   %ebx                   
-     movl    %eax, -84(%ebp)        
-     movl    12(%ebp), %eax          #  31:     param  0 <- v1
-     pushl   %eax                   
-     call    DOFS                    #  32:     call   t28 <- DOFS
-     addl    $4, %esp               
-     movl    %eax, -88(%ebp)        
-     movl    -84(%ebp), %eax         #  33:     add    t29 <- t27, t28
-     movl    -88(%ebp), %ebx        
-     addl    %ebx, %eax             
-     movl    %eax, -92(%ebp)        
-     movl    12(%ebp), %eax          #  34:     add    t30 <- v1, t29
-     movl    -92(%ebp), %ebx        
-     addl    %ebx, %eax             
-     movl    %eax, -96(%ebp)        
-     movl    $97, %eax               #  35:     assign @t30 <- 97
-     movl    -96(%ebp), %edi        
-     movb    %al, (%edi)            
-     leal    -12632(%ebp), %eax      #  36:     &()    t31 <- v6
-     movl    %eax, -100(%ebp)       
-     movl    -100(%ebp), %eax        #  37:     param  3 <- t31
+     movl    -80(%ebp), %eax         #  32:     param  3 <- t26
-     movl    $41542, %eax            #  38:     if     41542 = 33518 goto 6
+     movl    $41542, %eax            #  33:     if     41542 = 33518 goto 6
-     jmp     l_f1_7                  #  39:     goto   7
+     jmp     l_f1_7                  #  34:     goto   7
-     movl    $1, %eax                #  41:     assign t32 <- 1
+     movl    $1, %eax                #  36:     assign t27 <- 1
-     movb    %al, -101(%ebp)        
+     movb    %al, -81(%ebp)         
-     jmp     l_f1_8                  #  42:     goto   8
+     jmp     l_f1_8                  #  37:     goto   8
-     movl    $0, %eax                #  44:     assign t32 <- 0
+     movl    $0, %eax                #  39:     assign t27 <- 0
-     movb    %al, -101(%ebp)        
+     movb    %al, -81(%ebp)         
-     movzbl  -101(%ebp), %eax        #  46:     param  2 <- t32
+     movzbl  -81(%ebp), %eax         #  41:     param  2 <- t27
-     movl    $99, %eax               #  47:     param  1 <- 99
+     movl    $99, %eax               #  42:     param  1 <- 99
-     leal    -608(%ebp), %eax        #  48:     &()    t33 <- v5
+     leal    -588(%ebp), %eax        #  43:     &()    t28 <- v5
-     movl    %eax, -108(%ebp)       
+     movl    %eax, -88(%ebp)        
-     movl    -108(%ebp), %eax        #  49:     param  0 <- t33
+     movl    -88(%ebp), %eax         #  44:     param  0 <- t28
-     call    f0                      #  50:     call   t34 <- f0
+     call    f0                      #  45:     call   t29 <- f0
-     addl    $10, %esp              
+     addl    $16, %esp              
-     movb    %al, -109(%ebp)        
+     movb    %al, -89(%ebp)         
-     movzbl  -109(%ebp), %eax        #  51:     if     t34 = 1 goto 5
+     movzbl  -89(%ebp), %eax         #  46:     if     t29 = 1 goto 5
-     jmp     l_f1_3                  #  52:     goto   3
+     jmp     l_f1_3                  #  47:     goto   3
-     movl    $1, %eax                #  54:     assign t35 <- 1
+     movl    $1, %eax                #  49:     assign t30 <- 1
-     movb    %al, -110(%ebp)        
+     movb    %al, -90(%ebp)         
-     jmp     l_f1_4                  #  55:     goto   4
+     jmp     l_f1_4                  #  50:     goto   4
-     movl    $0, %eax                #  57:     assign t35 <- 0
+     movl    $0, %eax                #  52:     assign t30 <- 0
-     movb    %al, -110(%ebp)        
+     movb    %al, -90(%ebp)         
-     movzbl  -110(%ebp), %eax        #  59:     assign v4 <- t35
+     movzbl  -90(%ebp), %eax         #  54:     assign v4 <- t30
-     movb    %al, -133(%ebp)        
+     movb    %al, -113(%ebp)        
-     call    dummyBOOLfunc           #  60:     call   t36 <- dummyBOOLfunc
+     call    dummyBOOLfunc           #  55:     call   t31 <- dummyBOOLfunc
-     movb    %al, -111(%ebp)        
+     movb    %al, -91(%ebp)         
-     addl    $12620, %esp            # remove locals
+     addl    $12600, %esp            # remove locals
