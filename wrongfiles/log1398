+     jmp     l_f0_0                  #   1:     goto   0
+     jmp     l_f0_0                  #   2:     goto   0
-     jmp     l_f0_5                  #   1:     goto   5
+     jmp     l_f0_5                  #   3:     goto   5
-     jmp     l_f0_1_while_cond       #   3:     goto   1_while_cond
+     jmp     l_f0_1_while_cond       #   5:     goto   1_while_cond
+ l_f0_0:
-     call    ReadInt                 #   4:     call   t5 <- ReadInt
+     call    ReadInt                 #   7:     call   t5 <- ReadInt
-     movl    $68289, %eax            #   5:     if     68289 # t5 goto 9_if_true
+     movl    $68289, %eax            #   8:     if     68289 # t5 goto 9_if_true
-     jmp     l_f0_10_if_false        #   6:     goto   10_if_false
+     jmp     l_f0_10_if_false        #   9:     goto   10_if_false
-     movl    $2, %eax                #   8:     param  1 <- 2
+     movl    $2, %eax                #  11:     param  1 <- 2
-     movl    20(%ebp), %eax          #   9:     param  0 <- v4
+     movl    20(%ebp), %eax          #  12:     param  0 <- v4
-     call    DIM                     #  10:     call   t6 <- DIM
+     call    DIM                     #  13:     call   t6 <- DIM
-     movl    $85233, %eax            #  11:     mul    t7 <- 85233, t6
+     movl    $85233, %eax            #  14:     mul    t7 <- 85233, t6
-     movl    -76(%ebp), %eax         #  12:     add    t8 <- t7, 91361
+     movl    -76(%ebp), %eax         #  15:     add    t8 <- t7, 91361
-     movl    $3, %eax                #  13:     param  1 <- 3
+     movl    $3, %eax                #  16:     param  1 <- 3
-     movl    20(%ebp), %eax          #  14:     param  0 <- v4
+     movl    20(%ebp), %eax          #  17:     param  0 <- v4
-     call    DIM                     #  15:     call   t9 <- DIM
+     call    DIM                     #  18:     call   t9 <- DIM
-     movl    -80(%ebp), %eax         #  16:     mul    t10 <- t8, t9
+     movl    -80(%ebp), %eax         #  19:     mul    t10 <- t8, t9
-     movl    -16(%ebp), %eax         #  17:     add    t11 <- t10, 43608
+     movl    -16(%ebp), %eax         #  20:     add    t11 <- t10, 43608
-     movl    $4, %eax                #  18:     param  1 <- 4
+     movl    $4, %eax                #  21:     param  1 <- 4
-     movl    20(%ebp), %eax          #  19:     param  0 <- v4
+     movl    20(%ebp), %eax          #  22:     param  0 <- v4
-     call    DIM                     #  20:     call   t12 <- DIM
+     call    DIM                     #  23:     call   t12 <- DIM
-     movl    -20(%ebp), %eax         #  21:     mul    t13 <- t11, t12
+     movl    -20(%ebp), %eax         #  24:     mul    t13 <- t11, t12
-     movl    -28(%ebp), %eax         #  22:     add    t14 <- t13, 62942
+     movl    -28(%ebp), %eax         #  25:     add    t14 <- t13, 62942
-     movl    $5, %eax                #  23:     param  1 <- 5
+     movl    $5, %eax                #  26:     param  1 <- 5
-     movl    20(%ebp), %eax          #  24:     param  0 <- v4
+     movl    20(%ebp), %eax          #  27:     param  0 <- v4
-     call    DIM                     #  25:     call   t15 <- DIM
+     call    DIM                     #  28:     call   t15 <- DIM
-     movl    -32(%ebp), %eax         #  26:     mul    t16 <- t14, t15
+     movl    -32(%ebp), %eax         #  29:     mul    t16 <- t14, t15
-     movl    -40(%ebp), %eax         #  27:     add    t17 <- t16, 7982
+     movl    -40(%ebp), %eax         #  30:     add    t17 <- t16, 7982
-     movl    -44(%ebp), %eax         #  28:     mul    t18 <- t17, 1
+     movl    -44(%ebp), %eax         #  31:     mul    t18 <- t17, 1
-     movl    20(%ebp), %eax          #  29:     param  0 <- v4
+     movl    20(%ebp), %eax          #  32:     param  0 <- v4
-     call    DOFS                    #  30:     call   t19 <- DOFS
+     call    DOFS                    #  33:     call   t19 <- DOFS
-     movl    -48(%ebp), %eax         #  31:     add    t20 <- t18, t19
+     movl    -48(%ebp), %eax         #  34:     add    t20 <- t18, t19
-     movl    20(%ebp), %eax          #  32:     add    t21 <- v4, t20
+     movl    20(%ebp), %eax          #  35:     add    t21 <- v4, t20
-     movl    $100, %eax              #  33:     assign @t21 <- 100
+     movl    $100, %eax              #  36:     assign @t21 <- 100
-     call    dummyBOOLfunc           #  34:     call   t22 <- dummyBOOLfunc
+     call    dummyBOOLfunc           #  37:     call   t22 <- dummyBOOLfunc
-     jmp     l_f0_15_while_cond      #  36:     goto   15_while_cond
+     jmp     l_f0_15_while_cond      #  39:     goto   15_while_cond
-     jmp     l_f0_8                  #  37:     goto   8
+     jmp     l_f0_8                  #  40:     goto   8
-     call    dummyBOOLfunc           #  40:     call   t23 <- dummyBOOLfunc
+     call    dummyBOOLfunc           #  43:     call   t23 <- dummyBOOLfunc
-     #-24748564(%ebp)24748440  [ $v5       <array 18 of <array 14 of <array 12 of <array 88 of <array 93 of <bool>>>>>> %ebp-24748564 ]
+     #   -24748564(%ebp)  24748440  [ $v5       <array 18 of <array 14 of <array 12 of <array 88 of <array 93 of <bool>>>>>> %ebp-24748564 ]
-     #1900008708(%ebp)-1924757272  [ $v6       <array 75 of <array 25 of <array 94 of <array 82 of <array 41 of <int>>>>>> %ebp+1900008708 ]
+     #   1900008708(%ebp)  -1924757272  [ $v6       <array 75 of <array 25 of <array 94 of <array 82 of <array 41 of <int>>>>>> %ebp+1900008708 ]
-     #1881686604(%ebp)18322104  [ $v7       <array 80 of <array 41 of <array 21 of <array 38 of <array 7 of <char>>>>>> %ebp+1881686604 ]
+     #   1881686604(%ebp)  18322104  [ $v7       <array 80 of <array 41 of <array 21 of <array 38 of <array 7 of <char>>>>>> %ebp+1881686604 ]
-     #1881686603(%ebp)   1  [ $v8       <bool> %ebp+1881686603 ]
+     #   1881686603(%ebp)   1  [ $v8       <bool> %ebp+1881686603 ]
-     pushl   %ebp                   
-     movl    %esp, %ebp             
-     pushl   %ebx                    # save callee saved registers
-     pushl   %esi                   
+     pushl   %ebp                   
+     movl    %esp, %ebp             
+     pushl   %ebx                    # save callee saved registers
-     pushl   %edi                   
+     pushl   %esi                   
+     pushl   %edi                   
-     subl    $-1881686608, %esp      # make room for locals
+     subl    $-1881686612, %esp      # make room for locals
+     cld                             # memset local stack area to 0
+     xorl    %eax, %eax             
+     movl    $-470421653, %ecx      
+     mov     %esp, %edi             
+     rep     stosl                  
+     jmp     l_f2_3                  #   9:     goto   3
-     movl    $1, %eax                #   9:     assign t10 <- 1
+     movl    $1, %eax                #  10:     assign t10 <- 1
-     jmp     l_f2_4                  #  10:     goto   4
+     jmp     l_f2_4                  #  11:     goto   4
+ l_f2_3:
-     movl    $0, %eax                #  11:     assign t10 <- 0
+     movl    $0, %eax                #  13:     assign t10 <- 0
-     leal    -24748564(%ebp), %eax   #  13:     &()    t11 <- v5
+     leal    -24748564(%ebp), %eax   #  15:     &()    t11 <- v5
-     movl    $2, %eax                #  14:     param  1 <- 2
+     movl    $2, %eax                #  16:     param  1 <- 2
-     leal    -24748564(%ebp), %eax   #  15:     &()    t12 <- v5
+     leal    -24748564(%ebp), %eax   #  17:     &()    t12 <- v5
-     movl    -24(%ebp), %eax         #  16:     param  0 <- t12
+     movl    -24(%ebp), %eax         #  18:     param  0 <- t12
-     call    DIM                     #  17:     call   t13 <- DIM
+     call    DIM                     #  19:     call   t13 <- DIM
-     movl    $88714, %eax            #  18:     mul    t14 <- 88714, t13
+     movl    $88714, %eax            #  20:     mul    t14 <- 88714, t13
-     movl    -32(%ebp), %eax         #  19:     add    t15 <- t14, 63477
+     movl    -32(%ebp), %eax         #  21:     add    t15 <- t14, 63477
-     movl    $3, %eax                #  20:     param  1 <- 3
+     movl    $3, %eax                #  22:     param  1 <- 3
-     leal    -24748564(%ebp), %eax   #  21:     &()    t16 <- v5
+     leal    -24748564(%ebp), %eax   #  23:     &()    t16 <- v5
-     movl    -40(%ebp), %eax         #  22:     param  0 <- t16
+     movl    -40(%ebp), %eax         #  24:     param  0 <- t16
-     call    DIM                     #  23:     call   t17 <- DIM
+     call    DIM                     #  25:     call   t17 <- DIM
-     movl    -36(%ebp), %eax         #  24:     mul    t18 <- t15, t17
+     movl    -36(%ebp), %eax         #  26:     mul    t18 <- t15, t17
-     movl    -48(%ebp), %eax         #  25:     add    t19 <- t18, 34564
+     movl    -48(%ebp), %eax         #  27:     add    t19 <- t18, 34564
-     movl    $4, %eax                #  26:     param  1 <- 4
+     movl    $4, %eax                #  28:     param  1 <- 4
-     leal    -24748564(%ebp), %eax   #  27:     &()    t20 <- v5
+     leal    -24748564(%ebp), %eax   #  29:     &()    t20 <- v5
-     movl    -56(%ebp), %eax         #  28:     param  0 <- t20
+     movl    -56(%ebp), %eax         #  30:     param  0 <- t20
-     call    DIM                     #  29:     call   t21 <- DIM
+     call    DIM                     #  31:     call   t21 <- DIM
-     movl    -52(%ebp), %eax         #  30:     mul    t22 <- t19, t21
+     movl    -52(%ebp), %eax         #  32:     mul    t22 <- t19, t21
-     movl    -64(%ebp), %eax         #  31:     add    t23 <- t22, 5475
+     movl    -64(%ebp), %eax         #  33:     add    t23 <- t22, 5475
-     movl    $5, %eax                #  32:     param  1 <- 5
+     movl    $5, %eax                #  34:     param  1 <- 5
-     leal    -24748564(%ebp), %eax   #  33:     &()    t24 <- v5
+     leal    -24748564(%ebp), %eax   #  35:     &()    t24 <- v5
-     movl    -72(%ebp), %eax         #  34:     param  0 <- t24
+     movl    -72(%ebp), %eax         #  36:     param  0 <- t24
-     call    DIM                     #  35:     call   t25 <- DIM
+     call    DIM                     #  37:     call   t25 <- DIM
-     movl    -68(%ebp), %eax         #  36:     mul    t26 <- t23, t25
+     movl    -68(%ebp), %eax         #  38:     mul    t26 <- t23, t25
-     movl    -80(%ebp), %eax         #  37:     add    t27 <- t26, 87087
+     movl    -80(%ebp), %eax         #  39:     add    t27 <- t26, 87087
-     movl    -84(%ebp), %eax         #  38:     mul    t28 <- t27, 1
+     movl    -84(%ebp), %eax         #  40:     mul    t28 <- t27, 1
-     leal    -24748564(%ebp), %eax   #  39:     &()    t29 <- v5
+     leal    -24748564(%ebp), %eax   #  41:     &()    t29 <- v5
-     movl    -92(%ebp), %eax         #  40:     param  0 <- t29
+     movl    -92(%ebp), %eax         #  42:     param  0 <- t29
-     call    DOFS                    #  41:     call   t30 <- DOFS
+     call    DOFS                    #  43:     call   t30 <- DOFS
-     movl    -88(%ebp), %eax         #  42:     add    t31 <- t28, t30
+     movl    -88(%ebp), %eax         #  44:     add    t31 <- t28, t30
-     movl    -20(%ebp), %eax         #  43:     add    t32 <- t11, t31
+     movl    -20(%ebp), %eax         #  45:     add    t32 <- t11, t31
-     movzbl  -13(%ebp), %eax         #  44:     assign @t32 <- t10
+     movzbl  -13(%ebp), %eax         #  46:     assign @t32 <- t10
-     movl    $1, %eax                #  46:     return 1
+     movl    $1, %eax                #  48:     return 1
-     jmp     l_f2_14_while_cond      #  48:     goto   14_while_cond
+     jmp     l_f2_14_while_cond      #  50:     goto   14_while_cond
-     jmp     l_f2_10_while_cond      #  49:     goto   10_while_cond
+     jmp     l_f2_10_while_cond      #  51:     goto   10_while_cond
-     addl    $-1881686608, %esp      # remove locals
+     addl    $-1881686612, %esp      # remove locals
+     jmp     l_test_0                #   1:     goto   0
+     jmp     l_test_0                #   2:     goto   0
-     jmp     l_test_1_while_cond     #   1:     goto   1_while_cond
+     jmp     l_test_1_while_cond     #   3:     goto   1_while_cond
+ l_test_0:
-     call    dummyBOOLfunc           #   2:     call   t0 <- dummyBOOLfunc
+     call    dummyBOOLfunc           #   5:     call   t0 <- dummyBOOLfunc
-     movl    $57287, %eax            #   3:     div    t1 <- 57287, 86793
+     movl    $57287, %eax            #   6:     div    t1 <- 57287, 86793
-     movl    -20(%ebp), %eax         #   4:     assign v0 <- t1
+     movl    -20(%ebp), %eax         #   7:     assign v0 <- t1
-     jmp     l_test_7_if_true        #   5:     goto   7_if_true
-     jmp     l_test_7_if_true        #   6:     goto   7_if_true
-     jmp     l_test_7_if_true        #   7:     goto   7_if_true
+     jmp     l_test_7_if_true        #   9:     goto   7_if_true
+     jmp     l_test_7_if_true        #  10:     goto   7_if_true
+     jmp     l_test_7_if_true        #  11:     goto   7_if_true
-     call    dummyBOOLfunc           #  10:     call   t2 <- dummyBOOLfunc
+     call    dummyBOOLfunc           #  13:     call   t2 <- dummyBOOLfunc
-     jmp     l_test_6                #  11:     goto   6
+     jmp     l_test_6                #  14:     goto   6
-     movl    $91305, %eax            #  14:     if     91305 < 348 goto 18_while_body
+     movl    $91305, %eax            #  17:     if     91305 < 348 goto 18_while_body
-     jmp     l_test_16               #  15:     goto   16
+     jmp     l_test_16               #  18:     goto   16
-     movl    $80634, %eax            #  17:     if     80634 >= 16425 goto 21_if_true
+     movl    $80634, %eax            #  20:     if     80634 >= 16425 goto 21_if_true
-     jmp     l_test_22_if_false      #  18:     goto   22_if_false
+     jmp     l_test_22_if_false      #  21:     goto   22_if_false
-     jmp     l_test_20               #  20:     goto   20
+     jmp     l_test_20               #  23:     goto   20
-     jmp     l_test_17_while_cond    #  24:     goto   17_while_cond
+     jmp     l_test_17_while_cond    #  27:     goto   17_while_cond
-     call    dummyCHARfunc           #  27:     call   t3 <- dummyCHARfunc
+     call    dummyCHARfunc           #  30:     call   t3 <- dummyCHARfunc
-     movl    $97, %eax               #  28:     if     97 < t3 goto 27_while_body
+     movl    $97, %eax               #  31:     if     97 < t3 goto 27_while_body
-     jmp     l_test_25               #  29:     goto   25
+     jmp     l_test_25               #  32:     goto   25
-     movl    $98, %eax               #  31:     if     98 <= 99 goto 30
+     movl    $98, %eax               #  34:     if     98 <= 99 goto 30
-     jmp     l_test_31               #  32:     goto   31
+     jmp     l_test_31               #  35:     goto   31
-     movl    $1, %eax                #  34:     assign t4 <- 1
+     movl    $1, %eax                #  37:     assign t4 <- 1
-     jmp     l_test_32               #  35:     goto   32
+     jmp     l_test_32               #  38:     goto   32
-     movl    $0, %eax                #  37:     assign t4 <- 0
+     movl    $0, %eax                #  40:     assign t4 <- 0
-     movzbl  -23(%ebp), %eax         #  39:     assign v1 <- t4
+     movzbl  -23(%ebp), %eax         #  42:     assign v1 <- t4
-     jmp     l_test_26_while_cond    #  40:     goto   26_while_cond
+     jmp     l_test_26_while_cond    #  43:     goto   26_while_cond
