+     jmp     l_f0_3                  #   1:     goto   3
+     jmp     l_f0_3                  #   2:     goto   3
+ l_f0_3:
+     jmp     l_f0_0                  #   4:     goto   0
-     jmp     l_f0_1_while_cond       #   1:     goto   1_while_cond
+     jmp     l_f0_1_while_cond       #   5:     goto   1_while_cond
+ l_f0_0:
-     call    dummyBOOLfunc           #   2:     call   t4 <- dummyBOOLfunc
+     call    dummyBOOLfunc           #   7:     call   t4 <- dummyBOOLfunc
+     jmp     l_f0_8                  #   9:     goto   8
+     jmp     l_f0_8                  #  10:     goto   8
+     jmp     l_f0_8                  #  11:     goto   8
+     jmp     l_f0_8                  #  12:     goto   8
-     jmp     l_f0_9_while_cond       #   4:     goto   9_while_cond
+     jmp     l_f0_9_while_cond       #  13:     goto   9_while_cond
+ l_f0_8:
-     #    -64(%ebp)   4  [ $t22      <int> %ebp-64 ]
-     #    -65(%ebp)   1  [ $t23      <bool> %ebp-65 ]
+     #    -61(%ebp)   1  [ $t22      <bool> %ebp-61 ]
+     #    -68(%ebp)   4  [ $t23      <int> %ebp-68 ]
-     #    -72(%ebp)   4  [ $t24      <int> %ebp-72 ]
+     #    -72(%ebp)   4  [ $t4       <int> %ebp-72 ]
-     #    -76(%ebp)   4  [ $t4       <int> %ebp-76 ]
+     #    -76(%ebp)   4  [ $t5       <int> %ebp-76 ]
-     #    -80(%ebp)   4  [ $t5       <int> %ebp-80 ]
+     #    -80(%ebp)   4  [ $t6       <int> %ebp-80 ]
-     #    -84(%ebp)   4  [ $t6       <int> %ebp-84 ]
+     #    -84(%ebp)   4  [ $t7       <int> %ebp-84 ]
-     #    -88(%ebp)   4  [ $t7       <int> %ebp-88 ]
+     #    -88(%ebp)   4  [ $t8       <int> %ebp-88 ]
-     #    -92(%ebp)   4  [ $t8       <int> %ebp-92 ]
+     #    -92(%ebp)   4  [ $t9       <int> %ebp-92 ]
-     #    -96(%ebp)   4  [ $t9       <int> %ebp-96 ]
-     #    -97(%ebp)   1  [ $v5       <char> %ebp-97 ]
+     #    -93(%ebp)   1  [ $v5       <char> %ebp-93 ]
-     #   -104(%ebp)   4  [ $v6       <int> %ebp-104 ]
+     #   -100(%ebp)   4  [ $v6       <int> %ebp-100 ]
-     pushl   %ebp                   
-     movl    %esp, %ebp             
-     pushl   %ebx                    # save callee saved registers
-     pushl   %esi                   
+     pushl   %ebp                   
+     movl    %esp, %ebp             
+     pushl   %ebx                    # save callee saved registers
-     pushl   %edi                   
+     pushl   %esi                   
+     pushl   %edi                   
-     subl    $92, %esp               # make room for locals
+     subl    $88, %esp               # make room for locals
-     movl    $23, %ecx              
+     movl    $22, %ecx              
+     movl    %eax, -72(%ebp)        
+     movl    $12621, %eax            #   3:     mul    t5 <- 12621, t4
+     movl    -72(%ebp), %ebx        
+     imull   %ebx                   
-     movl    $12621, %eax            #   3:     mul    t5 <- 12621, t4
-     movl    -76(%ebp), %ebx        
-     imull   %ebx                   
-     movl    %eax, -80(%ebp)        
+     movl    %eax, -80(%ebp)        
+     movl    -76(%ebp), %eax         #   5:     add    t7 <- t5, t6
+     movl    -80(%ebp), %ebx        
+     addl    %ebx, %eax             
-     movl    -80(%ebp), %eax         #   5:     add    t7 <- t5, t6
-     movl    -84(%ebp), %ebx        
-     addl    %ebx, %eax             
-     movl    %eax, -88(%ebp)        
+     movl    %eax, -88(%ebp)        
+     movl    -84(%ebp), %eax         #   9:     mul    t9 <- t7, t8
+     movl    -88(%ebp), %ebx        
+     imull   %ebx                   
-     movl    $7305, %eax             #   9:     sub    t10 <- 7305, 57305
+     movl    -92(%ebp), %eax         #  10:     add    t10 <- t9, 65018
-     movl    $57305, %ebx           
+     movl    $65018, %ebx           
-     subl    %ebx, %eax             
+     addl    %ebx, %eax             
+     movl    $4, %eax                #  11:     param  1 <- 4
+     pushl   %eax                   
+     movl    16(%ebp), %eax          #  12:     param  0 <- v3
+     pushl   %eax                   
+     call    DIM                     #  13:     call   t11 <- DIM
+     addl    $8, %esp               
+     movl    %eax, -20(%ebp)        
-     movl    -88(%ebp), %eax         #  10:     mul    t9 <- t7, t8
+     movl    -16(%ebp), %eax         #  14:     mul    t12 <- t10, t11
-     movl    -92(%ebp), %ebx        
+     movl    -20(%ebp), %ebx        
-     movl    %eax, -96(%ebp)        
-     movl    -96(%ebp), %eax         #  11:     add    t11 <- t9, 65018
-     movl    $65018, %ebx           
-     addl    %ebx, %eax             
-     movl    %eax, -20(%ebp)        
+     movl    %eax, -24(%ebp)        
+     movl    -24(%ebp), %eax         #  15:     add    t13 <- t12, 89233
+     movl    $89233, %ebx           
+     addl    %ebx, %eax             
+     movl    %eax, -28(%ebp)        
-     movl    $4, %eax                #  12:     param  1 <- 4
+     movl    $5, %eax                #  16:     param  1 <- 5
-     movl    16(%ebp), %eax          #  13:     param  0 <- v3
+     movl    16(%ebp), %eax          #  17:     param  0 <- v3
-     call    DIM                     #  14:     call   t12 <- DIM
+     call    DIM                     #  18:     call   t14 <- DIM
-     movl    %eax, -24(%ebp)        
+     movl    %eax, -32(%ebp)        
-     movl    -20(%ebp), %eax         #  15:     mul    t13 <- t11, t12
+     movl    -28(%ebp), %eax         #  19:     mul    t15 <- t13, t14
-     movl    -24(%ebp), %ebx        
+     movl    -32(%ebp), %ebx        
-     movl    %eax, -28(%ebp)        
-     movl    -28(%ebp), %eax         #  16:     add    t14 <- t13, 89233
-     movl    $89233, %ebx           
-     addl    %ebx, %eax             
-     movl    %eax, -32(%ebp)        
-     movl    $5, %eax                #  17:     param  1 <- 5
-     pushl   %eax                   
-     movl    16(%ebp), %eax          #  18:     param  0 <- v3
-     pushl   %eax                   
-     call    DIM                     #  19:     call   t15 <- DIM
-     addl    $8, %esp               
+     call    ReadInt                 #  20:     call   t16 <- ReadInt
-     movl    -32(%ebp), %eax         #  20:     mul    t16 <- t14, t15
-     movl    -36(%ebp), %ebx        
-     imull   %ebx                   
-     call    ReadInt                 #  21:     call   t17 <- ReadInt
+     movl    -36(%ebp), %eax         #  21:     add    t17 <- t15, t16
+     movl    -40(%ebp), %ebx        
+     addl    %ebx, %eax             
-     movl    -40(%ebp), %eax         #  22:     add    t18 <- t16, t17
-     movl    -44(%ebp), %ebx        
-     addl    %ebx, %eax             
-     movl    %eax, -48(%ebp)        
-     movl    -48(%ebp), %eax         #  23:     mul    t19 <- t18, 1
+     movl    -44(%ebp), %eax         #  22:     mul    t18 <- t17, 1
+     movl    %eax, -48(%ebp)        
+     movl    16(%ebp), %eax          #  23:     param  0 <- v3
+     pushl   %eax                   
+     call    DOFS                    #  24:     call   t19 <- DOFS
+     addl    $4, %esp               
-     movl    16(%ebp), %eax          #  24:     param  0 <- v3
+     movl    -48(%ebp), %eax         #  25:     add    t20 <- t18, t19
+     movl    -52(%ebp), %ebx        
-     pushl   %eax                   
-     call    DOFS                    #  25:     call   t20 <- DOFS
-     addl    $4, %esp               
+     addl    %ebx, %eax             
-     movl    -52(%ebp), %eax         #  26:     add    t21 <- t19, t20
+     movl    16(%ebp), %eax          #  26:     add    t21 <- v3, t20
-     movl    16(%ebp), %eax          #  27:     add    t22 <- v3, t21
-     movl    -60(%ebp), %ebx        
-     addl    %ebx, %eax             
-     movl    %eax, -64(%ebp)        
-     movl    $0, %eax                #  28:     assign @t22 <- 0
+     movl    $0, %eax                #  27:     assign @t21 <- 0
-     movl    -64(%ebp), %edi        
+     movl    -60(%ebp), %edi        
-     movl    $95615, %eax            #  30:     if     95615 > 56547 goto 3_while_body
+     movl    $95615, %eax            #  29:     if     95615 > 56547 goto 3_while_body
-     jmp     l_f1_1                  #  31:     goto   1
+     jmp     l_f1_1                  #  30:     goto   1
-     movl    $99, %eax               #  34:     if     99 > 100 goto 7_while_body
+     movl    $99, %eax               #  33:     if     99 > 100 goto 7_while_body
-     jmp     l_f1_5                  #  35:     goto   5
+     jmp     l_f1_5                  #  34:     goto   5
-     jmp     l_f1_6_while_cond       #  37:     goto   6_while_cond
+     jmp     l_f1_6_while_cond       #  36:     goto   6_while_cond
-     call    dummyBOOLfunc           #  39:     call   t23 <- dummyBOOLfunc
+     call    dummyBOOLfunc           #  38:     call   t22 <- dummyBOOLfunc
-     movb    %al, -65(%ebp)         
+     movb    %al, -61(%ebp)         
-     movl    $58002, %eax            #  41:     if     58002 >= 8259 goto 12_while_body
+     movl    $58002, %eax            #  40:     if     58002 >= 8259 goto 12_while_body
-     jmp     l_f1_10                 #  42:     goto   10
+     jmp     l_f1_10                 #  41:     goto   10
-     jmp     l_f1_11_while_cond      #  44:     goto   11_while_cond
+     jmp     l_f1_11_while_cond      #  43:     goto   11_while_cond
-     movl    $99, %eax               #  46:     assign v5 <- 99
+     movl    $99, %eax               #  45:     assign v5 <- 99
-     movb    %al, -97(%ebp)         
+     movb    %al, -93(%ebp)         
-     movl    $87763, %eax            #  47:     assign v6 <- 87763
+     movl    $87763, %eax            #  46:     assign v6 <- 87763
-     movl    %eax, -104(%ebp)       
+     movl    %eax, -100(%ebp)       
-     jmp     l_f1_16                 #  48:     goto   16
+     jmp     l_f1_16                 #  47:     goto   16
-     call    ReadInt                 #  50:     call   t24 <- ReadInt
+     call    ReadInt                 #  49:     call   t23 <- ReadInt
-     movl    %eax, -72(%ebp)        
+     movl    %eax, -68(%ebp)        
-     jmp     l_f1_2_while_cond       #  51:     goto   2_while_cond
+     jmp     l_f1_2_while_cond       #  50:     goto   2_while_cond
-     movl    $98, %eax               #  53:     assign v5 <- 98
+     movl    $98, %eax               #  52:     assign v5 <- 98
-     movb    %al, -97(%ebp)         
+     movb    %al, -93(%ebp)         
-     addl    $92, %esp               # remove locals
+     addl    $88, %esp               # remove locals
