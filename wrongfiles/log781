+     jmp     l_f1_2                  #   7:     goto   2
+     jmp     l_f1_2                  #   8:     goto   2
+     jmp     l_f1_2                  #   9:     goto   2
+     jmp     l_f1_2                  #  10:     goto   2
+     jmp     l_f1_2                  #  11:     goto   2
-     movl    $1, %eax                #   7:     if     1 = 0 goto 12_if_true
+     movl    $1, %eax                #  12:     if     1 = 0 goto 12_if_true
-     jmp     l_f1_13_if_false        #   8:     goto   13_if_false
+     jmp     l_f1_13_if_false        #  13:     goto   13_if_false
-     jmp     l_f1_11                 #  10:     goto   11
+     jmp     l_f1_11                 #  15:     goto   11
-     movl    $84692, %eax            #  13:     if     84692 <= 50460 goto 16
+     movl    $84692, %eax            #  18:     if     84692 <= 50460 goto 16
-     jmp     l_f1_17                 #  14:     goto   17
+     jmp     l_f1_17                 #  19:     goto   17
-     movl    $1, %eax                #  16:     assign t8 <- 1
+     movl    $1, %eax                #  21:     assign t8 <- 1
-     jmp     l_f1_18                 #  17:     goto   18
+     jmp     l_f1_18                 #  22:     goto   18
-     movl    $0, %eax                #  19:     assign t8 <- 0
+     movl    $0, %eax                #  24:     assign t8 <- 0
-     movzbl  -29(%ebp), %eax         #  21:     assign v2 <- t8
+     movzbl  -29(%ebp), %eax         #  26:     assign v2 <- t8
-     jmp     l_f1_3_while_cond       #  22:     goto   3_while_cond
+     jmp     l_f1_3_while_cond       #  27:     goto   3_while_cond
+ l_f1_2:
+     jmp     l_test_0                #   2:     goto   0
-     movl    $100, %eax              #   3:     param  0 <- 100
+     movl    $100, %eax              #   4:     param  0 <- 100
-     call    WriteChar               #   4:     call   WriteChar
+     call    WriteChar               #   5:     call   WriteChar
-     addl    $1, %esp               
+     addl    $4, %esp               
-     jmp     l_test_7_while_cond     #   6:     goto   7_while_cond
+     jmp     l_test_7_while_cond     #   7:     goto   7_while_cond
-     movl    $32986, %eax            #   8:     if     32986 = 60128 goto 11_if_true
+     movl    $32986, %eax            #   9:     if     32986 = 60128 goto 11_if_true
-     jmp     l_test_12_if_false      #   9:     goto   12_if_false
+     jmp     l_test_12_if_false      #  10:     goto   12_if_false
-     jmp     l_test_10               #  11:     goto   10
+     jmp     l_test_10               #  12:     goto   10
-     movl    $97, %eax               #  14:     if     97 # 100 goto 15
+     movl    $97, %eax               #  15:     if     97 # 100 goto 15
-     jmp     l_test_16               #  15:     goto   16
+     jmp     l_test_16               #  16:     goto   16
-     movl    $1, %eax                #  17:     assign t0 <- 1
+     movl    $1, %eax                #  18:     assign t0 <- 1
-     jmp     l_test_17               #  18:     goto   17
+     jmp     l_test_17               #  19:     goto   17
-     movl    $0, %eax                #  20:     assign t0 <- 0
+     movl    $0, %eax                #  21:     assign t0 <- 0
-     movzbl  -13(%ebp), %eax         #  22:     assign v0 <- t0
+     movzbl  -13(%ebp), %eax         #  23:     assign v0 <- t0
-     call    dummyBOOLfunc           #  23:     call   t1 <- dummyBOOLfunc
+     call    dummyBOOLfunc           #  24:     call   t1 <- dummyBOOLfunc
-     movl    $0, %eax                #  25:     assign v0 <- 0
+     movl    $0, %eax                #  26:     assign v0 <- 0
-     jmp     l_test_1_while_cond     #  26:     goto   1_while_cond
+     jmp     l_test_1_while_cond     #  27:     goto   1_while_cond
+ l_test_0:
-     jmp     l_test_26_while_cond    #  28:     goto   26_while_cond
+     jmp     l_test_26_while_cond    #  30:     goto   26_while_cond
-     movl    $100, %eax              #  30:     assign v1 <- 100
+     movl    $100, %eax              #  32:     assign v1 <- 100
-     jmp     l_test_22               #  31:     goto   22
+     jmp     l_test_22               #  33:     goto   22
-     movl    $49767, %eax            #  33:     div    t2 <- 49767, 50767
+     movl    $49767, %eax            #  35:     div    t2 <- 49767, 50767
-     movl    -20(%ebp), %eax         #  34:     sub    t3 <- t2, 3204
+     movl    -20(%ebp), %eax         #  36:     sub    t3 <- t2, 3204
-     movl    -24(%ebp), %eax         #  35:     assign v2 <- t3
+     movl    -24(%ebp), %eax         #  37:     assign v2 <- t3
-     movl    $99, %eax               #  36:     assign v1 <- 99
+     movl    $99, %eax               #  38:     assign v1 <- 99
