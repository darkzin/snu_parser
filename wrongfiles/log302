+     jmp     l_f1_8                  #  16:     goto   8
-     movl    $1, %eax                #  16:     assign t5 <- 1
+     movl    $1, %eax                #  17:     assign t5 <- 1
-     jmp     l_f1_9                  #  17:     goto   9
+     jmp     l_f1_9                  #  18:     goto   9
-     movl    $0, %eax                #  19:     assign t5 <- 0
+     movl    $0, %eax                #  20:     assign t5 <- 0
-     movzbl  -25(%ebp), %eax         #  21:     return t5
+     movzbl  -25(%ebp), %eax         #  22:     return t5
+     jmp     l_f2_0                  #   1:     goto   0
+     jmp     l_f2_0                  #   2:     goto   0
+     jmp     l_f2_0                  #   3:     goto   0
-     jmp     l_f2_1_while_cond       #   1:     goto   1_while_cond
+     jmp     l_f2_1_while_cond       #   4:     goto   1_while_cond
+ l_f2_0:
-     movl    $1, %eax                #   2:     assign v3 <- 1
+     movl    $1, %eax                #   6:     assign v3 <- 1
-     movl    $35499, %eax            #   3:     mul    t1 <- 35499, 88373
+     movl    $35499, %eax            #   7:     mul    t1 <- 35499, 88373
-     movl    -16(%ebp), %eax         #   4:     sub    t2 <- t1, 46275
+     movl    -16(%ebp), %eax         #   8:     sub    t2 <- t1, 46275
-     movl    -20(%ebp), %eax         #   5:     param  0 <- t2
+     movl    -20(%ebp), %eax         #   9:     param  0 <- t2
-     call    f0                      #   6:     call   t3 <- f0
+     call    f0                      #  10:     call   t3 <- f0
