+     jmp     l_f0_4                  #   5:     goto   4
-     jmp     l_f0_5_while_cond       #   6:     goto   5_while_cond
+     jmp     l_f0_5_while_cond       #   7:     goto   5_while_cond
+ l_f0_4:
-     jmp     l_f0_0                  #   7:     goto   0
+     jmp     l_f0_0                  #   9:     goto   0
+     jmp     l_f0_11_if_false        #  12:     goto   11_if_false
-     movl    $98, %eax               #  10:     assign v6 <- 98
+     movl    $98, %eax               #  13:     assign v6 <- 98
-     jmp     l_f0_9                  #  11:     goto   9
+     jmp     l_f0_9                  #  14:     goto   9
+ l_f0_11_if_false:
-     call    ReadInt                 #  13:     call   t7 <- ReadInt
+     call    ReadInt                 #  17:     call   t7 <- ReadInt
-     movl    $69234, %eax            #  14:     mul    t8 <- 69234, 56956
+     movl    $69234, %eax            #  18:     mul    t8 <- 69234, 56956
-     movl    -16(%ebp), %eax         #  15:     if     t7 # t8 goto 15
+     movl    -16(%ebp), %eax         #  19:     if     t7 # t8 goto 15
-     jmp     l_f0_16                 #  16:     goto   16
+     jmp     l_f0_16                 #  20:     goto   16
-     movl    $1, %eax                #  18:     assign t9 <- 1
+     movl    $1, %eax                #  22:     assign t9 <- 1
-     jmp     l_f0_17                 #  19:     goto   17
+     jmp     l_f0_17                 #  23:     goto   17
-     movl    $0, %eax                #  21:     assign t9 <- 0
+     movl    $0, %eax                #  25:     assign t9 <- 0
-     movzbl  -21(%ebp), %eax         #  23:     assign v4 <- t9
+     movzbl  -21(%ebp), %eax         #  27:     assign v4 <- t9
-     #    -76(%ebp)   4  [ $t25      <int> %ebp-76 ]
+     #    -73(%ebp)   1  [ $t25      <char> %ebp-73 ]
+     #    -74(%ebp)   1  [ $t26      <bool> %ebp-74 ]
+     #    -75(%ebp)   1  [ $t27      <bool> %ebp-75 ]
-     #    -80(%ebp)   4  [ $t26      <int> %ebp-80 ]
+     #    -80(%ebp)   4  [ $t7       <int> %ebp-80 ]
-     #    -81(%ebp)   1  [ $t27      <char> %ebp-81 ]
-     #    -82(%ebp)   1  [ $t28      <bool> %ebp-82 ]
+     #    -84(%ebp)   4  [ $t8       <int> %ebp-84 ]
-     #    -83(%ebp)   1  [ $t29      <bool> %ebp-83 ]
-     #    -88(%ebp)   4  [ $t7       <int> %ebp-88 ]
+     #    -88(%ebp)   4  [ $t9       <int> %ebp-88 ]
-     #    -92(%ebp)   4  [ $t8       <int> %ebp-92 ]
-     #    -96(%ebp)   4  [ $t9       <int> %ebp-96 ]
-     #   -100(%ebp)   4  [ $v6       <int> %ebp-100 ]
+     #    -92(%ebp)   4  [ $v6       <int> %ebp-92 ]
-     pushl   %ebp                   
-     movl    %esp, %ebp             
-     pushl   %ebx                    # save callee saved registers
-     pushl   %esi                   
+     pushl   %ebp                   
+     movl    %esp, %ebp             
+     pushl   %ebx                    # save callee saved registers
-     pushl   %edi                   
+     pushl   %esi                   
+     pushl   %edi                   
-     subl    $88, %esp               # make room for locals
+     subl    $80, %esp               # make room for locals
-     movl    $22, %ecx              
+     movl    $20, %ecx              
-     movl    %eax, -88(%ebp)        
+     movl    %eax, -80(%ebp)        
-     movl    -88(%ebp), %eax         #   1:     sub    t8 <- t7, 18599
+     movl    -80(%ebp), %eax         #   1:     sub    t8 <- t7, 18599
-     movl    %eax, -92(%ebp)        
+     movl    %eax, -84(%ebp)        
+     movl    %eax, -88(%ebp)        
+     movl    -84(%ebp), %eax         #   5:     mul    t10 <- t8, t9
+     movl    -88(%ebp), %ebx        
+     imull   %ebx                   
-     movl    %eax, -96(%ebp)        
+     movl    %eax, -16(%ebp)        
-     movl    $4888, %eax             #   5:     add    t11 <- 4888, 25007
+     movl    -16(%ebp), %eax         #   6:     add    t11 <- t10, 69320
-     movl    $25007, %ebx           
+     movl    $69320, %ebx           
+     movl    $3, %eax                #   7:     param  1 <- 3
-     movl    -20(%ebp), %eax         #   6:     sub    t12 <- t11, 18599
-     movl    $18599, %ebx           
-     subl    %ebx, %eax             
+     pushl   %eax                   
+     movl    16(%ebp), %eax          #   8:     param  0 <- v4
+     pushl   %eax                   
+     call    DIM                     #   9:     call   t12 <- DIM
+     addl    $8, %esp               
-     movl    -92(%ebp), %eax         #   7:     mul    t10 <- t8, t9
+     movl    -20(%ebp), %eax         #  10:     mul    t13 <- t11, t12
-     movl    -96(%ebp), %ebx        
+     movl    -24(%ebp), %ebx        
-     movl    %eax, -16(%ebp)        
-     movl    -16(%ebp), %eax         #   8:     add    t13 <- t10, 69320
-     movl    $69320, %ebx           
-     addl    %ebx, %eax             
-     movl    $3, %eax                #   9:     param  1 <- 3
-     pushl   %eax                   
-     movl    16(%ebp), %eax          #  10:     param  0 <- v4
-     pushl   %eax                   
-     call    DIM                     #  11:     call   t14 <- DIM
-     addl    $8, %esp               
-     movl    %eax, -32(%ebp)        
-     movl    -28(%ebp), %eax         #  12:     mul    t15 <- t13, t14
-     movl    -32(%ebp), %ebx        
-     imull   %ebx                   
-     movl    %eax, -36(%ebp)        
-     movl    -36(%ebp), %eax         #  13:     add    t16 <- t15, 15494
+     movl    -28(%ebp), %eax         #  11:     add    t14 <- t13, 15494
+     movl    %eax, -32(%ebp)        
+     movl    $4, %eax                #  12:     param  1 <- 4
+     pushl   %eax                   
+     movl    16(%ebp), %eax          #  13:     param  0 <- v4
+     pushl   %eax                   
+     call    DIM                     #  14:     call   t15 <- DIM
+     addl    $8, %esp               
+     movl    %eax, -36(%ebp)        
+     movl    -32(%ebp), %eax         #  15:     mul    t16 <- t14, t15
+     movl    -36(%ebp), %ebx        
+     imull   %ebx                   
-     movl    $4, %eax                #  14:     param  1 <- 4
-     pushl   %eax                   
-     movl    16(%ebp), %eax          #  15:     param  0 <- v4
-     pushl   %eax                   
-     call    DIM                     #  16:     call   t17 <- DIM
-     addl    $8, %esp               
-     movl    %eax, -44(%ebp)        
-     movl    -40(%ebp), %eax         #  17:     mul    t18 <- t16, t17
-     movl    -44(%ebp), %ebx        
-     imull   %ebx                   
-     movl    %eax, -48(%ebp)        
-     movl    -48(%ebp), %eax         #  18:     add    t19 <- t18, 84849
+     movl    -40(%ebp), %eax         #  16:     add    t17 <- t16, 84849
+     movl    %eax, -44(%ebp)        
+     movl    $5, %eax                #  17:     param  1 <- 5
+     pushl   %eax                   
+     movl    16(%ebp), %eax          #  18:     param  0 <- v4
+     pushl   %eax                   
+     call    DIM                     #  19:     call   t18 <- DIM
+     addl    $8, %esp               
+     movl    %eax, -48(%ebp)        
+     movl    -44(%ebp), %eax         #  20:     mul    t19 <- t17, t18
+     movl    -48(%ebp), %ebx        
+     imull   %ebx                   
-     movl    $5, %eax                #  19:     param  1 <- 5
-     pushl   %eax                   
-     movl    16(%ebp), %eax          #  20:     param  0 <- v4
+     movl    -52(%ebp), %eax         #  21:     add    t20 <- t19, 11013
+     movl    $11013, %ebx           
-     pushl   %eax                   
-     call    DIM                     #  21:     call   t20 <- DIM
-     addl    $8, %esp               
+     addl    %ebx, %eax             
-     movl    -52(%ebp), %eax         #  22:     mul    t21 <- t19, t20
+     movl    -56(%ebp), %eax         #  22:     mul    t21 <- t20, 4
-     movl    -56(%ebp), %ebx        
+     movl    $4, %ebx               
+     movl    16(%ebp), %eax          #  23:     param  0 <- v4
+     pushl   %eax                   
+     call    DOFS                    #  24:     call   t22 <- DOFS
+     addl    $4, %esp               
+     movl    %eax, -64(%ebp)        
-     movl    -60(%ebp), %eax         #  23:     add    t22 <- t21, 11013
+     movl    -60(%ebp), %eax         #  25:     add    t23 <- t21, t22
-     movl    $11013, %ebx           
+     movl    -64(%ebp), %ebx        
-     movl    %eax, -64(%ebp)        
-     movl    -64(%ebp), %eax         #  24:     mul    t23 <- t22, 4
-     movl    $4, %ebx               
-     imull   %ebx                   
-     movl    16(%ebp), %eax          #  25:     param  0 <- v4
+     movl    16(%ebp), %eax          #  26:     add    t24 <- v4, t23
+     movl    -68(%ebp), %ebx        
-     pushl   %eax                   
-     call    DOFS                    #  26:     call   t24 <- DOFS
-     addl    $4, %esp               
+     addl    %ebx, %eax             
-     movl    -68(%ebp), %eax         #  27:     add    t25 <- t23, t24
-     movl    -72(%ebp), %ebx        
-     addl    %ebx, %eax             
-     movl    %eax, -76(%ebp)        
-     movl    16(%ebp), %eax          #  28:     add    t26 <- v4, t25
-     movl    -76(%ebp), %ebx        
-     addl    %ebx, %eax             
-     movl    %eax, -80(%ebp)        
-     movl    $8962, %eax             #  29:     assign @t26 <- 8962
+     movl    $8962, %eax             #  27:     assign @t24 <- 8962
-     movl    -80(%ebp), %edi        
+     movl    -72(%ebp), %edi        
-     call    dummyCHARfunc           #  30:     call   t27 <- dummyCHARfunc
+     call    dummyCHARfunc           #  28:     call   t25 <- dummyCHARfunc
-     movb    %al, -81(%ebp)         
+     movb    %al, -73(%ebp)         
-     movl    $98, %eax               #  31:     if     98 > t27 goto 2
+     movl    $98, %eax               #  29:     if     98 > t25 goto 2
-     movzbl  -81(%ebp), %ebx        
+     movzbl  -73(%ebp), %ebx        
-     jmp     l_f2_3                  #  32:     goto   3
+     jmp     l_f2_3                  #  30:     goto   3
-     movl    $1, %eax                #  34:     assign t28 <- 1
+     movl    $1, %eax                #  32:     assign t26 <- 1
-     movb    %al, -82(%ebp)         
+     movb    %al, -74(%ebp)         
-     jmp     l_f2_4                  #  35:     goto   4
+     jmp     l_f2_4                  #  33:     goto   4
-     movl    $0, %eax                #  37:     assign t28 <- 0
+     movl    $0, %eax                #  35:     assign t26 <- 0
-     movb    %al, -82(%ebp)         
+     movb    %al, -74(%ebp)         
-     movzbl  -82(%ebp), %eax         #  39:     return t28
+     movzbl  -74(%ebp), %eax         #  37:     return t26
+     jmp     l_f2_11                 #  38:     goto   11
+     jmp     l_f2_11                 #  39:     goto   11
+ l_f2_11:
-     movl    $1, %eax                #  40:     assign t29 <- 1
+     movl    $1, %eax                #  41:     assign t27 <- 1
-     movb    %al, -83(%ebp)         
+     movb    %al, -75(%ebp)         
-     jmp     l_f2_9                  #  41:     goto   9
+     jmp     l_f2_9                  #  42:     goto   9
-     movl    $0, %eax                #  42:     assign t29 <- 0
+     movl    $0, %eax                #  43:     assign t27 <- 0
-     movb    %al, -83(%ebp)         
+     movb    %al, -75(%ebp)         
-     movzbl  -83(%ebp), %eax         #  44:     return t29
+     movzbl  -75(%ebp), %eax         #  45:     return t27
-     addl    $88, %esp               # remove locals
+     addl    $80, %esp               # remove locals
-     addl    $1, %esp               
+     addl    $4, %esp               
-     addl    $13, %esp              
+     addl    $16, %esp              
