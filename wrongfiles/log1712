+     jmp     l_f0_1                  #   4:     goto   1
-     jmp     l_f0_2_while_cond       #   5:     goto   2_while_cond
+     jmp     l_f0_2_while_cond       #   6:     goto   2_while_cond
+ l_f0_1:
-     movl    $81785, %eax            #   6:     mul    t3 <- 81785, 41435
+     movl    $81785, %eax            #   8:     mul    t3 <- 81785, 41435
-     call    dummyINTfunc            #   7:     call   t4 <- dummyINTfunc
+     call    dummyINTfunc            #   9:     call   t4 <- dummyINTfunc
-     movl    -20(%ebp), %eax         #   8:     div    t5 <- t3, t4
+     movl    -20(%ebp), %eax         #  10:     div    t5 <- t3, t4
-     movl    -28(%ebp), %eax         #   9:     return t5
+     movl    -28(%ebp), %eax         #  11:     return t5
+     jmp     l_test_3                #   6:     goto   3
-     movl    $1, %eax                #   7:     assign t1 <- 1
+     movl    $1, %eax                #   8:     assign t1 <- 1
-     jmp     l_test_4                #   8:     goto   4
+     jmp     l_test_4                #   9:     goto   4
+ l_test_3:
-     movl    $0, %eax                #   9:     assign t1 <- 0
+     movl    $0, %eax                #  11:     assign t1 <- 0
-     movzbl  -14(%ebp), %eax         #  11:     assign v1 <- t1
+     movzbl  -14(%ebp), %eax         #  13:     assign v1 <- t1
