-     #    -76(%ebp)   4  [ $t22      <int> %ebp-76 ]
+     #    -73(%ebp)   1  [ $t22      <bool> %ebp-73 ]
-     #    -77(%ebp)   1  [ $t23      <bool> %ebp-77 ]
+     #    -74(%ebp)   1  [ $t23      <bool> %ebp-74 ]
-     #    -78(%ebp)   1  [ $t24      <bool> %ebp-78 ]
-     #    -84(%ebp)   4  [ $t3       <int> %ebp-84 ]
+     #    -80(%ebp)   4  [ $t3       <int> %ebp-80 ]
-     #    -85(%ebp)   1  [ $t4       <bool> %ebp-85 ]
+     #    -81(%ebp)   1  [ $t4       <bool> %ebp-81 ]
+     #    -88(%ebp)   4  [ $t5       <int> %ebp-88 ]
-     #    -92(%ebp)   4  [ $t5       <int> %ebp-92 ]
+     #    -92(%ebp)   4  [ $t6       <int> %ebp-92 ]
-     #    -96(%ebp)   4  [ $t6       <int> %ebp-96 ]
+     #    -96(%ebp)   4  [ $t7       <int> %ebp-96 ]
-     #   -100(%ebp)   4  [ $t7       <int> %ebp-100 ]
+     #   -100(%ebp)   4  [ $t8       <int> %ebp-100 ]
-     #   -104(%ebp)   4  [ $t8       <int> %ebp-104 ]
+     #   -104(%ebp)   4  [ $t9       <int> %ebp-104 ]
-     #   -108(%ebp)   4  [ $t9       <int> %ebp-108 ]
-     subl    $96, %esp               # make room for locals
+     subl    $92, %esp               # make room for locals
-     movl    $24, %ecx              
+     movl    $23, %ecx              
-     movl    %eax, -84(%ebp)        
+     movl    %eax, -80(%ebp)        
-     movl    -84(%ebp), %ebx        
+     movl    -80(%ebp), %ebx        
-     movb    %al, -85(%ebp)         
+     movb    %al, -81(%ebp)         
-     movb    %al, -85(%ebp)         
+     movb    %al, -81(%ebp)         
-     movzbl  -85(%ebp), %eax         #  12:     return t4
+     movzbl  -81(%ebp), %eax         #  12:     return t4
+     movl    %eax, -88(%ebp)        
+     movl    $24545, %eax            #  16:     mul    t6 <- 24545, t5
+     movl    -88(%ebp), %ebx        
+     imull   %ebx                   
+     call    ReadInt                 #  17:     call   t7 <- ReadInt
-     movl    $24545, %eax            #  16:     mul    t6 <- 24545, t5
-     movl    -92(%ebp), %ebx        
-     imull   %ebx                   
-     call    ReadInt                 #  17:     call   t7 <- ReadInt
+     movl    -92(%ebp), %eax         #  18:     add    t8 <- t6, t7
+     movl    -96(%ebp), %ebx        
+     addl    %ebx, %eax             
-     movl    -96(%ebp), %eax         #  18:     add    t8 <- t6, t7
-     movl    -100(%ebp), %ebx       
-     addl    %ebx, %eax             
-     movl    %eax, -104(%ebp)       
-     movl    %eax, -108(%ebp)       
+     movl    %eax, -104(%ebp)       
-     call    ReadInt                 #  22:     call   t11 <- ReadInt
-     movl    %eax, -28(%ebp)        
-     movl    -104(%ebp), %eax        #  23:     mul    t10 <- t8, t9
+     movl    -100(%ebp), %eax        #  22:     mul    t10 <- t8, t9
-     movl    -108(%ebp), %ebx       
+     movl    -104(%ebp), %ebx       
-     movl    -24(%ebp), %eax         #  24:     add    t12 <- t10, 59994
+     movl    -24(%ebp), %eax         #  23:     add    t11 <- t10, 59994
+     movl    %eax, -28(%ebp)        
+     movl    $4, %eax                #  24:     param  1 <- 4
+     pushl   %eax                   
+     movl    8(%ebp), %eax           #  25:     param  0 <- v0
+     pushl   %eax                   
+     call    DIM                     #  26:     call   t12 <- DIM
+     addl    $8, %esp               
+     movl    -28(%ebp), %eax         #  27:     mul    t13 <- t11, t12
+     movl    -32(%ebp), %ebx        
+     imull   %ebx                   
+     movl    %eax, -36(%ebp)        
+     movl    -36(%ebp), %eax         #  28:     add    t14 <- t13, 42524
+     movl    $42524, %ebx           
+     addl    %ebx, %eax             
+     movl    %eax, -40(%ebp)        
-     movl    $4, %eax                #  25:     param  1 <- 4
+     movl    $5, %eax                #  29:     param  1 <- 5
-     movl    8(%ebp), %eax           #  26:     param  0 <- v0
+     movl    8(%ebp), %eax           #  30:     param  0 <- v0
-     call    DIM                     #  27:     call   t13 <- DIM
+     call    DIM                     #  31:     call   t15 <- DIM
-     movl    %eax, -36(%ebp)        
+     movl    %eax, -44(%ebp)        
-     movl    -32(%ebp), %eax         #  28:     mul    t14 <- t12, t13
+     movl    -40(%ebp), %eax         #  32:     mul    t16 <- t14, t15
-     movl    -36(%ebp), %ebx        
+     movl    -44(%ebp), %ebx        
-     movl    %eax, -40(%ebp)        
-     movl    -40(%ebp), %eax         #  29:     add    t15 <- t14, 42524
-     movl    $42524, %ebx           
-     addl    %ebx, %eax             
-     movl    %eax, -44(%ebp)        
-     movl    $5, %eax                #  30:     param  1 <- 5
-     pushl   %eax                   
-     movl    8(%ebp), %eax           #  31:     param  0 <- v0
-     pushl   %eax                   
-     call    DIM                     #  32:     call   t16 <- DIM
-     addl    $8, %esp               
-     movl    -44(%ebp), %eax         #  33:     mul    t17 <- t15, t16
+     movl    -48(%ebp), %eax         #  33:     add    t17 <- t16, 61263
-     movl    -48(%ebp), %ebx        
+     movl    $61263, %ebx           
-     imull   %ebx                   
+     addl    %ebx, %eax             
-     movl    -52(%ebp), %eax         #  34:     add    t18 <- t17, 61263
-     movl    $61263, %ebx           
-     addl    %ebx, %eax             
-     movl    %eax, -56(%ebp)        
-     movl    -56(%ebp), %eax         #  35:     mul    t19 <- t18, 4
+     movl    -52(%ebp), %eax         #  34:     mul    t18 <- t17, 4
+     movl    %eax, -56(%ebp)        
+     movl    8(%ebp), %eax           #  35:     param  0 <- v0
+     pushl   %eax                   
+     call    DOFS                    #  36:     call   t19 <- DOFS
+     addl    $4, %esp               
-     movl    8(%ebp), %eax           #  36:     param  0 <- v0
+     movl    -56(%ebp), %eax         #  37:     add    t20 <- t18, t19
+     movl    -60(%ebp), %ebx        
-     pushl   %eax                   
-     call    DOFS                    #  37:     call   t20 <- DOFS
-     addl    $4, %esp               
+     addl    %ebx, %eax             
-     movl    -60(%ebp), %eax         #  38:     add    t21 <- t19, t20
+     movl    8(%ebp), %eax           #  38:     add    t21 <- v0, t20
-     movl    8(%ebp), %eax           #  39:     add    t22 <- v0, t21
-     movl    -72(%ebp), %ebx        
-     addl    %ebx, %eax             
-     movl    %eax, -76(%ebp)        
-     movl    $89975, %eax            #  40:     assign @t22 <- 89975
+     movl    $89975, %eax            #  39:     assign @t21 <- 89975
-     movl    -76(%ebp), %edi        
+     movl    -72(%ebp), %edi        
-     call    dummyBOOLfunc           #  41:     call   t23 <- dummyBOOLfunc
+     call    dummyBOOLfunc           #  40:     call   t22 <- dummyBOOLfunc
-     movb    %al, -77(%ebp)         
+     movb    %al, -73(%ebp)         
-     movzbl  -77(%ebp), %eax         #  42:     if     t23 = 1 goto 13
+     movzbl  -73(%ebp), %eax         #  41:     if     t22 = 1 goto 13
-     jmp     l_f0_8                  #  43:     goto   8
+     jmp     l_f0_8                  #  42:     goto   8
+     jmp     l_f0_8                  #  44:     goto   8
+     jmp     l_f0_8                  #  45:     goto   8
-     movl    $1, %eax                #  45:     assign t24 <- 1
+     movl    $1, %eax                #  46:     assign t23 <- 1
-     movb    %al, -78(%ebp)         
+     movb    %al, -74(%ebp)         
-     jmp     l_f0_9                  #  46:     goto   9
+     jmp     l_f0_9                  #  47:     goto   9
-     movl    $0, %eax                #  48:     assign t24 <- 0
+     movl    $0, %eax                #  49:     assign t23 <- 0
-     movb    %al, -78(%ebp)         
+     movb    %al, -74(%ebp)         
-     movzbl  -78(%ebp), %eax         #  50:     return t24
+     movzbl  -74(%ebp), %eax         #  51:     return t23
-     addl    $96, %esp               # remove locals
+     addl    $92, %esp               # remove locals
+     jmp     l_test_3_if_false       #   3:     goto   3_if_false
-     jmp     l_test_1                #   4:     goto   1
+     jmp     l_test_1                #   5:     goto   1
+ l_test_3_if_false:
-     call    dummyProcedure          #   6:     call   dummyProcedure
+     call    dummyProcedure          #   8:     call   dummyProcedure
