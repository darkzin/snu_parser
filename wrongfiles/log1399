+     jmp     l_f0_2                  #   0:     goto   2
+     jmp     l_f0_2                  #   1:     goto   2
+     jmp     l_f0_2                  #   2:     goto   2
-     movl    $1, %eax                #   0:     assign t3 <- 1
+     movl    $1, %eax                #   3:     assign t3 <- 1
-     jmp     l_f0_3                  #   1:     goto   3
+     jmp     l_f0_3                  #   4:     goto   3
+ l_f0_2:
-     movl    $0, %eax                #   2:     assign t3 <- 0
+     movl    $0, %eax                #   6:     assign t3 <- 0
-     movzbl  -13(%ebp), %eax         #   4:     assign v2 <- t3
+     movzbl  -13(%ebp), %eax         #   8:     assign v2 <- t3
-     movl    $18891, %eax            #   6:     if     18891 > 61587 goto 10_while_body
+     movl    $18891, %eax            #  10:     if     18891 > 61587 goto 10_while_body
-     jmp     l_f0_8                  #   7:     goto   8
+     jmp     l_f0_8                  #  11:     goto   8
-     movl    $97, %eax               #   9:     if     97 <= 100 goto 13
+     movl    $97, %eax               #  13:     if     97 <= 100 goto 13
-     jmp     l_f0_14                 #  10:     goto   14
+     jmp     l_f0_14                 #  14:     goto   14
-     movl    $1, %eax                #  12:     assign t4 <- 1
+     movl    $1, %eax                #  16:     assign t4 <- 1
-     jmp     l_f0_15                 #  13:     goto   15
+     jmp     l_f0_15                 #  17:     goto   15
-     movl    $0, %eax                #  15:     assign t4 <- 0
+     movl    $0, %eax                #  19:     assign t4 <- 0
-     movzbl  -14(%ebp), %eax         #  17:     assign v2 <- t4
+     movzbl  -14(%ebp), %eax         #  21:     assign v2 <- t4
-     jmp     l_f0_9_while_cond       #  18:     goto   9_while_cond
+     jmp     l_f0_9_while_cond       #  22:     goto   9_while_cond
+     jmp     l_f0_19_if_false        #  24:     goto   19_if_false
-     movl    $57060, %eax            #  21:     if     57060 <= 85603 goto 23_while_body
+     movl    $57060, %eax            #  26:     if     57060 <= 85603 goto 23_while_body
-     jmp     l_f0_21                 #  22:     goto   21
+     jmp     l_f0_21                 #  27:     goto   21
-     jmp     l_f0_22_while_cond      #  24:     goto   22_while_cond
+     jmp     l_f0_22_while_cond      #  29:     goto   22_while_cond
-     jmp     l_f0_17                 #  27:     goto   17
+     jmp     l_f0_17                 #  32:     goto   17
+ l_f0_19_if_false:
-     #-385288264(%ebp)385288224  [ $v3       <array 55 of <array 61 of <array 29 of <array 90 of <array 44 of <bool>>>>>> %ebp-385288264 ]
+     #   -385288264(%ebp)  385288224  [ $v3       <array 55 of <array 61 of <array 29 of <array 90 of <array 44 of <bool>>>>>> %ebp-385288264 ]
-     #-835031392(%ebp)449743128  [ $v4       <array 27 of <array 92 of <array 82 of <array 23 of <array 96 of <char>>>>>> %ebp-835031392 ]
+     #   -835031392(%ebp)  449743128  [ $v4       <array 27 of <array 92 of <array 82 of <array 23 of <array 96 of <char>>>>>> %ebp-835031392 ]
-     #1392245640(%ebp)2067690264  [ $v5       <array 70 of <array 72 of <array 72 of <array 77 of <array 74 of <bool>>>>>> %ebp+1392245640 ]
+     #   1392245640(%ebp)  2067690264  [ $v5       <array 70 of <array 72 of <array 72 of <array 77 of <array 74 of <bool>>>>>> %ebp+1392245640 ]
+     cld                             # memset local stack area to 0
+     xorl    %eax, %eax             
+     movl    $725680411, %ecx       
+     mov     %esp, %edi             
+     rep     stosl                  
