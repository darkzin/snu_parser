+     jmp     l_f0_0                  #   1:     goto   0
-     call    dummyBOOLfunc           #   1:     call   t2 <- dummyBOOLfunc
+     call    dummyBOOLfunc           #   2:     call   t2 <- dummyBOOLfunc
-     movzbl  -13(%ebp), %eax         #   2:     if     t2 = 1 goto 2_while_body
+     movzbl  -13(%ebp), %eax         #   3:     if     t2 = 1 goto 2_while_body
-     jmp     l_f0_0                  #   3:     goto   0
+     jmp     l_f0_0                  #   4:     goto   0
-     jmp     l_f0_1_while_cond       #   5:     goto   1_while_cond
+     jmp     l_f0_1_while_cond       #   6:     goto   1_while_cond
-     call    dummyBOOLfunc           #   7:     call   t3 <- dummyBOOLfunc
+     call    dummyBOOLfunc           #   8:     call   t3 <- dummyBOOLfunc
-     movl    $98, %eax               #   8:     param  0 <- 98
+     movl    $98, %eax               #   9:     param  0 <- 98
-     call    WriteChar               #   9:     call   WriteChar
+     call    WriteChar               #  10:     call   WriteChar
-     addl    $1, %esp               
+     addl    $4, %esp               
-     # -13732(%ebp)13632  [ $v3       <array 9 of <array 8 of <array 9 of <array 3 of <array 7 of <bool>>>>>> %ebp-13732 ]
+     #   -13732(%ebp)  13632  [ $v3       <array 9 of <array 8 of <array 9 of <array 3 of <array 7 of <bool>>>>>> %ebp-13732 ]
-     # -13736(%ebp)   4  [ $v4       <int> %ebp-13736 ]
+     #   -13736(%ebp)   4  [ $v4       <int> %ebp-13736 ]
+     jmp     l_f2_6                  #   5:     goto   6
+     jmp     l_f2_6                  #   6:     goto   6
+     jmp     l_f2_6                  #   7:     goto   6
+     jmp     l_f2_6                  #   8:     goto   6
-     movl    $1, %eax                #   5:     assign t4 <- 1
+     movl    $1, %eax                #   9:     assign t4 <- 1
-     jmp     l_f2_6                  #   6:     goto   6
+     jmp     l_f2_7                  #  10:     goto   7
+ l_f2_6:
-     movl    $0, %eax                #   7:     assign t4 <- 0
+     movl    $0, %eax                #  12:     assign t4 <- 0
- l_f2_6:
+ l_f2_7:
-     movzbl  -89(%ebp), %eax         #   9:     param  1 <- t4
+     movzbl  -89(%ebp), %eax         #  14:     param  1 <- t4
-     movl    $0, %eax                #  10:     param  0 <- 0
+     movl    $0, %eax                #  15:     param  0 <- 0
-     call    f0                      #  11:     call   t5 <- f0
+     call    f0                      #  16:     call   t5 <- f0
-     addl    $6, %esp               
+     addl    $12, %esp              
-     movzbl  -90(%ebp), %eax         #  12:     if     t5 >= 100 goto 1
+     movzbl  -90(%ebp), %eax         #  17:     if     t5 >= 100 goto 1
-     jmp     l_f2_2                  #  13:     goto   2
+     jmp     l_f2_2                  #  18:     goto   2
-     movl    $1, %eax                #  15:     assign t6 <- 1
+     movl    $1, %eax                #  20:     assign t6 <- 1
-     jmp     l_f2_3                  #  16:     goto   3
+     jmp     l_f2_3                  #  21:     goto   3
-     movl    $0, %eax                #  18:     assign t6 <- 0
+     movl    $0, %eax                #  23:     assign t6 <- 0
-     movzbl  -91(%ebp), %eax         #  20:     param  0 <- t6
+     movzbl  -91(%ebp), %eax         #  25:     param  0 <- t6
-     call    f0                      #  21:     call   t7 <- f0
+     call    f0                      #  26:     call   t7 <- f0
-     addl    $6, %esp               
+     addl    $12, %esp              
-     movzbl  -92(%ebp), %eax         #  22:     param  0 <- t7
+     movzbl  -92(%ebp), %eax         #  27:     param  0 <- t7
-     call    WriteChar               #  23:     call   WriteChar
+     call    WriteChar               #  28:     call   WriteChar
-     addl    $1, %esp               
+     addl    $4, %esp               
-     call    dummyINTfunc            #  24:     call   t8 <- dummyINTfunc
+     call    dummyINTfunc            #  29:     call   t8 <- dummyINTfunc
-     movl    $51632, %eax            #  25:     sub    t9 <- 51632, 96709
+     movl    $51632, %eax            #  30:     sub    t9 <- 51632, 96709
-     movl    -100(%ebp), %eax        #  26:     add    t10 <- t9, 45364
+     movl    -100(%ebp), %eax        #  31:     add    t10 <- t9, 45364
-     movl    $2, %eax                #  27:     param  1 <- 2
+     movl    $2, %eax                #  32:     param  1 <- 2
-     movl    12(%ebp), %eax          #  28:     param  0 <- v1
+     movl    12(%ebp), %eax          #  33:     param  0 <- v1
-     call    DIM                     #  29:     call   t11 <- DIM
+     call    DIM                     #  34:     call   t11 <- DIM
-     movl    $11841, %eax            #  30:     mul    t12 <- 11841, t11
+     movl    $11841, %eax            #  35:     mul    t12 <- 11841, t11
-     movl    -24(%ebp), %eax         #  31:     add    t13 <- t12, 56479
+     movl    -24(%ebp), %eax         #  36:     add    t13 <- t12, 56479
-     movl    $3, %eax                #  32:     param  1 <- 3
+     movl    $3, %eax                #  37:     param  1 <- 3
-     movl    12(%ebp), %eax          #  33:     param  0 <- v1
+     movl    12(%ebp), %eax          #  38:     param  0 <- v1
-     call    DIM                     #  34:     call   t14 <- DIM
+     call    DIM                     #  39:     call   t14 <- DIM
-     movl    -28(%ebp), %eax         #  35:     mul    t15 <- t13, t14
+     movl    -28(%ebp), %eax         #  40:     mul    t15 <- t13, t14
-     movl    -36(%ebp), %eax         #  36:     add    t16 <- t15, 45055
+     movl    -36(%ebp), %eax         #  41:     add    t16 <- t15, 45055
-     movl    $4, %eax                #  37:     param  1 <- 4
+     movl    $4, %eax                #  42:     param  1 <- 4
-     movl    12(%ebp), %eax          #  38:     param  0 <- v1
+     movl    12(%ebp), %eax          #  43:     param  0 <- v1
-     call    DIM                     #  39:     call   t17 <- DIM
+     call    DIM                     #  44:     call   t17 <- DIM
-     movl    -40(%ebp), %eax         #  40:     mul    t18 <- t16, t17
+     movl    -40(%ebp), %eax         #  45:     mul    t18 <- t16, t17
-     movl    -48(%ebp), %eax         #  41:     add    t19 <- t18, 59978
+     movl    -48(%ebp), %eax         #  46:     add    t19 <- t18, 59978
-     movl    $5, %eax                #  42:     param  1 <- 5
+     movl    $5, %eax                #  47:     param  1 <- 5
-     movl    12(%ebp), %eax          #  43:     param  0 <- v1
+     movl    12(%ebp), %eax          #  48:     param  0 <- v1
-     call    DIM                     #  44:     call   t20 <- DIM
+     call    DIM                     #  49:     call   t20 <- DIM
-     movl    -52(%ebp), %eax         #  45:     mul    t21 <- t19, t20
+     movl    -52(%ebp), %eax         #  50:     mul    t21 <- t19, t20
-     movl    -64(%ebp), %eax         #  46:     add    t22 <- t21, 69007
+     movl    -64(%ebp), %eax         #  51:     add    t22 <- t21, 69007
-     movl    -68(%ebp), %eax         #  47:     mul    t23 <- t22, 4
+     movl    -68(%ebp), %eax         #  52:     mul    t23 <- t22, 4
-     movl    12(%ebp), %eax          #  48:     param  0 <- v1
+     movl    12(%ebp), %eax          #  53:     param  0 <- v1
-     call    DOFS                    #  49:     call   t24 <- DOFS
+     call    DOFS                    #  54:     call   t24 <- DOFS
-     movl    -72(%ebp), %eax         #  50:     add    t25 <- t23, t24
+     movl    -72(%ebp), %eax         #  55:     add    t25 <- t23, t24
-     movl    12(%ebp), %eax          #  51:     add    t26 <- v1, t25
+     movl    12(%ebp), %eax          #  56:     add    t26 <- v1, t25
-     movl    -16(%ebp), %eax         #  52:     assign @t26 <- t10
+     movl    -16(%ebp), %eax         #  57:     assign @t26 <- t10
+     jmp     l_test_2_if_false       #   0:     goto   2_if_false
+     jmp     l_test_2_if_false       #   1:     goto   2_if_false
+     jmp     l_test_2_if_false       #   2:     goto   2_if_false
-     call    dummyCHARfunc           #   0:     call   t0 <- dummyCHARfunc
+     call    dummyCHARfunc           #   3:     call   t0 <- dummyCHARfunc
-     jmp     l_test_7                #   1:     goto   7
+     jmp     l_test_7                #   4:     goto   7
-     jmp     l_test_0                #   3:     goto   0
+     jmp     l_test_0                #   6:     goto   0
+ l_test_2_if_false:
-     movl    $99, %eax               #   6:     if     99 >= 97 goto 12_while_body
+     movl    $99, %eax               #  10:     if     99 >= 97 goto 12_while_body
-     jmp     l_test_10               #   7:     goto   10
+     jmp     l_test_10               #  11:     goto   10
-     jmp     l_test_14               #   9:     goto   14
+     jmp     l_test_14               #  13:     goto   14
-     jmp     l_test_17               #  11:     goto   17
+     jmp     l_test_17               #  15:     goto   17
-     jmp     l_test_20               #  13:     goto   20
+     jmp     l_test_20               #  17:     goto   20
-     movl    $24623, %eax            #  16:     if     24623 = 38101 goto 25_while_body
+     movl    $24623, %eax            #  20:     if     24623 = 38101 goto 25_while_body
-     jmp     l_test_23               #  17:     goto   23
+     jmp     l_test_23               #  21:     goto   23
-     jmp     l_test_24_while_cond    #  19:     goto   24_while_cond
+     jmp     l_test_24_while_cond    #  23:     goto   24_while_cond
-     jmp     l_test_29               #  23:     goto   29
+     jmp     l_test_29               #  27:     goto   29
-     jmp     l_test_11_while_cond    #  25:     goto   11_while_cond
+     jmp     l_test_11_while_cond    #  29:     goto   11_while_cond
-     call    dummyINTfunc            #  27:     call   t1 <- dummyINTfunc
+     call    dummyINTfunc            #  31:     call   t1 <- dummyINTfunc
-     jmp     l_test_35_while_body    #  29:     goto   35_while_body
-     jmp     l_test_35_while_body    #  30:     goto   35_while_body
-     jmp     l_test_35_while_body    #  31:     goto   35_while_body
-     jmp     l_test_35_while_body    #  32:     goto   35_while_body
+     jmp     l_test_35_while_body    #  35:     goto   35_while_body
+     jmp     l_test_35_while_body    #  36:     goto   35_while_body
+     jmp     l_test_35_while_body    #  37:     goto   35_while_body
+     jmp     l_test_35_while_body    #  38:     goto   35_while_body
-     movl    $45005, %eax            #  36:     if     45005 > 9593 goto 44_if_true
+     movl    $45005, %eax            #  40:     if     45005 > 9593 goto 44_if_true
-     jmp     l_test_45_if_false      #  37:     goto   45_if_false
+     jmp     l_test_45_if_false      #  41:     goto   45_if_false
-     jmp     l_test_43               #  39:     goto   43
+     jmp     l_test_43               #  43:     goto   43
-     jmp     l_test_34_while_cond    #  43:     goto   34_while_cond
+     jmp     l_test_34_while_cond    #  47:     goto   34_while_cond
