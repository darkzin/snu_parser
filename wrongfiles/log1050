-     #    -64(%ebp)   4  [ $t22      <int> %ebp-64 ]
-     #    -65(%ebp)   1  [ $t4       <bool> %ebp-65 ]
+     #    -61(%ebp)   1  [ $t4       <bool> %ebp-61 ]
+     #    -68(%ebp)   4  [ $t5       <int> %ebp-68 ]
-     #    -72(%ebp)   4  [ $t5       <int> %ebp-72 ]
+     #    -72(%ebp)   4  [ $t6       <int> %ebp-72 ]
-     #    -76(%ebp)   4  [ $t6       <int> %ebp-76 ]
+     #    -76(%ebp)   4  [ $t7       <int> %ebp-76 ]
-     #    -80(%ebp)   4  [ $t7       <int> %ebp-80 ]
+     #    -80(%ebp)   4  [ $t8       <int> %ebp-80 ]
-     #    -84(%ebp)   4  [ $t8       <int> %ebp-84 ]
+     #    -84(%ebp)   4  [ $t9       <int> %ebp-84 ]
-     #    -88(%ebp)   4  [ $t9       <int> %ebp-88 ]
-     #    -89(%ebp)   1  [ $v2       <bool> %ebp-89 ]
+     #    -85(%ebp)   1  [ $v2       <bool> %ebp-85 ]
-     pushl   %ebp                   
-     movl    %esp, %ebp             
-     pushl   %ebx                    # save callee saved registers
-     pushl   %esi                   
+     pushl   %ebp                   
+     movl    %esp, %ebp             
+     pushl   %ebx                    # save callee saved registers
-     pushl   %edi                   
+     pushl   %esi                   
+     pushl   %edi                   
-     subl    $80, %esp               # make room for locals
+     subl    $76, %esp               # make room for locals
-     movl    $20, %ecx              
+     movl    $19, %ecx              
-     movb    %al, -65(%ebp)         
+     movb    %al, -61(%ebp)         
-     movzbl  -65(%ebp), %eax         #   2:     if     t4 = 1 goto 3
+     movzbl  -61(%ebp), %eax         #   2:     if     t4 = 1 goto 3
+     jmp     l_f1_0                  #   5:     goto   0
-     jmp     l_f1_1_while_cond       #   5:     goto   1_while_cond
+     jmp     l_f1_1_while_cond       #   6:     goto   1_while_cond
-     movl    $3701, %eax             #   7:     if     3701 = 49464 goto 5_if_true
+     movl    $3701, %eax             #   8:     if     3701 = 49464 goto 5_if_true
-     jmp     l_f1_6_if_false         #   8:     goto   6_if_false
+     jmp     l_f1_6_if_false         #   9:     goto   6_if_false
-     movl    $2, %eax                #  10:     param  1 <- 2
+     movl    $2, %eax                #  11:     param  1 <- 2
-     movl    8(%ebp), %eax           #  11:     param  0 <- v0
+     movl    8(%ebp), %eax           #  12:     param  0 <- v0
-     call    DIM                     #  12:     call   t5 <- DIM
+     call    DIM                     #  13:     call   t5 <- DIM
+     movl    %eax, -68(%ebp)        
+     movl    $61885, %eax            #  14:     mul    t6 <- 61885, t5
+     movl    -68(%ebp), %ebx        
+     imull   %ebx                   
-     movl    $61885, %eax            #  13:     mul    t6 <- 61885, t5
+     movl    $6936, %eax             #  15:     mul    t7 <- 6936, 16282
-     movl    -72(%ebp), %ebx        
+     movl    $16282, %ebx           
-     movl    $6936, %eax             #  14:     mul    t7 <- 6936, 16282
+     movl    -72(%ebp), %eax         #  16:     add    t8 <- t6, t7
-     movl    $16282, %ebx           
+     movl    -76(%ebp), %ebx        
-     imull   %ebx                   
+     addl    %ebx, %eax             
+     movl    $3, %eax                #  17:     param  1 <- 3
+     pushl   %eax                   
-     movl    -76(%ebp), %eax         #  15:     add    t8 <- t6, t7
+     movl    8(%ebp), %eax           #  18:     param  0 <- v0
-     movl    -80(%ebp), %ebx        
+     pushl   %eax                   
+     call    DIM                     #  19:     call   t9 <- DIM
-     addl    %ebx, %eax             
+     addl    $8, %esp               
+     movl    -80(%ebp), %eax         #  20:     mul    t10 <- t8, t9
+     movl    -84(%ebp), %ebx        
+     imull   %ebx                   
+     movl    %eax, -16(%ebp)        
+     movl    -16(%ebp), %eax         #  21:     add    t11 <- t10, 60472
+     movl    $60472, %ebx           
+     addl    %ebx, %eax             
+     movl    %eax, -20(%ebp)        
-     movl    $3, %eax                #  16:     param  1 <- 3
+     movl    $4, %eax                #  22:     param  1 <- 4
-     movl    8(%ebp), %eax           #  17:     param  0 <- v0
+     movl    8(%ebp), %eax           #  23:     param  0 <- v0
-     call    DIM                     #  18:     call   t9 <- DIM
+     call    DIM                     #  24:     call   t12 <- DIM
-     movl    %eax, -88(%ebp)        
-     movl    $6936, %eax             #  19:     mul    t11 <- 6936, 16282
-     movl    $16282, %ebx           
-     imull   %ebx                   
-     movl    %eax, -20(%ebp)        
-     movl    -84(%ebp), %eax         #  20:     mul    t10 <- t8, t9
-     movl    -88(%ebp), %ebx        
-     imull   %ebx                   
-     movl    %eax, -16(%ebp)        
-     movl    -16(%ebp), %eax         #  21:     add    t12 <- t10, 60472
-     movl    $60472, %ebx           
-     addl    %ebx, %eax             
+     movl    -20(%ebp), %eax         #  25:     mul    t13 <- t11, t12
+     movl    -24(%ebp), %ebx        
+     imull   %ebx                   
+     movl    %eax, -28(%ebp)        
+     movl    -28(%ebp), %eax         #  26:     add    t14 <- t13, 2376
+     movl    $2376, %ebx            
+     addl    %ebx, %eax             
+     movl    %eax, -32(%ebp)        
-     movl    $4, %eax                #  22:     param  1 <- 4
+     movl    $5, %eax                #  27:     param  1 <- 5
-     movl    8(%ebp), %eax           #  23:     param  0 <- v0
+     movl    8(%ebp), %eax           #  28:     param  0 <- v0
-     call    DIM                     #  24:     call   t13 <- DIM
+     call    DIM                     #  29:     call   t15 <- DIM
-     movl    %eax, -28(%ebp)        
-     movl    -24(%ebp), %eax         #  25:     mul    t14 <- t12, t13
-     movl    -28(%ebp), %ebx        
-     imull   %ebx                   
-     movl    %eax, -32(%ebp)        
-     movl    -32(%ebp), %eax         #  26:     add    t15 <- t14, 2376
-     movl    $2376, %ebx            
-     addl    %ebx, %eax             
-     movl    $5, %eax                #  27:     param  1 <- 5
+     movl    -32(%ebp), %eax         #  30:     mul    t16 <- t14, t15
+     movl    -36(%ebp), %ebx        
-     pushl   %eax                   
+     imull   %ebx                   
-     movl    8(%ebp), %eax           #  28:     param  0 <- v0
-     pushl   %eax                   
-     call    DIM                     #  29:     call   t16 <- DIM
-     addl    $8, %esp               
-     movl    -36(%ebp), %eax         #  30:     mul    t17 <- t15, t16
+     movl    -40(%ebp), %eax         #  31:     add    t17 <- t16, 2152
-     movl    -40(%ebp), %ebx        
+     movl    $2152, %ebx            
-     imull   %ebx                   
+     addl    %ebx, %eax             
-     movl    -44(%ebp), %eax         #  31:     add    t18 <- t17, 2152
+     movl    -44(%ebp), %eax         #  32:     mul    t18 <- t17, 1
-     movl    $2152, %ebx            
+     movl    $1, %ebx               
-     addl    %ebx, %eax             
+     imull   %ebx                   
-     movl    -48(%ebp), %eax         #  32:     mul    t19 <- t18, 1
+     movl    8(%ebp), %eax           #  33:     param  0 <- v0
-     movl    $1, %ebx               
-     imull   %ebx                   
+     pushl   %eax                   
+     call    DOFS                    #  34:     call   t19 <- DOFS
+     addl    $4, %esp               
-     movl    8(%ebp), %eax           #  33:     param  0 <- v0
+     movl    -48(%ebp), %eax         #  35:     add    t20 <- t18, t19
+     movl    -52(%ebp), %ebx        
-     pushl   %eax                   
-     call    DOFS                    #  34:     call   t20 <- DOFS
-     addl    $4, %esp               
+     addl    %ebx, %eax             
-     movl    -52(%ebp), %eax         #  35:     add    t21 <- t19, t20
+     movl    8(%ebp), %eax           #  36:     add    t21 <- v0, t20
-     movl    8(%ebp), %eax           #  36:     add    t22 <- v0, t21
-     movl    -60(%ebp), %ebx        
-     addl    %ebx, %eax             
-     movl    %eax, -64(%ebp)        
-     movl    $0, %eax                #  37:     assign @t22 <- 0
+     movl    $0, %eax                #  37:     assign @t21 <- 0
-     movl    -64(%ebp), %edi        
+     movl    -60(%ebp), %edi        
-     addl    $80, %esp               # remove locals
+     addl    $76, %esp               # remove locals
-     addl    $1, %esp               
+     addl    $4, %esp               
-     jmp     l_test_5                #   2:     goto   5
+     jmp     l_test_6                #   2:     goto   6
- l_test_5:
+ l_test_6:
+     jmp     l_test_10               #  11:     goto   10
-     leal    _str_1, %eax            #  11:     &()    t1 <- _str_1
+     leal    _str_1, %eax            #  12:     &()    t1 <- _str_1
-     movl    -20(%ebp), %eax         #  12:     param  0 <- t1
+     movl    -20(%ebp), %eax         #  13:     param  0 <- t1
-     call    WriteStr                #  13:     call   WriteStr
+     call    WriteStr                #  14:     call   WriteStr
-     movl    $98, %eax               #  15:     if     98 < 98 goto 17_while_body
+     movl    $98, %eax               #  16:     if     98 < 98 goto 17_while_body
-     jmp     l_test_15               #  16:     goto   15
+     jmp     l_test_15               #  17:     goto   15
-     jmp     l_test_16_while_cond    #  18:     goto   16_while_cond
+     jmp     l_test_16_while_cond    #  19:     goto   16_while_cond
-     jmp     l_test_11_while_cond    #  20:     goto   11_while_cond
+     jmp     l_test_11_while_cond    #  21:     goto   11_while_cond
+ l_test_10:
-     call    dummyBOOLfunc           #  21:     call   t2 <- dummyBOOLfunc
+     call    dummyBOOLfunc           #  23:     call   t2 <- dummyBOOLfunc
-     jmp     l_test_22_if_false      #  22:     goto   22_if_false
+     jmp     l_test_22_if_false      #  24:     goto   22_if_false
-     movl    $28276, %eax            #  24:     if     28276 <= 34177 goto 25_while_body
+     movl    $28276, %eax            #  26:     if     28276 <= 34177 goto 25_while_body
-     jmp     l_test_23               #  25:     goto   23
+     jmp     l_test_23               #  27:     goto   23
-     jmp     l_test_24_while_cond    #  27:     goto   24_while_cond
+     jmp     l_test_24_while_cond    #  29:     goto   24_while_cond
-     movl    $100, %eax              #  30:     if     100 < 99 goto 29_while_body
+     movl    $100, %eax              #  32:     if     100 < 99 goto 29_while_body
-     jmp     l_test_27               #  31:     goto   27
+     jmp     l_test_27               #  33:     goto   27
-     jmp     l_test_28_while_cond    #  33:     goto   28_while_cond
+     jmp     l_test_28_while_cond    #  35:     goto   28_while_cond
-     jmp     l_test_20               #  35:     goto   20
+     jmp     l_test_20               #  37:     goto   20
-     call    ReadInt                 #  38:     call   t3 <- ReadInt
+     call    ReadInt                 #  40:     call   t3 <- ReadInt
