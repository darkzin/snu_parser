+     jmp     l_f1_3_if_false         #   2:     goto   3_if_false
-     movl    $27119, %eax            #   4:     if     27119 <= 20871 goto 7_while_body
+     movl    $27119, %eax            #   5:     if     27119 <= 20871 goto 7_while_body
-     jmp     l_f1_5                  #   5:     goto   5
+     jmp     l_f1_5                  #   6:     goto   5
-     jmp     l_f1_6_while_cond       #   7:     goto   6_while_cond
+     jmp     l_f1_6_while_cond       #   8:     goto   6_while_cond
-     call    dummyBOOLfunc           #   9:     call   t5 <- dummyBOOLfunc
+     call    dummyBOOLfunc           #  10:     call   t5 <- dummyBOOLfunc
-     jmp     l_f1_1                  #  10:     goto   1
+     jmp     l_f1_1                  #  11:     goto   1
+ l_f1_3_if_false:
-     movl    $98, %eax               #  12:     if     98 >= 99 goto 14
+     movl    $98, %eax               #  14:     if     98 >= 99 goto 14
-     jmp     l_f1_12                 #  13:     goto   12
+     jmp     l_f1_12                 #  15:     goto   12
-     movl    $1, %eax                #  15:     assign t6 <- 1
+     movl    $1, %eax                #  17:     assign t6 <- 1
-     jmp     l_f1_13                 #  16:     goto   13
+     jmp     l_f1_13                 #  18:     goto   13
-     movl    $0, %eax                #  18:     assign t6 <- 0
+     movl    $0, %eax                #  20:     assign t6 <- 0
-     movzbl  -14(%ebp), %eax         #  20:     return t6
+     movzbl  -14(%ebp), %eax         #  22:     return t6
+     jmp     l_f2_0                  #   6:     goto   0
-     jmp     l_f2_9_while_cond       #   8:     goto   9_while_cond
+     jmp     l_f2_9_while_cond       #   9:     goto   9_while_cond
-     movl    $1, %eax                #   9:     param  1 <- 1
+     movl    $1, %eax                #  10:     param  1 <- 1
-     movl    $27744, %eax            #  10:     if     27744 # 13894 goto 12
+     movl    $27744, %eax            #  11:     if     27744 # 13894 goto 12
-     jmp     l_f2_13                 #  11:     goto   13
+     jmp     l_f2_13                 #  12:     goto   13
-     movl    $1, %eax                #  13:     assign t5 <- 1
+     movl    $1, %eax                #  14:     assign t5 <- 1
-     jmp     l_f2_14                 #  14:     goto   14
+     jmp     l_f2_14                 #  15:     goto   14
-     movl    $0, %eax                #  16:     assign t5 <- 0
+     movl    $0, %eax                #  17:     assign t5 <- 0
-     movzbl  -13(%ebp), %eax         #  18:     param  0 <- t5
+     movzbl  -13(%ebp), %eax         #  19:     param  0 <- t5
-     call    f1                      #  19:     call   t6 <- f1
+     call    f1                      #  20:     call   t6 <- f1
-     addl    $2, %esp               
+     addl    $8, %esp               
-     jmp     l_f2_1_while_cond       #  20:     goto   1_while_cond
+     jmp     l_f2_1_while_cond       #  21:     goto   1_while_cond
+ l_f2_0:
-     movl    $69320, %eax            #  21:     div    t7 <- 69320, 72152
+     movl    $69320, %eax            #  23:     div    t7 <- 69320, 72152
-     movl    $9596, %eax             #  22:     sub    t8 <- 9596, t7
+     movl    $9596, %eax             #  24:     sub    t8 <- 9596, t7
-     movl    -24(%ebp), %eax         #  23:     assign v2 <- t8
+     movl    -24(%ebp), %eax         #  25:     assign v2 <- t8
-     jmp     l_f2_18_if_true         #  24:     goto   18_if_true
+     jmp     l_f2_18_if_true         #  26:     goto   18_if_true
-     jmp     l_f2_18_if_true         #  25:     goto   18_if_true
+     jmp     l_f2_18_if_true         #  27:     goto   18_if_true
-     call    ReadInt                 #  27:     call   t9 <- ReadInt
+     call    ReadInt                 #  29:     call   t9 <- ReadInt
-     jmp     l_f2_17                 #  28:     goto   17
+     jmp     l_f2_17                 #  30:     goto   17
