+     jmp     l_f1_2                  #   1:     goto   2
-     movl    $1, %eax                #   2:     assign t1 <- 1
+     movl    $1, %eax                #   3:     assign t1 <- 1
-     jmp     l_f1_3                  #   3:     goto   3
+     jmp     l_f1_3                  #   4:     goto   3
+ l_f1_2:
-     movl    $0, %eax                #   4:     assign t1 <- 0
+     movl    $0, %eax                #   6:     assign t1 <- 0
-     movzbl  -13(%ebp), %eax         #   6:     return t1
+     movzbl  -13(%ebp), %eax         #   8:     return t1
-     movl    $100, %eax              #   7:     if     100 >= 99 goto 9_if_true
+     movl    $100, %eax              #   9:     if     100 >= 99 goto 9_if_true
-     jmp     l_f1_10_if_false        #   8:     goto   10_if_false
+     jmp     l_f1_10_if_false        #  10:     goto   10_if_false
-     jmp     l_f1_12                 #  11:     goto   12
+     jmp     l_f1_12                 #  13:     goto   12
-     jmp     l_f1_13_while_cond      #  12:     goto   13_while_cond
+     jmp     l_f1_13_while_cond      #  14:     goto   13_while_cond
-     movl    $0, %eax                #  15:     if     0 = 0 goto 17_while_body
+     movl    $0, %eax                #  17:     if     0 = 0 goto 17_while_body
-     jmp     l_f1_15                 #  16:     goto   15
+     jmp     l_f1_15                 #  18:     goto   15
-     jmp     l_f1_16_while_cond      #  18:     goto   16_while_cond
+     jmp     l_f1_16_while_cond      #  20:     goto   16_while_cond
-     jmp     l_f1_8                  #  20:     goto   8
+     jmp     l_f1_8                  #  22:     goto   8
-     call    dummyCHARfunc           #  23:     call   t2 <- dummyCHARfunc
+     call    dummyCHARfunc           #  25:     call   t2 <- dummyCHARfunc
-     call    f0                      #  24:     call   t3 <- f0
+     call    f0                      #  26:     call   t3 <- f0
-     movzbl  -14(%ebp), %eax         #  25:     if     t2 > t3 goto 20
+     movzbl  -14(%ebp), %eax         #  27:     if     t2 > t3 goto 20
-     jmp     l_f1_21                 #  26:     goto   21
+     jmp     l_f1_21                 #  28:     goto   21
-     movl    $1, %eax                #  28:     assign t4 <- 1
+     movl    $1, %eax                #  30:     assign t4 <- 1
-     jmp     l_f1_22                 #  29:     goto   22
+     jmp     l_f1_22                 #  31:     goto   22
-     movl    $0, %eax                #  31:     assign t4 <- 0
+     movl    $0, %eax                #  33:     assign t4 <- 0
-     movzbl  -16(%ebp), %eax         #  33:     return t4
+     movzbl  -16(%ebp), %eax         #  35:     return t4
+     jmp     l_f2_4_if_false         #   4:     goto   4_if_false
-     jmp     l_f2_2                  #   6:     goto   2
+     jmp     l_f2_2                  #   7:     goto   2
+ l_f2_4_if_false:
