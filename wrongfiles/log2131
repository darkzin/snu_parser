-     #    -68(%ebp)   4  [ $t23      <int> %ebp-68 ]
+     #    -65(%ebp)   1  [ $t4       <bool> %ebp-65 ]
-     #    -72(%ebp)   4  [ $t24      <int> %ebp-72 ]
+     #    -72(%ebp)   4  [ $t5       <int> %ebp-72 ]
-     #    -73(%ebp)   1  [ $t4       <bool> %ebp-73 ]
+     #    -76(%ebp)   4  [ $t6       <int> %ebp-76 ]
-     #    -80(%ebp)   4  [ $t5       <int> %ebp-80 ]
+     #    -80(%ebp)   4  [ $t7       <int> %ebp-80 ]
-     #    -84(%ebp)   4  [ $t6       <int> %ebp-84 ]
+     #    -84(%ebp)   4  [ $t8       <int> %ebp-84 ]
-     #    -88(%ebp)   4  [ $t7       <int> %ebp-88 ]
+     #    -88(%ebp)   4  [ $t9       <int> %ebp-88 ]
-     #    -92(%ebp)   4  [ $t8       <int> %ebp-92 ]
-     #    -96(%ebp)   4  [ $t9       <int> %ebp-96 ]
-     #   -100(%ebp)   4  [ $v1       <int> %ebp-100 ]
+     #    -92(%ebp)   4  [ $v1       <int> %ebp-92 ]
-     pushl   %ebp                   
-     movl    %esp, %ebp             
-     pushl   %ebx                    # save callee saved registers
-     pushl   %esi                   
+     pushl   %ebp                   
+     movl    %esp, %ebp             
+     pushl   %ebx                    # save callee saved registers
-     pushl   %edi                   
+     pushl   %esi                   
+     pushl   %edi                   
-     subl    $88, %esp               # make room for locals
+     subl    $80, %esp               # make room for locals
-     movl    $22, %ecx              
+     movl    $20, %ecx              
-     movb    %al, -73(%ebp)         
+     movb    %al, -65(%ebp)         
-     movzbl  -73(%ebp), %eax         #   1:     if     t4 = 1 goto 1_if_true
+     movzbl  -65(%ebp), %eax         #   1:     if     t4 = 1 goto 1_if_true
-     movl    %eax, -80(%ebp)        
+     movl    %eax, -72(%ebp)        
-     movl    -80(%ebp), %ebx        
+     movl    -72(%ebp), %ebx        
-     movl    %eax, -84(%ebp)        
+     movl    %eax, -76(%ebp)        
-     movl    %eax, -88(%ebp)        
+     movl    %eax, -80(%ebp)        
-     movl    -84(%ebp), %eax         #  26:     add    t8 <- t6, t7
+     movl    -76(%ebp), %eax         #  26:     add    t8 <- t6, t7
-     movl    -88(%ebp), %ebx        
+     movl    -80(%ebp), %ebx        
-     movl    %eax, -92(%ebp)        
+     movl    %eax, -84(%ebp)        
-     movl    %eax, -96(%ebp)        
+     movl    %eax, -88(%ebp)        
-     movl    $73505, %eax            #  30:     mul    t11 <- 73505, 24669
-     movl    $24669, %ebx           
-     imull   %ebx                   
-     movl    %eax, -20(%ebp)        
-     movl    -92(%ebp), %eax         #  31:     mul    t10 <- t8, t9
+     movl    -84(%ebp), %eax         #  30:     mul    t10 <- t8, t9
-     movl    -96(%ebp), %ebx        
+     movl    -88(%ebp), %ebx        
-     movl    $6706, %eax             #  32:     sub    t12 <- 6706, 53111
+     movl    $6706, %eax             #  31:     sub    t11 <- 6706, 53111
+     movl    %eax, -20(%ebp)        
+     movl    -16(%ebp), %eax         #  32:     add    t12 <- t10, t11
+     movl    -20(%ebp), %ebx        
+     addl    %ebx, %eax             
+     movl    $4, %eax                #  33:     param  1 <- 4
+     pushl   %eax                   
-     movl    -16(%ebp), %eax         #  33:     add    t13 <- t10, t12
+     movl    8(%ebp), %eax           #  34:     param  0 <- v0
-     movl    -24(%ebp), %ebx        
+     pushl   %eax                   
+     call    DIM                     #  35:     call   t13 <- DIM
-     addl    %ebx, %eax             
+     addl    $8, %esp               
+     movl    -24(%ebp), %eax         #  36:     mul    t14 <- t12, t13
+     movl    -28(%ebp), %ebx        
+     imull   %ebx                   
+     movl    %eax, -32(%ebp)        
+     movl    -32(%ebp), %eax         #  37:     add    t15 <- t14, 90662
+     movl    $90662, %ebx           
+     addl    %ebx, %eax             
+     movl    %eax, -36(%ebp)        
-     movl    $4, %eax                #  34:     param  1 <- 4
+     movl    $5, %eax                #  38:     param  1 <- 5
-     movl    8(%ebp), %eax           #  35:     param  0 <- v0
+     movl    8(%ebp), %eax           #  39:     param  0 <- v0
-     call    DIM                     #  36:     call   t14 <- DIM
+     call    DIM                     #  40:     call   t16 <- DIM
-     movl    %eax, -32(%ebp)        
-     movl    $6706, %eax             #  37:     sub    t16 <- 6706, 53111
-     movl    $53111, %ebx           
-     subl    %ebx, %eax             
-     movl    -28(%ebp), %eax         #  38:     mul    t15 <- t13, t14
+     movl    -36(%ebp), %eax         #  41:     mul    t17 <- t15, t16
-     movl    -32(%ebp), %ebx        
+     movl    -40(%ebp), %ebx        
-     movl    %eax, -36(%ebp)        
-     movl    -36(%ebp), %eax         #  39:     add    t17 <- t15, 90662
-     movl    $90662, %ebx           
-     addl    %ebx, %eax             
-     movl    $5, %eax                #  40:     param  1 <- 5
-     pushl   %eax                   
-     movl    8(%ebp), %eax           #  41:     param  0 <- v0
+     movl    -44(%ebp), %eax         #  42:     add    t18 <- t17, 9093
+     movl    $9093, %ebx            
-     pushl   %eax                   
-     call    DIM                     #  42:     call   t18 <- DIM
-     addl    $8, %esp               
+     addl    %ebx, %eax             
-     movl    -44(%ebp), %eax         #  43:     mul    t19 <- t17, t18
+     movl    -48(%ebp), %eax         #  43:     mul    t19 <- t18, 4
-     movl    -48(%ebp), %ebx        
+     movl    $4, %ebx               
-     movl    -52(%ebp), %eax         #  44:     add    t20 <- t19, 9093
+     movl    8(%ebp), %eax           #  44:     param  0 <- v0
-     movl    $9093, %ebx            
+     pushl   %eax                   
+     call    DOFS                    #  45:     call   t20 <- DOFS
-     addl    %ebx, %eax             
+     addl    $4, %esp               
-     movl    -56(%ebp), %eax         #  45:     mul    t21 <- t20, 4
+     movl    -52(%ebp), %eax         #  46:     add    t21 <- t19, t20
+     movl    -56(%ebp), %ebx        
-     movl    $4, %ebx               
+     addl    %ebx, %eax             
-     imull   %ebx                   
-     movl    8(%ebp), %eax           #  46:     param  0 <- v0
+     movl    8(%ebp), %eax           #  47:     add    t22 <- v0, t21
+     movl    -60(%ebp), %ebx        
-     pushl   %eax                   
-     call    DOFS                    #  47:     call   t22 <- DOFS
-     addl    $4, %esp               
+     addl    %ebx, %eax             
-     movl    -60(%ebp), %eax         #  48:     add    t23 <- t21, t22
-     movl    -64(%ebp), %ebx        
-     addl    %ebx, %eax             
-     movl    %eax, -68(%ebp)        
-     movl    8(%ebp), %eax           #  49:     add    t24 <- v0, t23
-     movl    -68(%ebp), %ebx        
-     addl    %ebx, %eax             
-     movl    %eax, -72(%ebp)        
-     movl    $8310, %eax             #  50:     assign @t24 <- 8310
+     movl    $8310, %eax             #  48:     assign @t22 <- 8310
-     movl    -72(%ebp), %edi        
+     movl    -64(%ebp), %edi        
-     addl    $88, %esp               # remove locals
+     addl    $80, %esp               # remove locals
+     jmp     l_f1_2_if_false         #   3:     goto   2_if_false
-     jmp     l_f1_0                  #   5:     goto   0
+     jmp     l_f1_0                  #   6:     goto   0
+ l_f1_2_if_false:
-     call    dummyCHARfunc           #   8:     call   t4 <- dummyCHARfunc
+     call    dummyCHARfunc           #  10:     call   t4 <- dummyCHARfunc
-     movzbl  -13(%ebp), %eax         #   9:     assign v0 <- t4
+     movzbl  -13(%ebp), %eax         #  11:     assign v0 <- t4
+     jmp     l_test_6                #  12:     goto   6
-     call    dummyCHARfunc           #  13:     call   t3 <- dummyCHARfunc
+     call    dummyCHARfunc           #  14:     call   t3 <- dummyCHARfunc
-     jmp     l_test_7_while_cond     #  14:     goto   7_while_cond
+     jmp     l_test_7_while_cond     #  15:     goto   7_while_cond
+ l_test_6:
