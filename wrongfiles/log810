-     #    -72(%ebp)   4  [ $t24      <int> %ebp-72 ]
+     #    -72(%ebp)   4  [ $t3       <int> %ebp-72 ]
-     #    -76(%ebp)   4  [ $t25      <int> %ebp-76 ]
+     #    -76(%ebp)   4  [ $t4       <int> %ebp-76 ]
-     #    -80(%ebp)   4  [ $t26      <int> %ebp-80 ]
+     #    -80(%ebp)   4  [ $t5       <int> %ebp-80 ]
-     #    -84(%ebp)   4  [ $t3       <int> %ebp-84 ]
+     #    -84(%ebp)   4  [ $t6       <int> %ebp-84 ]
-     #    -88(%ebp)   4  [ $t4       <int> %ebp-88 ]
+     #    -88(%ebp)   4  [ $t7       <int> %ebp-88 ]
-     #    -92(%ebp)   4  [ $t5       <int> %ebp-92 ]
+     #    -92(%ebp)   4  [ $t8       <int> %ebp-92 ]
-     #    -96(%ebp)   4  [ $t6       <int> %ebp-96 ]
+     #    -96(%ebp)   4  [ $t9       <int> %ebp-96 ]
-     #   -100(%ebp)   4  [ $t7       <int> %ebp-100 ]
-     #   -104(%ebp)   4  [ $t8       <int> %ebp-104 ]
-     #   -108(%ebp)   4  [ $t9       <int> %ebp-108 ]
-     #   -109(%ebp)   1  [ $v1       <char> %ebp-109 ]
+     #    -97(%ebp)   1  [ $v1       <char> %ebp-97 ]
-     #   -116(%ebp)   4  [ $v2       <int> %ebp-116 ]
+     #   -104(%ebp)   4  [ $v2       <int> %ebp-104 ]
-     pushl   %ebp                   
-     movl    %esp, %ebp             
-     pushl   %ebx                    # save callee saved registers
-     pushl   %esi                   
+     pushl   %ebp                   
+     movl    %esp, %ebp             
+     pushl   %ebx                    # save callee saved registers
-     pushl   %edi                   
+     pushl   %esi                   
+     pushl   %edi                   
-     subl    $104, %esp              # make room for locals
+     subl    $92, %esp               # make room for locals
-     movl    $26, %ecx              
+     movl    $23, %ecx              
+     movl    %eax, -72(%ebp)        
+     movl    $38742, %eax            #   3:     mul    t4 <- 38742, t3
+     movl    -72(%ebp), %ebx        
+     imull   %ebx                   
+     movl    %eax, -76(%ebp)        
+     movl    -76(%ebp), %eax         #   4:     add    t5 <- t4, 68580
+     movl    $68580, %ebx           
+     addl    %ebx, %eax             
+     movl    %eax, -80(%ebp)        
+     movl    $3, %eax                #   5:     param  1 <- 3
+     pushl   %eax                   
+     movl    8(%ebp), %eax           #   6:     param  0 <- v0
+     pushl   %eax                   
+     call    DIM                     #   7:     call   t6 <- DIM
+     addl    $8, %esp               
-     movl    $38742, %eax            #   3:     mul    t4 <- 38742, t3
+     movl    -80(%ebp), %eax         #   8:     mul    t7 <- t5, t6
-     movl    -88(%ebp), %eax         #   4:     add    t5 <- t4, 68580
+     movl    -88(%ebp), %eax         #   9:     add    t8 <- t7, 96703
-     movl    $68580, %ebx           
+     movl    $96703, %ebx           
-     movl    $3, %eax                #   5:     param  1 <- 3
+     movl    $4, %eax                #  10:     param  1 <- 4
-     movl    8(%ebp), %eax           #   6:     param  0 <- v0
+     movl    8(%ebp), %eax           #  11:     param  0 <- v0
-     call    DIM                     #   7:     call   t6 <- DIM
+     call    DIM                     #  12:     call   t9 <- DIM
-     movl    -92(%ebp), %eax         #   8:     mul    t7 <- t5, t6
+     movl    -92(%ebp), %eax         #  13:     mul    t10 <- t8, t9
-     imull   %ebx                   
-     movl    %eax, -100(%ebp)       
-     movl    -100(%ebp), %eax        #   9:     add    t8 <- t7, 96703
-     movl    $96703, %ebx           
-     addl    %ebx, %eax             
-     movl    %eax, -104(%ebp)       
-     movl    $4, %eax                #  10:     param  1 <- 4
-     pushl   %eax                   
-     movl    8(%ebp), %eax           #  11:     param  0 <- v0
-     pushl   %eax                   
-     call    DIM                     #  12:     call   t9 <- DIM
-     addl    $8, %esp               
-     movl    %eax, -108(%ebp)       
-     movl    -104(%ebp), %eax        #  13:     mul    t10 <- t8, t9
-     movl    -108(%ebp), %ebx       
-     movl    $29675, %eax            #  21:     div    t17 <- 29675, 48423
-     movl    $48423, %ebx           
-     cdq                            
-     idivl   %ebx                   
-     movl    %eax, -44(%ebp)        
-     movl    -44(%ebp), %eax         #  22:     mul    t18 <- t17, 45778
-     movl    $45778, %ebx           
-     imull   %ebx                   
-     movl    %eax, -48(%ebp)        
-     movl    -48(%ebp), %eax         #  23:     div    t19 <- t18, 10890
-     movl    $10890, %ebx           
-     cdq                            
-     idivl   %ebx                   
-     movl    %eax, -52(%ebp)        
-     movl    -32(%ebp), %eax         #  24:     mul    t16 <- t14, t15
+     movl    -32(%ebp), %eax         #  21:     mul    t16 <- t14, t15
-     movl    -40(%ebp), %eax         #  25:     add    t20 <- t16, 2771
+     movl    -40(%ebp), %eax         #  22:     add    t17 <- t16, 2771
-     movl    %eax, -56(%ebp)        
+     movl    %eax, -44(%ebp)        
-     movl    -56(%ebp), %eax         #  26:     mul    t21 <- t20, 1
+     movl    -44(%ebp), %eax         #  23:     mul    t18 <- t17, 1
+     movl    %eax, -48(%ebp)        
+     movl    8(%ebp), %eax           #  24:     param  0 <- v0
+     pushl   %eax                   
+     call    DOFS                    #  25:     call   t19 <- DOFS
+     addl    $4, %esp               
+     movl    %eax, -52(%ebp)        
+     movl    -48(%ebp), %eax         #  26:     add    t20 <- t18, t19
+     movl    -52(%ebp), %ebx        
+     addl    %ebx, %eax             
+     movl    %eax, -56(%ebp)        
+     movl    8(%ebp), %eax           #  27:     add    t21 <- v0, t20
+     movl    -56(%ebp), %ebx        
+     addl    %ebx, %eax             
-     movl    8(%ebp), %eax           #  27:     param  0 <- v0
-     pushl   %eax                   
-     call    DOFS                    #  28:     call   t22 <- DOFS
+     movl    $97, %eax               #  28:     assign @t21 <- 97
+     movl    -60(%ebp), %edi        
+     movb    %al, (%edi)            
+     movl    $78605, %eax            #  29:     add    t22 <- 78605, 96596
+     movl    $96596, %ebx           
-     addl    $4, %esp               
+     addl    %ebx, %eax             
-     movl    -60(%ebp), %eax         #  29:     add    t23 <- t21, t22
+     movl    -64(%ebp), %eax         #  30:     add    t23 <- t22, 78749
-     movl    -64(%ebp), %ebx        
+     movl    $78749, %ebx           
-     movl    8(%ebp), %eax           #  30:     add    t24 <- v0, t23
-     movl    -68(%ebp), %ebx        
-     addl    %ebx, %eax             
-     movl    %eax, -72(%ebp)        
-     movl    $97, %eax               #  31:     assign @t24 <- 97
-     movl    -72(%ebp), %edi        
-     movb    %al, (%edi)            
-     movl    $78605, %eax            #  32:     add    t25 <- 78605, 96596
-     movl    $96596, %ebx           
-     addl    %ebx, %eax             
-     movl    %eax, -76(%ebp)        
-     movl    -76(%ebp), %eax         #  33:     add    t26 <- t25, 78749
-     movl    $78749, %ebx           
-     addl    %ebx, %eax             
-     movl    %eax, -80(%ebp)        
-     movl    -80(%ebp), %eax         #  34:     assign v2 <- t26
+     movl    -68(%ebp), %eax         #  31:     assign v2 <- t23
-     movl    %eax, -116(%ebp)       
+     movl    %eax, -104(%ebp)       
-     call    WriteLn                 #  35:     call   WriteLn
+     call    WriteLn                 #  32:     call   WriteLn
-     addl    $104, %esp              # remove locals
+     addl    $92, %esp               # remove locals
+     jmp     l_f1_4                  #   0:     goto   4
+     jmp     l_f1_4                  #   1:     goto   4
+ l_f1_4:
-     jmp     l_f1_1_if_true          #   0:     goto   1_if_true
+     jmp     l_f1_1_if_true          #   3:     goto   1_if_true
-     jmp     l_f1_0                  #   2:     goto   0
+     jmp     l_f1_0                  #   5:     goto   0
-     movl    $100, %eax              #   4:     if     100 = 98 goto 9_if_true
+     movl    $100, %eax              #   7:     if     100 = 98 goto 9_if_true
-     jmp     l_f1_10_if_false        #   5:     goto   10_if_false
+     jmp     l_f1_10_if_false        #   8:     goto   10_if_false
-     call    dummyCHARfunc           #   7:     call   t3 <- dummyCHARfunc
+     call    dummyCHARfunc           #  10:     call   t3 <- dummyCHARfunc
-     movl    $86620, %eax            #   8:     if     86620 < 54274 goto 14_if_true
+     movl    $86620, %eax            #  11:     if     86620 < 54274 goto 14_if_true
-     jmp     l_f1_15_if_false        #   9:     goto   15_if_false
+     jmp     l_f1_15_if_false        #  12:     goto   15_if_false
-     jmp     l_f1_13                 #  11:     goto   13
+     jmp     l_f1_13                 #  14:     goto   13
-     movl    $88581, %eax            #  14:     assign v2 <- 88581
+     movl    $88581, %eax            #  17:     assign v2 <- 88581
-     jmp     l_f1_8                  #  15:     goto   8
+     jmp     l_f1_8                  #  18:     goto   8
-     call    ReadInt                 #  18:     call   t4 <- ReadInt
+     call    ReadInt                 #  21:     call   t4 <- ReadInt
-     movl    -20(%ebp), %eax         #  19:     div    t5 <- t4, 68741
+     movl    -20(%ebp), %eax         #  22:     div    t5 <- t4, 68741
-     movl    -24(%ebp), %eax         #  20:     div    t6 <- t5, 96589
+     movl    -24(%ebp), %eax         #  23:     div    t6 <- t5, 96589
-     movl    -28(%ebp), %eax         #  21:     return t6
+     movl    -28(%ebp), %eax         #  24:     return t6
-     #  -1168(%ebp)1144  [ $v3       <array 7 of <array 8 of <array 1 of <array 5 of <array 4 of <char>>>>>> %ebp-1168 ]
+     #   -1168(%ebp)  1144  [ $v3       <array 7 of <array 8 of <array 1 of <array 5 of <array 4 of <char>>>>>> %ebp-1168 ]
