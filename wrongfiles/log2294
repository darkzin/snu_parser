-     movzbl  -17(%ebp), %eax         #   3:     if     t3 = 1 goto 4
+     movzbl  -17(%ebp), %eax         #   3:     if     t3 = 1 goto 5
-     je      l_f0_4                 
+     je      l_f0_5                 
-     jmp     l_f0_5                  #   4:     goto   5
+     jmp     l_f0_6                  #   4:     goto   6
- l_f0_4:
+ l_f0_5:
-     jmp     l_f0_6                  #   7:     goto   6
+     jmp     l_f0_7                  #   7:     goto   7
- l_f0_5:
+ l_f0_6:
- l_f0_6:
+ l_f0_7:
+     jmp     l_f0_11                 #  17:     goto   11
-     movl    $1, %eax                #  18:     assign t5 <- 1
+     movl    $1, %eax                #  19:     assign t5 <- 1
-     jmp     l_f0_12                 #  19:     goto   12
+     jmp     l_f0_12                 #  20:     goto   12
+ l_f0_11:
-     movl    $0, %eax                #  20:     assign t5 <- 0
+     movl    $0, %eax                #  22:     assign t5 <- 0
-     movzbl  -19(%ebp), %eax         #  22:     assign v2 <- t5
+     movzbl  -19(%ebp), %eax         #  24:     assign v2 <- t5
+     jmp     l_f1_4                  #   7:     goto   4
-     jmp     l_f1_5_while_cond       #   8:     goto   5_while_cond
+     jmp     l_f1_5_while_cond       #   9:     goto   5_while_cond
+ l_f1_4:
-     call    dummyCHARfunc           #   9:     call   t3 <- dummyCHARfunc
+     call    dummyCHARfunc           #  11:     call   t3 <- dummyCHARfunc
-     movzbl  -14(%ebp), %eax         #  10:     assign v1 <- t3
+     movzbl  -14(%ebp), %eax         #  12:     assign v1 <- t3
-     addl    $1, %esp               
+     addl    $4, %esp               
