-     #    -76(%ebp)   4  [ $t25      <int> %ebp-76 ]
+     #    -76(%ebp)   4  [ $t5       <int> %ebp-76 ]
-     #    -80(%ebp)   4  [ $t26      <int> %ebp-80 ]
+     #    -80(%ebp)   4  [ $t6       <int> %ebp-80 ]
-     #    -84(%ebp)   4  [ $t27      <int> %ebp-84 ]
+     #    -84(%ebp)   4  [ $t7       <int> %ebp-84 ]
-     #    -88(%ebp)   4  [ $t5       <int> %ebp-88 ]
+     #    -88(%ebp)   4  [ $t8       <int> %ebp-88 ]
-     #    -92(%ebp)   4  [ $t6       <int> %ebp-92 ]
+     #    -92(%ebp)   4  [ $t9       <int> %ebp-92 ]
-     #    -96(%ebp)   4  [ $t7       <int> %ebp-96 ]
-     #   -100(%ebp)   4  [ $t8       <int> %ebp-100 ]
-     #   -104(%ebp)   4  [ $t9       <int> %ebp-104 ]
-     #   -105(%ebp)   1  [ $v3       <bool> %ebp-105 ]
+     #    -93(%ebp)   1  [ $v3       <bool> %ebp-93 ]
-     #   -106(%ebp)   1  [ $v4       <char> %ebp-106 ]
+     #    -94(%ebp)   1  [ $v4       <char> %ebp-94 ]
-     pushl   %ebp                   
-     movl    %esp, %ebp             
-     pushl   %ebx                    # save callee saved registers
-     pushl   %esi                   
+     pushl   %ebp                   
+     movl    %esp, %ebp             
+     pushl   %ebx                    # save callee saved registers
-     pushl   %edi                   
+     pushl   %esi                   
+     pushl   %edi                   
-     subl    $96, %esp               # make room for locals
+     subl    $84, %esp               # make room for locals
-     movl    $24, %ecx              
+     movl    $21, %ecx              
-     movb    %al, -105(%ebp)        
+     movb    %al, -93(%ebp)         
-     movl    %eax, -88(%ebp)        
+     movl    %eax, -76(%ebp)        
-     movl    -88(%ebp), %eax         #  16:     return t5
+     movl    -76(%ebp), %eax         #  16:     return t5
-     movl    %eax, -92(%ebp)        
+     movl    %eax, -80(%ebp)        
-     movl    -92(%ebp), %ebx        
+     movl    -80(%ebp), %ebx        
-     movl    %eax, -96(%ebp)        
+     movl    %eax, -84(%ebp)        
-     movl    -96(%ebp), %eax         #  21:     add    t8 <- t7, 40044
+     movl    -84(%ebp), %eax         #  21:     add    t8 <- t7, 40044
-     movl    %eax, -100(%ebp)       
+     movl    %eax, -88(%ebp)        
-     movl    %eax, -104(%ebp)       
+     movl    %eax, -92(%ebp)        
-     movl    -100(%ebp), %eax        #  25:     mul    t10 <- t8, t9
+     movl    -88(%ebp), %eax         #  25:     mul    t10 <- t8, t9
-     movl    -104(%ebp), %ebx       
+     movl    -92(%ebp), %ebx        
-     movl    $62414, %eax            #  33:     sub    t17 <- 62414, 3601
-     movl    $3601, %ebx            
-     subl    %ebx, %eax             
-     movl    %eax, -44(%ebp)        
-     movl    -44(%ebp), %eax         #  34:     sub    t18 <- t17, 56734
-     movl    $56734, %ebx           
-     subl    %ebx, %eax             
-     movl    %eax, -48(%ebp)        
-     movl    -48(%ebp), %eax         #  35:     sub    t19 <- t18, 90469
-     movl    $90469, %ebx           
-     subl    %ebx, %eax             
-     movl    %eax, -52(%ebp)        
-     movl    -32(%ebp), %eax         #  36:     mul    t16 <- t14, t15
+     movl    -32(%ebp), %eax         #  33:     mul    t16 <- t14, t15
-     movl    -40(%ebp), %eax         #  37:     add    t20 <- t16, 13818
+     movl    -40(%ebp), %eax         #  34:     add    t17 <- t16, 13818
+     movl    %eax, -44(%ebp)        
+     movl    $5, %eax                #  35:     param  1 <- 5
+     pushl   %eax                   
+     movl    8(%ebp), %eax           #  36:     param  0 <- v1
+     pushl   %eax                   
+     call    DIM                     #  37:     call   t18 <- DIM
+     addl    $8, %esp               
+     movl    %eax, -48(%ebp)        
+     movl    -44(%ebp), %eax         #  38:     mul    t19 <- t17, t18
+     movl    -48(%ebp), %ebx        
+     imull   %ebx                   
+     movl    %eax, -52(%ebp)        
+     movl    -52(%ebp), %eax         #  39:     add    t20 <- t19, 14235
+     movl    $14235, %ebx           
+     addl    %ebx, %eax             
-     movl    $5, %eax                #  38:     param  1 <- 5
-     pushl   %eax                   
-     movl    8(%ebp), %eax           #  39:     param  0 <- v1
-     pushl   %eax                   
-     call    DIM                     #  40:     call   t21 <- DIM
-     addl    $8, %esp               
-     movl    %eax, -60(%ebp)        
-     movl    -56(%ebp), %eax         #  41:     mul    t22 <- t20, t21
+     movl    -56(%ebp), %eax         #  40:     mul    t21 <- t20, 1
-     movl    -60(%ebp), %ebx        
-     imull   %ebx                   
-     movl    %eax, -64(%ebp)        
-     movl    -64(%ebp), %eax         #  42:     add    t23 <- t22, 14235
-     movl    $14235, %ebx           
-     addl    %ebx, %eax             
-     movl    %eax, -68(%ebp)        
-     movl    -68(%ebp), %eax         #  43:     mul    t24 <- t23, 1
+     movl    %eax, -60(%ebp)        
+     movl    8(%ebp), %eax           #  41:     param  0 <- v1
+     pushl   %eax                   
+     call    DOFS                    #  42:     call   t22 <- DOFS
+     addl    $4, %esp               
+     movl    %eax, -64(%ebp)        
+     movl    -60(%ebp), %eax         #  43:     add    t23 <- t21, t22
+     movl    -64(%ebp), %ebx        
+     addl    %ebx, %eax             
+     movl    %eax, -68(%ebp)        
+     movl    8(%ebp), %eax           #  44:     add    t24 <- v1, t23
+     movl    -68(%ebp), %ebx        
+     addl    %ebx, %eax             
-     movl    8(%ebp), %eax           #  44:     param  0 <- v1
-     pushl   %eax                   
-     call    DOFS                    #  45:     call   t25 <- DOFS
-     addl    $4, %esp               
-     movl    %eax, -76(%ebp)        
-     movl    -72(%ebp), %eax         #  46:     add    t26 <- t24, t25
-     movl    -76(%ebp), %ebx        
-     addl    %ebx, %eax             
-     movl    %eax, -80(%ebp)        
-     movl    8(%ebp), %eax           #  47:     add    t27 <- v1, t26
-     movl    -80(%ebp), %ebx        
-     addl    %ebx, %eax             
-     movl    %eax, -84(%ebp)        
-     movl    $100, %eax              #  48:     assign @t27 <- 100
+     movl    $100, %eax              #  45:     assign @t24 <- 100
-     movl    -84(%ebp), %edi        
+     movl    -72(%ebp), %edi        
-     addl    $96, %esp               # remove locals
+     addl    $84, %esp               # remove locals
+     jmp     l_test_23               #  31:     goto   23
-     jmp     l_test_24_while_cond    #  33:     goto   24_while_cond
+     jmp     l_test_24_while_cond    #  34:     goto   24_while_cond
+ l_test_23:
