-     #    -88(%ebp)   4  [ $t28      <int> %ebp-88 ]
+     #    -88(%ebp)   4  [ $t6       <int> %ebp-88 ]
-     #    -92(%ebp)   4  [ $t29      <int> %ebp-92 ]
+     #    -92(%ebp)   4  [ $t7       <int> %ebp-92 ]
-     #    -96(%ebp)   4  [ $t30      <int> %ebp-96 ]
+     #    -96(%ebp)   4  [ $t8       <int> %ebp-96 ]
-     #   -100(%ebp)   4  [ $t6       <int> %ebp-100 ]
+     #   -100(%ebp)   4  [ $t9       <int> %ebp-100 ]
-     #   -104(%ebp)   4  [ $t7       <int> %ebp-104 ]
-     #   -108(%ebp)   4  [ $t8       <int> %ebp-108 ]
-     #   -112(%ebp)   4  [ $t9       <int> %ebp-112 ]
-     #   -116(%ebp)   4  [ $v4       <int> %ebp-116 ]
+     #   -104(%ebp)   4  [ $v4       <int> %ebp-104 ]
-     #   -117(%ebp)   1  [ $v5       <char> %ebp-117 ]
+     #   -105(%ebp)   1  [ $v5       <char> %ebp-105 ]
-     pushl   %ebp                   
-     movl    %esp, %ebp             
-     pushl   %ebx                    # save callee saved registers
-     pushl   %esi                   
+     pushl   %ebp                   
+     movl    %esp, %ebp             
+     pushl   %ebx                    # save callee saved registers
-     pushl   %edi                   
+     pushl   %esi                   
+     pushl   %edi                   
-     subl    $108, %esp              # make room for locals
+     subl    $96, %esp               # make room for locals
-     movl    $27, %ecx              
+     movl    $24, %ecx              
+     movl    %eax, -88(%ebp)        
+     movl    -88(%ebp), %eax         #   1:     assign v4 <- t6
-     movl    %eax, -100(%ebp)       
+     movl    %eax, -104(%ebp)       
-     movl    -100(%ebp), %eax        #   1:     assign v4 <- t6
-     movl    %eax, -116(%ebp)       
-     movl    %eax, -104(%ebp)       
+     movl    %eax, -92(%ebp)        
-     movl    -104(%ebp), %eax        #   4:     div    t8 <- t7, 59533
+     movl    -92(%ebp), %eax         #   4:     div    t8 <- t7, 59533
-     movl    %eax, -108(%ebp)       
+     movl    %eax, -96(%ebp)        
-     movl    -108(%ebp), %eax        #   5:     if     t8 >= 28146 goto 3_while_body
+     movl    -96(%ebp), %eax         #   5:     if     t8 >= 28146 goto 3_while_body
-     movl    %eax, -112(%ebp)       
+     movl    %eax, -100(%ebp)       
-     movl    -112(%ebp), %eax        #  13:     mul    t10 <- t9, 50851
+     movl    -100(%ebp), %eax        #  13:     mul    t10 <- t9, 50851
-     movl    $18163, %eax            #  17:     div    t13 <- 18163, 99457
+     movl    -16(%ebp), %eax         #  17:     mul    t12 <- t10, t11
-     movl    $99457, %ebx           
+     movl    -20(%ebp), %ebx        
-     cdq                            
-     idivl   %ebx                   
+     imull   %ebx                   
+     movl    %eax, -24(%ebp)        
+     call    ReadInt                 #  18:     call   t13 <- ReadInt
-     movl    -28(%ebp), %eax         #  18:     mul    t14 <- t13, 50851
+     movl    -24(%ebp), %eax         #  19:     add    t14 <- t12, t13
-     movl    $50851, %ebx           
+     movl    -28(%ebp), %ebx        
-     imull   %ebx                   
+     addl    %ebx, %eax             
+     movl    $3, %eax                #  20:     param  1 <- 3
-     movl    -16(%ebp), %eax         #  19:     mul    t12 <- t10, t11
-     movl    -20(%ebp), %ebx        
-     imull   %ebx                   
+     pushl   %eax                   
-     movl    %eax, -24(%ebp)        
+     movl    8(%ebp), %eax           #  21:     param  0 <- v0
+     pushl   %eax                   
-     call    ReadInt                 #  20:     call   t15 <- ReadInt
+     call    DIM                     #  22:     call   t15 <- DIM
+     addl    $8, %esp               
-     movl    -24(%ebp), %eax         #  21:     add    t16 <- t12, t15
+     movl    -32(%ebp), %eax         #  23:     mul    t16 <- t14, t15
-     addl    %ebx, %eax             
+     imull   %ebx                   
+     movl    -40(%ebp), %eax         #  24:     add    t17 <- t16, 2629
+     movl    $2629, %ebx            
+     addl    %ebx, %eax             
+     movl    %eax, -44(%ebp)        
-     movl    $3, %eax                #  22:     param  1 <- 3
+     movl    $4, %eax                #  25:     param  1 <- 4
-     movl    8(%ebp), %eax           #  23:     param  0 <- v0
+     movl    8(%ebp), %eax           #  26:     param  0 <- v0
-     call    DIM                     #  24:     call   t17 <- DIM
+     call    DIM                     #  27:     call   t18 <- DIM
-     movl    %eax, -44(%ebp)        
+     movl    %eax, -48(%ebp)        
-     call    ReadInt                 #  25:     call   t19 <- ReadInt
+     movl    -44(%ebp), %eax         #  28:     mul    t19 <- t17, t18
+     movl    -48(%ebp), %ebx        
+     imull   %ebx                   
-     movl    -40(%ebp), %eax         #  26:     mul    t18 <- t16, t17
-     movl    -44(%ebp), %ebx        
-     imull   %ebx                   
-     movl    %eax, -48(%ebp)        
-     movl    -48(%ebp), %eax         #  27:     add    t20 <- t18, 2629
+     movl    -52(%ebp), %eax         #  29:     add    t20 <- t19, 97347
-     movl    $2629, %ebx            
+     movl    $97347, %ebx           
-     movl    $4, %eax                #  28:     param  1 <- 4
+     movl    $5, %eax                #  30:     param  1 <- 5
-     movl    8(%ebp), %eax           #  29:     param  0 <- v0
+     movl    8(%ebp), %eax           #  31:     param  0 <- v0
-     call    DIM                     #  30:     call   t21 <- DIM
+     call    DIM                     #  32:     call   t21 <- DIM
-     movl    -56(%ebp), %eax         #  31:     mul    t22 <- t20, t21
+     movl    -56(%ebp), %eax         #  33:     mul    t22 <- t20, t21
-     movl    -64(%ebp), %eax         #  32:     add    t23 <- t22, 97347
+     movl    -64(%ebp), %eax         #  34:     add    t23 <- t22, 94546
-     movl    $97347, %ebx           
+     movl    $94546, %ebx           
-     movl    $5, %eax                #  33:     param  1 <- 5
+     movl    -68(%ebp), %eax         #  35:     mul    t24 <- t23, 1
+     movl    $1, %ebx               
-     pushl   %eax                   
+     imull   %ebx                   
-     movl    8(%ebp), %eax           #  34:     param  0 <- v0
-     pushl   %eax                   
-     call    DIM                     #  35:     call   t24 <- DIM
-     addl    $8, %esp               
-     movl    -68(%ebp), %eax         #  36:     mul    t25 <- t23, t24
+     movl    8(%ebp), %eax           #  36:     param  0 <- v0
-     movl    -72(%ebp), %ebx        
-     imull   %ebx                   
+     pushl   %eax                   
+     call    DOFS                    #  37:     call   t25 <- DOFS
+     addl    $4, %esp               
-     movl    -76(%ebp), %eax         #  37:     add    t26 <- t25, 94546
+     movl    -72(%ebp), %eax         #  38:     add    t26 <- t24, t25
-     movl    $94546, %ebx           
+     movl    -76(%ebp), %ebx        
-     movl    -80(%ebp), %eax         #  38:     mul    t27 <- t26, 1
+     movl    8(%ebp), %eax           #  39:     add    t27 <- v0, t26
+     movl    -80(%ebp), %ebx        
-     movl    $1, %ebx               
+     addl    %ebx, %eax             
-     imull   %ebx                   
-     movl    8(%ebp), %eax           #  39:     param  0 <- v0
-     pushl   %eax                   
-     call    DOFS                    #  40:     call   t28 <- DOFS
-     addl    $4, %esp               
-     movl    %eax, -88(%ebp)        
-     movl    -84(%ebp), %eax         #  41:     add    t29 <- t27, t28
-     movl    -88(%ebp), %ebx        
-     addl    %ebx, %eax             
-     movl    %eax, -92(%ebp)        
-     movl    8(%ebp), %eax           #  42:     add    t30 <- v0, t29
-     movl    -92(%ebp), %ebx        
-     addl    %ebx, %eax             
-     movl    %eax, -96(%ebp)        
-     movl    $99, %eax               #  43:     assign @t30 <- 99
+     movl    $99, %eax               #  40:     assign @t27 <- 99
-     movl    -96(%ebp), %edi        
+     movl    -84(%ebp), %edi        
-     addl    $108, %esp              # remove locals
+     addl    $96, %esp               # remove locals
+     jmp     l_f2_30                 #  31:     goto   30
+     jmp     l_f2_30                 #  32:     goto   30
+     jmp     l_f2_30                 #  33:     goto   30
-     jmp     l_f2_27_if_true         #  31:     goto   27_if_true
+     jmp     l_f2_27_if_true         #  34:     goto   27_if_true
+ l_f2_30:
-     jmp     l_f2_27_if_true         #  32:     goto   27_if_true
+     jmp     l_f2_27_if_true         #  36:     goto   27_if_true
-     jmp     l_f2_26                 #  34:     goto   26
+     jmp     l_f2_26                 #  38:     goto   26
-     addl    $1, %esp               
+     addl    $4, %esp               
+     jmp     l_test_7                #  21:     goto   7
-     jmp     l_test_13               #  23:     goto   13
+     jmp     l_test_13               #  24:     goto   13
-     jmp     l_test_14_while_cond    #  24:     goto   14_while_cond
+     jmp     l_test_14_while_cond    #  25:     goto   14_while_cond
-     movl    $100, %eax              #  26:     if     100 # 100 goto 17_if_true
+     movl    $100, %eax              #  27:     if     100 # 100 goto 17_if_true
-     jmp     l_test_18_if_false      #  27:     goto   18_if_false
+     jmp     l_test_18_if_false      #  28:     goto   18_if_false
-     jmp     l_test_16               #  29:     goto   16
+     jmp     l_test_16               #  30:     goto   16
-     jmp     l_test_8_while_cond     #  32:     goto   8_while_cond
+     jmp     l_test_8_while_cond     #  33:     goto   8_while_cond
+ l_test_7:
