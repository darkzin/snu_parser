+     jmp     l_f0_1                  #   6:     goto   1
-     jmp     l_f0_2_while_cond       #   6:     goto   2_while_cond
+     jmp     l_f0_2_while_cond       #   7:     goto   2_while_cond
+     jmp     l_f0_7                  #   9:     goto   7
-     movl    $1, %eax                #   8:     assign t3 <- 1
+     movl    $1, %eax                #  10:     assign t3 <- 1
-     jmp     l_f0_8                  #   9:     goto   8
+     jmp     l_f0_8                  #  11:     goto   8
+ l_f0_7:
-     movl    $0, %eax                #  10:     assign t3 <- 0
+     movl    $0, %eax                #  13:     assign t3 <- 0
-     movzbl  -14(%ebp), %eax         #  12:     return t3
+     movzbl  -14(%ebp), %eax         #  15:     return t3
-     #-255196(%ebp)255160  [ $v1       <array 68 of <array 1 of <array 8 of <array 7 of <array 67 of <char>>>>>> %ebp-255196 ]
+     #   -255196(%ebp)  255160  [ $v1       <array 68 of <array 1 of <array 8 of <array 7 of <array 67 of <char>>>>>> %ebp-255196 ]
-     #-255197(%ebp)   1  [ $v2       <char> %ebp-255197 ]
+     #   -255197(%ebp)   1  [ $v2       <char> %ebp-255197 ]
-     addl    $9, %esp               
+     addl    $12, %esp              
-     #-255180(%ebp)255160  [ $v1       <array 68 of <array 1 of <array 8 of <array 7 of <array 67 of <char>>>>>> %ebp-255180 ]
+     #   -255180(%ebp)  255160  [ $v1       <array 68 of <array 1 of <array 8 of <array 7 of <array 67 of <char>>>>>> %ebp-255180 ]
-     #-255181(%ebp)   1  [ $v2       <bool> %ebp-255181 ]
+     #   -255181(%ebp)   1  [ $v2       <bool> %ebp-255181 ]
-     addl    $9, %esp               
+     addl    $12, %esp              
+     jmp     l_f2_0                  #   7:     goto   0
-     jmp     l_f2_1_while_cond       #   8:     goto   1_while_cond
+     jmp     l_f2_1_while_cond       #   9:     goto   1_while_cond
+ l_f2_0:
+     jmp     l_f2_6_if_false         #  11:     goto   6_if_false
+     jmp     l_f2_6_if_false         #  12:     goto   6_if_false
-     jmp     l_f2_4                  #   9:     goto   4
+     jmp     l_f2_4                  #  13:     goto   4
+ l_f2_6_if_false:
-     movl    $99, %eax               #  11:     if     99 >= 99 goto 9
+     movl    $99, %eax               #  16:     if     99 >= 99 goto 9
-     jmp     l_f2_10                 #  12:     goto   10
+     jmp     l_f2_10                 #  17:     goto   10
-     movl    $1, %eax                #  14:     assign t4 <- 1
+     movl    $1, %eax                #  19:     assign t4 <- 1
-     jmp     l_f2_11                 #  15:     goto   11
+     jmp     l_f2_11                 #  20:     goto   11
-     movl    $0, %eax                #  17:     assign t4 <- 0
+     movl    $0, %eax                #  22:     assign t4 <- 0
-     movzbl  -18(%ebp), %eax         #  19:     assign v2 <- t4
+     movzbl  -18(%ebp), %eax         #  24:     assign v2 <- t4
