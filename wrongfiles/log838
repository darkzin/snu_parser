+     jmp     l_f1_12                 #  16:     goto   12
-     movl    $1, %eax                #  16:     assign t6 <- 1
+     movl    $1, %eax                #  17:     assign t6 <- 1
-     jmp     l_f1_13                 #  17:     goto   13
+     jmp     l_f1_13                 #  18:     goto   13
+ l_f1_12:
-     movl    $0, %eax                #  18:     assign t6 <- 0
+     movl    $0, %eax                #  20:     assign t6 <- 0
-     movzbl  -25(%ebp), %eax         #  20:     return t6
+     movzbl  -25(%ebp), %eax         #  22:     return t6
+     jmp     l_f2_0                  #   2:     goto   0
-     movl    $100, %eax              #   3:     assign v0 <- 100
+     movl    $100, %eax              #   4:     assign v0 <- 100
-     movl    $78126, %eax            #   4:     if     78126 >= 93648 goto 6_if_true
+     movl    $78126, %eax            #   5:     if     78126 >= 93648 goto 6_if_true
-     jmp     l_f2_7_if_false         #   5:     goto   7_if_false
+     jmp     l_f2_7_if_false         #   6:     goto   7_if_false
-     jmp     l_f2_5                  #   7:     goto   5
+     jmp     l_f2_5                  #   8:     goto   5
-     jmp     l_f2_1_while_cond       #  10:     goto   1_while_cond
+     jmp     l_f2_1_while_cond       #  11:     goto   1_while_cond
+ l_f2_0:
-     call    dummyCHARfunc           #  11:     call   t3 <- dummyCHARfunc
+     call    dummyCHARfunc           #  13:     call   t3 <- dummyCHARfunc
-     movzbl  -13(%ebp), %eax         #  12:     if     t3 <= 99 goto 10
+     movzbl  -13(%ebp), %eax         #  14:     if     t3 <= 99 goto 10
-     jmp     l_f2_11                 #  13:     goto   11
+     jmp     l_f2_11                 #  15:     goto   11
-     movl    $1, %eax                #  15:     assign t4 <- 1
+     movl    $1, %eax                #  17:     assign t4 <- 1
-     jmp     l_f2_12                 #  16:     goto   12
+     jmp     l_f2_12                 #  18:     goto   12
-     movl    $0, %eax                #  18:     assign t4 <- 0
+     movl    $0, %eax                #  20:     assign t4 <- 0
-     movzbl  -14(%ebp), %eax         #  20:     return t4
+     movzbl  -14(%ebp), %eax         #  22:     return t4
-     movl    $39921, %eax            #  21:     sub    t5 <- 39921, 42238
+     movl    $39921, %eax            #  23:     sub    t5 <- 39921, 42238
-     movl    -20(%ebp), %eax         #  22:     assign v1 <- t5
+     movl    -20(%ebp), %eax         #  24:     assign v1 <- t5
