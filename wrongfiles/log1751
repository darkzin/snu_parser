-     #    -32(%ebp)   4  [ $t14      <int> %ebp-32 ]
-     #    -36(%ebp)   4  [ $t15      <ptr(4) to <array 56 of <array 15 of <array 94 of <array 98 of <array 99 of <int>>>>>>> %ebp-36 ]
+     #    -32(%ebp)   4  [ $t14      <ptr(4) to <array 56 of <array 15 of <array 94 of <array 98 of <array 99 of <int>>>>>>> %ebp-32 ]
+     #    -36(%ebp)   4  [ $t15      <int> %ebp-36 ]
-     #    -48(%ebp)   4  [ $t18      <int> %ebp-48 ]
+     #    -48(%ebp)   4  [ $t18      <ptr(4) to <array 56 of <array 15 of <array 94 of <array 98 of <array 99 of <int>>>>>>> %ebp-48 ]
+     #    -64(%ebp)   4  [ $t21      <int> %ebp-64 ]
-     #    -64(%ebp)   4  [ $t21      <ptr(4) to <array 56 of <array 15 of <array 94 of <array 98 of <array 99 of <int>>>>>>> %ebp-64 ]
+     #    -68(%ebp)   4  [ $t22      <ptr(4) to <array 56 of <array 15 of <array 94 of <array 98 of <array 99 of <int>>>>>>> %ebp-68 ]
-     #    -68(%ebp)   4  [ $t22      <int> %ebp-68 ]
-     #    -80(%ebp)   4  [ $t25      <ptr(4) to <array 56 of <array 15 of <array 94 of <array 98 of <array 99 of <int>>>>>>> %ebp-80 ]
+     #    -80(%ebp)   4  [ $t25      <int> %ebp-80 ]
-     #    -88(%ebp)   4  [ $t27      <int> %ebp-88 ]
+     #    -88(%ebp)   4  [ $t27      <ptr(4) to <array 56 of <array 15 of <array 94 of <array 98 of <array 99 of <int>>>>>>> %ebp-88 ]
-     #   -104(%ebp)   4  [ $t30      <ptr(4) to <array 56 of <array 15 of <array 94 of <array 98 of <array 99 of <int>>>>>>> %ebp-104 ]
-     #   -108(%ebp)   4  [ $t31      <int> %ebp-108 ]
+     #   -104(%ebp)   4  [ $t30      <int> %ebp-104 ]
-     #   -112(%ebp)   4  [ $t32      <int> %ebp-112 ]
-     #   -116(%ebp)   4  [ $t33      <int> %ebp-116 ]
-     #   -117(%ebp)   1  [ $t34      <bool> %ebp-117 ]
+     #   -105(%ebp)   1  [ $t31      <bool> %ebp-105 ]
-     #   -124(%ebp)   4  [ $t4       <ptr(4) to <array 56 of <array 15 of <array 94 of <array 98 of <array 99 of <int>>>>>>> %ebp-124 ]
+     #   -112(%ebp)   4  [ $t4       <ptr(4) to <array 56 of <array 15 of <array 94 of <array 98 of <array 99 of <int>>>>>>> %ebp-112 ]
-     #   -125(%ebp)   1  [ $t5       <bool> %ebp-125 ]
+     #   -113(%ebp)   1  [ $t5       <bool> %ebp-113 ]
-     #   -132(%ebp)   4  [ $t6       <ptr(4) to <array 56 of <array 15 of <array 94 of <array 98 of <array 99 of <int>>>>>>> %ebp-132 ]
+     #   -120(%ebp)   4  [ $t6       <ptr(4) to <array 56 of <array 15 of <array 94 of <array 98 of <array 99 of <int>>>>>>> %ebp-120 ]
-     #   -136(%ebp)   4  [ $t7       <int> %ebp-136 ]
+     #   -124(%ebp)   4  [ $t7       <int> %ebp-124 ]
-     #   -140(%ebp)   4  [ $t8       <ptr(4) to <array 56 of <array 15 of <array 94 of <array 98 of <array 99 of <int>>>>>>> %ebp-140 ]
+     #   -128(%ebp)   4  [ $t8       <ptr(4) to <array 56 of <array 15 of <array 94 of <array 98 of <array 99 of <int>>>>>>> %ebp-128 ]
-     #   -144(%ebp)   4  [ $t9       <int> %ebp-144 ]
+     #   -132(%ebp)   4  [ $t9       <int> %ebp-132 ]
-     #1230687448(%ebp)-1230687592  [ $v3       <array 56 of <array 15 of <array 94 of <array 98 of <array 99 of <int>>>>>> %ebp+1230687448 ]
+     #   1230687460(%ebp)  -1230687592  [ $v3       <array 56 of <array 15 of <array 94 of <array 98 of <array 99 of <int>>>>>> %ebp+1230687460 ]
-     #1230687444(%ebp)   4  [ $v4       <int> %ebp+1230687444 ]
+     #   1230687456(%ebp)   4  [ $v4       <int> %ebp+1230687456 ]
-     pushl   %ebp                   
-     movl    %esp, %ebp             
-     pushl   %ebx                    # save callee saved registers
-     pushl   %esi                   
+     pushl   %ebp                   
+     movl    %esp, %ebp             
+     pushl   %ebx                    # save callee saved registers
-     pushl   %edi                   
+     pushl   %esi                   
+     pushl   %edi                   
-     subl    $-1230687456, %esp      # make room for locals
+     subl    $-1230687468, %esp      # make room for locals
+     cld                             # memset local stack area to 0
+     xorl    %eax, %eax             
+     movl    $-307671867, %ecx      
+     mov     %esp, %edi             
+     rep     stosl                  
-     movl    $5,1230687448(%ebp)     # local array 'v3': 5 dimensions
+     movl    $5,1230687460(%ebp)     # local array 'v3': 5 dimensions
-     movl    $56,1230687452(%ebp)    #   dimension 1: 56 elements
+     movl    $56,1230687464(%ebp)    #   dimension 1: 56 elements
-     movl    $15,1230687456(%ebp)    #   dimension 2: 15 elements
+     movl    $15,1230687468(%ebp)    #   dimension 2: 15 elements
-     movl    $94,1230687460(%ebp)    #   dimension 3: 94 elements
+     movl    $94,1230687472(%ebp)    #   dimension 3: 94 elements
-     movl    $98,1230687464(%ebp)    #   dimension 4: 98 elements
+     movl    $98,1230687476(%ebp)    #   dimension 4: 98 elements
-     movl    $99,1230687468(%ebp)    #   dimension 5: 99 elements
+     movl    $99,1230687480(%ebp)    #   dimension 5: 99 elements
-     leal    1230687448(%ebp), %eax  #  15:     &()    t4 <- v3
+     leal    1230687460(%ebp), %eax  #  15:     &()    t4 <- v3
-     movl    %eax, -124(%ebp)       
+     movl    %eax, -112(%ebp)       
-     movl    -124(%ebp), %eax        #  16:     param  1 <- t4
+     movl    -112(%ebp), %eax        #  16:     param  1 <- t4
-     addl    $9, %esp               
+     addl    $12, %esp              
-     movb    %al, -125(%ebp)        
+     movb    %al, -113(%ebp)        
-     leal    1230687448(%ebp), %eax  #  23:     &()    t6 <- v3
+     leal    1230687460(%ebp), %eax  #  23:     &()    t6 <- v3
-     movl    %eax, -132(%ebp)       
+     movl    %eax, -120(%ebp)       
-     movl    %eax, -136(%ebp)       
+     movl    %eax, -124(%ebp)       
-     leal    1230687448(%ebp), %eax  #  26:     &()    t8 <- v3
+     leal    1230687460(%ebp), %eax  #  26:     &()    t8 <- v3
-     movl    %eax, -140(%ebp)       
+     movl    %eax, -128(%ebp)       
-     movl    -140(%ebp), %eax        #  27:     param  0 <- t8
+     movl    -128(%ebp), %eax        #  27:     param  0 <- t8
-     movl    %eax, -144(%ebp)       
+     movl    %eax, -132(%ebp)       
+     movl    -124(%ebp), %eax        #  29:     mul    t10 <- t7, t9
+     movl    -132(%ebp), %ebx       
+     imull   %ebx                   
+     movl    %eax, -16(%ebp)        
-     movl    $83248, %eax            #  29:     sub    t11 <- 83248, 88602
+     movl    $87063, %eax            #  30:     sub    t11 <- 87063, 71359
-     movl    $88602, %ebx           
+     movl    $71359, %ebx           
+     movl    -20(%ebp), %eax         #  31:     add    t12 <- t11, 53526
+     movl    $53526, %ebx           
+     addl    %ebx, %eax             
+     movl    %eax, -24(%ebp)        
-     movl    -136(%ebp), %eax        #  30:     mul    t10 <- t7, t9
+     movl    -16(%ebp), %eax         #  32:     add    t13 <- t10, t12
-     movl    -144(%ebp), %ebx       
+     movl    -24(%ebp), %ebx        
+     addl    %ebx, %eax             
+     movl    %eax, -28(%ebp)        
+     movl    $3, %eax                #  33:     param  1 <- 3
+     pushl   %eax                   
+     leal    1230687460(%ebp), %eax  #  34:     &()    t14 <- v3
+     movl    %eax, -32(%ebp)        
+     movl    -32(%ebp), %eax         #  35:     param  0 <- t14
+     pushl   %eax                   
+     call    DIM                     #  36:     call   t15 <- DIM
+     addl    $8, %esp               
+     movl    %eax, -36(%ebp)        
+     movl    -28(%ebp), %eax         #  37:     mul    t16 <- t13, t15
+     movl    -36(%ebp), %ebx        
-     movl    %eax, -16(%ebp)        
-     movl    $87063, %eax            #  31:     sub    t12 <- 87063, 71359
-     movl    $71359, %ebx           
-     subl    %ebx, %eax             
-     movl    %eax, -24(%ebp)        
+     movl    %eax, -40(%ebp)        
-     movl    -24(%ebp), %eax         #  32:     add    t13 <- t12, 53526
+     movl    -40(%ebp), %eax         #  38:     add    t17 <- t16, 34084
-     movl    $53526, %ebx           
+     movl    $34084, %ebx           
+     movl    %eax, -44(%ebp)        
+     movl    $4, %eax                #  39:     param  1 <- 4
+     pushl   %eax                   
+     leal    1230687460(%ebp), %eax  #  40:     &()    t18 <- v3
-     movl    %eax, -28(%ebp)        
+     movl    %eax, -48(%ebp)        
-     movl    -16(%ebp), %eax         #  33:     add    t14 <- t10, t13
-     movl    -28(%ebp), %ebx        
-     addl    %ebx, %eax             
-     movl    %eax, -32(%ebp)        
-     movl    $3, %eax                #  34:     param  1 <- 3
-     pushl   %eax                   
-     leal    1230687448(%ebp), %eax  #  35:     &()    t15 <- v3
-     movl    %eax, -36(%ebp)        
-     movl    -36(%ebp), %eax         #  36:     param  0 <- t15
+     movl    -48(%ebp), %eax         #  41:     param  0 <- t18
-     call    DIM                     #  37:     call   t16 <- DIM
+     call    DIM                     #  42:     call   t19 <- DIM
-     movl    %eax, -40(%ebp)        
-     movl    $87063, %eax            #  38:     sub    t18 <- 87063, 71359
-     movl    $71359, %ebx           
-     subl    %ebx, %eax             
-     movl    %eax, -48(%ebp)        
-     movl    -48(%ebp), %eax         #  39:     add    t19 <- t18, 53526
-     movl    $53526, %ebx           
-     addl    %ebx, %eax             
-     movl    -32(%ebp), %eax         #  40:     mul    t17 <- t14, t16
+     movl    -44(%ebp), %eax         #  43:     mul    t20 <- t17, t19
-     movl    -40(%ebp), %ebx        
+     movl    -52(%ebp), %ebx        
-     movl    %eax, -44(%ebp)        
-     movl    -44(%ebp), %eax         #  41:     add    t20 <- t17, 34084
-     movl    $34084, %ebx           
-     addl    %ebx, %eax             
-     movl    $4, %eax                #  42:     param  1 <- 4
-     pushl   %eax                   
-     leal    1230687448(%ebp), %eax  #  43:     &()    t21 <- v3
+     movl    -60(%ebp), %eax         #  44:     add    t21 <- t20, 96884
+     movl    $96884, %ebx           
+     addl    %ebx, %eax             
+     movl    $5, %eax                #  45:     param  1 <- 5
+     pushl   %eax                   
+     leal    1230687460(%ebp), %eax  #  46:     &()    t22 <- v3
+     movl    %eax, -68(%ebp)        
-     movl    -64(%ebp), %eax         #  44:     param  0 <- t21
+     movl    -68(%ebp), %eax         #  47:     param  0 <- t22
-     call    DIM                     #  45:     call   t22 <- DIM
+     call    DIM                     #  48:     call   t23 <- DIM
-     movl    %eax, -68(%ebp)        
+     movl    %eax, -72(%ebp)        
-     movl    -60(%ebp), %eax         #  46:     mul    t23 <- t20, t22
+     movl    -64(%ebp), %eax         #  49:     mul    t24 <- t21, t23
-     movl    -68(%ebp), %ebx        
+     movl    -72(%ebp), %ebx        
-     movl    %eax, -72(%ebp)        
-     movl    -72(%ebp), %eax         #  47:     add    t24 <- t23, 96884
-     movl    $96884, %ebx           
-     addl    %ebx, %eax             
-     movl    $5, %eax                #  48:     param  1 <- 5
-     pushl   %eax                   
-     leal    1230687448(%ebp), %eax  #  49:     &()    t25 <- v3
+     movl    -76(%ebp), %eax         #  50:     add    t25 <- t24, 12869
+     movl    $12869, %ebx           
+     addl    %ebx, %eax             
-     movl    -80(%ebp), %eax         #  50:     param  0 <- t25
-     pushl   %eax                   
-     call    DIM                     #  51:     call   t26 <- DIM
-     addl    $8, %esp               
-     movl    %eax, -84(%ebp)        
-     movl    -76(%ebp), %eax         #  52:     mul    t27 <- t24, t26
-     movl    -84(%ebp), %ebx        
-     imull   %ebx                   
-     movl    %eax, -88(%ebp)        
-     movl    -88(%ebp), %eax         #  53:     add    t28 <- t27, 12869
-     movl    $12869, %ebx           
-     addl    %ebx, %eax             
-     movl    %eax, -92(%ebp)        
-     movl    -92(%ebp), %eax         #  54:     mul    t29 <- t28, 4
+     movl    -80(%ebp), %eax         #  51:     mul    t26 <- t25, 4
+     movl    %eax, -84(%ebp)        
+     leal    1230687460(%ebp), %eax  #  52:     &()    t27 <- v3
+     movl    %eax, -88(%ebp)        
+     movl    -88(%ebp), %eax         #  53:     param  0 <- t27
+     pushl   %eax                   
+     call    DOFS                    #  54:     call   t28 <- DOFS
+     addl    $4, %esp               
+     movl    %eax, -92(%ebp)        
+     movl    -84(%ebp), %eax         #  55:     add    t29 <- t26, t28
+     movl    -92(%ebp), %ebx        
+     addl    %ebx, %eax             
-     leal    1230687448(%ebp), %eax  #  55:     &()    t30 <- v3
+     movl    -120(%ebp), %eax        #  56:     add    t30 <- t6, t29
+     movl    -96(%ebp), %ebx        
+     addl    %ebx, %eax             
-     movl    -104(%ebp), %eax        #  56:     param  0 <- t30
-     pushl   %eax                   
-     call    DOFS                    #  57:     call   t31 <- DOFS
-     addl    $4, %esp               
-     movl    %eax, -108(%ebp)       
-     movl    -96(%ebp), %eax         #  58:     add    t32 <- t29, t31
-     movl    -108(%ebp), %ebx       
-     addl    %ebx, %eax             
-     movl    %eax, -112(%ebp)       
-     movl    -132(%ebp), %eax        #  59:     add    t33 <- t6, t32
-     movl    -112(%ebp), %ebx       
-     addl    %ebx, %eax             
-     movl    %eax, -116(%ebp)       
-     movl    $95776, %eax            #  60:     assign @t33 <- 95776
+     movl    $95776, %eax            #  57:     assign @t30 <- 95776
-     movl    -116(%ebp), %edi       
+     movl    -104(%ebp), %edi       
-     jmp     l_f1_19_if_false        #  62:     goto   19_if_false
+     jmp     l_f1_19_if_false        #  59:     goto   19_if_false
-     jmp     l_f1_17                 #  63:     goto   17
+     jmp     l_f1_17                 #  60:     goto   17
+     jmp     l_f1_22                 #  63:     goto   22
+     jmp     l_f1_22                 #  64:     goto   22
-     movl    $1, %eax                #  66:     assign t34 <- 1
+     movl    $1, %eax                #  65:     assign t31 <- 1
-     movb    %al, -117(%ebp)        
+     movb    %al, -105(%ebp)        
-     jmp     l_f1_23                 #  67:     goto   23
+     jmp     l_f1_23                 #  66:     goto   23
+ l_f1_22:
-     movl    $0, %eax                #  68:     assign t34 <- 0
+     movl    $0, %eax                #  68:     assign t31 <- 0
-     movb    %al, -117(%ebp)        
+     movb    %al, -105(%ebp)        
-     movzbl  -117(%ebp), %eax        #  70:     return t34
+     movzbl  -105(%ebp), %eax        #  70:     return t31
-     addl    $-1230687456, %esp      # remove locals
+     addl    $-1230687468, %esp      # remove locals
