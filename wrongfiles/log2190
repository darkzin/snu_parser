+     jmp     l_f0_4_if_false         #   3:     goto   4_if_false
-     jmp     l_f0_2                  #   4:     goto   2
+     jmp     l_f0_2                  #   5:     goto   2
+ l_f0_4_if_false:
-     #   -120(%ebp)   4  [ $t36      <int> %ebp-120 ]
-     #   -124(%ebp)   4  [ $t37      <int> %ebp-124 ]
-     #   -125(%ebp)   1  [ $v4       <bool> %ebp-125 ]
+     #   -117(%ebp)   1  [ $v4       <bool> %ebp-117 ]
-     pushl   %ebp                   
-     movl    %esp, %ebp             
-     pushl   %ebx                    # save callee saved registers
-     pushl   %esi                   
+     pushl   %ebp                   
+     movl    %esp, %ebp             
+     pushl   %ebx                    # save callee saved registers
-     pushl   %edi                   
+     pushl   %esi                   
+     pushl   %edi                   
-     subl    $116, %esp              # make room for locals
+     subl    $108, %esp              # make room for locals
-     movl    $29, %ecx              
+     movl    $27, %ecx              
-     movl    $80771, %eax            #  32:     sub    t25 <- 80771, 24121
-     movl    $24121, %ebx           
-     subl    %ebx, %eax             
-     movl    %eax, -76(%ebp)        
-     movl    -76(%ebp), %eax         #  33:     add    t26 <- t25, 63216
-     movl    $63216, %ebx           
-     addl    %ebx, %eax             
-     movl    %eax, -80(%ebp)        
-     movl    -64(%ebp), %eax         #  34:     mul    t24 <- t22, t23
+     movl    -64(%ebp), %eax         #  32:     mul    t24 <- t22, t23
-     movl    -72(%ebp), %eax         #  35:     add    t27 <- t24, 79429
+     movl    -72(%ebp), %eax         #  33:     add    t25 <- t24, 79429
+     movl    %eax, -76(%ebp)        
+     movl    $4, %eax                #  34:     param  1 <- 4
+     pushl   %eax                   
+     movl    8(%ebp), %eax           #  35:     param  0 <- v1
+     pushl   %eax                   
+     call    DIM                     #  36:     call   t26 <- DIM
+     addl    $8, %esp               
+     movl    %eax, -80(%ebp)        
+     movl    -76(%ebp), %eax         #  37:     mul    t27 <- t25, t26
+     movl    -80(%ebp), %ebx        
+     imull   %ebx                   
+     movl    -84(%ebp), %eax         #  38:     add    t28 <- t27, 72569
+     movl    $72569, %ebx           
+     addl    %ebx, %eax             
+     movl    %eax, -88(%ebp)        
-     movl    $4, %eax                #  36:     param  1 <- 4
+     movl    $5, %eax                #  39:     param  1 <- 5
-     movl    8(%ebp), %eax           #  37:     param  0 <- v1
+     movl    8(%ebp), %eax           #  40:     param  0 <- v1
-     call    DIM                     #  38:     call   t28 <- DIM
+     call    DIM                     #  41:     call   t29 <- DIM
-     movl    %eax, -88(%ebp)        
+     movl    %eax, -92(%ebp)        
-     movl    -84(%ebp), %eax         #  39:     mul    t29 <- t27, t28
+     movl    -88(%ebp), %eax         #  42:     mul    t30 <- t28, t29
-     movl    -88(%ebp), %ebx        
+     movl    -92(%ebp), %ebx        
-     movl    %eax, -92(%ebp)        
-     movl    -92(%ebp), %eax         #  40:     add    t30 <- t29, 72569
-     movl    $72569, %ebx           
-     addl    %ebx, %eax             
-     movl    $5, %eax                #  41:     param  1 <- 5
-     pushl   %eax                   
-     movl    8(%ebp), %eax           #  42:     param  0 <- v1
+     movl    -96(%ebp), %eax         #  43:     add    t31 <- t30, 73756
+     movl    $73756, %ebx           
-     pushl   %eax                   
-     call    DIM                     #  43:     call   t31 <- DIM
-     addl    $8, %esp               
+     addl    %ebx, %eax             
-     movl    -96(%ebp), %eax         #  44:     mul    t32 <- t30, t31
+     movl    -100(%ebp), %eax        #  44:     mul    t32 <- t31, 1
-     movl    -100(%ebp), %ebx       
+     movl    $1, %ebx               
-     movl    -104(%ebp), %eax        #  45:     add    t33 <- t32, 73756
+     movl    8(%ebp), %eax           #  45:     param  0 <- v1
-     movl    $73756, %ebx           
+     pushl   %eax                   
+     call    DOFS                    #  46:     call   t33 <- DOFS
-     addl    %ebx, %eax             
+     addl    $4, %esp               
-     movl    -108(%ebp), %eax        #  46:     mul    t34 <- t33, 1
+     movl    -104(%ebp), %eax        #  47:     add    t34 <- t32, t33
+     movl    -108(%ebp), %ebx       
-     movl    $1, %ebx               
+     addl    %ebx, %eax             
-     imull   %ebx                   
-     movl    8(%ebp), %eax           #  47:     param  0 <- v1
+     movl    8(%ebp), %eax           #  48:     add    t35 <- v1, t34
+     movl    -112(%ebp), %ebx       
-     pushl   %eax                   
-     call    DOFS                    #  48:     call   t35 <- DOFS
-     addl    $4, %esp               
+     addl    %ebx, %eax             
-     movl    -112(%ebp), %eax        #  49:     add    t36 <- t34, t35
-     movl    -116(%ebp), %ebx       
-     addl    %ebx, %eax             
-     movl    %eax, -120(%ebp)       
-     movl    8(%ebp), %eax           #  50:     add    t37 <- v1, t36
-     movl    -120(%ebp), %ebx       
-     addl    %ebx, %eax             
-     movl    %eax, -124(%ebp)       
-     movl    $0, %eax                #  51:     assign @t37 <- 0
+     movl    $0, %eax                #  49:     assign @t35 <- 0
-     movl    -124(%ebp), %edi       
+     movl    -116(%ebp), %edi       
-     addl    $116, %esp              # remove locals
+     addl    $108, %esp              # remove locals
+     jmp     l_f2_12                 #  18:     goto   12
-     movl    $1, %eax                #  18:     assign t12 <- 1
+     movl    $1, %eax                #  19:     assign t12 <- 1
-     jmp     l_f2_13                 #  19:     goto   13
+     jmp     l_f2_13                 #  20:     goto   13
+ l_f2_12:
-     movl    $0, %eax                #  20:     assign t12 <- 0
+     movl    $0, %eax                #  22:     assign t12 <- 0
-     movzbl  -15(%ebp), %eax         #  22:     return t12
+     movzbl  -15(%ebp), %eax         #  24:     return t12
