+     jmp     l_f0_12                 #  13:     goto   12
-     movl    $1, %eax                #  14:     assign t1 <- 1
+     movl    $1, %eax                #  15:     assign t1 <- 1
-     jmp     l_f0_13                 #  15:     goto   13
+     jmp     l_f0_13                 #  16:     goto   13
+ l_f0_12:
-     movl    $0, %eax                #  16:     assign t1 <- 0
+     movl    $0, %eax                #  18:     assign t1 <- 0
-     movzbl  -13(%ebp), %eax         #  18:     assign v0 <- t1
+     movzbl  -13(%ebp), %eax         #  20:     assign v0 <- t1
-     call    dummyBOOLfunc           #  20:     call   t2 <- dummyBOOLfunc
+     call    dummyBOOLfunc           #  22:     call   t2 <- dummyBOOLfunc
-     movzbl  -14(%ebp), %eax         #  21:     if     t2 = 1 goto 17_while_body
+     movzbl  -14(%ebp), %eax         #  23:     if     t2 = 1 goto 17_while_body
-     jmp     l_f0_15                 #  22:     goto   15
+     jmp     l_f0_15                 #  24:     goto   15
-     jmp     l_f0_16_while_cond      #  24:     goto   16_while_cond
+     jmp     l_f0_16_while_cond      #  26:     goto   16_while_cond
-     #    -64(%ebp)   4  [ $t20      <int> %ebp-64 ]
+     #    -64(%ebp)   4  [ $t3       <int> %ebp-64 ]
-     #    -68(%ebp)   4  [ $t3       <int> %ebp-68 ]
+     #    -68(%ebp)   4  [ $t4       <int> %ebp-68 ]
-     #    -72(%ebp)   4  [ $t4       <int> %ebp-72 ]
+     #    -72(%ebp)   4  [ $t5       <int> %ebp-72 ]
-     #    -76(%ebp)   4  [ $t5       <int> %ebp-76 ]
+     #    -76(%ebp)   4  [ $t6       <int> %ebp-76 ]
-     #    -80(%ebp)   4  [ $t6       <int> %ebp-80 ]
+     #    -80(%ebp)   4  [ $t7       <int> %ebp-80 ]
-     #    -84(%ebp)   4  [ $t7       <int> %ebp-84 ]
+     #    -84(%ebp)   4  [ $t8       <int> %ebp-84 ]
-     #    -88(%ebp)   4  [ $t8       <int> %ebp-88 ]
+     #    -88(%ebp)   4  [ $t9       <int> %ebp-88 ]
-     #    -92(%ebp)   4  [ $t9       <int> %ebp-92 ]
-     #    -93(%ebp)   1  [ $v2       <char> %ebp-93 ]
+     #    -89(%ebp)   1  [ $v2       <char> %ebp-89 ]
-     #   -100(%ebp)   4  [ $v3       <int> %ebp-100 ]
+     #    -96(%ebp)   4  [ $v3       <int> %ebp-96 ]
-     pushl   %ebp                   
-     movl    %esp, %ebp             
-     pushl   %ebx                    # save callee saved registers
-     pushl   %esi                   
+     pushl   %ebp                   
+     movl    %esp, %ebp             
+     pushl   %ebx                    # save callee saved registers
-     pushl   %edi                   
+     pushl   %esi                   
+     pushl   %edi                   
-     subl    $88, %esp               # make room for locals
+     subl    $84, %esp               # make room for locals
-     movl    $22, %ecx              
+     movl    $21, %ecx              
+     movl    %eax, -64(%ebp)        
+     movl    -64(%ebp), %eax         #   5:     add    t4 <- t3, 8441
+     movl    $8441, %ebx            
+     addl    %ebx, %eax             
-     movl    -68(%ebp), %eax         #   5:     add    t4 <- t3, 8441
-     movl    $8441, %ebx            
-     addl    %ebx, %eax             
-     movl    %eax, -72(%ebp)        
+     movl    %eax, -72(%ebp)        
+     movl    -68(%ebp), %eax         #   9:     mul    t6 <- t4, t5
+     movl    -72(%ebp), %ebx        
+     imull   %ebx                   
+     call    dummyINTfunc            #  10:     call   t7 <- dummyINTfunc
-     movl    -72(%ebp), %eax         #   9:     mul    t6 <- t4, t5
-     movl    -76(%ebp), %ebx        
-     imull   %ebx                   
-     call    dummyINTfunc            #  10:     call   t7 <- dummyINTfunc
+     movl    -76(%ebp), %eax         #  11:     add    t8 <- t6, t7
+     movl    -80(%ebp), %ebx        
+     addl    %ebx, %eax             
-     movl    -80(%ebp), %eax         #  11:     add    t8 <- t6, t7
-     movl    -84(%ebp), %ebx        
-     addl    %ebx, %eax             
-     movl    %eax, -88(%ebp)        
-     movl    %eax, -92(%ebp)        
+     movl    %eax, -88(%ebp)        
-     call    dummyINTfunc            #  15:     call   t11 <- dummyINTfunc
-     movl    %eax, -24(%ebp)        
-     movl    -88(%ebp), %eax         #  16:     mul    t10 <- t8, t9
+     movl    -84(%ebp), %eax         #  15:     mul    t10 <- t8, t9
-     movl    -92(%ebp), %ebx        
+     movl    -88(%ebp), %ebx        
-     movl    -20(%ebp), %eax         #  17:     add    t12 <- t10, 97504
+     movl    -20(%ebp), %eax         #  16:     add    t11 <- t10, 97504
+     movl    %eax, -24(%ebp)        
+     movl    $5, %eax                #  17:     param  1 <- 5
+     pushl   %eax                   
+     movl    12(%ebp), %eax          #  18:     param  0 <- v1
+     pushl   %eax                   
+     call    DIM                     #  19:     call   t12 <- DIM
+     addl    $8, %esp               
-     movl    $5, %eax                #  18:     param  1 <- 5
+     movl    -24(%ebp), %eax         #  20:     mul    t13 <- t11, t12
+     movl    -28(%ebp), %ebx        
-     pushl   %eax                   
+     imull   %ebx                   
-     movl    12(%ebp), %eax          #  19:     param  0 <- v1
-     pushl   %eax                   
-     call    DIM                     #  20:     call   t13 <- DIM
-     addl    $8, %esp               
-     movl    -28(%ebp), %eax         #  21:     mul    t14 <- t12, t13
+     movl    -32(%ebp), %eax         #  21:     add    t14 <- t13, 40806
-     movl    -32(%ebp), %ebx        
+     movl    $40806, %ebx           
-     imull   %ebx                   
+     addl    %ebx, %eax             
-     movl    -36(%ebp), %eax         #  22:     add    t15 <- t14, 40806
-     movl    $40806, %ebx           
-     addl    %ebx, %eax             
-     movl    %eax, -40(%ebp)        
-     movl    -40(%ebp), %eax         #  23:     mul    t16 <- t15, 1
+     movl    -36(%ebp), %eax         #  22:     mul    t15 <- t14, 1
+     movl    %eax, -40(%ebp)        
+     movl    12(%ebp), %eax          #  23:     param  0 <- v1
+     pushl   %eax                   
+     call    DOFS                    #  24:     call   t16 <- DOFS
+     addl    $4, %esp               
-     movl    12(%ebp), %eax          #  24:     param  0 <- v1
+     movl    -40(%ebp), %eax         #  25:     add    t17 <- t15, t16
+     movl    -44(%ebp), %ebx        
-     pushl   %eax                   
-     call    DOFS                    #  25:     call   t17 <- DOFS
-     addl    $4, %esp               
+     addl    %ebx, %eax             
-     movl    -44(%ebp), %eax         #  26:     add    t18 <- t16, t17
+     movl    12(%ebp), %eax          #  26:     add    t18 <- v1, t17
-     movl    12(%ebp), %eax          #  27:     add    t19 <- v1, t18
+     movzbl  -13(%ebp), %eax         #  27:     assign @t18 <- t1
-     movl    -52(%ebp), %ebx        
+     movl    -52(%ebp), %edi        
-     addl    %ebx, %eax             
+     movb    %al, (%edi)            
+     call    ReadInt                 #  28:     call   t19 <- ReadInt
-     movzbl  -13(%ebp), %eax         #  28:     assign @t19 <- t1
+     movl    -56(%ebp), %eax         #  29:     assign v3 <- t19
-     movl    -56(%ebp), %edi        
-     movb    %al, (%edi)            
-     call    ReadInt                 #  29:     call   t20 <- ReadInt
-     movl    %eax, -64(%ebp)        
+     movl    %eax, -96(%ebp)        
-     movl    -64(%ebp), %eax         #  30:     assign v3 <- t20
-     movl    %eax, -100(%ebp)       
-     movl    $99, %eax               #  31:     assign v2 <- 99
+     movl    $99, %eax               #  30:     assign v2 <- 99
-     movb    %al, -93(%ebp)         
+     movb    %al, -89(%ebp)         
-     addl    $88, %esp               # remove locals
+     addl    $84, %esp               # remove locals
-     addl    $1, %esp               
+     addl    $4, %esp               
