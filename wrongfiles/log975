-     #    -72(%ebp)   4  [ $t24      <int> %ebp-72 ]
+     #    -72(%ebp)   4  [ $t3       <int> %ebp-72 ]
-     #    -76(%ebp)   4  [ $t25      <int> %ebp-76 ]
+     #    -76(%ebp)   4  [ $t4       <int> %ebp-76 ]
-     #    -80(%ebp)   4  [ $t3       <int> %ebp-80 ]
+     #    -77(%ebp)   1  [ $t5       <bool> %ebp-77 ]
-     #    -84(%ebp)   4  [ $t4       <int> %ebp-84 ]
+     #    -84(%ebp)   4  [ $t6       <int> %ebp-84 ]
-     #    -85(%ebp)   1  [ $t5       <bool> %ebp-85 ]
+     #    -88(%ebp)   4  [ $t7       <int> %ebp-88 ]
-     #    -92(%ebp)   4  [ $t6       <int> %ebp-92 ]
+     #    -92(%ebp)   4  [ $t8       <int> %ebp-92 ]
-     #    -96(%ebp)   4  [ $t7       <int> %ebp-96 ]
+     #    -96(%ebp)   4  [ $t9       <int> %ebp-96 ]
-     #   -100(%ebp)   4  [ $t8       <int> %ebp-100 ]
-     #   -104(%ebp)   4  [ $t9       <int> %ebp-104 ]
-     #   -105(%ebp)   1  [ $v2       <bool> %ebp-105 ]
+     #    -97(%ebp)   1  [ $v2       <bool> %ebp-97 ]
-     pushl   %ebp                   
-     movl    %esp, %ebp             
-     pushl   %ebx                    # save callee saved registers
-     pushl   %esi                   
+     pushl   %ebp                   
+     movl    %esp, %ebp             
+     pushl   %ebx                    # save callee saved registers
-     pushl   %edi                   
+     pushl   %esi                   
+     pushl   %edi                   
-     subl    $96, %esp               # make room for locals
+     subl    $88, %esp               # make room for locals
-     movl    $24, %ecx              
+     movl    $22, %ecx              
-     movl    %eax, -80(%ebp)        
+     movl    %eax, -72(%ebp)        
-     movl    -80(%ebp), %eax         #   2:     sub    t4 <- t3, 15000
+     movl    -72(%ebp), %eax         #   2:     sub    t4 <- t3, 15000
-     movl    %eax, -84(%ebp)        
+     movl    %eax, -76(%ebp)        
-     movl    -84(%ebp), %eax         #   3:     if     t4 >= 54092 goto 2_while_body
+     movl    -76(%ebp), %eax         #   3:     if     t4 >= 54092 goto 2_while_body
+     jmp     l_f0_10                 #  14:     goto   10
-     movl    $1, %eax                #  15:     assign t5 <- 1
+     movl    $1, %eax                #  16:     assign t5 <- 1
-     movb    %al, -85(%ebp)         
+     movb    %al, -77(%ebp)         
-     jmp     l_f0_11                 #  16:     goto   11
+     jmp     l_f0_11                 #  17:     goto   11
+ l_f0_10:
-     movl    $0, %eax                #  17:     assign t5 <- 0
+     movl    $0, %eax                #  19:     assign t5 <- 0
-     movb    %al, -85(%ebp)         
+     movb    %al, -77(%ebp)         
-     movl    $76235, %eax            #  19:     div    t6 <- 76235, 25581
+     movl    $76235, %eax            #  21:     div    t6 <- 76235, 25581
-     movl    %eax, -92(%ebp)        
+     movl    %eax, -84(%ebp)        
-     movl    -92(%ebp), %eax         #  20:     div    t7 <- t6, 51743
+     movl    -84(%ebp), %eax         #  22:     div    t7 <- t6, 51743
+     movl    %eax, -88(%ebp)        
+     movl    $2, %eax                #  23:     param  1 <- 2
+     pushl   %eax                   
+     movl    8(%ebp), %eax           #  24:     param  0 <- v0
+     pushl   %eax                   
+     call    DIM                     #  25:     call   t8 <- DIM
+     addl    $8, %esp               
+     movl    %eax, -92(%ebp)        
+     movl    -88(%ebp), %eax         #  26:     mul    t9 <- t7, t8
+     movl    -92(%ebp), %ebx        
+     imull   %ebx                   
+     movl    -96(%ebp), %eax         #  27:     add    t10 <- t9, 2131
+     movl    $2131, %ebx            
+     addl    %ebx, %eax             
+     movl    %eax, -16(%ebp)        
-     movl    $2, %eax                #  21:     param  1 <- 2
+     movl    $3, %eax                #  28:     param  1 <- 3
-     movl    8(%ebp), %eax           #  22:     param  0 <- v0
+     movl    8(%ebp), %eax           #  29:     param  0 <- v0
-     call    DIM                     #  23:     call   t8 <- DIM
+     call    DIM                     #  30:     call   t11 <- DIM
-     movl    %eax, -100(%ebp)       
-     movl    $76235, %eax            #  24:     div    t10 <- 76235, 25581
-     movl    $25581, %ebx           
-     cdq                            
-     idivl   %ebx                   
-     movl    %eax, -16(%ebp)        
-     movl    -16(%ebp), %eax         #  25:     div    t11 <- t10, 51743
-     movl    $51743, %ebx           
-     cdq                            
-     idivl   %ebx                   
-     movl    -96(%ebp), %eax         #  26:     mul    t9 <- t7, t8
+     movl    -16(%ebp), %eax         #  31:     mul    t12 <- t10, t11
-     movl    -100(%ebp), %ebx       
+     movl    -20(%ebp), %ebx        
-     movl    %eax, -104(%ebp)       
-     movl    -104(%ebp), %eax        #  27:     add    t12 <- t9, 2131
-     movl    $2131, %ebx            
-     addl    %ebx, %eax             
+     movl    -24(%ebp), %eax         #  32:     add    t13 <- t12, 13852
+     movl    $13852, %ebx           
+     addl    %ebx, %eax             
+     movl    %eax, -28(%ebp)        
-     movl    $3, %eax                #  28:     param  1 <- 3
+     movl    $4, %eax                #  33:     param  1 <- 4
-     movl    8(%ebp), %eax           #  29:     param  0 <- v0
+     movl    8(%ebp), %eax           #  34:     param  0 <- v0
-     call    DIM                     #  30:     call   t13 <- DIM
+     call    DIM                     #  35:     call   t14 <- DIM
-     movl    %eax, -28(%ebp)        
+     movl    %eax, -32(%ebp)        
-     movl    -24(%ebp), %eax         #  31:     mul    t14 <- t12, t13
+     movl    -28(%ebp), %eax         #  36:     mul    t15 <- t13, t14
-     movl    -28(%ebp), %ebx        
+     movl    -32(%ebp), %ebx        
-     movl    %eax, -32(%ebp)        
-     movl    -32(%ebp), %eax         #  32:     add    t15 <- t14, 13852
-     movl    $13852, %ebx           
-     addl    %ebx, %eax             
+     movl    -36(%ebp), %eax         #  37:     add    t16 <- t15, 24990
+     movl    $24990, %ebx           
+     addl    %ebx, %eax             
+     movl    %eax, -40(%ebp)        
-     movl    $4, %eax                #  33:     param  1 <- 4
+     movl    $5, %eax                #  38:     param  1 <- 5
-     movl    8(%ebp), %eax           #  34:     param  0 <- v0
+     movl    8(%ebp), %eax           #  39:     param  0 <- v0
-     call    DIM                     #  35:     call   t16 <- DIM
+     call    DIM                     #  40:     call   t17 <- DIM
-     movl    %eax, -40(%ebp)        
+     movl    %eax, -44(%ebp)        
-     movl    -36(%ebp), %eax         #  36:     mul    t17 <- t15, t16
+     movl    -40(%ebp), %eax         #  41:     mul    t18 <- t16, t17
-     movl    -40(%ebp), %ebx        
+     movl    -44(%ebp), %ebx        
-     movl    %eax, -44(%ebp)        
-     movl    -44(%ebp), %eax         #  37:     add    t18 <- t17, 24990
-     movl    $24990, %ebx           
-     addl    %ebx, %eax             
-     movl    $5, %eax                #  38:     param  1 <- 5
-     pushl   %eax                   
-     movl    8(%ebp), %eax           #  39:     param  0 <- v0
+     movl    -48(%ebp), %eax         #  42:     add    t19 <- t18, 65228
+     movl    $65228, %ebx           
-     pushl   %eax                   
-     call    DIM                     #  40:     call   t19 <- DIM
-     addl    $8, %esp               
+     addl    %ebx, %eax             
-     movl    -48(%ebp), %eax         #  41:     mul    t20 <- t18, t19
+     movl    -52(%ebp), %eax         #  43:     mul    t20 <- t19, 1
-     movl    -52(%ebp), %ebx        
+     movl    $1, %ebx               
-     movl    -56(%ebp), %eax         #  42:     add    t21 <- t20, 65228
+     movl    8(%ebp), %eax           #  44:     param  0 <- v0
-     movl    $65228, %ebx           
+     pushl   %eax                   
+     call    DOFS                    #  45:     call   t21 <- DOFS
-     addl    %ebx, %eax             
+     addl    $4, %esp               
-     movl    -60(%ebp), %eax         #  43:     mul    t22 <- t21, 1
+     movl    -56(%ebp), %eax         #  46:     add    t22 <- t20, t21
+     movl    -60(%ebp), %ebx        
-     movl    $1, %ebx               
+     addl    %ebx, %eax             
-     imull   %ebx                   
-     movl    8(%ebp), %eax           #  44:     param  0 <- v0
+     movl    8(%ebp), %eax           #  47:     add    t23 <- v0, t22
+     movl    -64(%ebp), %ebx        
-     pushl   %eax                   
-     call    DOFS                    #  45:     call   t23 <- DOFS
-     addl    $4, %esp               
+     addl    %ebx, %eax             
-     movl    -64(%ebp), %eax         #  46:     add    t24 <- t22, t23
-     movl    -68(%ebp), %ebx        
-     addl    %ebx, %eax             
-     movl    %eax, -72(%ebp)        
-     movl    8(%ebp), %eax           #  47:     add    t25 <- v0, t24
-     movl    -72(%ebp), %ebx        
-     addl    %ebx, %eax             
-     movl    %eax, -76(%ebp)        
-     movzbl  -85(%ebp), %eax         #  48:     assign @t25 <- t5
+     movzbl  -77(%ebp), %eax         #  48:     assign @t23 <- t5
-     movl    -76(%ebp), %edi        
+     movl    -68(%ebp), %edi        
-     addl    $1, %esp               
+     addl    $4, %esp               
-     addl    $96, %esp               # remove locals
+     addl    $88, %esp               # remove locals
+     jmp     l_f2_5                  #  12:     goto   5
-     jmp     l_f2_6_while_cond       #  13:     goto   6_while_cond
+     jmp     l_f2_6_while_cond       #  14:     goto   6_while_cond
+ l_f2_5:
-     call    dummyBOOLfunc           #  14:     call   t5 <- dummyBOOLfunc
+     call    dummyBOOLfunc           #  16:     call   t5 <- dummyBOOLfunc
-     movzbl  -15(%ebp), %eax         #  15:     if     t5 = 1 goto 11_if_true
+     movzbl  -15(%ebp), %eax         #  17:     if     t5 = 1 goto 11_if_true
+     jmp     l_f2_12_if_false        #  18:     goto   12_if_false
-     jmp     l_f2_10                 #  17:     goto   10
+     jmp     l_f2_10                 #  20:     goto   10
+ l_f2_12_if_false:
