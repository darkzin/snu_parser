+     jmp     l_f1_2_if_false         #   0:     goto   2_if_false
+     jmp     l_f1_2_if_false         #   1:     goto   2_if_false
-     movl    $100, %eax              #   0:     return 100
+     movl    $100, %eax              #   2:     return 100
-     jmp     l_f1_0                  #   1:     goto   0
+     jmp     l_f1_0                  #   3:     goto   0
+ l_f1_2_if_false:
-     movl    $98, %eax               #   3:     if     98 # 98 goto 6_if_true
+     movl    $98, %eax               #   6:     if     98 # 98 goto 6_if_true
-     jmp     l_f1_7_if_false         #   4:     goto   7_if_false
+     jmp     l_f1_7_if_false         #   7:     goto   7_if_false
-     jmp     l_f1_9                  #   7:     goto   9
+     jmp     l_f1_9                  #  10:     goto   9
-     jmp     l_f1_10_while_cond      #   8:     goto   10_while_cond
+     jmp     l_f1_10_while_cond      #  11:     goto   10_while_cond
-     movl    $98, %eax               #  10:     assign v2 <- 98
+     movl    $98, %eax               #  13:     assign v2 <- 98
-     jmp     l_f1_5                  #  11:     goto   5
+     jmp     l_f1_5                  #  14:     goto   5
-     movl    $99, %eax               #  15:     if     99 < 100 goto 15_while_body
+     movl    $99, %eax               #  18:     if     99 < 100 goto 15_while_body
-     jmp     l_f1_13                 #  16:     goto   13
+     jmp     l_f1_13                 #  19:     goto   13
-     movl    $25804, %eax            #  18:     assign v3 <- 25804
+     movl    $25804, %eax            #  21:     assign v3 <- 25804
-     jmp     l_f1_14_while_cond      #  19:     goto   14_while_cond
+     jmp     l_f1_14_while_cond      #  22:     goto   14_while_cond
+     jmp     l_f2_4                  #  10:     goto   4
-     movl    $98, %eax               #  11:     if     98 <= 97 goto 9
+     movl    $98, %eax               #  12:     if     98 <= 97 goto 9
-     jmp     l_f2_10                 #  12:     goto   10
+     jmp     l_f2_10                 #  13:     goto   10
-     movl    $1, %eax                #  14:     assign t6 <- 1
+     movl    $1, %eax                #  15:     assign t6 <- 1
-     jmp     l_f2_11                 #  15:     goto   11
+     jmp     l_f2_11                 #  16:     goto   11
-     movl    $0, %eax                #  17:     assign t6 <- 0
+     movl    $0, %eax                #  18:     assign t6 <- 0
-     movzbl  -21(%ebp), %eax         #  19:     assign v1 <- t6
+     movzbl  -21(%ebp), %eax         #  20:     assign v1 <- t6
-     movl    $50026, %eax            #  20:     return 50026
+     movl    $50026, %eax            #  21:     return 50026
-     jmp     l_f2_5_while_cond       #  21:     goto   5_while_cond
+     jmp     l_f2_5_while_cond       #  22:     goto   5_while_cond
+ l_f2_4:
+     jmp     l_f2_19                 #  25:     goto   19
+     jmp     l_f2_19                 #  26:     goto   19
+     jmp     l_f2_19                 #  27:     goto   19
-     movl    $1, %eax                #  23:     assign t7 <- 1
+     movl    $1, %eax                #  28:     assign t7 <- 1
-     jmp     l_f2_19                 #  24:     goto   19
+     jmp     l_f2_20                 #  29:     goto   20
+ l_f2_19:
-     movl    $0, %eax                #  25:     assign t7 <- 0
+     movl    $0, %eax                #  31:     assign t7 <- 0
- l_f2_19:
+ l_f2_20:
-     movl    $0, %eax                #  27:     if     0 = t7 goto 16_while_body
+     movl    $0, %eax                #  33:     if     0 = t7 goto 16_while_body
-     jmp     l_f2_14                 #  28:     goto   14
+     jmp     l_f2_14                 #  34:     goto   14
-     movl    $21498, %eax            #  30:     if     21498 >= 74592 goto 24_if_true
+     movl    $21498, %eax            #  36:     if     21498 >= 74592 goto 24_if_true
-     jmp     l_f2_25_if_false        #  31:     goto   25_if_false
+     jmp     l_f2_25_if_false        #  37:     goto   25_if_false
-     jmp     l_f2_23                 #  33:     goto   23
+     jmp     l_f2_23                 #  39:     goto   23
-     call    ReadInt                 #  36:     call   t8 <- ReadInt
+     call    ReadInt                 #  42:     call   t8 <- ReadInt
-     jmp     l_f2_15_while_cond      #  37:     goto   15_while_cond
+     jmp     l_f2_15_while_cond      #  43:     goto   15_while_cond
+     jmp     l_test_16_if_false      #  13:     goto   16_if_false
-     jmp     l_test_14               #  13:     goto   14
+     jmp     l_test_14               #  14:     goto   14
+ l_test_16_if_false:
-     jmp     l_test_12_while_cond    #  15:     goto   12_while_cond
+     jmp     l_test_12_while_cond    #  17:     goto   12_while_cond
-     movl    $34497, %eax            #  16:     assign v0 <- 34497
+     movl    $34497, %eax            #  18:     assign v0 <- 34497
-     movl    $59549, %eax            #  18:     add    t1 <- 59549, 11773
+     movl    $59549, %eax            #  20:     add    t1 <- 59549, 11773
-     movl    -20(%ebp), %eax         #  19:     assign v0 <- t1
+     movl    -20(%ebp), %eax         #  21:     assign v0 <- t1
-     leal    v2, %eax                #  20:     &()    t2 <- v2
+     leal    v2, %eax                #  22:     &()    t2 <- v2
-     movl    -24(%ebp), %eax         #  21:     param  3 <- t2
+     movl    -24(%ebp), %eax         #  23:     param  3 <- t2
-     movl    $66922, %eax            #  22:     param  2 <- 66922
+     movl    $66922, %eax            #  24:     param  2 <- 66922
-     movl    $100, %eax              #  23:     param  1 <- 100
+     movl    $100, %eax              #  25:     param  1 <- 100
-     movl    $7485, %eax             #  24:     param  0 <- 7485
+     movl    $7485, %eax             #  26:     param  0 <- 7485
-     call    f1                      #  25:     call   t3 <- f1
+     call    f1                      #  27:     call   t3 <- f1
-     addl    $13, %esp              
+     addl    $16, %esp              
-     movzbl  -25(%ebp), %eax         #  26:     assign v1 <- t3
+     movzbl  -25(%ebp), %eax         #  28:     assign v1 <- t3
