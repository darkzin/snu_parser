+     jmp     l_f1_0                  #   5:     goto   0
-     movl    $97, %eax               #   6:     return 97
+     movl    $97, %eax               #   7:     return 97
-     jmp     l_f1_12_while_cond      #   8:     goto   12_while_cond
+     jmp     l_f1_12_while_cond      #   9:     goto   12_while_cond
-     movl    $2077, %eax             #   9:     assign v3 <- 2077
+     movl    $2077, %eax             #  10:     assign v3 <- 2077
-     jmp     l_f1_1_while_cond       #  10:     goto   1_while_cond
+     jmp     l_f1_1_while_cond       #  11:     goto   1_while_cond
+ l_f1_0:
-     call    dummyCHARfunc           #  11:     call   t3 <- dummyCHARfunc
+     call    dummyCHARfunc           #  13:     call   t3 <- dummyCHARfunc
-     movzbl  -13(%ebp), %eax         #  12:     return t3
+     movzbl  -13(%ebp), %eax         #  14:     return t3
-     movl    $90969, %eax            #  13:     mul    t4 <- 90969, 76313
+     movl    $90969, %eax            #  15:     mul    t4 <- 90969, 76313
-     movl    -20(%ebp), %eax         #  14:     div    t5 <- t4, 71761
+     movl    -20(%ebp), %eax         #  16:     div    t5 <- t4, 71761
-     movl    $3251, %eax             #  15:     if     3251 # t5 goto 17_if_true
+     movl    $3251, %eax             #  17:     if     3251 # t5 goto 17_if_true
-     jmp     l_f1_18_if_false        #  16:     goto   18_if_false
+     jmp     l_f1_18_if_false        #  18:     goto   18_if_false
-     jmp     l_f1_20                 #  18:     goto   20
+     jmp     l_f1_20                 #  20:     goto   20
-     jmp     l_f1_16                 #  20:     goto   16
+     jmp     l_f1_16                 #  22:     goto   16
-     #-106882112(%ebp)106882072  [ $v4       <array 16 of <array 74 of <array 56 of <array 52 of <array 31 of <bool>>>>>> %ebp-106882112 ]
+     #   -106882112(%ebp)  106882072  [ $v4       <array 16 of <array 74 of <array 56 of <array 52 of <array 31 of <bool>>>>>> %ebp-106882112 ]
-     #-129199256(%ebp)22317144  [ $v5       <array 35 of <array 6 of <array 18 of <array 82 of <array 72 of <bool>>>>>> %ebp-129199256 ]
+     #   -129199256(%ebp)  22317144  [ $v5       <array 35 of <array 6 of <array 18 of <array 82 of <array 72 of <bool>>>>>> %ebp-129199256 ]
+     jmp     l_f2_0                  #   1:     goto   0
-     call    dummyCHARfunc           #   1:     call   t3 <- dummyCHARfunc
+     call    dummyCHARfunc           #   2:     call   t3 <- dummyCHARfunc
-     movl    $97913, %eax            #   2:     param  3 <- 97913
+     movl    $97913, %eax            #   3:     param  3 <- 97913
-     leal    -129199256(%ebp), %eax  #   3:     &()    t4 <- v5
+     leal    -129199256(%ebp), %eax  #   4:     &()    t4 <- v5
-     movl    -20(%ebp), %eax         #   4:     param  2 <- t4
+     movl    -20(%ebp), %eax         #   5:     param  2 <- t4
-     movl    $1, %eax                #   5:     param  1 <- 1
+     movl    $1, %eax                #   6:     param  1 <- 1
-     leal    -106882112(%ebp), %eax  #   6:     &()    t5 <- v4
+     leal    -106882112(%ebp), %eax  #   7:     &()    t5 <- v4
-     movl    -24(%ebp), %eax         #   7:     param  0 <- t5
+     movl    -24(%ebp), %eax         #   8:     param  0 <- t5
-     call    f1                      #   8:     call   t6 <- f1
+     call    f1                      #   9:     call   t6 <- f1
-     addl    $13, %esp              
+     addl    $16, %esp              
-     jmp     l_f2_1_while_cond       #   9:     goto   1_while_cond
+     jmp     l_f2_1_while_cond       #  10:     goto   1_while_cond
+ l_f2_0:
-     movl    $12735, %eax            #  11:     param  3 <- 12735
+     movl    $12735, %eax            #  13:     param  3 <- 12735
-     leal    -129199256(%ebp), %eax  #  12:     &()    t7 <- v5
+     leal    -129199256(%ebp), %eax  #  14:     &()    t7 <- v5
-     movl    -32(%ebp), %eax         #  13:     param  2 <- t7
+     movl    -32(%ebp), %eax         #  15:     param  2 <- t7
-     movl    $82896, %eax            #  14:     if     82896 > 40478 goto 9
+     movl    $82896, %eax            #  16:     if     82896 > 40478 goto 10
-     jg      l_f2_9                 
+     jg      l_f2_10                
-     jmp     l_f2_10                 #  15:     goto   10
+     jmp     l_f2_11                 #  17:     goto   11
- l_f2_9:
+ l_f2_10:
-     movl    $1, %eax                #  17:     assign t8 <- 1
+     movl    $1, %eax                #  19:     assign t8 <- 1
-     jmp     l_f2_11                 #  18:     goto   11
+     jmp     l_f2_12                 #  20:     goto   12
- l_f2_10:
+ l_f2_11:
-     movl    $0, %eax                #  20:     assign t8 <- 0
+     movl    $0, %eax                #  22:     assign t8 <- 0
- l_f2_11:
+ l_f2_12:
-     movzbl  -33(%ebp), %eax         #  22:     param  1 <- t8
+     movzbl  -33(%ebp), %eax         #  24:     param  1 <- t8
-     leal    -106882112(%ebp), %eax  #  23:     &()    t9 <- v4
+     leal    -106882112(%ebp), %eax  #  25:     &()    t9 <- v4
-     movl    -40(%ebp), %eax         #  24:     param  0 <- t9
+     movl    -40(%ebp), %eax         #  26:     param  0 <- t9
-     call    f1                      #  25:     call   t10 <- f1
+     call    f1                      #  27:     call   t10 <- f1
-     addl    $13, %esp              
+     addl    $16, %esp              
-     call    dummyCHARfunc           #  26:     call   t11 <- dummyCHARfunc
+     call    dummyCHARfunc           #  28:     call   t11 <- dummyCHARfunc
-     movzbl  -13(%ebp), %eax         #  27:     if     t10 # t11 goto 8_while_body
+     movzbl  -13(%ebp), %eax         #  29:     if     t10 # t11 goto 8_while_body
-     jmp     l_f2_6                  #  28:     goto   6
+     jmp     l_f2_6                  #  30:     goto   6
-     jmp     l_f2_7_while_cond       #  30:     goto   7_while_cond
+     jmp     l_f2_7_while_cond       #  32:     goto   7_while_cond
-     jmp     l_f2_15                 #  32:     goto   15
+     jmp     l_f2_15                 #  34:     goto   15
+     jmp     l_f2_16                 #  35:     goto   16
-     movl    $1, %eax                #  34:     assign t12 <- 1
+     movl    $1, %eax                #  37:     assign t12 <- 1
-     jmp     l_f2_17                 #  35:     goto   17
+     jmp     l_f2_17                 #  38:     goto   17
+ l_f2_16:
-     movl    $0, %eax                #  36:     assign t12 <- 0
+     movl    $0, %eax                #  40:     assign t12 <- 0
-     movzbl  -15(%ebp), %eax         #  38:     assign v0 <- t12
+     movzbl  -15(%ebp), %eax         #  42:     assign v0 <- t12
+     jmp     l_test_9                #  14:     goto   9
-     movl    $99, %eax               #  14:     assign v0 <- 99
+     movl    $99, %eax               #  15:     assign v0 <- 99
-     jmp     l_test_10_while_cond    #  15:     goto   10_while_cond
+     jmp     l_test_10_while_cond    #  16:     goto   10_while_cond
+ l_test_9:
-     movl    $16741, %eax            #  16:     param  3 <- 16741
+     movl    $16741, %eax            #  18:     param  3 <- 16741
-     leal    v2, %eax                #  17:     &()    t0 <- v2
+     leal    v2, %eax                #  19:     &()    t0 <- v2
-     movl    -16(%ebp), %eax         #  18:     param  2 <- t0
+     movl    -16(%ebp), %eax         #  20:     param  2 <- t0
-     movl    $0, %eax                #  19:     param  1 <- 0
+     movl    $0, %eax                #  21:     param  1 <- 0
-     leal    v1, %eax                #  20:     &()    t1 <- v1
+     leal    v1, %eax                #  22:     &()    t1 <- v1
-     movl    -20(%ebp), %eax         #  21:     param  0 <- t1
+     movl    -20(%ebp), %eax         #  23:     param  0 <- t1
-     call    f1                      #  22:     call   t2 <- f1
+     call    f1                      #  24:     call   t2 <- f1
-     addl    $13, %esp              
+     addl    $16, %esp              
