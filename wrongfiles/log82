-     # -20216(%ebp)20184  [ $v4       <array 6 of <array 10 of <array 6 of <array 7 of <array 8 of <char>>>>>> %ebp-20216 ]
+     #   -20216(%ebp)  20184  [ $v4       <array 6 of <array 10 of <array 6 of <array 7 of <array 8 of <char>>>>>> %ebp-20216 ]
-     # -23644(%ebp)3426  [ $v5       <array 6 of <array 9 of <array 1 of <array 7 of <array 9 of <bool>>>>>> %ebp-23644 ]
+     #   -23644(%ebp)  3426  [ $v5       <array 6 of <array 9 of <array 1 of <array 7 of <array 9 of <bool>>>>>> %ebp-23644 ]
+     jmp     l_f1_2_if_false         #   0:     goto   2_if_false
-     jmp     l_f1_0                  #   0:     goto   0
+     jmp     l_f1_0                  #   1:     goto   0
+ l_f1_2_if_false:
-     call    dummyCHARfunc           #   2:     call   t3 <- dummyCHARfunc
+     call    dummyCHARfunc           #   4:     call   t3 <- dummyCHARfunc
-     movzbl  -13(%ebp), %eax         #   3:     return t3
+     movzbl  -13(%ebp), %eax         #   5:     return t3
-     movl    $79803, %eax            #   4:     if     79803 >= 57805 goto 8_if_true
+     movl    $79803, %eax            #   6:     if     79803 >= 57805 goto 8_if_true
-     jmp     l_f1_9_if_false         #   5:     goto   9_if_false
+     jmp     l_f1_9_if_false         #   7:     goto   9_if_false
-     jmp     l_f1_12_while_cond      #   8:     goto   12_while_cond
+     jmp     l_f1_12_while_cond      #  10:     goto   12_while_cond
-     movl    $98, %eax               #   9:     return 98
+     movl    $98, %eax               #  11:     return 98
-     leal    -23644(%ebp), %eax      #  10:     &()    t4 <- v5
+     leal    -23644(%ebp), %eax      #  12:     &()    t4 <- v5
-     movl    -20(%ebp), %eax         #  11:     param  3 <- t4
+     movl    -20(%ebp), %eax         #  13:     param  3 <- t4
-     movl    $6176, %eax             #  12:     if     6176 >= 73355 goto 16
+     movl    $6176, %eax             #  14:     if     6176 >= 73355 goto 16
-     jmp     l_f1_17                 #  13:     goto   17
+     jmp     l_f1_17                 #  15:     goto   17
-     movl    $1, %eax                #  15:     assign t5 <- 1
+     movl    $1, %eax                #  17:     assign t5 <- 1
-     jmp     l_f1_18                 #  16:     goto   18
+     jmp     l_f1_18                 #  18:     goto   18
-     movl    $0, %eax                #  18:     assign t5 <- 0
+     movl    $0, %eax                #  20:     assign t5 <- 0
-     movzbl  -21(%ebp), %eax         #  20:     param  2 <- t5
+     movzbl  -21(%ebp), %eax         #  22:     param  2 <- t5
-     movl    $100, %eax              #  21:     if     100 <= 97 goto 20
+     movl    $100, %eax              #  23:     if     100 <= 97 goto 20
-     jmp     l_f1_21                 #  22:     goto   21
+     jmp     l_f1_21                 #  24:     goto   21
-     movl    $1, %eax                #  24:     assign t6 <- 1
+     movl    $1, %eax                #  26:     assign t6 <- 1
-     jmp     l_f1_22                 #  25:     goto   22
+     jmp     l_f1_22                 #  27:     goto   22
-     movl    $0, %eax                #  27:     assign t6 <- 0
+     movl    $0, %eax                #  29:     assign t6 <- 0
-     movzbl  -22(%ebp), %eax         #  29:     param  1 <- t6
+     movzbl  -22(%ebp), %eax         #  31:     param  1 <- t6
-     leal    -20216(%ebp), %eax      #  30:     &()    t7 <- v4
+     leal    -20216(%ebp), %eax      #  32:     &()    t7 <- v4
-     movl    -28(%ebp), %eax         #  31:     param  0 <- t7
+     movl    -28(%ebp), %eax         #  33:     param  0 <- t7
-     call    f0                      #  32:     call   t8 <- f0
+     call    f0                      #  34:     call   t8 <- f0
-     addl    $10, %esp              
+     addl    $16, %esp              
-     jmp     l_f1_7                  #  33:     goto   7
+     jmp     l_f1_7                  #  35:     goto   7
-     jmp     l_test_13               #  13:     goto   13
+     jmp     l_test_14               #  13:     goto   14
- l_test_13:
+ l_test_14:
