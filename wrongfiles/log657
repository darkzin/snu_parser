+     jmp     l_f1_2                  #   2:     goto   2
-     movl    $1, %eax                #   3:     assign t4 <- 1
+     movl    $1, %eax                #   4:     assign t4 <- 1
-     jmp     l_f1_3                  #   4:     goto   3
+     jmp     l_f1_3                  #   5:     goto   3
+ l_f1_2:
-     movl    $0, %eax                #   5:     assign t4 <- 0
+     movl    $0, %eax                #   7:     assign t4 <- 0
-     movzbl  -14(%ebp), %eax         #   7:     assign v0 <- t4
+     movzbl  -14(%ebp), %eax         #   9:     assign v0 <- t4
-     call    dummyBOOLfunc           #   8:     call   t5 <- dummyBOOLfunc
+     call    dummyBOOLfunc           #  10:     call   t5 <- dummyBOOLfunc
-     movl    $90388, %eax            #   9:     return 90388
+     movl    $90388, %eax            #  11:     return 90388
-     movl    $71192, %eax            #  10:     return 71192
+     movl    $71192, %eax            #  12:     return 71192
-     movl    $74353, %eax            #  11:     return 74353
+     movl    $74353, %eax            #  13:     return 74353
-     movl    $39450, %eax            #  12:     return 39450
+     movl    $39450, %eax            #  14:     return 39450
-     jmp     l_f1_13                 #  14:     goto   13
+     jmp     l_f1_13                 #  16:     goto   13
-     jmp     l_f1_14_while_cond      #  15:     goto   14_while_cond
+     jmp     l_f1_14_while_cond      #  17:     goto   14_while_cond
-     movl    $85164, %eax            #  17:     if     85164 <= 23969 goto 17_if_true
+     movl    $85164, %eax            #  19:     if     85164 <= 23969 goto 17_if_true
-     jmp     l_f1_18_if_false        #  18:     goto   18_if_false
+     jmp     l_f1_18_if_false        #  20:     goto   18_if_false
-     jmp     l_f1_16                 #  20:     goto   16
+     jmp     l_f1_16                 #  22:     goto   16
-     movl    $98, %eax               #  23:     if     98 > 98 goto 21_if_true
+     movl    $98, %eax               #  25:     if     98 > 98 goto 21_if_true
-     jmp     l_f1_22_if_false        #  24:     goto   22_if_false
+     jmp     l_f1_22_if_false        #  26:     goto   22_if_false
-     jmp     l_f1_20                 #  26:     goto   20
+     jmp     l_f1_20                 #  28:     goto   20
-     movl    $46147, %eax            #  29:     if     46147 <= 56987 goto 25_if_true
+     movl    $46147, %eax            #  31:     if     46147 <= 56987 goto 25_if_true
-     jmp     l_f1_26_if_false        #  30:     goto   26_if_false
+     jmp     l_f1_26_if_false        #  32:     goto   26_if_false
-     jmp     l_f1_24                 #  32:     goto   24
+     jmp     l_f1_24                 #  34:     goto   24
-     call    dummyCHARfunc           #  35:     call   t6 <- dummyCHARfunc
+     call    dummyCHARfunc           #  37:     call   t6 <- dummyCHARfunc
-     call    dummyBOOLfunc           #  36:     call   t7 <- dummyBOOLfunc
+     call    dummyBOOLfunc           #  38:     call   t7 <- dummyBOOLfunc
-     jmp     l_f1_6                  #  37:     goto   6
+     jmp     l_f1_6                  #  39:     goto   6
+     jmp     l_f2_21_if_false        #  33:     goto   21_if_false
-     movl    $99, %eax               #  33:     if     99 = 97 goto 24
+     movl    $99, %eax               #  34:     if     99 = 97 goto 24
-     jmp     l_f2_25                 #  34:     goto   25
+     jmp     l_f2_25                 #  35:     goto   25
-     movl    $1, %eax                #  36:     assign t6 <- 1
+     movl    $1, %eax                #  37:     assign t6 <- 1
-     jmp     l_f2_26                 #  37:     goto   26
+     jmp     l_f2_26                 #  38:     goto   26
-     movl    $0, %eax                #  39:     assign t6 <- 0
+     movl    $0, %eax                #  40:     assign t6 <- 0
-     movzbl  -17(%ebp), %eax         #  41:     return t6
+     movzbl  -17(%ebp), %eax         #  42:     return t6
-     jmp     l_f2_28                 #  42:     goto   28
+     jmp     l_f2_28                 #  43:     goto   28
-     movl    $0, %eax                #  44:     return 0
+     movl    $0, %eax                #  45:     return 0
-     jmp     l_f2_19                 #  45:     goto   19
+     jmp     l_f2_19                 #  46:     goto   19
+ l_f2_21_if_false:
-     jmp     l_f2_34_if_false        #  47:     goto   34_if_false
+     jmp     l_f2_34_if_false        #  49:     goto   34_if_false
-     movl    $99, %eax               #  48:     if     99 > 98 goto 36_if_true
+     movl    $99, %eax               #  50:     if     99 > 98 goto 36_if_true
-     jmp     l_f2_37_if_false        #  49:     goto   37_if_false
+     jmp     l_f2_37_if_false        #  51:     goto   37_if_false
-     jmp     l_f2_35                 #  51:     goto   35
+     jmp     l_f2_35                 #  53:     goto   35
-     jmp     l_f2_41_if_false        #  54:     goto   41_if_false
+     jmp     l_f2_41_if_false        #  56:     goto   41_if_false
-     jmp     l_f2_39                 #  55:     goto   39
+     jmp     l_f2_39                 #  57:     goto   39
-     movl    $72545, %eax            #  58:     if     72545 >= 50169 goto 43_if_true
+     movl    $72545, %eax            #  60:     if     72545 >= 50169 goto 43_if_true
-     jmp     l_f2_44_if_false        #  59:     goto   44_if_false
+     jmp     l_f2_44_if_false        #  61:     goto   44_if_false
-     jmp     l_f2_42                 #  61:     goto   42
+     jmp     l_f2_42                 #  63:     goto   42
-     movl    $100, %eax              #  64:     if     100 < 99 goto 47
+     movl    $100, %eax              #  66:     if     100 < 99 goto 47
-     jmp     l_f2_48                 #  65:     goto   48
+     jmp     l_f2_48                 #  67:     goto   48
-     movl    $1, %eax                #  67:     assign t7 <- 1
+     movl    $1, %eax                #  69:     assign t7 <- 1
-     jmp     l_f2_49                 #  68:     goto   49
+     jmp     l_f2_49                 #  70:     goto   49
-     movl    $0, %eax                #  70:     assign t7 <- 0
+     movl    $0, %eax                #  72:     assign t7 <- 0
-     movzbl  -18(%ebp), %eax         #  72:     return t7
+     movzbl  -18(%ebp), %eax         #  74:     return t7
-     movl    $100, %eax              #  73:     param  0 <- 100
+     movl    $100, %eax              #  75:     param  0 <- 100
-     call    WriteChar               #  74:     call   WriteChar
+     call    WriteChar               #  76:     call   WriteChar
-     addl    $1, %esp               
+     addl    $4, %esp               
-     movl    $92468, %eax            #  75:     if     92468 < 46936 goto 53
+     movl    $92468, %eax            #  77:     if     92468 < 46936 goto 53
-     jmp     l_f2_54                 #  76:     goto   54
+     jmp     l_f2_54                 #  78:     goto   54
-     movl    $1, %eax                #  78:     assign t8 <- 1
+     movl    $1, %eax                #  80:     assign t8 <- 1
-     jmp     l_f2_55                 #  79:     goto   55
+     jmp     l_f2_55                 #  81:     goto   55
-     movl    $0, %eax                #  81:     assign t8 <- 0
+     movl    $0, %eax                #  83:     assign t8 <- 0
-     movzbl  -19(%ebp), %eax         #  83:     return t8
+     movzbl  -19(%ebp), %eax         #  85:     return t8
-     movl    $98907, %eax            #  84:     if     98907 > 55852 goto 58_if_true
+     movl    $98907, %eax            #  86:     if     98907 > 55852 goto 58_if_true
-     jmp     l_f2_59_if_false        #  85:     goto   59_if_false
+     jmp     l_f2_59_if_false        #  87:     goto   59_if_false
-     jmp     l_f2_57                 #  87:     goto   57
+     jmp     l_f2_57                 #  89:     goto   57
-     movl    $97, %eax               #  90:     if     97 >= 99 goto 62
+     movl    $97, %eax               #  92:     if     97 >= 99 goto 62
-     jmp     l_f2_63                 #  91:     goto   63
+     jmp     l_f2_63                 #  93:     goto   63
-     movl    $1, %eax                #  93:     assign t9 <- 1
+     movl    $1, %eax                #  95:     assign t9 <- 1
-     jmp     l_f2_64                 #  94:     goto   64
+     jmp     l_f2_64                 #  96:     goto   64
-     movl    $0, %eax                #  96:     assign t9 <- 0
+     movl    $0, %eax                #  98:     assign t9 <- 0
-     movzbl  -20(%ebp), %eax         #  98:     return t9
+     movzbl  -20(%ebp), %eax         # 100:     return t9
-     movl    $97, %eax               #  99:     if     97 > 99 goto 67_if_true
+     movl    $97, %eax               # 101:     if     97 > 99 goto 67_if_true
-     jmp     l_f2_68_if_false        # 100:     goto   68_if_false
+     jmp     l_f2_68_if_false        # 102:     goto   68_if_false
-     jmp     l_f2_66                 # 102:     goto   66
+     jmp     l_f2_66                 # 104:     goto   66
-     call    dummyBOOLfunc           # 105:     call   t10 <- dummyBOOLfunc
+     call    dummyBOOLfunc           # 107:     call   t10 <- dummyBOOLfunc
-     movl    $98, %eax               # 107:     if     98 <= 100 goto 73_while_body
+     movl    $98, %eax               # 109:     if     98 <= 100 goto 73_while_body
-     jmp     l_f2_71                 # 108:     goto   71
+     jmp     l_f2_71                 # 110:     goto   71
-     jmp     l_f2_72_while_cond      # 110:     goto   72_while_cond
+     jmp     l_f2_72_while_cond      # 112:     goto   72_while_cond
-     movl    $1, %eax                # 113:     if     1 # 1 goto 77_while_body
+     movl    $1, %eax                # 115:     if     1 # 1 goto 77_while_body
-     jmp     l_f2_75                 # 114:     goto   75
+     jmp     l_f2_75                 # 116:     goto   75
-     jmp     l_f2_76_while_cond      # 116:     goto   76_while_cond
+     jmp     l_f2_76_while_cond      # 118:     goto   76_while_cond
-     jmp     l_f2_81_if_false        # 118:     goto   81_if_false
+     jmp     l_f2_81_if_false        # 120:     goto   81_if_false
-     jmp     l_f2_79                 # 119:     goto   79
+     jmp     l_f2_79                 # 121:     goto   79
-     jmp     l_f2_32                 # 122:     goto   32
+     jmp     l_f2_32                 # 124:     goto   32
+     jmp     l_test_0                #   3:     goto   0
-     jmp     l_test_1_while_cond     #   4:     goto   1_while_cond
+     jmp     l_test_1_while_cond     #   5:     goto   1_while_cond
+ l_test_0:
-     movl    $99, %eax               #   5:     param  0 <- 99
+     movl    $99, %eax               #   7:     param  0 <- 99
-     call    WriteChar               #   6:     call   WriteChar
+     call    WriteChar               #   8:     call   WriteChar
-     addl    $1, %esp               
+     addl    $4, %esp               
-     call    dummyCHARfunc           #   7:     call   t1 <- dummyCHARfunc
+     call    dummyCHARfunc           #   9:     call   t1 <- dummyCHARfunc
-     movzbl  -14(%ebp), %eax         #   8:     assign v0 <- t1
+     movzbl  -14(%ebp), %eax         #  10:     assign v0 <- t1
-     jmp     l_test_7_if_true        #   9:     goto   7_if_true
+     jmp     l_test_7_if_true        #  11:     goto   7_if_true
-     call    dummyINTfunc            #  11:     call   t2 <- dummyINTfunc
+     call    dummyINTfunc            #  13:     call   t2 <- dummyINTfunc
-     jmp     l_test_6                #  12:     goto   6
+     jmp     l_test_6                #  14:     goto   6
-     jmp     l_test_13_if_false      #  14:     goto   13_if_false
+     jmp     l_test_13_if_false      #  16:     goto   13_if_false
-     movl    $98, %eax               #  15:     assign v0 <- 98
+     movl    $98, %eax               #  17:     assign v0 <- 98
-     movl    $26496, %eax            #  16:     assign v1 <- 26496
+     movl    $26496, %eax            #  18:     assign v1 <- 26496
-     jmp     l_test_11               #  17:     goto   11
+     jmp     l_test_11               #  19:     goto   11
