+     #    -77(%ebp)   1  [ $t5       <char> %ebp-77 ]
-     #    -80(%ebp)   4  [ $t26      <int> %ebp-80 ]
+     #    -84(%ebp)   4  [ $t6       <int> %ebp-84 ]
-     #    -81(%ebp)   1  [ $t5       <char> %ebp-81 ]
-     #    -88(%ebp)   4  [ $t6       <int> %ebp-88 ]
+     #    -88(%ebp)   4  [ $t7       <int> %ebp-88 ]
-     #    -92(%ebp)   4  [ $t7       <int> %ebp-92 ]
+     #    -92(%ebp)   4  [ $t8       <int> %ebp-92 ]
-     #    -96(%ebp)   4  [ $t8       <int> %ebp-96 ]
+     #    -96(%ebp)   4  [ $t9       <int> %ebp-96 ]
-     #   -100(%ebp)   4  [ $t9       <int> %ebp-100 ]
-     #   -104(%ebp)   4  [ $v4       <int> %ebp-104 ]
+     #   -100(%ebp)   4  [ $v4       <int> %ebp-100 ]
-     pushl   %ebp                   
-     movl    %esp, %ebp             
-     pushl   %ebx                    # save callee saved registers
-     pushl   %esi                   
+     pushl   %ebp                   
+     movl    %esp, %ebp             
+     pushl   %ebx                    # save callee saved registers
-     pushl   %edi                   
+     pushl   %esi                   
+     pushl   %edi                   
-     subl    $92, %esp               # make room for locals
+     subl    $88, %esp               # make room for locals
-     movl    $23, %ecx              
+     movl    $22, %ecx              
-     movb    %al, -81(%ebp)         
+     movb    %al, -77(%ebp)         
-     movl    %eax, -88(%ebp)        
+     movl    %eax, -84(%ebp)        
+     movl    %eax, -88(%ebp)        
+     movl    -84(%ebp), %eax         #   5:     mul    t8 <- t6, t7
+     movl    -88(%ebp), %ebx        
+     imull   %ebx                   
-     call    f1                      #   5:     call   t9 <- f1
-     movl    %eax, -100(%ebp)       
-     movl    -88(%ebp), %eax         #   6:     mul    t8 <- t6, t7
+     movl    -92(%ebp), %eax         #   6:     add    t9 <- t8, 17584
-     movl    -92(%ebp), %ebx        
+     movl    $17584, %ebx           
-     imull   %ebx                   
+     addl    %ebx, %eax             
+     movl    $3, %eax                #   7:     param  1 <- 3
+     pushl   %eax                   
-     movl    -96(%ebp), %eax         #   7:     add    t10 <- t8, 17584
+     movl    20(%ebp), %eax          #   8:     param  0 <- v3
-     movl    $17584, %ebx           
+     pushl   %eax                   
+     call    DIM                     #   9:     call   t10 <- DIM
-     addl    %ebx, %eax             
+     addl    $8, %esp               
+     movl    -96(%ebp), %eax         #  10:     mul    t11 <- t9, t10
+     movl    -16(%ebp), %ebx        
+     imull   %ebx                   
+     movl    %eax, -20(%ebp)        
+     movl    -20(%ebp), %eax         #  11:     add    t12 <- t11, 13271
+     movl    $13271, %ebx           
+     addl    %ebx, %eax             
+     movl    %eax, -24(%ebp)        
-     movl    $3, %eax                #   8:     param  1 <- 3
+     movl    $4, %eax                #  12:     param  1 <- 4
-     movl    20(%ebp), %eax          #   9:     param  0 <- v3
+     movl    20(%ebp), %eax          #  13:     param  0 <- v3
-     call    DIM                     #  10:     call   t11 <- DIM
+     call    DIM                     #  14:     call   t13 <- DIM
-     movl    %eax, -20(%ebp)        
-     movl    -16(%ebp), %eax         #  11:     mul    t12 <- t10, t11
-     movl    -20(%ebp), %ebx        
-     imull   %ebx                   
-     movl    %eax, -24(%ebp)        
-     movl    -24(%ebp), %eax         #  12:     add    t13 <- t12, 13271
-     movl    $13271, %ebx           
-     addl    %ebx, %eax             
+     movl    -24(%ebp), %eax         #  15:     mul    t14 <- t12, t13
+     movl    -28(%ebp), %ebx        
+     imull   %ebx                   
+     movl    %eax, -32(%ebp)        
+     movl    -32(%ebp), %eax         #  16:     add    t15 <- t14, 17306
+     movl    $17306, %ebx           
+     addl    %ebx, %eax             
+     movl    %eax, -36(%ebp)        
-     movl    $4, %eax                #  13:     param  1 <- 4
+     movl    $5, %eax                #  17:     param  1 <- 5
-     movl    20(%ebp), %eax          #  14:     param  0 <- v3
+     movl    20(%ebp), %eax          #  18:     param  0 <- v3
-     call    DIM                     #  15:     call   t14 <- DIM
+     call    DIM                     #  19:     call   t16 <- DIM
-     movl    %eax, -32(%ebp)        
-     movl    -28(%ebp), %eax         #  16:     mul    t15 <- t13, t14
-     movl    -32(%ebp), %ebx        
-     imull   %ebx                   
-     movl    %eax, -36(%ebp)        
-     movl    -36(%ebp), %eax         #  17:     add    t16 <- t15, 17306
-     movl    $17306, %ebx           
-     addl    %ebx, %eax             
-     movl    $5, %eax                #  18:     param  1 <- 5
+     movl    -36(%ebp), %eax         #  20:     mul    t17 <- t15, t16
+     movl    -40(%ebp), %ebx        
-     pushl   %eax                   
+     imull   %ebx                   
-     movl    20(%ebp), %eax          #  19:     param  0 <- v3
-     pushl   %eax                   
-     call    DIM                     #  20:     call   t17 <- DIM
-     addl    $8, %esp               
-     movl    -40(%ebp), %eax         #  21:     mul    t18 <- t16, t17
+     movl    -44(%ebp), %eax         #  21:     add    t18 <- t17, 43736
-     movl    -44(%ebp), %ebx        
+     movl    $43736, %ebx           
-     imull   %ebx                   
+     addl    %ebx, %eax             
-     movl    -48(%ebp), %eax         #  22:     add    t19 <- t18, 43736
+     movl    -48(%ebp), %eax         #  22:     mul    t19 <- t18, 4
-     movl    $43736, %ebx           
+     movl    $4, %ebx               
-     addl    %ebx, %eax             
+     imull   %ebx                   
-     movl    -52(%ebp), %eax         #  23:     mul    t20 <- t19, 4
+     movl    20(%ebp), %eax          #  23:     param  0 <- v3
-     movl    $4, %ebx               
-     imull   %ebx                   
+     pushl   %eax                   
+     call    DOFS                    #  24:     call   t20 <- DOFS
+     addl    $4, %esp               
-     movl    20(%ebp), %eax          #  24:     param  0 <- v3
+     movl    -52(%ebp), %eax         #  25:     add    t21 <- t19, t20
+     movl    -56(%ebp), %ebx        
-     pushl   %eax                   
-     call    DOFS                    #  25:     call   t21 <- DOFS
-     addl    $4, %esp               
+     addl    %ebx, %eax             
-     movl    -56(%ebp), %eax         #  26:     add    t22 <- t20, t21
+     movl    20(%ebp), %eax          #  26:     add    t22 <- v3, t21
-     movl    20(%ebp), %eax          #  27:     add    t23 <- v3, t22
+     movl    $1836, %eax             #  27:     assign @t22 <- 1836
-     movl    -64(%ebp), %ebx        
+     movl    -64(%ebp), %edi        
-     addl    %ebx, %eax             
+     movl    %eax, (%edi)           
+     call    f1                      #  28:     call   t23 <- f1
-     movl    $1836, %eax             #  28:     assign @t23 <- 1836
-     movl    -68(%ebp), %edi        
-     movl    %eax, (%edi)           
-     call    f1                      #  29:     call   t24 <- f1
-     movl    %eax, -72(%ebp)        
-     movl    -72(%ebp), %eax         #  30:     sub    t25 <- t24, 54147
+     movl    -68(%ebp), %eax         #  29:     sub    t24 <- t23, 54147
+     movl    %eax, -72(%ebp)        
+     movl    -72(%ebp), %eax         #  30:     add    t25 <- t24, 968
+     movl    $968, %ebx             
+     addl    %ebx, %eax             
-     movl    -76(%ebp), %eax         #  31:     add    t26 <- t25, 968
-     movl    $968, %ebx             
-     addl    %ebx, %eax             
-     movl    %eax, -80(%ebp)        
-     movl    -80(%ebp), %eax         #  32:     return t26
+     movl    -76(%ebp), %eax         #  31:     return t25
-     addl    $92, %esp               # remove locals
+     addl    $88, %esp               # remove locals
+     jmp     l_test_2_if_false       #   0:     goto   2_if_false
-     call    dummyBOOLfunc           #   0:     call   t0 <- dummyBOOLfunc
+     call    dummyBOOLfunc           #   1:     call   t0 <- dummyBOOLfunc
-     movzbl  -13(%ebp), %eax         #   1:     if     t0 = 1 goto 1_if_true
+     movzbl  -13(%ebp), %eax         #   2:     if     t0 = 1 goto 1_if_true
-     jmp     l_test_2_if_false       #   2:     goto   2_if_false
+     jmp     l_test_2_if_false       #   3:     goto   2_if_false
-     jmp     l_test_0                #   4:     goto   0
+     jmp     l_test_0                #   5:     goto   0
-     call    dummyCHARfunc           #   7:     call   t1 <- dummyCHARfunc
+     call    dummyCHARfunc           #   8:     call   t1 <- dummyCHARfunc
-     movzbl  -14(%ebp), %eax         #   8:     assign v0 <- t1
+     movzbl  -14(%ebp), %eax         #   9:     assign v0 <- t1
-     movl    $100, %eax              #   9:     if     100 < 100 goto 6_if_true
+     movl    $100, %eax              #  10:     if     100 < 100 goto 6_if_true
-     jmp     l_test_7_if_false       #  10:     goto   7_if_false
+     jmp     l_test_7_if_false       #  11:     goto   7_if_false
-     movl    $25713, %eax            #  12:     if     25713 = 85296 goto 10_if_true
+     movl    $25713, %eax            #  13:     if     25713 = 85296 goto 10_if_true
-     jmp     l_test_11_if_false      #  13:     goto   11_if_false
+     jmp     l_test_11_if_false      #  14:     goto   11_if_false
-     jmp     l_test_9                #  15:     goto   9
+     jmp     l_test_9                #  16:     goto   9
-     leal    _str_1, %eax            #  18:     &()    t2 <- _str_1
+     leal    _str_1, %eax            #  19:     &()    t2 <- _str_1
-     movl    -20(%ebp), %eax         #  19:     param  0 <- t2
+     movl    -20(%ebp), %eax         #  20:     param  0 <- t2
-     call    WriteStr                #  20:     call   WriteStr
+     call    WriteStr                #  21:     call   WriteStr
-     jmp     l_test_14               #  21:     goto   14
+     jmp     l_test_14               #  22:     goto   14
-     movl    $0, %eax                #  23:     assign v1 <- 0
+     movl    $0, %eax                #  24:     assign v1 <- 0
-     call    dummyBOOLfunc           #  24:     call   t3 <- dummyBOOLfunc
+     call    dummyBOOLfunc           #  25:     call   t3 <- dummyBOOLfunc
-     jmp     l_test_21_if_false      #  25:     goto   21_if_false
+     jmp     l_test_21_if_false      #  26:     goto   21_if_false
-     jmp     l_test_19               #  26:     goto   19
+     jmp     l_test_19               #  27:     goto   19
-     jmp     l_test_5                #  29:     goto   5
+     jmp     l_test_5                #  30:     goto   5
-     jmp     l_test_24_if_false      #  32:     goto   24_if_false
+     jmp     l_test_24_if_false      #  33:     goto   24_if_false
-     leal    _str_2, %eax            #  33:     &()    t4 <- _str_2
+     leal    _str_2, %eax            #  34:     &()    t4 <- _str_2
-     movl    -28(%ebp), %eax         #  34:     param  0 <- t4
+     movl    -28(%ebp), %eax         #  35:     param  0 <- t4
-     call    WriteStr                #  35:     call   WriteStr
+     call    WriteStr                #  36:     call   WriteStr
-     jmp     l_test_26               #  37:     goto   26
+     jmp     l_test_26               #  38:     goto   26
-     jmp     l_test_27_while_cond    #  38:     goto   27_while_cond
+     jmp     l_test_27_while_cond    #  39:     goto   27_while_cond
-     movl    $93267, %eax            #  41:     if     93267 < 29995 goto 31_while_body
+     movl    $93267, %eax            #  42:     if     93267 < 29995 goto 31_while_body
-     jmp     l_test_29               #  42:     goto   29
+     jmp     l_test_29               #  43:     goto   29
-     jmp     l_test_30_while_cond    #  44:     goto   30_while_cond
+     jmp     l_test_30_while_cond    #  45:     goto   30_while_cond
-     movl    $99, %eax               #  47:     if     99 > 97 goto 35_while_body
+     movl    $99, %eax               #  48:     if     99 > 97 goto 35_while_body
-     jmp     l_test_33               #  48:     goto   33
+     jmp     l_test_33               #  49:     goto   33
-     jmp     l_test_34_while_cond    #  50:     goto   34_while_cond
+     jmp     l_test_34_while_cond    #  51:     goto   34_while_cond
-     movl    $98, %eax               #  52:     assign v0 <- 98
+     movl    $98, %eax               #  53:     assign v0 <- 98
-     jmp     l_test_22               #  53:     goto   22
+     jmp     l_test_22               #  54:     goto   22
