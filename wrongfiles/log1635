+     jmp     l_f0_12                 #  21:     goto   12
+     jmp     l_f0_12                 #  22:     goto   12
-     jmp     l_f0_13_while_cond      #  21:     goto   13_while_cond
+     jmp     l_f0_13_while_cond      #  23:     goto   13_while_cond
+     jmp     l_f1_2                  #   2:     goto   2
-     movl    $1, %eax                #   3:     assign t3 <- 1
+     movl    $1, %eax                #   4:     assign t3 <- 1
-     jmp     l_f1_3                  #   4:     goto   3
+     jmp     l_f1_3                  #   5:     goto   3
+ l_f1_2:
-     movl    $0, %eax                #   5:     assign t3 <- 0
+     movl    $0, %eax                #   7:     assign t3 <- 0
-     movzbl  -13(%ebp), %eax         #   7:     return t3
+     movzbl  -13(%ebp), %eax         #   9:     return t3
-     call    ReadInt                 #   8:     call   t4 <- ReadInt
+     call    ReadInt                 #  10:     call   t4 <- ReadInt
-     movl    $31674, %eax            #   9:     if     31674 # 44973 goto 12_if_true
+     movl    $31674, %eax            #  11:     if     31674 # 44973 goto 12_if_true
-     jmp     l_f1_13_if_false        #  10:     goto   13_if_false
+     jmp     l_f1_13_if_false        #  12:     goto   13_if_false
-     jmp     l_f1_11                 #  12:     goto   11
+     jmp     l_f1_11                 #  14:     goto   11
-     movl    $29220, %eax            #  16:     if     29220 < 22011 goto 17_while_body
+     movl    $29220, %eax            #  18:     if     29220 < 22011 goto 17_while_body
-     jmp     l_f1_15                 #  17:     goto   15
+     jmp     l_f1_15                 #  19:     goto   15
-     jmp     l_f1_16_while_cond      #  19:     goto   16_while_cond
+     jmp     l_f1_16_while_cond      #  21:     goto   16_while_cond
-     leal    _str_1, %eax            #  21:     &()    t5 <- _str_1
+     leal    _str_1, %eax            #  23:     &()    t5 <- _str_1
-     movl    -24(%ebp), %eax         #  22:     param  0 <- t5
+     movl    -24(%ebp), %eax         #  24:     param  0 <- t5
-     call    WriteStr                #  23:     call   WriteStr
+     call    WriteStr                #  25:     call   WriteStr
-     call    dummyINTfunc            #  24:     call   t6 <- dummyINTfunc
+     call    dummyINTfunc            #  26:     call   t6 <- dummyINTfunc
-     movl    $1, %eax                #  25:     return 1
+     movl    $1, %eax                #  27:     return 1
-     movl    $97, %eax               #  26:     if     97 <= 99 goto 23
+     movl    $97, %eax               #  28:     if     97 <= 99 goto 23
-     jmp     l_f1_24                 #  27:     goto   24
+     jmp     l_f1_24                 #  29:     goto   24
-     movl    $1, %eax                #  29:     assign t7 <- 1
+     movl    $1, %eax                #  31:     assign t7 <- 1
-     jmp     l_f1_25                 #  30:     goto   25
+     jmp     l_f1_25                 #  32:     goto   25
-     movl    $0, %eax                #  32:     assign t7 <- 0
+     movl    $0, %eax                #  34:     assign t7 <- 0
-     movzbl  -29(%ebp), %eax         #  34:     return t7
+     movzbl  -29(%ebp), %eax         #  36:     return t7
-     jmp     l_f1_7                  #  35:     goto   7
+     jmp     l_f1_7                  #  37:     goto   7
-     call    dummyCHARfunc           #  38:     call   t8 <- dummyCHARfunc
+     call    dummyCHARfunc           #  40:     call   t8 <- dummyCHARfunc
-     movzbl  -30(%ebp), %eax         #  39:     if     t8 <= 98 goto 29_while_body
+     movzbl  -30(%ebp), %eax         #  41:     if     t8 <= 98 goto 29_while_body
-     jmp     l_f1_27                 #  40:     goto   27
+     jmp     l_f1_27                 #  42:     goto   27
-     jmp     l_f1_28_while_cond      #  42:     goto   28_while_cond
+     jmp     l_f1_28_while_cond      #  44:     goto   28_while_cond
