+     jmp     l_f1_0                  #   1:     goto   0
-     movl    $99, %eax               #   1:     if     99 > 98 goto 6
+     movl    $99, %eax               #   2:     if     99 > 98 goto 6
-     jmp     l_f1_7                  #   2:     goto   7
+     jmp     l_f1_7                  #   3:     goto   7
-     movl    $1, %eax                #   4:     assign t3 <- 1
+     movl    $1, %eax                #   5:     assign t3 <- 1
-     jmp     l_f1_8                  #   5:     goto   8
+     jmp     l_f1_8                  #   6:     goto   8
-     movl    $0, %eax                #   7:     assign t3 <- 0
+     movl    $0, %eax                #   8:     assign t3 <- 0
-     movzbl  -13(%ebp), %eax         #   9:     return t3
+     movzbl  -13(%ebp), %eax         #  10:     return t3
-     movl    $1, %eax                #  10:     if     1 # 0 goto 11
+     movl    $1, %eax                #  11:     if     1 # 0 goto 11
-     jmp     l_f1_12                 #  11:     goto   12
+     jmp     l_f1_12                 #  12:     goto   12
-     movl    $1, %eax                #  13:     assign t4 <- 1
+     movl    $1, %eax                #  14:     assign t4 <- 1
-     jmp     l_f1_13                 #  14:     goto   13
+     jmp     l_f1_13                 #  15:     goto   13
-     movl    $0, %eax                #  16:     assign t4 <- 0
+     movl    $0, %eax                #  17:     assign t4 <- 0
-     movzbl  -14(%ebp), %eax         #  18:     return t4
+     movzbl  -14(%ebp), %eax         #  19:     return t4
-     movl    $9699, %eax             #  19:     assign v1 <- 9699
+     movl    $9699, %eax             #  20:     assign v1 <- 9699
-     jmp     l_f1_1_while_cond       #  20:     goto   1_while_cond
+     jmp     l_f1_1_while_cond       #  21:     goto   1_while_cond
+ l_f1_0:
-     call    dummyBOOLfunc           #  21:     call   t5 <- dummyBOOLfunc
+     call    dummyBOOLfunc           #  23:     call   t5 <- dummyBOOLfunc
-     movzbl  -15(%ebp), %eax         #  22:     if     t5 = 1 goto 21
+     movzbl  -15(%ebp), %eax         #  24:     if     t5 = 1 goto 21
-     jmp     l_f1_18                 #  23:     goto   18
+     jmp     l_f1_18                 #  25:     goto   18
-     movl    $1, %eax                #  25:     assign t6 <- 1
+     movl    $1, %eax                #  27:     assign t6 <- 1
-     jmp     l_f1_19                 #  26:     goto   19
+     jmp     l_f1_19                 #  28:     goto   19
-     movl    $0, %eax                #  28:     assign t6 <- 0
+     movl    $0, %eax                #  30:     assign t6 <- 0
-     movzbl  -16(%ebp), %eax         #  30:     return t6
+     movzbl  -16(%ebp), %eax         #  32:     return t6
-     jmp     l_f1_23                 #  31:     goto   23
-     jmp     l_f1_23                 #  32:     goto   23
+     jmp     l_f1_23                 #  34:     goto   23
+     jmp     l_f1_23                 #  35:     goto   23
+     jmp     l_f1_24                 #  36:     goto   24
-     movl    $1, %eax                #  35:     assign t7 <- 1
+     movl    $1, %eax                #  38:     assign t7 <- 1
-     jmp     l_f1_25                 #  36:     goto   25
+     jmp     l_f1_25                 #  39:     goto   25
+ l_f1_24:
-     movl    $0, %eax                #  37:     assign t7 <- 0
+     movl    $0, %eax                #  41:     assign t7 <- 0
-     movzbl  -17(%ebp), %eax         #  39:     return t7
+     movzbl  -17(%ebp), %eax         #  43:     return t7
-     #    -76(%ebp)   4  [ $t25      <int> %ebp-76 ]
+     #    -76(%ebp)   4  [ $t25      <ptr(4) to <array 4 of <array 3 of <array 10 of <array 5 of <array 10 of <char>>>>>>> %ebp-76 ]
-     #    -88(%ebp)   4  [ $t28      <ptr(4) to <array 4 of <array 3 of <array 10 of <array 5 of <array 10 of <char>>>>>>> %ebp-88 ]
+     #    -88(%ebp)   4  [ $t28      <int> %ebp-88 ]
-     #   -100(%ebp)   4  [ $t30      <int> %ebp-100 ]
+     #   -100(%ebp)   4  [ $t30      <ptr(4) to <array 4 of <array 3 of <array 10 of <array 5 of <array 10 of <char>>>>>>> %ebp-100 ]
-     #   -112(%ebp)   4  [ $t33      <ptr(4) to <array 4 of <array 3 of <array 10 of <array 5 of <array 10 of <char>>>>>>> %ebp-112 ]
+     #   -112(%ebp)   4  [ $t33      <int> %ebp-112 ]
-     #   -116(%ebp)   4  [ $t34      <int> %ebp-116 ]
+     #   -116(%ebp)   4  [ $t4       <int> %ebp-116 ]
-     #   -120(%ebp)   4  [ $t35      <int> %ebp-120 ]
+     #   -120(%ebp)   4  [ $t5       <int> %ebp-120 ]
-     #   -124(%ebp)   4  [ $t36      <int> %ebp-124 ]
+     #   -124(%ebp)   4  [ $t6       <ptr(4) to <array 4 of <array 3 of <array 10 of <array 5 of <array 10 of <char>>>>>>> %ebp-124 ]
-     #   -128(%ebp)   4  [ $t4       <int> %ebp-128 ]
+     #   -125(%ebp)   1  [ $t7       <bool> %ebp-125 ]
-     #   -132(%ebp)   4  [ $t5       <int> %ebp-132 ]
+     #   -132(%ebp)   4  [ $t8       <int> %ebp-132 ]
-     #   -136(%ebp)   4  [ $t6       <ptr(4) to <array 4 of <array 3 of <array 10 of <array 5 of <array 10 of <char>>>>>>> %ebp-136 ]
+     #   -136(%ebp)   4  [ $t9       <ptr(4) to <array 4 of <array 3 of <array 10 of <array 5 of <array 10 of <char>>>>>>> %ebp-136 ]
-     #   -137(%ebp)   1  [ $t7       <bool> %ebp-137 ]
-     #   -144(%ebp)   4  [ $t8       <int> %ebp-144 ]
-     #   -148(%ebp)   4  [ $t9       <ptr(4) to <array 4 of <array 3 of <array 10 of <array 5 of <array 10 of <char>>>>>>> %ebp-148 ]
-     #  -6172(%ebp)6024  [ $v1       <array 4 of <array 3 of <array 10 of <array 5 of <array 10 of <char>>>>>> %ebp-6172 ]
+     #   -6160(%ebp)  6024  [ $v1       <array 4 of <array 3 of <array 10 of <array 5 of <array 10 of <char>>>>>> %ebp-6160 ]
-     #  -6173(%ebp)   1  [ $v2       <char> %ebp-6173 ]
+     #   -6161(%ebp)   1  [ $v2       <char> %ebp-6161 ]
-     pushl   %ebp                   
-     movl    %esp, %ebp             
-     pushl   %ebx                    # save callee saved registers
-     pushl   %esi                   
+     pushl   %ebp                   
+     movl    %esp, %ebp             
+     pushl   %ebx                    # save callee saved registers
-     pushl   %edi                   
+     pushl   %esi                   
+     pushl   %edi                   
-     subl    $6164, %esp             # make room for locals
+     subl    $6152, %esp             # make room for locals
-     movl    $1541, %ecx            
+     movl    $1538, %ecx            
-     movl    $5,-6172(%ebp)          # local array 'v1': 5 dimensions
+     movl    $5,-6160(%ebp)          # local array 'v1': 5 dimensions
-     movl    $4,-6168(%ebp)          #   dimension 1: 4 elements
+     movl    $4,-6156(%ebp)          #   dimension 1: 4 elements
-     movl    $3,-6164(%ebp)          #   dimension 2: 3 elements
+     movl    $3,-6152(%ebp)          #   dimension 2: 3 elements
-     movl    $10,-6160(%ebp)         #   dimension 3: 10 elements
+     movl    $10,-6148(%ebp)         #   dimension 3: 10 elements
-     movl    $5,-6156(%ebp)          #   dimension 4: 5 elements
+     movl    $5,-6144(%ebp)          #   dimension 4: 5 elements
-     movl    $10,-6152(%ebp)         #   dimension 5: 10 elements
+     movl    $10,-6140(%ebp)         #   dimension 5: 10 elements
-     movl    %eax, -128(%ebp)       
+     movl    %eax, -116(%ebp)       
-     movl    -128(%ebp), %eax        #   6:     add    t5 <- t4, 66172
+     movl    -116(%ebp), %eax        #   6:     add    t5 <- t4, 66172
-     movl    %eax, -132(%ebp)       
+     movl    %eax, -120(%ebp)       
-     movl    -132(%ebp), %eax        #   7:     param  1 <- t5
+     movl    -120(%ebp), %eax        #   7:     param  1 <- t5
-     leal    -6172(%ebp), %eax       #   8:     &()    t6 <- v1
+     leal    -6160(%ebp), %eax       #   8:     &()    t6 <- v1
-     movl    %eax, -136(%ebp)       
+     movl    %eax, -124(%ebp)       
-     movl    -136(%ebp), %eax        #   9:     param  0 <- t6
+     movl    -124(%ebp), %eax        #   9:     param  0 <- t6
-     movb    %al, -137(%ebp)        
+     movb    %al, -125(%ebp)        
-     movl    %eax, -144(%ebp)       
+     movl    %eax, -132(%ebp)       
-     leal    -6172(%ebp), %eax       #  14:     &()    t9 <- v1
+     leal    -6160(%ebp), %eax       #  14:     &()    t9 <- v1
-     movl    %eax, -148(%ebp)       
+     movl    %eax, -136(%ebp)       
-     leal    -6172(%ebp), %eax       #  16:     &()    t10 <- v1
+     leal    -6160(%ebp), %eax       #  16:     &()    t10 <- v1
-     leal    -6172(%ebp), %eax       #  22:     &()    t14 <- v1
+     leal    -6160(%ebp), %eax       #  22:     &()    t14 <- v1
-     leal    -6172(%ebp), %eax       #  31:     &()    t21 <- v1
+     leal    -6160(%ebp), %eax       #  31:     &()    t21 <- v1
-     movl    $94002, %eax            #  34:     sub    t24 <- 94002, 91909
-     movl    $91909, %ebx           
-     subl    %ebx, %eax             
-     movl    %eax, -72(%ebp)        
-     movl    -72(%ebp), %eax         #  35:     sub    t25 <- t24, 22654
-     movl    $22654, %ebx           
-     subl    %ebx, %eax             
-     movl    %eax, -76(%ebp)        
-     movl    -76(%ebp), %eax         #  36:     add    t26 <- t25, 33800
-     movl    $33800, %ebx           
-     addl    %ebx, %eax             
-     movl    %eax, -80(%ebp)        
-     movl    -56(%ebp), %eax         #  37:     mul    t23 <- t20, t22
+     movl    -56(%ebp), %eax         #  34:     mul    t23 <- t20, t22
-     movl    -68(%ebp), %eax         #  38:     add    t27 <- t23, 56284
+     movl    -68(%ebp), %eax         #  35:     add    t24 <- t23, 56284
+     movl    %eax, -72(%ebp)        
+     movl    $5, %eax                #  36:     param  1 <- 5
+     pushl   %eax                   
+     leal    -6160(%ebp), %eax       #  37:     &()    t25 <- v1
+     movl    %eax, -76(%ebp)        
+     movl    -76(%ebp), %eax         #  38:     param  0 <- t25
+     pushl   %eax                   
+     call    DIM                     #  39:     call   t26 <- DIM
+     addl    $8, %esp               
+     movl    %eax, -80(%ebp)        
+     movl    -72(%ebp), %eax         #  40:     mul    t27 <- t24, t26
+     movl    -80(%ebp), %ebx        
+     imull   %ebx                   
-     movl    $5, %eax                #  39:     param  1 <- 5
-     pushl   %eax                   
-     leal    -6172(%ebp), %eax       #  40:     &()    t28 <- v1
+     movl    -84(%ebp), %eax         #  41:     add    t28 <- t27, 57636
+     movl    $57636, %ebx           
+     addl    %ebx, %eax             
-     movl    -88(%ebp), %eax         #  41:     param  0 <- t28
-     pushl   %eax                   
-     call    DIM                     #  42:     call   t29 <- DIM
-     addl    $8, %esp               
-     movl    %eax, -92(%ebp)        
-     movl    -84(%ebp), %eax         #  43:     mul    t30 <- t27, t29
+     movl    -88(%ebp), %eax         #  42:     mul    t29 <- t28, 1
-     movl    -92(%ebp), %ebx        
-     imull   %ebx                   
-     movl    %eax, -100(%ebp)       
-     movl    -100(%ebp), %eax        #  44:     add    t31 <- t30, 57636
-     movl    $57636, %ebx           
-     addl    %ebx, %eax             
-     movl    %eax, -104(%ebp)       
-     movl    -104(%ebp), %eax        #  45:     mul    t32 <- t31, 1
+     movl    %eax, -92(%ebp)        
+     leal    -6160(%ebp), %eax       #  43:     &()    t30 <- v1
+     movl    %eax, -100(%ebp)       
+     movl    -100(%ebp), %eax        #  44:     param  0 <- t30
+     pushl   %eax                   
+     call    DOFS                    #  45:     call   t31 <- DOFS
+     addl    $4, %esp               
+     movl    %eax, -104(%ebp)       
+     movl    -92(%ebp), %eax         #  46:     add    t32 <- t29, t31
+     movl    -104(%ebp), %ebx       
+     addl    %ebx, %eax             
-     leal    -6172(%ebp), %eax       #  46:     &()    t33 <- v1
+     movl    -136(%ebp), %eax        #  47:     add    t33 <- t9, t32
+     movl    -108(%ebp), %ebx       
+     addl    %ebx, %eax             
-     movl    -112(%ebp), %eax        #  47:     param  0 <- t33
-     pushl   %eax                   
-     call    DOFS                    #  48:     call   t34 <- DOFS
-     addl    $4, %esp               
-     movl    %eax, -116(%ebp)       
-     movl    -108(%ebp), %eax        #  49:     add    t35 <- t32, t34
-     movl    -116(%ebp), %ebx       
-     addl    %ebx, %eax             
-     movl    %eax, -120(%ebp)       
-     movl    -148(%ebp), %eax        #  50:     add    t36 <- t9, t35
-     movl    -120(%ebp), %ebx       
-     addl    %ebx, %eax             
-     movl    %eax, -124(%ebp)       
-     movl    $99, %eax               #  51:     assign @t36 <- 99
+     movl    $99, %eax               #  48:     assign @t33 <- 99
-     movl    -124(%ebp), %edi       
+     movl    -112(%ebp), %edi       
-     addl    $6164, %esp             # remove locals
+     addl    $6152, %esp             # remove locals
