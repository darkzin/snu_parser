+     jmp     l_f0_0                  #   1:     goto   0
-     call    dummyBOOLfunc           #   1:     call   t30 <- dummyBOOLfunc
+     call    dummyBOOLfunc           #   2:     call   t30 <- dummyBOOLfunc
-     movzbl  -13(%ebp), %eax         #   2:     if     t30 = 1 goto 2_while_body
+     movzbl  -13(%ebp), %eax         #   3:     if     t30 = 1 goto 2_while_body
-     jmp     l_f0_0                  #   3:     goto   0
+     jmp     l_f0_0                  #   4:     goto   0
-     jmp     l_f0_1_while_cond       #   5:     goto   1_while_cond
+     jmp     l_f0_1_while_cond       #   6:     goto   1_while_cond
-     call    WriteLn                 #   7:     call   WriteLn
+     call    WriteLn                 #   8:     call   WriteLn
-     call    dummyCHARfunc           #   8:     call   t31 <- dummyCHARfunc
+     call    dummyCHARfunc           #   9:     call   t31 <- dummyCHARfunc
-     movzbl  -14(%ebp), %eax         #   9:     return t31
+     movzbl  -14(%ebp), %eax         #  10:     return t31
+     jmp     l_test_8                #   9:     goto   8
-     jmp     l_test_7_while_body     #   9:     goto   7_while_body
+     jmp     l_test_7_while_body     #  10:     goto   7_while_body
+ l_test_8:
+     jmp     l_test_5                #  12:     goto   5
-     jmp     l_test_6_while_cond     #  11:     goto   6_while_cond
+     jmp     l_test_6_while_cond     #  14:     goto   6_while_cond
+ l_test_5:
-     movl    $92051, %eax            #  12:     mul    t1 <- 92051, 45444
+     movl    $92051, %eax            #  16:     mul    t1 <- 92051, 45444
-     movl    -20(%ebp), %eax         #  13:     add    t2 <- t1, 65161
+     movl    -20(%ebp), %eax         #  17:     add    t2 <- t1, 65161
-     movl    -64(%ebp), %eax         #  14:     assign v1 <- t2
+     movl    -64(%ebp), %eax         #  18:     assign v1 <- t2
-     call    dummyINTfunc            #  16:     call   t3 <- dummyINTfunc
+     call    dummyINTfunc            #  20:     call   t3 <- dummyINTfunc
-     movl    $76488, %eax            #  17:     if     76488 >= t3 goto 13_while_body
+     movl    $76488, %eax            #  21:     if     76488 >= t3 goto 13_while_body
-     jmp     l_test_11               #  18:     goto   11
+     jmp     l_test_11               #  22:     goto   11
-     movl    $40246, %eax            #  20:     param  3 <- 40246
+     movl    $40246, %eax            #  24:     param  3 <- 40246
-     leal    v3, %eax                #  21:     &()    t4 <- v3
+     leal    v3, %eax                #  25:     &()    t4 <- v3
-     movl    -112(%ebp), %eax        #  22:     param  2 <- t4
+     movl    -112(%ebp), %eax        #  26:     param  2 <- t4
-     movl    $37705, %eax            #  23:     if     37705 > 90795 goto 16
+     movl    $37705, %eax            #  27:     if     37705 > 90795 goto 16
-     jmp     l_test_17               #  24:     goto   17
+     jmp     l_test_17               #  28:     goto   17
-     movl    $1, %eax                #  26:     assign t5 <- 1
+     movl    $1, %eax                #  30:     assign t5 <- 1
-     jmp     l_test_18               #  27:     goto   18
+     jmp     l_test_18               #  31:     goto   18
-     movl    $0, %eax                #  29:     assign t5 <- 0
+     movl    $0, %eax                #  33:     assign t5 <- 0
-     movzbl  -113(%ebp), %eax        #  31:     param  1 <- t5
+     movzbl  -113(%ebp), %eax        #  35:     param  1 <- t5
-     leal    v2, %eax                #  32:     &()    t6 <- v2
+     leal    v2, %eax                #  36:     &()    t6 <- v2
-     movl    -120(%ebp), %eax        #  33:     param  0 <- t6
+     movl    -120(%ebp), %eax        #  37:     param  0 <- t6
-     call    f2                      #  34:     call   f2
+     call    f2                      #  38:     call   f2
-     addl    $13, %esp              
+     addl    $16, %esp              
-     jmp     l_test_20               #  36:     goto   20
+     jmp     l_test_20               #  40:     goto   20
-     jmp     l_test_21_while_cond    #  37:     goto   21_while_cond
+     jmp     l_test_21_while_cond    #  41:     goto   21_while_cond
-     jmp     l_test_23               #  39:     goto   23
+     jmp     l_test_23               #  43:     goto   23
-     jmp     l_test_12_while_cond    #  41:     goto   12_while_cond
+     jmp     l_test_12_while_cond    #  45:     goto   12_while_cond
-     movl    $98, %eax               #  43:     assign v0 <- 98
+     movl    $98, %eax               #  47:     assign v0 <- 98
-     movl    $99, %eax               #  45:     if     99 > 99 goto 29_while_body
+     movl    $99, %eax               #  49:     if     99 > 99 goto 29_while_body
-     jmp     l_test_27               #  46:     goto   27
+     jmp     l_test_27               #  50:     goto   27
-     movl    $45762, %eax            #  49:     param  1 <- 45762
+     movl    $45762, %eax            #  53:     param  1 <- 45762
-     movl    $1619, %eax             #  50:     param  0 <- 1619
+     movl    $1619, %eax             #  54:     param  0 <- 1619
-     call    f0                      #  51:     call   t7 <- f0
+     call    f0                      #  55:     call   t7 <- f0
-     movl    $64736, %eax            #  52:     assign v1 <- 64736
+     movl    $64736, %eax            #  56:     assign v1 <- 64736
-     movl    $100, %eax              #  53:     if     100 = 98 goto 35_if_true
+     movl    $100, %eax              #  57:     if     100 = 98 goto 35_if_true
-     jmp     l_test_36_if_false      #  54:     goto   36_if_false
+     jmp     l_test_36_if_false      #  58:     goto   36_if_false
-     jmp     l_test_34               #  56:     goto   34
+     jmp     l_test_34               #  60:     goto   34
-     leal    v2, %eax                #  59:     &()    t8 <- v2
+     leal    v2, %eax                #  63:     &()    t8 <- v2
-     movl    $2, %eax                #  60:     param  1 <- 2
+     movl    $2, %eax                #  64:     param  1 <- 2
-     leal    v2, %eax                #  61:     &()    t9 <- v2
+     leal    v2, %eax                #  65:     &()    t9 <- v2
-     movl    -132(%ebp), %eax        #  62:     param  0 <- t9
+     movl    -132(%ebp), %eax        #  66:     param  0 <- t9
-     call    DIM                     #  63:     call   t10 <- DIM
+     call    DIM                     #  67:     call   t10 <- DIM
-     movl    $51155, %eax            #  64:     mul    t11 <- 51155, t10
+     movl    $51155, %eax            #  68:     mul    t11 <- 51155, t10
-     movl    -28(%ebp), %eax         #  65:     add    t12 <- t11, 78356
+     movl    -28(%ebp), %eax         #  69:     add    t12 <- t11, 78356
-     movl    $3, %eax                #  66:     param  1 <- 3
+     movl    $3, %eax                #  70:     param  1 <- 3
-     leal    v2, %eax                #  67:     &()    t13 <- v2
+     leal    v2, %eax                #  71:     &()    t13 <- v2
-     movl    -36(%ebp), %eax         #  68:     param  0 <- t13
+     movl    -36(%ebp), %eax         #  72:     param  0 <- t13
-     call    DIM                     #  69:     call   t14 <- DIM
+     call    DIM                     #  73:     call   t14 <- DIM
-     movl    -32(%ebp), %eax         #  70:     mul    t15 <- t12, t14
+     movl    -32(%ebp), %eax         #  74:     mul    t15 <- t12, t14
-     movl    -44(%ebp), %eax         #  71:     add    t16 <- t15, 85883
+     movl    -44(%ebp), %eax         #  75:     add    t16 <- t15, 85883
-     movl    $4, %eax                #  72:     param  1 <- 4
+     movl    $4, %eax                #  76:     param  1 <- 4
-     leal    v2, %eax                #  73:     &()    t17 <- v2
+     leal    v2, %eax                #  77:     &()    t17 <- v2
-     movl    -52(%ebp), %eax         #  74:     param  0 <- t17
+     movl    -52(%ebp), %eax         #  78:     param  0 <- t17
-     call    DIM                     #  75:     call   t18 <- DIM
+     call    DIM                     #  79:     call   t18 <- DIM
-     movl    -48(%ebp), %eax         #  76:     mul    t19 <- t16, t18
+     movl    -48(%ebp), %eax         #  80:     mul    t19 <- t16, t18
-     movl    -60(%ebp), %eax         #  77:     add    t20 <- t19, 87701
+     movl    -60(%ebp), %eax         #  81:     add    t20 <- t19, 87701
-     movl    $5, %eax                #  78:     param  1 <- 5
+     movl    $5, %eax                #  82:     param  1 <- 5
-     leal    v2, %eax                #  79:     &()    t21 <- v2
+     leal    v2, %eax                #  83:     &()    t21 <- v2
-     movl    -72(%ebp), %eax         #  80:     param  0 <- t21
+     movl    -72(%ebp), %eax         #  84:     param  0 <- t21
-     call    DIM                     #  81:     call   t22 <- DIM
+     call    DIM                     #  85:     call   t22 <- DIM
-     movl    -68(%ebp), %eax         #  82:     mul    t23 <- t20, t22
+     movl    -68(%ebp), %eax         #  86:     mul    t23 <- t20, t22
-     movl    -80(%ebp), %eax         #  83:     add    t24 <- t23, 27669
+     movl    -80(%ebp), %eax         #  87:     add    t24 <- t23, 27669
-     movl    -84(%ebp), %eax         #  84:     mul    t25 <- t24, 4
+     movl    -84(%ebp), %eax         #  88:     mul    t25 <- t24, 4
-     leal    v2, %eax                #  85:     &()    t26 <- v2
+     leal    v2, %eax                #  89:     &()    t26 <- v2
-     movl    -92(%ebp), %eax         #  86:     param  0 <- t26
+     movl    -92(%ebp), %eax         #  90:     param  0 <- t26
-     call    DOFS                    #  87:     call   t27 <- DOFS
+     call    DOFS                    #  91:     call   t27 <- DOFS
-     movl    -88(%ebp), %eax         #  88:     add    t28 <- t25, t27
+     movl    -88(%ebp), %eax         #  92:     add    t28 <- t25, t27
-     movl    -128(%ebp), %eax        #  89:     add    t29 <- t8, t28
+     movl    -128(%ebp), %eax        #  93:     add    t29 <- t8, t28
-     movl    $83835, %eax            #  90:     assign @t29 <- 83835
+     movl    $83835, %eax            #  94:     assign @t29 <- 83835
-     jmp     l_test_28_while_cond    #  91:     goto   28_while_cond
+     jmp     l_test_28_while_cond    #  95:     goto   28_while_cond
