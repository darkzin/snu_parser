-     #    -16(%ebp)   4  [ $t34      <int> %ebp-16 ]
+     #    -16(%ebp)   4  [ $t32      <int> %ebp-16 ]
-     #    -20(%ebp)   4  [ $t35      <int> %ebp-20 ]
+     #    -20(%ebp)   4  [ $t33      <int> %ebp-20 ]
-     #    -24(%ebp)   4  [ $t36      <int> %ebp-24 ]
+     #    -24(%ebp)   4  [ $t34      <int> %ebp-24 ]
-     #    -28(%ebp)   4  [ $t37      <int> %ebp-28 ]
+     #    -28(%ebp)   4  [ $t35      <int> %ebp-28 ]
-     #    -32(%ebp)   4  [ $t38      <int> %ebp-32 ]
+     #    -32(%ebp)   4  [ $t36      <int> %ebp-32 ]
-     #    -36(%ebp)   4  [ $t39      <int> %ebp-36 ]
+     #    -36(%ebp)   4  [ $t37      <int> %ebp-36 ]
-     #    -40(%ebp)   4  [ $t40      <int> %ebp-40 ]
+     #    -40(%ebp)   4  [ $t38      <int> %ebp-40 ]
-     #    -44(%ebp)   4  [ $t41      <int> %ebp-44 ]
+     #    -44(%ebp)   4  [ $t39      <int> %ebp-44 ]
-     movl    $88016, %eax            #   0:     div    t34 <- 88016, 78568
+     movl    $88016, %eax            #   0:     div    t32 <- 88016, 78568
-     movl    -16(%ebp), %eax         #   1:     sub    t35 <- t34, 60442
+     movl    -16(%ebp), %eax         #   1:     sub    t33 <- t32, 60442
-     movl    -20(%ebp), %eax         #   2:     add    t36 <- t35, 6459
+     movl    -20(%ebp), %eax         #   2:     add    t34 <- t33, 6459
-     movl    -24(%ebp), %eax         #   3:     return t36
+     movl    -24(%ebp), %eax         #   3:     return t34
-     movl    $92026, %eax            #   4:     div    t37 <- 92026, 60871
+     movl    $92026, %eax            #   4:     div    t35 <- 92026, 60871
-     movl    -28(%ebp), %eax         #   5:     div    t38 <- t37, 11729
+     movl    -28(%ebp), %eax         #   5:     div    t36 <- t35, 11729
-     movl    -32(%ebp), %eax         #   6:     return t38
+     movl    -32(%ebp), %eax         #   6:     return t36
-     movl    $47465, %eax            #   7:     sub    t39 <- 47465, 39509
+     movl    $47465, %eax            #   7:     sub    t37 <- 47465, 39509
-     call    ReadInt                 #   8:     call   t40 <- ReadInt
+     call    ReadInt                 #   8:     call   t38 <- ReadInt
-     movl    -36(%ebp), %eax         #   9:     sub    t41 <- t39, t40
+     movl    -36(%ebp), %eax         #   9:     sub    t39 <- t37, t38
-     movl    -44(%ebp), %eax         #  10:     return t41
+     movl    -44(%ebp), %eax         #  10:     return t39
-     #    -13(%ebp)   1  [ $t34      <bool> %ebp-13 ]
+     #    -13(%ebp)   1  [ $t32      <bool> %ebp-13 ]
-     #    -14(%ebp)   1  [ $t35      <bool> %ebp-14 ]
+     #    -14(%ebp)   1  [ $t33      <bool> %ebp-14 ]
-     #    -15(%ebp)   1  [ $t36      <char> %ebp-15 ]
+     #    -15(%ebp)   1  [ $t34      <char> %ebp-15 ]
-     movl    $1, %eax                #   0:     assign t34 <- 1
+     movl    $1, %eax                #   0:     assign t32 <- 1
-     movl    $0, %eax                #   2:     assign t34 <- 0
+     movl    $0, %eax                #   2:     assign t32 <- 0
-     movzbl  -13(%ebp), %eax         #   4:     assign v3 <- t34
+     movzbl  -13(%ebp), %eax         #   4:     assign v3 <- t32
-     call    dummyBOOLfunc           #   5:     call   t35 <- dummyBOOLfunc
+     call    dummyBOOLfunc           #   5:     call   t33 <- dummyBOOLfunc
-     call    dummyCHARfunc           #   7:     call   t36 <- dummyCHARfunc
+     call    dummyCHARfunc           #   7:     call   t34 <- dummyCHARfunc
-     movzbl  -15(%ebp), %eax         #   8:     if     t36 >= 99 goto 8_while_body
+     movzbl  -15(%ebp), %eax         #   8:     if     t34 >= 99 goto 8_while_body
-     #    -13(%ebp)   1  [ $t34      <bool> %ebp-13 ]
+     #    -13(%ebp)   1  [ $t32      <bool> %ebp-13 ]
-     #    -20(%ebp)   4  [ $t35      <ptr(4) to <array 60 of <array 62 of <array 99 of <array 53 of <array 14 of <char>>>>>>> %ebp-20 ]
+     #    -20(%ebp)   4  [ $t33      <ptr(4) to <array 60 of <array 62 of <array 99 of <array 53 of <array 14 of <char>>>>>>> %ebp-20 ]
-     #    -24(%ebp)   4  [ $t36      <ptr(4) to <array 30 of <array 65 of <array 82 of <array 80 of <array 85 of <char>>>>>>> %ebp-24 ]
+     #    -24(%ebp)   4  [ $t34      <ptr(4) to <array 30 of <array 65 of <array 82 of <array 80 of <array 85 of <char>>>>>>> %ebp-24 ]
-     #    -25(%ebp)   1  [ $t37      <char> %ebp-25 ]
+     #    -25(%ebp)   1  [ $t35      <char> %ebp-25 ]
-     #    -32(%ebp)   4  [ $t38      <ptr(4) to <array 7 of <array 40 of <array 56 of <array 86 of <array 27 of <int>>>>>>> %ebp-32 ]
+     #    -32(%ebp)   4  [ $t36      <ptr(4) to <array 7 of <array 40 of <array 56 of <array 86 of <array 27 of <int>>>>>>> %ebp-32 ]
-     #    -36(%ebp)   4  [ $t39      <ptr(4) to <array 46 of <array 99 of <array 79 of <array 67 of <array 42 of <char>>>>>>> %ebp-36 ]
+     #    -36(%ebp)   4  [ $t37      <ptr(4) to <array 46 of <array 99 of <array 79 of <array 67 of <array 42 of <char>>>>>>> %ebp-36 ]
-     #    -40(%ebp)   4  [ $t40      <ptr(4) to <array 60 of <array 62 of <array 99 of <array 53 of <array 14 of <char>>>>>>> %ebp-40 ]
+     #    -40(%ebp)   4  [ $t38      <ptr(4) to <array 60 of <array 62 of <array 99 of <array 53 of <array 14 of <char>>>>>>> %ebp-40 ]
-     #    -44(%ebp)   4  [ $t41      <ptr(4) to <array 30 of <array 65 of <array 82 of <array 80 of <array 85 of <char>>>>>>> %ebp-44 ]
+     #    -44(%ebp)   4  [ $t39      <ptr(4) to <array 30 of <array 65 of <array 82 of <array 80 of <array 85 of <char>>>>>>> %ebp-44 ]
-     #    -45(%ebp)   1  [ $t42      <char> %ebp-45 ]
+     #    -45(%ebp)   1  [ $t40      <char> %ebp-45 ]
-     #    -46(%ebp)   1  [ $t43      <bool> %ebp-46 ]
+     #    -46(%ebp)   1  [ $t41      <bool> %ebp-46 ]
-     #    -52(%ebp)   4  [ $t44      <int> %ebp-52 ]
+     #    -52(%ebp)   4  [ $t42      <int> %ebp-52 ]
-     #-1087320076(%ebp)1087320024  [ $v0       <array 30 of <array 65 of <array 82 of <array 80 of <array 85 of <char>>>>>> %ebp-1087320076 ]
+     #   -1087320076(%ebp)  1087320024  [ $v0       <array 30 of <array 65 of <array 82 of <array 80 of <array 85 of <char>>>>>> %ebp-1087320076 ]
-     #-1360583860(%ebp)273263784  [ $v1       <array 60 of <array 62 of <array 99 of <array 53 of <array 14 of <char>>>>>> %ebp-1360583860 ]
+     #   -1360583860(%ebp)  273263784  [ $v1       <array 60 of <array 62 of <array 99 of <array 53 of <array 14 of <char>>>>>> %ebp-1360583860 ]
-     #1922001888(%ebp)1012381548  [ $v2       <array 46 of <array 99 of <array 79 of <array 67 of <array 42 of <char>>>>>> %ebp+1922001888 ]
+     #   1922001888(%ebp)  1012381548  [ $v2       <array 46 of <array 99 of <array 79 of <array 67 of <array 42 of <char>>>>>> %ebp+1922001888 ]
-     #1776366024(%ebp)145635864  [ $v3       <array 7 of <array 40 of <array 56 of <array 86 of <array 27 of <int>>>>>> %ebp+1776366024 ]
+     #   1776366024(%ebp)  145635864  [ $v3       <array 7 of <array 40 of <array 56 of <array 86 of <array 27 of <int>>>>>> %ebp+1776366024 ]
+     cld                             # memset local stack area to 0
+     xorl    %eax, %eax             
+     movl    $629650315, %ecx       
+     mov     %esp, %edi             
+     rep     stosl                  
+     jmp     l_f2_2                  #   0:     goto   2
+     jmp     l_f2_2                  #   1:     goto   2
+     jmp     l_f2_2                  #   2:     goto   2
-     movl    $1, %eax                #   0:     assign t34 <- 1
+     movl    $1, %eax                #   3:     assign t32 <- 1
-     jmp     l_f2_3                  #   1:     goto   3
+     jmp     l_f2_3                  #   4:     goto   3
+ l_f2_2:
-     movl    $0, %eax                #   2:     assign t34 <- 0
+     movl    $0, %eax                #   6:     assign t32 <- 0
-     movzbl  -13(%ebp), %eax         #   4:     return t34
+     movzbl  -13(%ebp), %eax         #   8:     return t32
-     leal    -1360583860(%ebp), %eax #   5:     &()    t35 <- v1
+     leal    -1360583860(%ebp), %eax #   9:     &()    t33 <- v1
-     movl    -20(%ebp), %eax         #   6:     param  2 <- t35
+     movl    -20(%ebp), %eax         #  10:     param  2 <- t33
-     movl    $81634, %eax            #   7:     param  1 <- 81634
+     movl    $81634, %eax            #  11:     param  1 <- 81634
-     leal    -1087320076(%ebp), %eax #   8:     &()    t36 <- v0
+     leal    -1087320076(%ebp), %eax #  12:     &()    t34 <- v0
-     movl    -24(%ebp), %eax         #   9:     param  0 <- t36
+     movl    -24(%ebp), %eax         #  13:     param  0 <- t34
-     call    f1                      #  10:     call   t37 <- f1
+     call    f1                      #  14:     call   t35 <- f1
-     leal    1776366024(%ebp), %eax  #  11:     &()    t38 <- v3
+     leal    1776366024(%ebp), %eax  #  15:     &()    t36 <- v3
-     movl    -32(%ebp), %eax         #  12:     param  3 <- t38
+     movl    -32(%ebp), %eax         #  16:     param  3 <- t36
-     leal    1922001888(%ebp), %eax  #  13:     &()    t39 <- v2
+     leal    1922001888(%ebp), %eax  #  17:     &()    t37 <- v2
-     movl    -36(%ebp), %eax         #  14:     param  2 <- t39
+     movl    -36(%ebp), %eax         #  18:     param  2 <- t37
-     leal    -1360583860(%ebp), %eax #  15:     &()    t40 <- v1
+     leal    -1360583860(%ebp), %eax #  19:     &()    t38 <- v1
-     movl    -40(%ebp), %eax         #  16:     param  2 <- t40
+     movl    -40(%ebp), %eax         #  20:     param  2 <- t38
-     movl    $83150, %eax            #  17:     param  1 <- 83150
+     movl    $83150, %eax            #  21:     param  1 <- 83150
-     leal    -1087320076(%ebp), %eax #  18:     &()    t41 <- v0
+     leal    -1087320076(%ebp), %eax #  22:     &()    t39 <- v0
-     movl    -44(%ebp), %eax         #  19:     param  0 <- t41
+     movl    -44(%ebp), %eax         #  23:     param  0 <- t39
-     call    f1                      #  20:     call   t42 <- f1
+     call    f1                      #  24:     call   t40 <- f1
-     movzbl  -45(%ebp), %eax         #  21:     if     t42 <= 97 goto 8
+     movzbl  -45(%ebp), %eax         #  25:     if     t40 <= 97 goto 8
-     jmp     l_f2_9                  #  22:     goto   9
+     jmp     l_f2_9                  #  26:     goto   9
-     movl    $1, %eax                #  24:     assign t43 <- 1
+     movl    $1, %eax                #  28:     assign t41 <- 1
-     jmp     l_f2_10                 #  25:     goto   10
+     jmp     l_f2_10                 #  29:     goto   10
-     movl    $0, %eax                #  27:     assign t43 <- 0
+     movl    $0, %eax                #  31:     assign t41 <- 0
-     movzbl  -46(%ebp), %eax         #  29:     param  1 <- t43
+     movzbl  -46(%ebp), %eax         #  33:     param  1 <- t41
-     movl    $1, %eax                #  30:     param  0 <- 1
+     movl    $1, %eax                #  34:     param  0 <- 1
-     call    f0                      #  31:     call   t44 <- f0
+     call    f0                      #  35:     call   t42 <- f0
-     addl    $10, %esp              
+     addl    $16, %esp              
-     #    -44(%ebp)   4  [ $t15      <int> %ebp-44 ]
+     #    -44(%ebp)   4  [ $t15      <ptr(4) to <array 30 of <array 65 of <array 82 of <array 80 of <array 85 of <char>>>>>>> %ebp-44 ]
-     #    -52(%ebp)   4  [ $t17      <ptr(4) to <array 30 of <array 65 of <array 82 of <array 80 of <array 85 of <char>>>>>>> %ebp-52 ]
+     #    -52(%ebp)   4  [ $t17      <int> %ebp-52 ]
-     #    -60(%ebp)   4  [ $t19      <int> %ebp-60 ]
+     #    -60(%ebp)   4  [ $t19      <ptr(4) to <array 30 of <array 65 of <array 82 of <array 80 of <array 85 of <char>>>>>>> %ebp-60 ]
-     #    -72(%ebp)   4  [ $t21      <ptr(4) to <array 30 of <array 65 of <array 82 of <array 80 of <array 85 of <char>>>>>>> %ebp-72 ]
+     #    -72(%ebp)   4  [ $t21      <int> %ebp-72 ]
-     #    -80(%ebp)   4  [ $t23      <int> %ebp-80 ]
+     #    -80(%ebp)   4  [ $t23      <ptr(4) to <array 30 of <array 65 of <array 82 of <array 80 of <array 85 of <char>>>>>>> %ebp-80 ]
-     #    -88(%ebp)   4  [ $t25      <ptr(4) to <array 30 of <array 65 of <array 82 of <array 80 of <array 85 of <char>>>>>>> %ebp-88 ]
+     #    -88(%ebp)   4  [ $t25      <int> %ebp-88 ]
-     #   -100(%ebp)   4  [ $t28      <int> %ebp-100 ]
+     #   -100(%ebp)   4  [ $t28      <ptr(4) to <array 30 of <array 65 of <array 82 of <array 80 of <array 85 of <char>>>>>>> %ebp-100 ]
-     #   -112(%ebp)   4  [ $t30      <ptr(4) to <array 30 of <array 65 of <array 82 of <array 80 of <array 85 of <char>>>>>>> %ebp-112 ]
+     #   -112(%ebp)   4  [ $t30      <int> %ebp-112 ]
-     #   -120(%ebp)   4  [ $t32      <int> %ebp-120 ]
+     #   -120(%ebp)   4  [ $t4       <int> %ebp-120 ]
-     #   -124(%ebp)   4  [ $t33      <int> %ebp-124 ]
-     #   -128(%ebp)   4  [ $t4       <int> %ebp-128 ]
-     #   -132(%ebp)   4  [ $t5       <ptr(4) to <array 60 of <array 62 of <array 99 of <array 53 of <array 14 of <char>>>>>>> %ebp-132 ]
+     #   -124(%ebp)   4  [ $t5       <ptr(4) to <array 60 of <array 62 of <array 99 of <array 53 of <array 14 of <char>>>>>>> %ebp-124 ]
+     #   -128(%ebp)   4  [ $t6       <ptr(4) to <array 30 of <array 65 of <array 82 of <array 80 of <array 85 of <char>>>>>>> %ebp-128 ]
+     #   -129(%ebp)   1  [ $t7       <char> %ebp-129 ]
-     #   -136(%ebp)   4  [ $t6       <ptr(4) to <array 30 of <array 65 of <array 82 of <array 80 of <array 85 of <char>>>>>>> %ebp-136 ]
+     #   -136(%ebp)   4  [ $t8       <ptr(4) to <array 30 of <array 65 of <array 82 of <array 80 of <array 85 of <char>>>>>>> %ebp-136 ]
-     #   -137(%ebp)   1  [ $t7       <char> %ebp-137 ]
-     #   -144(%ebp)   4  [ $t8       <ptr(4) to <array 30 of <array 65 of <array 82 of <array 80 of <array 85 of <char>>>>>>> %ebp-144 ]
-     #   -148(%ebp)   4  [ $t9       <int> %ebp-148 ]
+     #   -140(%ebp)   4  [ $t9       <int> %ebp-140 ]
-     pushl   %ebp                   
-     movl    %esp, %ebp             
-     pushl   %ebx                    # save callee saved registers
-     pushl   %esi                   
+     pushl   %ebp                   
+     movl    %esp, %ebp             
+     pushl   %ebx                    # save callee saved registers
-     pushl   %edi                   
+     pushl   %esi                   
+     pushl   %edi                   
-     subl    $136, %esp              # make room for locals
+     subl    $128, %esp              # make room for locals
-     movl    $34, %ecx              
+     movl    $32, %ecx              
+     movl    %eax, -120(%ebp)       
+     leal    v1, %eax                #   8:     &()    t5 <- v1
+     movl    %eax, -124(%ebp)       
+     movl    -124(%ebp), %eax        #   9:     param  2 <- t5
+     pushl   %eax                   
+     movl    $28354, %eax            #  10:     param  1 <- 28354
+     pushl   %eax                   
+     leal    v0, %eax                #  11:     &()    t6 <- v0
-     leal    v1, %eax                #   8:     &()    t5 <- v1
-     movl    %eax, -132(%ebp)       
-     movl    -132(%ebp), %eax        #   9:     param  2 <- t5
-     pushl   %eax                   
-     movl    $28354, %eax            #  10:     param  1 <- 28354
-     pushl   %eax                   
-     leal    v0, %eax                #  11:     &()    t6 <- v0
-     movl    %eax, -136(%ebp)       
-     movl    -136(%ebp), %eax        #  12:     param  0 <- t6
+     movl    -128(%ebp), %eax        #  12:     param  0 <- t6
-     movb    %al, -137(%ebp)        
+     movb    %al, -129(%ebp)        
-     movl    %eax, -144(%ebp)       
+     movl    %eax, -136(%ebp)       
-     movl    %eax, -148(%ebp)       
+     movl    %eax, -140(%ebp)       
-     movl    -148(%ebp), %eax        #  16:     mul    t10 <- t9, 42029
+     movl    -140(%ebp), %eax        #  16:     mul    t10 <- t9, 42029
-     movl    $85291, %eax            #  21:     mul    t14 <- 85291, 28366
-     movl    $28366, %ebx           
-     imull   %ebx                   
-     movl    %eax, -40(%ebp)        
-     movl    -40(%ebp), %eax         #  22:     mul    t15 <- t14, 42029
-     movl    $42029, %ebx           
-     imull   %ebx                   
-     movl    %eax, -44(%ebp)        
-     movl    -24(%ebp), %eax         #  23:     mul    t13 <- t10, t12
+     movl    -24(%ebp), %eax         #  21:     mul    t13 <- t10, t12
-     movl    -36(%ebp), %eax         #  24:     add    t16 <- t13, 62379
+     movl    -36(%ebp), %eax         #  22:     add    t14 <- t13, 62379
+     movl    %eax, -40(%ebp)        
+     movl    $3, %eax                #  23:     param  1 <- 3
+     pushl   %eax                   
+     leal    v0, %eax                #  24:     &()    t15 <- v0
+     movl    %eax, -44(%ebp)        
+     movl    -44(%ebp), %eax         #  25:     param  0 <- t15
+     pushl   %eax                   
+     call    DIM                     #  26:     call   t16 <- DIM
+     addl    $8, %esp               
-     movl    $3, %eax                #  25:     param  1 <- 3
+     movl    -40(%ebp), %eax         #  27:     mul    t17 <- t14, t16
+     movl    -48(%ebp), %ebx        
-     pushl   %eax                   
+     imull   %ebx                   
-     leal    v0, %eax                #  26:     &()    t17 <- v0
-     movl    -52(%ebp), %eax         #  27:     param  0 <- t17
-     pushl   %eax                   
-     call    DIM                     #  28:     call   t18 <- DIM
-     addl    $8, %esp               
-     movl    %eax, -56(%ebp)        
-     movl    -48(%ebp), %eax         #  29:     mul    t19 <- t16, t18
-     movl    -56(%ebp), %ebx        
-     imull   %ebx                   
-     movl    %eax, -60(%ebp)        
-     movl    -60(%ebp), %eax         #  30:     add    t20 <- t19, 59649
+     movl    -52(%ebp), %eax         #  28:     add    t18 <- t17, 59649
+     movl    %eax, -56(%ebp)        
+     movl    $4, %eax                #  29:     param  1 <- 4
+     pushl   %eax                   
+     leal    v0, %eax                #  30:     &()    t19 <- v0
+     movl    %eax, -60(%ebp)        
+     movl    -60(%ebp), %eax         #  31:     param  0 <- t19
+     pushl   %eax                   
+     call    DIM                     #  32:     call   t20 <- DIM
+     addl    $8, %esp               
-     movl    $4, %eax                #  31:     param  1 <- 4
+     movl    -56(%ebp), %eax         #  33:     mul    t21 <- t18, t20
+     movl    -68(%ebp), %ebx        
-     pushl   %eax                   
+     imull   %ebx                   
-     leal    v0, %eax                #  32:     &()    t21 <- v0
-     movl    -72(%ebp), %eax         #  33:     param  0 <- t21
-     pushl   %eax                   
-     call    DIM                     #  34:     call   t22 <- DIM
-     addl    $8, %esp               
-     movl    %eax, -76(%ebp)        
-     movl    -68(%ebp), %eax         #  35:     mul    t23 <- t20, t22
-     movl    -76(%ebp), %ebx        
-     imull   %ebx                   
-     movl    %eax, -80(%ebp)        
-     movl    -80(%ebp), %eax         #  36:     add    t24 <- t23, 13054
+     movl    -72(%ebp), %eax         #  34:     add    t22 <- t21, 13054
+     movl    %eax, -76(%ebp)        
+     movl    $5, %eax                #  35:     param  1 <- 5
+     pushl   %eax                   
+     leal    v0, %eax                #  36:     &()    t23 <- v0
+     movl    %eax, -80(%ebp)        
+     movl    -80(%ebp), %eax         #  37:     param  0 <- t23
+     pushl   %eax                   
+     call    DIM                     #  38:     call   t24 <- DIM
+     addl    $8, %esp               
-     movl    $5, %eax                #  37:     param  1 <- 5
+     movl    -76(%ebp), %eax         #  39:     mul    t25 <- t22, t24
+     movl    -84(%ebp), %ebx        
-     pushl   %eax                   
+     imull   %ebx                   
-     leal    v0, %eax                #  38:     &()    t25 <- v0
-     movl    -88(%ebp), %eax         #  39:     param  0 <- t25
+     movl    -88(%ebp), %eax         #  40:     add    t26 <- t25, 46026
+     movl    $46026, %ebx           
-     pushl   %eax                   
-     call    DIM                     #  40:     call   t26 <- DIM
-     addl    $8, %esp               
+     addl    %ebx, %eax             
-     movl    -84(%ebp), %eax         #  41:     mul    t27 <- t24, t26
+     movl    -92(%ebp), %eax         #  41:     mul    t27 <- t26, 1
-     movl    -92(%ebp), %ebx        
+     movl    $1, %ebx               
+     leal    v0, %eax                #  42:     &()    t28 <- v0
+     movl    %eax, -100(%ebp)       
+     movl    -100(%ebp), %eax        #  43:     param  0 <- t28
+     pushl   %eax                   
+     call    DOFS                    #  44:     call   t29 <- DOFS
+     addl    $4, %esp               
+     movl    %eax, -104(%ebp)       
-     movl    -96(%ebp), %eax         #  42:     add    t28 <- t27, 46026
+     movl    -96(%ebp), %eax         #  45:     add    t30 <- t27, t29
-     movl    $46026, %ebx           
+     movl    -104(%ebp), %ebx       
-     movl    %eax, -100(%ebp)       
-     movl    -100(%ebp), %eax        #  43:     mul    t29 <- t28, 1
-     movl    $1, %ebx               
-     imull   %ebx                   
-     movl    %eax, -104(%ebp)       
-     leal    v0, %eax                #  44:     &()    t30 <- v0
-     movl    -112(%ebp), %eax        #  45:     param  0 <- t30
+     movl    -136(%ebp), %eax        #  46:     add    t31 <- t8, t30
+     movl    -112(%ebp), %ebx       
-     pushl   %eax                   
-     call    DOFS                    #  46:     call   t31 <- DOFS
-     addl    $4, %esp               
+     addl    %ebx, %eax             
-     movl    -104(%ebp), %eax        #  47:     add    t32 <- t29, t31
+     movzbl  -129(%ebp), %eax        #  47:     assign @t31 <- t7
-     movl    -116(%ebp), %ebx       
+     movl    -116(%ebp), %edi       
-     addl    %ebx, %eax             
-     movl    %eax, -120(%ebp)       
-     movl    -144(%ebp), %eax        #  48:     add    t33 <- t8, t32
-     movl    -120(%ebp), %ebx       
-     addl    %ebx, %eax             
-     movl    %eax, -124(%ebp)       
-     movzbl  -137(%ebp), %eax        #  49:     assign @t33 <- t7
-     movl    -124(%ebp), %edi       
-     addl    $136, %esp              # remove locals
+     addl    $128, %esp              # remove locals
