-     jmp     l_f0_5                  #   3:     goto   5
+     jmp     l_f0_6                  #   3:     goto   6
-     jmp     l_f0_5                  #   4:     goto   5
+     jmp     l_f0_6                  #   4:     goto   6
+     jmp     l_f0_7                  #   5:     goto   7
- l_f0_5:
+ l_f0_6:
-     movl    $1, %eax                #   6:     assign t6 <- 1
+     movl    $1, %eax                #   7:     assign t6 <- 1
-     jmp     l_f0_7                  #   7:     goto   7
+     jmp     l_f0_8                  #   8:     goto   8
+ l_f0_7:
-     movl    $0, %eax                #   8:     assign t6 <- 0
+     movl    $0, %eax                #  10:     assign t6 <- 0
- l_f0_7:
+ l_f0_8:
-     movl    $0, %eax                #  10:     if     0 = t6 goto 3_if_true
+     movl    $0, %eax                #  12:     if     0 = t6 goto 3_if_true
-     jmp     l_f0_4_if_false         #  11:     goto   4_if_false
+     jmp     l_f0_4_if_false         #  13:     goto   4_if_false
-     movl    $96232, %eax            #  14:     if     96232 >= 45335 goto 14_while_body
+     movl    $96232, %eax            #  16:     if     96232 >= 45335 goto 14_while_body
-     jmp     l_f0_12                 #  15:     goto   12
+     jmp     l_f0_12                 #  17:     goto   12
-     jmp     l_f0_13_while_cond      #  17:     goto   13_while_cond
+     jmp     l_f0_13_while_cond      #  19:     goto   13_while_cond
-     movl    $100, %eax              #  19:     if     100 > 99 goto 17_if_true
+     movl    $100, %eax              #  21:     if     100 > 99 goto 17_if_true
-     jmp     l_f0_18_if_false        #  20:     goto   18_if_false
+     jmp     l_f0_18_if_false        #  22:     goto   18_if_false
-     jmp     l_f0_16                 #  22:     goto   16
+     jmp     l_f0_16                 #  24:     goto   16
-     jmp     l_f0_20                 #  26:     goto   20
+     jmp     l_f0_20                 #  28:     goto   20
-     jmp     l_f0_21_while_cond      #  27:     goto   21_while_cond
+     jmp     l_f0_21_while_cond      #  29:     goto   21_while_cond
-     jmp     l_f0_2                  #  29:     goto   2
+     jmp     l_f0_2                  #  31:     goto   2
+     jmp     l_f1_4                  #   4:     goto   4
-     movl    $1, %eax                #   5:     assign t5 <- 1
+     movl    $1, %eax                #   6:     assign t5 <- 1
-     jmp     l_f1_5                  #   6:     goto   5
+     jmp     l_f1_5                  #   7:     goto   5
+ l_f1_4:
-     movl    $0, %eax                #   7:     assign t5 <- 0
+     movl    $0, %eax                #   9:     assign t5 <- 0
-     movzbl  -17(%ebp), %eax         #   9:     return t5
+     movzbl  -17(%ebp), %eax         #  11:     return t5
+     jmp     l_test_12               #  13:     goto   12
-     jmp     l_test_16               #  13:     goto   16
+     jmp     l_test_16               #  14:     goto   16
-     movl    $57790, %eax            #  15:     if     57790 > 68684 goto 20
+     movl    $57790, %eax            #  16:     if     57790 > 68684 goto 20
-     jmp     l_test_21               #  16:     goto   21
+     jmp     l_test_21               #  17:     goto   21
-     movl    $1, %eax                #  18:     assign t3 <- 1
+     movl    $1, %eax                #  19:     assign t3 <- 1
-     jmp     l_test_22               #  19:     goto   22
+     jmp     l_test_22               #  20:     goto   22
-     movl    $0, %eax                #  21:     assign t3 <- 0
+     movl    $0, %eax                #  22:     assign t3 <- 0
-     movzbl  -19(%ebp), %eax         #  23:     assign v1 <- t3
+     movzbl  -19(%ebp), %eax         #  24:     assign v1 <- t3
-     jmp     l_test_13_while_cond    #  24:     goto   13_while_cond
+     jmp     l_test_13_while_cond    #  25:     goto   13_while_cond
+ l_test_12:
-     movl    $71340, %eax            #  25:     param  0 <- 71340
+     movl    $71340, %eax            #  27:     param  0 <- 71340
-     call    WriteInt                #  26:     call   WriteInt
+     call    WriteInt                #  28:     call   WriteInt
