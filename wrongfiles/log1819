-     #    -68(%ebp)   4  [ $t23      <int> %ebp-68 ]
-     #    -69(%ebp)   1  [ $t24      <bool> %ebp-69 ]
+     #    -65(%ebp)   1  [ $t23      <bool> %ebp-65 ]
-     #    -70(%ebp)   1  [ $t5       <bool> %ebp-70 ]
+     #    -66(%ebp)   1  [ $t5       <bool> %ebp-66 ]
+     #    -72(%ebp)   4  [ $t6       <int> %ebp-72 ]
-     #    -76(%ebp)   4  [ $t6       <int> %ebp-76 ]
+     #    -76(%ebp)   4  [ $t7       <int> %ebp-76 ]
-     #    -80(%ebp)   4  [ $t7       <int> %ebp-80 ]
+     #    -80(%ebp)   4  [ $t8       <int> %ebp-80 ]
-     #    -84(%ebp)   4  [ $t8       <int> %ebp-84 ]
+     #    -84(%ebp)   4  [ $t9       <int> %ebp-84 ]
-     #    -88(%ebp)   4  [ $t9       <int> %ebp-88 ]
-     subl    $76, %esp               # make room for locals
+     subl    $72, %esp               # make room for locals
-     movl    $19, %ecx              
+     movl    $18, %ecx              
-     movb    %al, -70(%ebp)         
+     movb    %al, -66(%ebp)         
-     movl    %eax, -76(%ebp)        
+     movl    %eax, -72(%ebp)        
+     movl    %eax, -76(%ebp)        
+     movl    -72(%ebp), %eax         #   5:     mul    t8 <- t6, t7
+     movl    -76(%ebp), %ebx        
+     imull   %ebx                   
-     movl    $95416, %eax            #   5:     sub    t9 <- 95416, 4429
+     movl    -80(%ebp), %eax         #   6:     add    t9 <- t8, 68085
-     movl    $4429, %ebx            
+     movl    $68085, %ebx           
-     subl    %ebx, %eax             
+     addl    %ebx, %eax             
-     movl    %eax, -88(%ebp)        
-     movl    -76(%ebp), %eax         #   6:     mul    t8 <- t6, t7
-     movl    -80(%ebp), %ebx        
-     imull   %ebx                   
+     movl    $3, %eax                #   7:     param  1 <- 3
+     pushl   %eax                   
-     movl    -84(%ebp), %eax         #   7:     add    t10 <- t8, 68085
+     movl    12(%ebp), %eax          #   8:     param  0 <- v2
-     movl    $68085, %ebx           
+     pushl   %eax                   
+     call    DIM                     #   9:     call   t10 <- DIM
-     addl    %ebx, %eax             
+     addl    $8, %esp               
+     movl    -84(%ebp), %eax         #  10:     mul    t11 <- t9, t10
+     movl    -16(%ebp), %ebx        
+     imull   %ebx                   
+     movl    %eax, -20(%ebp)        
+     movl    -20(%ebp), %eax         #  11:     add    t12 <- t11, 34253
+     movl    $34253, %ebx           
+     addl    %ebx, %eax             
+     movl    %eax, -24(%ebp)        
-     movl    $3, %eax                #   8:     param  1 <- 3
+     movl    $4, %eax                #  12:     param  1 <- 4
-     movl    12(%ebp), %eax          #   9:     param  0 <- v2
+     movl    12(%ebp), %eax          #  13:     param  0 <- v2
-     call    DIM                     #  10:     call   t11 <- DIM
+     call    DIM                     #  14:     call   t13 <- DIM
-     movl    %eax, -20(%ebp)        
-     movl    -16(%ebp), %eax         #  11:     mul    t12 <- t10, t11
-     movl    -20(%ebp), %ebx        
-     imull   %ebx                   
-     movl    %eax, -24(%ebp)        
-     movl    -24(%ebp), %eax         #  12:     add    t13 <- t12, 34253
-     movl    $34253, %ebx           
-     addl    %ebx, %eax             
+     movl    -24(%ebp), %eax         #  15:     mul    t14 <- t12, t13
+     movl    -28(%ebp), %ebx        
+     imull   %ebx                   
+     movl    %eax, -32(%ebp)        
+     movl    -32(%ebp), %eax         #  16:     add    t15 <- t14, 54831
+     movl    $54831, %ebx           
+     addl    %ebx, %eax             
+     movl    %eax, -36(%ebp)        
-     movl    $4, %eax                #  13:     param  1 <- 4
+     movl    $5, %eax                #  17:     param  1 <- 5
-     movl    12(%ebp), %eax          #  14:     param  0 <- v2
+     movl    12(%ebp), %eax          #  18:     param  0 <- v2
-     call    DIM                     #  15:     call   t14 <- DIM
+     call    DIM                     #  19:     call   t16 <- DIM
-     movl    %eax, -32(%ebp)        
-     movl    -28(%ebp), %eax         #  16:     mul    t15 <- t13, t14
-     movl    -32(%ebp), %ebx        
-     imull   %ebx                   
-     movl    %eax, -36(%ebp)        
-     movl    -36(%ebp), %eax         #  17:     add    t16 <- t15, 54831
-     movl    $54831, %ebx           
-     addl    %ebx, %eax             
-     movl    $5, %eax                #  18:     param  1 <- 5
+     movl    -36(%ebp), %eax         #  20:     mul    t17 <- t15, t16
+     movl    -40(%ebp), %ebx        
-     pushl   %eax                   
+     imull   %ebx                   
-     movl    12(%ebp), %eax          #  19:     param  0 <- v2
-     pushl   %eax                   
-     call    DIM                     #  20:     call   t17 <- DIM
-     addl    $8, %esp               
-     movl    -40(%ebp), %eax         #  21:     mul    t18 <- t16, t17
+     movl    -44(%ebp), %eax         #  21:     add    t18 <- t17, 76517
-     movl    -44(%ebp), %ebx        
+     movl    $76517, %ebx           
-     imull   %ebx                   
+     addl    %ebx, %eax             
-     movl    -48(%ebp), %eax         #  22:     add    t19 <- t18, 76517
+     movl    -48(%ebp), %eax         #  22:     mul    t19 <- t18, 1
-     movl    $76517, %ebx           
+     movl    $1, %ebx               
-     addl    %ebx, %eax             
+     imull   %ebx                   
-     movl    -52(%ebp), %eax         #  23:     mul    t20 <- t19, 1
+     movl    12(%ebp), %eax          #  23:     param  0 <- v2
-     movl    $1, %ebx               
-     imull   %ebx                   
+     pushl   %eax                   
+     call    DOFS                    #  24:     call   t20 <- DOFS
+     addl    $4, %esp               
-     movl    12(%ebp), %eax          #  24:     param  0 <- v2
+     movl    -52(%ebp), %eax         #  25:     add    t21 <- t19, t20
+     movl    -56(%ebp), %ebx        
-     pushl   %eax                   
-     call    DOFS                    #  25:     call   t21 <- DOFS
-     addl    $4, %esp               
+     addl    %ebx, %eax             
-     movl    -56(%ebp), %eax         #  26:     add    t22 <- t20, t21
+     movl    12(%ebp), %eax          #  26:     add    t22 <- v2, t21
-     movl    12(%ebp), %eax          #  27:     add    t23 <- v2, t22
-     movl    -64(%ebp), %ebx        
-     addl    %ebx, %eax             
-     movl    %eax, -68(%ebp)        
-     movzbl  -70(%ebp), %eax         #  28:     assign @t23 <- t5
+     movzbl  -66(%ebp), %eax         #  27:     assign @t22 <- t5
-     movl    -68(%ebp), %edi        
+     movl    -64(%ebp), %edi        
-     call    dummyBOOLfunc           #  29:     call   t24 <- dummyBOOLfunc
+     call    dummyBOOLfunc           #  28:     call   t23 <- dummyBOOLfunc
-     movb    %al, -69(%ebp)         
+     movb    %al, -65(%ebp)         
-     movl    $99, %eax               #  31:     if     99 > 99 goto 4_while_body
+     movl    $99, %eax               #  30:     if     99 > 99 goto 4_while_body
-     jmp     l_f0_2                  #  32:     goto   2
+     jmp     l_f0_2                  #  31:     goto   2
-     movl    $80108, %eax            #  34:     if     80108 >= 42549 goto 7_if_true
+     movl    $80108, %eax            #  33:     if     80108 >= 42549 goto 7_if_true
-     jmp     l_f0_8_if_false         #  35:     goto   8_if_false
+     jmp     l_f0_8_if_false         #  34:     goto   8_if_false
-     jmp     l_f0_6                  #  37:     goto   6
+     jmp     l_f0_6                  #  36:     goto   6
-     movl    $97, %eax               #  40:     if     97 < 100 goto 11_if_true
+     movl    $97, %eax               #  39:     if     97 < 100 goto 11_if_true
-     jmp     l_f0_12_if_false        #  41:     goto   12_if_false
+     jmp     l_f0_12_if_false        #  40:     goto   12_if_false
-     jmp     l_f0_10                 #  43:     goto   10
+     jmp     l_f0_10                 #  42:     goto   10
-     movl    $97, %eax               #  46:     assign v4 <- 97
+     movl    $97, %eax               #  45:     assign v4 <- 97
-     jmp     l_f0_3_while_cond       #  47:     goto   3_while_cond
+     jmp     l_f0_3_while_cond       #  46:     goto   3_while_cond
-     addl    $76, %esp               # remove locals
+     addl    $72, %esp               # remove locals
-     #-300643256(%ebp)300643224  [ $v3       <array 33 of <array 65 of <array 73 of <array 5 of <array 96 of <int>>>>>> %ebp-300643256 ]
+     #   -300643256(%ebp)  300643224  [ $v3       <array 33 of <array 65 of <array 73 of <array 5 of <array 96 of <int>>>>>> %ebp-300643256 ]
-     #-649209680(%ebp)348566424  [ $v4       <array 50 of <array 42 of <array 14 of <array 78 of <array 38 of <int>>>>>> %ebp-649209680 ]
+     #   -649209680(%ebp)  348566424  [ $v4       <array 50 of <array 42 of <array 14 of <array 78 of <array 38 of <int>>>>>> %ebp-649209680 ]
+     jmp     l_test_14               #  24:     goto   14
-     jmp     l_test_15_while_cond    #  25:     goto   15_while_cond
+     jmp     l_test_15_while_cond    #  26:     goto   15_while_cond
+ l_test_14:
