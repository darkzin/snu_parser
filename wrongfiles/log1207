+     jmp     l_f0_10                 #  15:     goto   10
+     jmp     l_f0_10                 #  16:     goto   10
-     movl    $1, %eax                #  15:     assign t3 <- 1
+     movl    $1, %eax                #  17:     assign t3 <- 1
-     jmp     l_f0_11                 #  16:     goto   11
+     jmp     l_f0_11                 #  18:     goto   11
-     movl    $0, %eax                #  18:     assign t3 <- 0
+     movl    $0, %eax                #  20:     assign t3 <- 0
-     movzbl  -17(%ebp), %eax         #  20:     return t3
+     movzbl  -17(%ebp), %eax         #  22:     return t3
-     movl    $99, %eax               #  21:     assign v0 <- 99
+     movl    $99, %eax               #  23:     assign v0 <- 99
-     call    dummyINTfunc            #  22:     call   t4 <- dummyINTfunc
+     call    dummyINTfunc            #  24:     call   t4 <- dummyINTfunc
-     movl    $97, %eax               #  23:     assign v0 <- 97
+     movl    $97, %eax               #  25:     assign v0 <- 97
-     jmp     l_f0_16                 #  24:     goto   16
+     jmp     l_f0_16                 #  26:     goto   16
+     jmp     l_f1_6                  #  12:     goto   6
+     jmp     l_f1_6                  #  13:     goto   6
-     jmp     l_f1_7_while_cond       #  12:     goto   7_while_cond
+     jmp     l_f1_7_while_cond       #  14:     goto   7_while_cond
+ l_f1_6:
+     jmp     l_f2_0                  #   1:     goto   0
+     jmp     l_f2_0                  #   2:     goto   0
+     jmp     l_f2_0                  #   3:     goto   0
-     movl    $100, %eax              #   1:     return 100
+     movl    $100, %eax              #   4:     return 100
-     movl    $100, %eax              #   3:     if     100 = 97 goto 8_while_body
+     movl    $100, %eax              #   6:     if     100 = 97 goto 8_while_body
-     jmp     l_f2_6                  #   4:     goto   6
+     jmp     l_f2_6                  #   7:     goto   6
-     jmp     l_f2_7_while_cond       #   6:     goto   7_while_cond
+     jmp     l_f2_7_while_cond       #   9:     goto   7_while_cond
-     jmp     l_f2_1_while_cond       #   8:     goto   1_while_cond
+     jmp     l_f2_1_while_cond       #  11:     goto   1_while_cond
+ l_f2_0:
-     call    dummyCHARfunc           #   9:     call   t2 <- dummyCHARfunc
+     call    dummyCHARfunc           #  13:     call   t2 <- dummyCHARfunc
-     movzbl  -13(%ebp), %eax         #  10:     return t2
+     movzbl  -13(%ebp), %eax         #  14:     return t2
-     call    dummyINTfunc            #  11:     call   t3 <- dummyINTfunc
+     call    dummyINTfunc            #  15:     call   t3 <- dummyINTfunc
-     movl    $47856, %eax            #  12:     if     47856 <= 7017 goto 16_if_true
+     movl    $47856, %eax            #  16:     if     47856 <= 7017 goto 16_if_true
-     jmp     l_f2_17_if_false        #  13:     goto   17_if_false
+     jmp     l_f2_17_if_false        #  17:     goto   17_if_false
-     movl    $742, %eax              #  15:     assign v2 <- 742
+     movl    $742, %eax              #  19:     assign v2 <- 742
-     movl    $1, %eax                #  17:     if     1 = 0 goto 22_while_body
+     movl    $1, %eax                #  21:     if     1 = 0 goto 22_while_body
-     jmp     l_f2_20                 #  18:     goto   20
+     jmp     l_f2_20                 #  22:     goto   20
-     jmp     l_f2_21_while_cond      #  20:     goto   21_while_cond
+     jmp     l_f2_21_while_cond      #  24:     goto   21_while_cond
-     movl    $36713, %eax            #  22:     assign v2 <- 36713
+     movl    $36713, %eax            #  26:     assign v2 <- 36713
-     jmp     l_f2_25                 #  23:     goto   25
+     jmp     l_f2_25                 #  27:     goto   25
-     movl    $98, %eax               #  25:     if     98 < 100 goto 29_if_true
+     movl    $98, %eax               #  29:     if     98 < 100 goto 29_if_true
-     jmp     l_f2_30_if_false        #  26:     goto   30_if_false
+     jmp     l_f2_30_if_false        #  30:     goto   30_if_false
-     jmp     l_f2_28                 #  28:     goto   28
+     jmp     l_f2_28                 #  32:     goto   28
-     movl    $98, %eax               #  31:     assign v3 <- 98
+     movl    $98, %eax               #  35:     assign v3 <- 98
-     jmp     l_f2_15                 #  32:     goto   15
+     jmp     l_f2_15                 #  36:     goto   15
-     jmp     l_f2_11                 #  35:     goto   11
+     jmp     l_f2_11                 #  39:     goto   11
