-     #   -820(%ebp) 792  [ $v5       <array 4 of <array 8 of <array 4 of <array 6 of <array 1 of <bool>>>>>> %ebp-820 ]
+     #   -820(%ebp)  792  [ $v5       <array 4 of <array 8 of <array 4 of <array 6 of <array 1 of <bool>>>>>> %ebp-820 ]
-     #  -8524(%ebp)7704  [ $v6       <array 10 of <array 6 of <array 4 of <array 2 of <array 4 of <int>>>>>> %ebp-8524 ]
+     #   -8524(%ebp)  7704  [ $v6       <array 10 of <array 6 of <array 4 of <array 2 of <array 4 of <int>>>>>> %ebp-8524 ]
-     jmp     l_f1_16                 #  26:     goto   16
+     jmp     l_f1_17                 #  26:     goto   17
- l_f1_16:
+ l_f1_17:
-     addl    $10, %esp              
+     addl    $16, %esp              
-     #   -116(%ebp)   4  [ $t35      <int> %ebp-116 ]
-     #   -120(%ebp)   4  [ $t36      <int> %ebp-120 ]
-     #   -124(%ebp)   4  [ $t37      <int> %ebp-124 ]
-     #   -128(%ebp)   4  [ $t6       <ptr(4) to <array 7 of <array 7 of <array 5 of <array 10 of <array 10 of <bool>>>>>>> %ebp-128 ]
+     #   -116(%ebp)   4  [ $t6       <ptr(4) to <array 7 of <array 7 of <array 5 of <array 10 of <array 10 of <bool>>>>>>> %ebp-116 ]
-     #   -132(%ebp)   4  [ $t7       <ptr(4) to <array 4 of <array 10 of <array 1 of <array 9 of <array 10 of <bool>>>>>>> %ebp-132 ]
+     #   -120(%ebp)   4  [ $t7       <ptr(4) to <array 4 of <array 10 of <array 1 of <array 9 of <array 10 of <bool>>>>>>> %ebp-120 ]
-     #   -136(%ebp)   4  [ $t8       <ptr(4) to <array 3 of <array 5 of <array 10 of <array 8 of <array 3 of <char>>>>>>> %ebp-136 ]
+     #   -124(%ebp)   4  [ $t8       <ptr(4) to <array 3 of <array 5 of <array 10 of <array 8 of <array 3 of <char>>>>>>> %ebp-124 ]
-     #   -137(%ebp)   1  [ $t9       <bool> %ebp-137 ]
+     #   -125(%ebp)   1  [ $t9       <bool> %ebp-125 ]
-     #  -3764(%ebp)3624  [ $v4       <array 3 of <array 5 of <array 10 of <array 8 of <array 3 of <char>>>>>> %ebp-3764 ]
+     #   -3752(%ebp)  3624  [ $v4       <array 3 of <array 5 of <array 10 of <array 8 of <array 3 of <char>>>>>> %ebp-3752 ]
-     #  -7388(%ebp)3624  [ $v5       <array 4 of <array 10 of <array 1 of <array 9 of <array 10 of <bool>>>>>> %ebp-7388 ]
+     #   -7376(%ebp)  3624  [ $v5       <array 4 of <array 10 of <array 1 of <array 9 of <array 10 of <bool>>>>>> %ebp-7376 ]
-     # -31912(%ebp)24524  [ $v6       <array 7 of <array 7 of <array 5 of <array 10 of <array 10 of <bool>>>>>> %ebp-31912 ]
+     #   -31900(%ebp)  24524  [ $v6       <array 7 of <array 7 of <array 5 of <array 10 of <array 10 of <bool>>>>>> %ebp-31900 ]
-     # -31913(%ebp)   1  [ $v7       <bool> %ebp-31913 ]
+     #   -31901(%ebp)   1  [ $v7       <bool> %ebp-31901 ]
-     # -31920(%ebp)   4  [ $v8       <int> %ebp-31920 ]
+     #   -31908(%ebp)   4  [ $v8       <int> %ebp-31908 ]
-     pushl   %ebp                   
-     movl    %esp, %ebp             
-     pushl   %ebx                    # save callee saved registers
-     pushl   %esi                   
+     pushl   %ebp                   
+     movl    %esp, %ebp             
+     pushl   %ebx                    # save callee saved registers
-     pushl   %edi                   
+     pushl   %esi                   
+     pushl   %edi                   
-     subl    $31908, %esp            # make room for locals
+     subl    $31896, %esp            # make room for locals
-     movl    $7977, %ecx            
+     movl    $7974, %ecx            
-     movl    $5,-3764(%ebp)          # local array 'v4': 5 dimensions
+     movl    $5,-3752(%ebp)          # local array 'v4': 5 dimensions
-     movl    $3,-3760(%ebp)          #   dimension 1: 3 elements
+     movl    $3,-3748(%ebp)          #   dimension 1: 3 elements
-     movl    $5,-3756(%ebp)          #   dimension 2: 5 elements
+     movl    $5,-3744(%ebp)          #   dimension 2: 5 elements
-     movl    $10,-3752(%ebp)         #   dimension 3: 10 elements
+     movl    $10,-3740(%ebp)         #   dimension 3: 10 elements
-     movl    $8,-3748(%ebp)          #   dimension 4: 8 elements
+     movl    $8,-3736(%ebp)          #   dimension 4: 8 elements
-     movl    $3,-3744(%ebp)          #   dimension 5: 3 elements
+     movl    $3,-3732(%ebp)          #   dimension 5: 3 elements
-     movl    $5,-7388(%ebp)          # local array 'v5': 5 dimensions
+     movl    $5,-7376(%ebp)          # local array 'v5': 5 dimensions
-     movl    $4,-7384(%ebp)          #   dimension 1: 4 elements
+     movl    $4,-7372(%ebp)          #   dimension 1: 4 elements
-     movl    $10,-7380(%ebp)         #   dimension 2: 10 elements
+     movl    $10,-7368(%ebp)         #   dimension 2: 10 elements
-     movl    $1,-7376(%ebp)          #   dimension 3: 1 elements
+     movl    $1,-7364(%ebp)          #   dimension 3: 1 elements
-     movl    $9,-7372(%ebp)          #   dimension 4: 9 elements
+     movl    $9,-7360(%ebp)          #   dimension 4: 9 elements
-     movl    $10,-7368(%ebp)         #   dimension 5: 10 elements
+     movl    $10,-7356(%ebp)         #   dimension 5: 10 elements
-     movl    $5,-31912(%ebp)         # local array 'v6': 5 dimensions
+     movl    $5,-31900(%ebp)         # local array 'v6': 5 dimensions
-     movl    $7,-31908(%ebp)         #   dimension 1: 7 elements
+     movl    $7,-31896(%ebp)         #   dimension 1: 7 elements
-     movl    $7,-31904(%ebp)         #   dimension 2: 7 elements
+     movl    $7,-31892(%ebp)         #   dimension 2: 7 elements
-     movl    $5,-31900(%ebp)         #   dimension 3: 5 elements
+     movl    $5,-31888(%ebp)         #   dimension 3: 5 elements
-     movl    $10,-31896(%ebp)        #   dimension 4: 10 elements
+     movl    $10,-31884(%ebp)        #   dimension 4: 10 elements
-     movl    $10,-31892(%ebp)        #   dimension 5: 10 elements
+     movl    $10,-31880(%ebp)        #   dimension 5: 10 elements
-     leal    -31912(%ebp), %eax      #   0:     &()    t6 <- v6
+     leal    -31900(%ebp), %eax      #   0:     &()    t6 <- v6
+     movl    %eax, -116(%ebp)       
+     movl    -116(%ebp), %eax        #   1:     param  3 <- t6
+     pushl   %eax                   
+     leal    -7376(%ebp), %eax       #   2:     &()    t7 <- v5
-     movl    %eax, -128(%ebp)       
+     movl    %eax, -120(%ebp)       
-     movl    -128(%ebp), %eax        #   1:     param  3 <- t6
-     pushl   %eax                   
-     leal    -7388(%ebp), %eax       #   2:     &()    t7 <- v5
-     movl    %eax, -132(%ebp)       
-     movl    -132(%ebp), %eax        #   3:     param  2 <- t7
+     movl    -120(%ebp), %eax        #   3:     param  2 <- t7
-     leal    -3764(%ebp), %eax       #   5:     &()    t8 <- v4
+     leal    -3752(%ebp), %eax       #   5:     &()    t8 <- v4
-     movl    %eax, -136(%ebp)       
+     movl    %eax, -124(%ebp)       
-     movl    -136(%ebp), %eax        #   6:     param  0 <- t8
+     movl    -124(%ebp), %eax        #   6:     param  0 <- t8
-     addl    $13, %esp              
+     addl    $16, %esp              
-     movb    %al, -137(%ebp)        
+     movb    %al, -125(%ebp)        
-     movl    $47297, %eax            #  19:     div    t18 <- 47297, 51473
+     movl    -36(%ebp), %eax         #  19:     mul    t17 <- t15, t16
-     movl    $51473, %ebx           
+     movl    -40(%ebp), %ebx        
-     cdq                            
-     idivl   %ebx                   
+     imull   %ebx                   
+     movl    %eax, -44(%ebp)        
+     movl    -44(%ebp), %eax         #  20:     add    t18 <- t17, 91124
+     movl    $91124, %ebx           
+     addl    %ebx, %eax             
+     movl    $4, %eax                #  21:     param  1 <- 4
-     movl    -48(%ebp), %eax         #  20:     mul    t19 <- t18, 95658
-     movl    $95658, %ebx           
-     imull   %ebx                   
+     pushl   %eax                   
+     movl    16(%ebp), %eax          #  22:     param  0 <- v3
+     pushl   %eax                   
+     call    DIM                     #  23:     call   t19 <- DIM
+     addl    $8, %esp               
-     movl    -52(%ebp), %eax         #  21:     div    t20 <- t19, 61913
+     movl    -48(%ebp), %eax         #  24:     mul    t20 <- t18, t19
-     movl    $61913, %ebx           
+     movl    -52(%ebp), %ebx        
-     cdq                            
-     idivl   %ebx                   
+     imull   %ebx                   
-     movl    -36(%ebp), %eax         #  22:     mul    t17 <- t15, t16
-     movl    -40(%ebp), %ebx        
-     imull   %ebx                   
-     movl    %eax, -44(%ebp)        
-     movl    -44(%ebp), %eax         #  23:     add    t21 <- t17, 91124
+     movl    -56(%ebp), %eax         #  25:     add    t21 <- t20, 22624
-     movl    $91124, %ebx           
+     movl    $22624, %ebx           
-     movl    $4, %eax                #  24:     param  1 <- 4
+     movl    $5, %eax                #  26:     param  1 <- 5
-     movl    16(%ebp), %eax          #  25:     param  0 <- v3
+     movl    16(%ebp), %eax          #  27:     param  0 <- v3
-     call    DIM                     #  26:     call   t22 <- DIM
+     call    DIM                     #  28:     call   t22 <- DIM
-     movl    -60(%ebp), %eax         #  27:     mul    t23 <- t21, t22
+     movl    -60(%ebp), %eax         #  29:     mul    t23 <- t21, t22
-     movl    -68(%ebp), %eax         #  28:     add    t24 <- t23, 22624
+     movl    -68(%ebp), %eax         #  30:     add    t24 <- t23, 12200
-     movl    $22624, %ebx           
+     movl    $12200, %ebx           
-     movl    $5, %eax                #  29:     param  1 <- 5
+     movl    -72(%ebp), %eax         #  31:     mul    t25 <- t24, 1
+     movl    $1, %ebx               
-     pushl   %eax                   
+     imull   %ebx                   
-     movl    16(%ebp), %eax          #  30:     param  0 <- v3
-     pushl   %eax                   
-     call    DIM                     #  31:     call   t25 <- DIM
-     addl    $8, %esp               
-     movl    -72(%ebp), %eax         #  32:     mul    t26 <- t24, t25
+     movl    16(%ebp), %eax          #  32:     param  0 <- v3
-     movl    -76(%ebp), %ebx        
-     imull   %ebx                   
+     pushl   %eax                   
+     call    DOFS                    #  33:     call   t26 <- DOFS
+     addl    $4, %esp               
-     movl    -80(%ebp), %eax         #  33:     add    t27 <- t26, 12200
+     movl    -76(%ebp), %eax         #  34:     add    t27 <- t25, t26
-     movl    $12200, %ebx           
+     movl    -80(%ebp), %ebx        
-     movl    -84(%ebp), %eax         #  34:     mul    t28 <- t27, 1
+     movl    16(%ebp), %eax          #  35:     add    t28 <- v3, t27
+     movl    -84(%ebp), %ebx        
-     movl    $1, %ebx               
+     addl    %ebx, %eax             
-     imull   %ebx                   
-     movl    16(%ebp), %eax          #  35:     param  0 <- v3
-     pushl   %eax                   
-     call    DOFS                    #  36:     call   t29 <- DOFS
-     addl    $4, %esp               
-     movl    %eax, -92(%ebp)        
-     movl    -88(%ebp), %eax         #  37:     add    t30 <- t28, t29
-     movl    -92(%ebp), %ebx        
-     addl    %ebx, %eax             
-     movl    %eax, -96(%ebp)        
-     movl    16(%ebp), %eax          #  38:     add    t31 <- v3, t30
-     movl    -96(%ebp), %ebx        
-     addl    %ebx, %eax             
-     movl    %eax, -100(%ebp)       
-     movl    $1, %eax                #  39:     assign @t31 <- 1
+     movl    $1, %eax                #  36:     assign @t28 <- 1
-     movl    -100(%ebp), %edi       
+     movl    -88(%ebp), %edi        
-     movl    $75582, %eax            #  40:     div    t32 <- 75582, 59183
+     movl    $75582, %eax            #  37:     div    t29 <- 75582, 59183
-     movl    %eax, -104(%ebp)       
+     movl    %eax, -92(%ebp)        
-     movl    -104(%ebp), %eax        #  41:     mul    t33 <- t32, 37033
+     movl    -92(%ebp), %eax         #  38:     mul    t30 <- t29, 37033
-     movl    %eax, -108(%ebp)       
+     movl    %eax, -96(%ebp)        
-     movl    -108(%ebp), %eax        #  42:     div    t34 <- t33, 30047
+     movl    -96(%ebp), %eax         #  39:     div    t31 <- t30, 30047
-     movl    %eax, -112(%ebp)       
+     movl    %eax, -100(%ebp)       
-     movl    -112(%ebp), %eax        #  43:     mul    t35 <- t34, 76609
+     movl    -100(%ebp), %eax        #  40:     mul    t32 <- t31, 76609
-     movl    %eax, -116(%ebp)       
+     movl    %eax, -104(%ebp)       
-     movl    -116(%ebp), %eax        #  44:     div    t36 <- t35, 95604
+     movl    -104(%ebp), %eax        #  41:     div    t33 <- t32, 95604
-     movl    %eax, -120(%ebp)       
+     movl    %eax, -108(%ebp)       
-     movl    -120(%ebp), %eax        #  45:     div    t37 <- t36, 83660
+     movl    -108(%ebp), %eax        #  42:     div    t34 <- t33, 83660
-     movl    %eax, -124(%ebp)       
+     movl    %eax, -112(%ebp)       
-     movl    -124(%ebp), %eax        #  46:     assign v8 <- t37
+     movl    -112(%ebp), %eax        #  43:     assign v8 <- t34
-     movl    %eax, -31920(%ebp)     
+     movl    %eax, -31908(%ebp)     
-     addl    $31908, %esp            # remove locals
+     addl    $31896, %esp            # remove locals
+     jmp     l_test_7                #  15:     goto   7
-     movl    $1, %eax                #  15:     assign t3 <- 1
+     movl    $1, %eax                #  16:     assign t3 <- 1
-     jmp     l_test_8                #  16:     goto   8
+     jmp     l_test_8                #  17:     goto   8
-     movl    $0, %eax                #  18:     assign t3 <- 0
+     movl    $0, %eax                #  19:     assign t3 <- 0
-     movzbl  -22(%ebp), %eax         #  20:     param  0 <- t3
+     movzbl  -22(%ebp), %eax         #  21:     param  0 <- t3
-     call    f0                      #  21:     call   t4 <- f0
+     call    f0                      #  22:     call   t4 <- f0
-     addl    $10, %esp              
+     addl    $16, %esp              
-     movzbl  -23(%ebp), %eax         #  22:     assign v1 <- t4
+     movzbl  -23(%ebp), %eax         #  23:     assign v1 <- t4
-     call    dummyBOOLfunc           #  23:     call   t5 <- dummyBOOLfunc
+     call    dummyBOOLfunc           #  24:     call   t5 <- dummyBOOLfunc
-     call    WriteLn                 #  24:     call   WriteLn
+     call    WriteLn                 #  25:     call   WriteLn
