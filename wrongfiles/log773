-     #   -928(%ebp) 888  [ $v2       <array 2 of <array 6 of <array 9 of <array 4 of <array 2 of <bool>>>>>> %ebp-928 ]
+     #   -928(%ebp)  888  [ $v2       <array 2 of <array 6 of <array 9 of <array 4 of <array 2 of <bool>>>>>> %ebp-928 ]
-     addl    $5, %esp               
+     addl    $8, %esp               
-     addl    $5, %esp               
+     addl    $8, %esp               
+     jmp     l_f1_8                  #  23:     goto   8
-     movl    $1, %eax                #  24:     assign t13 <- 1
+     movl    $1, %eax                #  25:     assign t13 <- 1
-     jmp     l_f1_9                  #  25:     goto   9
+     jmp     l_f1_9                  #  26:     goto   9
+ l_f1_8:
-     movl    $0, %eax                #  26:     assign t13 <- 0
+     movl    $0, %eax                #  28:     assign t13 <- 0
-     movzbl  -22(%ebp), %eax         #  28:     return t13
+     movzbl  -22(%ebp), %eax         #  30:     return t13
-     #  -1012(%ebp) 888  [ $v0       <array 2 of <array 6 of <array 9 of <array 4 of <array 2 of <bool>>>>>> %ebp-1012 ]
+     #   -1012(%ebp)  888  [ $v0       <array 2 of <array 6 of <array 9 of <array 4 of <array 2 of <bool>>>>>> %ebp-1012 ]
-     #  -1016(%ebp)   4  [ $v1       <int> %ebp-1016 ]
+     #   -1016(%ebp)   4  [ $v1       <int> %ebp-1016 ]
-     #  -1017(%ebp)   1  [ $v2       <bool> %ebp-1017 ]
+     #   -1017(%ebp)   1  [ $v2       <bool> %ebp-1017 ]
-     addl    $5, %esp               
+     addl    $8, %esp               
-     addl    $5, %esp               
+     addl    $8, %esp               
-     addl    $5, %esp               
+     addl    $8, %esp               
