-     #    -68(%ebp)   4  [ $t21      <int> %ebp-68 ]
+     #    -68(%ebp)   4  [ $t3       <int> %ebp-68 ]
-     #    -72(%ebp)   4  [ $t22      <int> %ebp-72 ]
+     #    -72(%ebp)   4  [ $t4       <int> %ebp-72 ]
-     #    -76(%ebp)   4  [ $t3       <int> %ebp-76 ]
+     #    -76(%ebp)   4  [ $t5       <int> %ebp-76 ]
-     #    -80(%ebp)   4  [ $t4       <int> %ebp-80 ]
+     #    -80(%ebp)   4  [ $t6       <int> %ebp-80 ]
-     #    -84(%ebp)   4  [ $t5       <int> %ebp-84 ]
+     #    -84(%ebp)   4  [ $t7       <int> %ebp-84 ]
-     #    -88(%ebp)   4  [ $t6       <int> %ebp-88 ]
+     #    -88(%ebp)   4  [ $t8       <int> %ebp-88 ]
-     #    -92(%ebp)   4  [ $t7       <int> %ebp-92 ]
+     #    -92(%ebp)   4  [ $t9       <int> %ebp-92 ]
-     #    -96(%ebp)   4  [ $t8       <int> %ebp-96 ]
-     #   -100(%ebp)   4  [ $t9       <int> %ebp-100 ]
-     #   -101(%ebp)   1  [ $v2       <bool> %ebp-101 ]
+     #    -93(%ebp)   1  [ $v2       <bool> %ebp-93 ]
-     #   -102(%ebp)   1  [ $v3       <char> %ebp-102 ]
+     #    -94(%ebp)   1  [ $v3       <char> %ebp-94 ]
-     pushl   %ebp                   
-     movl    %esp, %ebp             
-     pushl   %ebx                    # save callee saved registers
-     pushl   %esi                   
+     pushl   %ebp                   
+     movl    %esp, %ebp             
+     pushl   %ebx                    # save callee saved registers
-     pushl   %edi                   
+     pushl   %esi                   
+     pushl   %edi                   
-     subl    $92, %esp               # make room for locals
+     subl    $84, %esp               # make room for locals
-     movl    $23, %ecx              
+     movl    $21, %ecx              
+     jmp     l_f2_6                  #   3:     goto   6
-     movl    $1, %eax                #   3:     assign t1 <- 1
+     movl    $1, %eax                #   4:     assign t1 <- 1
-     jmp     l_f2_7                  #   4:     goto   7
+     jmp     l_f2_7                  #   5:     goto   7
+ l_f2_6:
-     movl    $0, %eax                #   5:     assign t1 <- 0
+     movl    $0, %eax                #   7:     assign t1 <- 0
-     movzbl  -13(%ebp), %eax         #   7:     assign v2 <- t1
+     movzbl  -13(%ebp), %eax         #   9:     assign v2 <- t1
-     movb    %al, -101(%ebp)        
+     movb    %al, -93(%ebp)         
-     jmp     l_f2_0                  #   8:     goto   0
+     jmp     l_f2_0                  #  10:     goto   0
-     call    dummyCHARfunc           #  11:     call   t2 <- dummyCHARfunc
+     call    dummyCHARfunc           #  13:     call   t2 <- dummyCHARfunc
-     movl    $2, %eax                #  12:     param  1 <- 2
+     movl    $2, %eax                #  14:     param  1 <- 2
-     movl    12(%ebp), %eax          #  13:     param  0 <- v1
+     movl    12(%ebp), %eax          #  15:     param  0 <- v1
-     call    DIM                     #  14:     call   t3 <- DIM
+     call    DIM                     #  16:     call   t3 <- DIM
-     movl    %eax, -76(%ebp)        
+     movl    %eax, -68(%ebp)        
-     movl    $18907, %eax            #  15:     mul    t4 <- 18907, t3
+     movl    $18907, %eax            #  17:     mul    t4 <- 18907, t3
-     movl    -76(%ebp), %ebx        
+     movl    -68(%ebp), %ebx        
-     movl    %eax, -80(%ebp)        
+     movl    %eax, -72(%ebp)        
-     movl    $67308, %eax            #  16:     sub    t5 <- 67308, 38146
+     movl    $67308, %eax            #  18:     sub    t5 <- 67308, 38146
-     movl    %eax, -84(%ebp)        
+     movl    %eax, -76(%ebp)        
-     movl    -84(%ebp), %eax         #  17:     sub    t6 <- t5, 36464
+     movl    -76(%ebp), %eax         #  19:     sub    t6 <- t5, 36464
+     movl    %eax, -80(%ebp)        
+     movl    -72(%ebp), %eax         #  20:     add    t7 <- t4, t6
+     movl    -80(%ebp), %ebx        
+     addl    %ebx, %eax             
+     movl    %eax, -84(%ebp)        
+     movl    $3, %eax                #  21:     param  1 <- 3
+     pushl   %eax                   
+     movl    12(%ebp), %eax          #  22:     param  0 <- v1
+     pushl   %eax                   
+     call    DIM                     #  23:     call   t8 <- DIM
+     addl    $8, %esp               
-     movl    -80(%ebp), %eax         #  18:     add    t7 <- t4, t6
+     movl    -84(%ebp), %eax         #  24:     mul    t9 <- t7, t8
-     addl    %ebx, %eax             
+     imull   %ebx                   
+     movl    -92(%ebp), %eax         #  25:     add    t10 <- t9, 59653
+     movl    $59653, %ebx           
+     addl    %ebx, %eax             
+     movl    %eax, -20(%ebp)        
-     movl    $3, %eax                #  19:     param  1 <- 3
+     movl    $4, %eax                #  26:     param  1 <- 4
-     movl    12(%ebp), %eax          #  20:     param  0 <- v1
+     movl    12(%ebp), %eax          #  27:     param  0 <- v1
-     call    DIM                     #  21:     call   t8 <- DIM
+     call    DIM                     #  28:     call   t11 <- DIM
-     movl    %eax, -96(%ebp)        
-     movl    $67308, %eax            #  22:     sub    t10 <- 67308, 38146
-     movl    $38146, %ebx           
-     subl    %ebx, %eax             
-     movl    %eax, -20(%ebp)        
-     movl    -20(%ebp), %eax         #  23:     sub    t11 <- t10, 36464
-     movl    $36464, %ebx           
-     subl    %ebx, %eax             
-     movl    -92(%ebp), %eax         #  24:     mul    t9 <- t7, t8
+     movl    -20(%ebp), %eax         #  29:     mul    t12 <- t10, t11
-     movl    -96(%ebp), %ebx        
+     movl    -24(%ebp), %ebx        
-     movl    %eax, -100(%ebp)       
-     movl    -100(%ebp), %eax        #  25:     add    t12 <- t9, 59653
-     movl    $59653, %ebx           
-     addl    %ebx, %eax             
+     movl    -28(%ebp), %eax         #  30:     add    t13 <- t12, 37517
+     movl    $37517, %ebx           
+     addl    %ebx, %eax             
+     movl    %eax, -32(%ebp)        
-     movl    $4, %eax                #  26:     param  1 <- 4
+     movl    $5, %eax                #  31:     param  1 <- 5
-     movl    12(%ebp), %eax          #  27:     param  0 <- v1
+     movl    12(%ebp), %eax          #  32:     param  0 <- v1
-     call    DIM                     #  28:     call   t13 <- DIM
+     call    DIM                     #  33:     call   t14 <- DIM
-     movl    %eax, -32(%ebp)        
+     movl    %eax, -36(%ebp)        
-     movl    -28(%ebp), %eax         #  29:     mul    t14 <- t12, t13
+     movl    -32(%ebp), %eax         #  34:     mul    t15 <- t13, t14
-     movl    -32(%ebp), %ebx        
+     movl    -36(%ebp), %ebx        
-     movl    %eax, -36(%ebp)        
-     movl    -36(%ebp), %eax         #  30:     add    t15 <- t14, 37517
-     movl    $37517, %ebx           
-     addl    %ebx, %eax             
-     movl    $5, %eax                #  31:     param  1 <- 5
-     pushl   %eax                   
-     movl    12(%ebp), %eax          #  32:     param  0 <- v1
+     movl    -40(%ebp), %eax         #  35:     add    t16 <- t15, 37813
+     movl    $37813, %ebx           
-     pushl   %eax                   
-     call    DIM                     #  33:     call   t16 <- DIM
-     addl    $8, %esp               
+     addl    %ebx, %eax             
-     movl    -40(%ebp), %eax         #  34:     mul    t17 <- t15, t16
+     movl    -44(%ebp), %eax         #  36:     mul    t17 <- t16, 1
-     movl    -44(%ebp), %ebx        
+     movl    $1, %ebx               
-     movl    -48(%ebp), %eax         #  35:     add    t18 <- t17, 37813
+     movl    12(%ebp), %eax          #  37:     param  0 <- v1
-     movl    $37813, %ebx           
+     pushl   %eax                   
+     call    DOFS                    #  38:     call   t18 <- DOFS
-     addl    %ebx, %eax             
+     addl    $4, %esp               
-     movl    -52(%ebp), %eax         #  36:     mul    t19 <- t18, 1
+     movl    -48(%ebp), %eax         #  39:     add    t19 <- t17, t18
+     movl    -52(%ebp), %ebx        
-     movl    $1, %ebx               
+     addl    %ebx, %eax             
-     imull   %ebx                   
-     movl    12(%ebp), %eax          #  37:     param  0 <- v1
+     movl    12(%ebp), %eax          #  40:     add    t20 <- v1, t19
+     movl    -56(%ebp), %ebx        
-     pushl   %eax                   
-     call    DOFS                    #  38:     call   t20 <- DOFS
-     addl    $4, %esp               
+     addl    %ebx, %eax             
-     movl    -56(%ebp), %eax         #  39:     add    t21 <- t19, t20
-     movl    -64(%ebp), %ebx        
-     addl    %ebx, %eax             
-     movl    %eax, -68(%ebp)        
-     movl    12(%ebp), %eax          #  40:     add    t22 <- v1, t21
-     movl    -68(%ebp), %ebx        
-     addl    %ebx, %eax             
-     movl    %eax, -72(%ebp)        
-     movl    $99, %eax               #  41:     assign @t22 <- 99
+     movl    $99, %eax               #  41:     assign @t20 <- 99
-     movl    -72(%ebp), %edi        
+     movl    -64(%ebp), %edi        
-     addl    $92, %esp               # remove locals
+     addl    $84, %esp               # remove locals
-     jmp     l_test_2_while_body     #   1:     goto   2_while_body
+     jmp     l_test_4                #   1:     goto   4
+ l_test_4:
+     jmp     l_test_2_while_body     #   4:     goto   2_while_body
+     jmp     l_test_0                #   5:     goto   0
-     jmp     l_test_1_while_cond     #   4:     goto   1_while_cond
+     jmp     l_test_1_while_cond     #   7:     goto   1_while_cond
+ l_test_0:
-     call    dummyCHARfunc           #   5:     call   t0 <- dummyCHARfunc
+     call    dummyCHARfunc           #   9:     call   t0 <- dummyCHARfunc
-     movzbl  -13(%ebp), %eax         #   6:     if     t0 <= 97 goto 8_if_true
+     movzbl  -13(%ebp), %eax         #  10:     if     t0 <= 97 goto 8_if_true
-     jmp     l_test_9_if_false       #   7:     goto   9_if_false
+     jmp     l_test_9_if_false       #  11:     goto   9_if_false
-     jmp     l_test_11               #   9:     goto   11
+     jmp     l_test_11               #  13:     goto   11
-     jmp     l_test_7                #  11:     goto   7
+     jmp     l_test_7                #  15:     goto   7
