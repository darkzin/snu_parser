-     #    -76(%ebp)   4  [ $t25      <int> %ebp-76 ]
+     #    -73(%ebp)   1  [ $t25      <bool> %ebp-73 ]
-     #    -80(%ebp)   4  [ $t26      <int> %ebp-80 ]
+     #    -80(%ebp)   4  [ $t6       <int> %ebp-80 ]
-     #    -84(%ebp)   4  [ $t27      <int> %ebp-84 ]
+     #    -84(%ebp)   4  [ $t7       <int> %ebp-84 ]
-     #    -85(%ebp)   1  [ $t28      <bool> %ebp-85 ]
+     #    -88(%ebp)   4  [ $t8       <int> %ebp-88 ]
-     #    -92(%ebp)   4  [ $t6       <int> %ebp-92 ]
+     #    -92(%ebp)   4  [ $t9       <int> %ebp-92 ]
-     #    -96(%ebp)   4  [ $t7       <int> %ebp-96 ]
-     #   -100(%ebp)   4  [ $t8       <int> %ebp-100 ]
-     #   -104(%ebp)   4  [ $t9       <int> %ebp-104 ]
-     #   -108(%ebp)   4  [ $v3       <int> %ebp-108 ]
+     #    -96(%ebp)   4  [ $v3       <int> %ebp-96 ]
-     pushl   %ebp                   
-     movl    %esp, %ebp             
-     pushl   %ebx                    # save callee saved registers
-     pushl   %esi                   
+     pushl   %ebp                   
+     movl    %esp, %ebp             
+     pushl   %ebx                    # save callee saved registers
-     pushl   %edi                   
+     pushl   %esi                   
+     pushl   %edi                   
-     subl    $96, %esp               # make room for locals
+     subl    $84, %esp               # make room for locals
-     movl    $24, %ecx              
+     movl    $21, %ecx              
-     movl    %eax, -92(%ebp)        
+     movl    %eax, -80(%ebp)        
-     movl    -92(%ebp), %ebx        
+     movl    -80(%ebp), %ebx        
-     movl    %eax, -96(%ebp)        
+     movl    %eax, -84(%ebp)        
-     movl    -96(%ebp), %eax         #   4:     add    t8 <- t7, 80194
+     movl    -84(%ebp), %eax         #   4:     add    t8 <- t7, 80194
-     movl    %eax, -100(%ebp)       
+     movl    %eax, -88(%ebp)        
-     movl    %eax, -104(%ebp)       
+     movl    %eax, -92(%ebp)        
-     movl    -100(%ebp), %eax        #   8:     mul    t10 <- t8, t9
+     movl    -88(%ebp), %eax         #   8:     mul    t10 <- t8, t9
-     movl    -104(%ebp), %ebx       
+     movl    -92(%ebp), %ebx        
-     movl    $82324, %eax            #  16:     add    t17 <- 82324, 94686
-     movl    $94686, %ebx           
-     addl    %ebx, %eax             
-     movl    %eax, -44(%ebp)        
-     movl    -44(%ebp), %eax         #  17:     sub    t18 <- t17, 92917
-     movl    $92917, %ebx           
-     subl    %ebx, %eax             
-     movl    %eax, -48(%ebp)        
-     movl    -48(%ebp), %eax         #  18:     sub    t19 <- t18, 60970
-     movl    $60970, %ebx           
-     subl    %ebx, %eax             
-     movl    %eax, -52(%ebp)        
-     movl    -32(%ebp), %eax         #  19:     mul    t16 <- t14, t15
+     movl    -32(%ebp), %eax         #  16:     mul    t16 <- t14, t15
-     movl    -40(%ebp), %eax         #  20:     add    t20 <- t16, 3288
+     movl    -40(%ebp), %eax         #  17:     add    t17 <- t16, 3288
-     movl    %eax, -56(%ebp)        
+     movl    %eax, -44(%ebp)        
-     movl    $5, %eax                #  21:     param  1 <- 5
+     movl    $5, %eax                #  18:     param  1 <- 5
-     movl    12(%ebp), %eax          #  22:     param  0 <- v2
+     movl    12(%ebp), %eax          #  19:     param  0 <- v2
-     call    DIM                     #  23:     call   t21 <- DIM
+     call    DIM                     #  20:     call   t18 <- DIM
-     movl    %eax, -60(%ebp)        
+     movl    %eax, -48(%ebp)        
-     movl    -56(%ebp), %eax         #  24:     mul    t22 <- t20, t21
+     movl    -44(%ebp), %eax         #  21:     mul    t19 <- t17, t18
-     movl    -60(%ebp), %ebx        
+     movl    -48(%ebp), %ebx        
-     movl    %eax, -64(%ebp)        
+     movl    %eax, -52(%ebp)        
-     movl    -64(%ebp), %eax         #  25:     add    t23 <- t22, 13815
+     movl    -52(%ebp), %eax         #  22:     add    t20 <- t19, 13815
-     movl    %eax, -68(%ebp)        
+     movl    %eax, -56(%ebp)        
-     movl    -68(%ebp), %eax         #  26:     mul    t24 <- t23, 4
+     movl    -56(%ebp), %eax         #  23:     mul    t21 <- t20, 4
+     movl    %eax, -60(%ebp)        
+     movl    12(%ebp), %eax          #  24:     param  0 <- v2
+     pushl   %eax                   
+     call    DOFS                    #  25:     call   t22 <- DOFS
+     addl    $4, %esp               
+     movl    %eax, -64(%ebp)        
+     movl    -60(%ebp), %eax         #  26:     add    t23 <- t21, t22
+     movl    -64(%ebp), %ebx        
+     addl    %ebx, %eax             
+     movl    %eax, -68(%ebp)        
+     movl    12(%ebp), %eax          #  27:     add    t24 <- v2, t23
+     movl    -68(%ebp), %ebx        
+     addl    %ebx, %eax             
-     movl    12(%ebp), %eax          #  27:     param  0 <- v2
-     pushl   %eax                   
-     call    DOFS                    #  28:     call   t25 <- DOFS
-     addl    $4, %esp               
-     movl    %eax, -76(%ebp)        
-     movl    -72(%ebp), %eax         #  29:     add    t26 <- t24, t25
-     movl    -76(%ebp), %ebx        
-     addl    %ebx, %eax             
-     movl    %eax, -80(%ebp)        
-     movl    12(%ebp), %eax          #  30:     add    t27 <- v2, t26
-     movl    -80(%ebp), %ebx        
-     addl    %ebx, %eax             
-     movl    %eax, -84(%ebp)        
-     movl    $91867, %eax            #  31:     assign @t27 <- 91867
+     movl    $91867, %eax            #  28:     assign @t24 <- 91867
-     movl    -84(%ebp), %edi        
+     movl    -72(%ebp), %edi        
-     jmp     l_f0_2_if_true          #  32:     goto   2_if_true
+     jmp     l_f0_2_if_true          #  29:     goto   2_if_true
-     movl    $97, %eax               #  34:     return 97
+     movl    $97, %eax               #  31:     return 97
-     jmp     l_f0_1                  #  35:     goto   1
+     jmp     l_f0_1                  #  32:     goto   1
-     jmp     l_f0_11_if_false        #  37:     goto   11_if_false
+     jmp     l_f0_11_if_false        #  34:     goto   11_if_false
-     jmp     l_f0_9                  #  38:     goto   9
+     jmp     l_f0_9                  #  35:     goto   9
-     jmp     l_f0_14_if_false        #  41:     goto   14_if_false
+     jmp     l_f0_14_if_false        #  38:     goto   14_if_false
-     jmp     l_f0_12                 #  42:     goto   12
+     jmp     l_f0_12                 #  39:     goto   12
-     movl    $99, %eax               #  45:     return 99
+     movl    $99, %eax               #  42:     return 99
-     call    dummyProcedure          #  46:     call   dummyProcedure
+     call    dummyProcedure          #  43:     call   dummyProcedure
-     call    dummyBOOLfunc           #  47:     call   t28 <- dummyBOOLfunc
+     call    dummyBOOLfunc           #  44:     call   t25 <- dummyBOOLfunc
-     movb    %al, -85(%ebp)         
+     movb    %al, -73(%ebp)         
-     movl    $1, %eax                #  48:     if     1 # 1 goto 19_if_true
+     movl    $1, %eax                #  45:     if     1 # 1 goto 19_if_true
-     jmp     l_f0_20_if_false        #  49:     goto   20_if_false
+     jmp     l_f0_20_if_false        #  46:     goto   20_if_false
-     jmp     l_f0_18                 #  51:     goto   18
+     jmp     l_f0_18                 #  48:     goto   18
-     movl    $1643, %eax             #  55:     if     1643 # 73065 goto 24_while_body
+     movl    $1643, %eax             #  52:     if     1643 # 73065 goto 24_while_body
-     jmp     l_f0_22                 #  56:     goto   22
+     jmp     l_f0_22                 #  53:     goto   22
-     jmp     l_f0_23_while_cond      #  58:     goto   23_while_cond
+     jmp     l_f0_23_while_cond      #  55:     goto   23_while_cond
-     movl    $0, %eax                #  60:     if     0 = 1 goto 27_if_true
+     movl    $0, %eax                #  57:     if     0 = 1 goto 27_if_true
-     jmp     l_f0_28_if_false        #  61:     goto   28_if_false
+     jmp     l_f0_28_if_false        #  58:     goto   28_if_false
-     jmp     l_f0_26                 #  63:     goto   26
+     jmp     l_f0_26                 #  60:     goto   26
-     jmp     l_f0_6                  #  66:     goto   6
+     jmp     l_f0_6                  #  63:     goto   6
-     addl    $96, %esp               # remove locals
+     addl    $84, %esp               # remove locals
-     # -14452(%ebp)14424  [ $v5       <array 5 of <array 2 of <array 9 of <array 10 of <array 4 of <int>>>>>> %ebp-14452 ]
+     #   -14452(%ebp)  14424  [ $v5       <array 5 of <array 2 of <array 9 of <array 10 of <array 4 of <int>>>>>> %ebp-14452 ]
-     # -23436(%ebp)8984  [ $v6       <array 4 of <array 10 of <array 4 of <array 7 of <array 2 of <int>>>>>> %ebp-23436 ]
+     #   -23436(%ebp)  8984  [ $v6       <array 4 of <array 10 of <array 4 of <array 7 of <array 2 of <int>>>>>> %ebp-23436 ]
-     jmp     l_test_12               #  12:     goto   12
+     jmp     l_test_13               #  12:     goto   13
-     jmp     l_test_12               #  13:     goto   12
+     jmp     l_test_13               #  13:     goto   13
-     jmp     l_test_12               #  14:     goto   12
+     jmp     l_test_13               #  14:     goto   13
+     jmp     l_test_14               #  15:     goto   14
- l_test_12:
+ l_test_13:
-     movl    $1, %eax                #  16:     assign t1 <- 1
+     movl    $1, %eax                #  17:     assign t1 <- 1
-     jmp     l_test_14               #  17:     goto   14
+     jmp     l_test_15               #  18:     goto   15
+ l_test_14:
-     movl    $0, %eax                #  18:     assign t1 <- 0
+     movl    $0, %eax                #  20:     assign t1 <- 0
- l_test_14:
+ l_test_15:
-     movzbl  -17(%ebp), %eax         #  20:     if     t1 = 0 goto 10_if_true
+     movzbl  -17(%ebp), %eax         #  22:     if     t1 = 0 goto 10_if_true
-     jmp     l_test_11_if_false      #  21:     goto   11_if_false
+     jmp     l_test_11_if_false      #  23:     goto   11_if_false
-     jmp     l_test_9                #  23:     goto   9
+     jmp     l_test_9                #  25:     goto   9
-     movl    $86037, %eax            #  26:     if     86037 > 1159 goto 23_if_true
+     movl    $86037, %eax            #  28:     if     86037 > 1159 goto 23_if_true
-     jmp     l_test_24_if_false      #  27:     goto   24_if_false
+     jmp     l_test_24_if_false      #  29:     goto   24_if_false
-     movl    $0, %eax                #  29:     assign v1 <- 0
+     movl    $0, %eax                #  31:     assign v1 <- 0
-     leal    v3, %eax                #  30:     &()    t2 <- v3
+     leal    v3, %eax                #  32:     &()    t2 <- v3
-     movl    -24(%ebp), %eax         #  31:     param  1 <- t2
+     movl    -24(%ebp), %eax         #  33:     param  1 <- t2
-     leal    v2, %eax                #  32:     &()    t3 <- v2
+     leal    v2, %eax                #  34:     &()    t3 <- v2
-     movl    -28(%ebp), %eax         #  33:     param  0 <- t3
+     movl    -28(%ebp), %eax         #  35:     param  0 <- t3
-     call    f0                      #  34:     call   t4 <- f0
+     call    f0                      #  36:     call   t4 <- f0
-     jmp     l_test_28               #  35:     goto   28
+     jmp     l_test_28               #  37:     goto   28
-     jmp     l_test_22               #  37:     goto   22
+     jmp     l_test_22               #  39:     goto   22
-     jmp     l_test_32               #  42:     goto   32
+     jmp     l_test_32               #  44:     goto   32
-     movl    $0, %eax                #  43:     if     0 # 0 goto 36_if_true
+     movl    $0, %eax                #  45:     if     0 # 0 goto 36_if_true
-     jmp     l_test_37_if_false      #  44:     goto   37_if_false
+     jmp     l_test_37_if_false      #  46:     goto   37_if_false
-     jmp     l_test_35               #  46:     goto   35
+     jmp     l_test_35               #  48:     goto   35
-     call    dummyBOOLfunc           #  49:     call   t5 <- dummyBOOLfunc
+     call    dummyBOOLfunc           #  51:     call   t5 <- dummyBOOLfunc
-     jmp     l_test_42_if_false      #  50:     goto   42_if_false
+     jmp     l_test_42_if_false      #  52:     goto   42_if_false
-     jmp     l_test_40               #  51:     goto   40
+     jmp     l_test_40               #  53:     goto   40
-     jmp     l_test_45_if_false      #  54:     goto   45_if_false
+     jmp     l_test_45_if_false      #  56:     goto   45_if_false
-     jmp     l_test_43               #  55:     goto   43
+     jmp     l_test_43               #  57:     goto   43
-     movl    $100, %eax              #  58:     assign v4 <- 100
+     movl    $100, %eax              #  60:     assign v4 <- 100
-     jmp     l_test_33_while_cond    #  59:     goto   33_while_cond
+     jmp     l_test_33_while_cond    #  61:     goto   33_while_cond
