+     #    -57(%ebp)   1  [ $t21      <char> %ebp-57 ]
-     #    -60(%ebp)   4  [ $t21      <int> %ebp-60 ]
+     #    -64(%ebp)   4  [ $t4       <int> %ebp-64 ]
-     #    -61(%ebp)   1  [ $t22      <char> %ebp-61 ]
-     #    -68(%ebp)   4  [ $t4       <int> %ebp-68 ]
+     #    -68(%ebp)   4  [ $t5       <int> %ebp-68 ]
-     #    -72(%ebp)   4  [ $t5       <int> %ebp-72 ]
+     #    -72(%ebp)   4  [ $t6       <int> %ebp-72 ]
-     #    -76(%ebp)   4  [ $t6       <int> %ebp-76 ]
+     #    -76(%ebp)   4  [ $t7       <int> %ebp-76 ]
-     #    -80(%ebp)   4  [ $t7       <int> %ebp-80 ]
+     #    -80(%ebp)   4  [ $t8       <int> %ebp-80 ]
-     #    -84(%ebp)   4  [ $t8       <int> %ebp-84 ]
+     #    -84(%ebp)   4  [ $t9       <int> %ebp-84 ]
-     #    -88(%ebp)   4  [ $t9       <int> %ebp-88 ]
-     #    -89(%ebp)   1  [ $v2       <char> %ebp-89 ]
+     #    -85(%ebp)   1  [ $v2       <char> %ebp-85 ]
-     #    -96(%ebp)   4  [ $v3       <int> %ebp-96 ]
+     #    -92(%ebp)   4  [ $v3       <int> %ebp-92 ]
-     pushl   %ebp                   
-     movl    %esp, %ebp             
-     pushl   %ebx                    # save callee saved registers
-     pushl   %esi                   
+     pushl   %ebp                   
+     movl    %esp, %ebp             
+     pushl   %ebx                    # save callee saved registers
-     pushl   %edi                   
+     pushl   %esi                   
+     pushl   %edi                   
-     subl    $84, %esp               # make room for locals
+     subl    $80, %esp               # make room for locals
-     movl    $21, %ecx              
+     movl    $20, %ecx              
-     movb    %al, -89(%ebp)         
+     movb    %al, -85(%ebp)         
+     movl    %eax, -64(%ebp)        
+     movl    $49230, %eax            #   4:     mul    t5 <- 49230, t4
+     movl    -64(%ebp), %ebx        
+     imull   %ebx                   
-     movl    $49230, %eax            #   4:     mul    t5 <- 49230, t4
-     movl    -68(%ebp), %ebx        
-     imull   %ebx                   
-     movl    %eax, -72(%ebp)        
+     movl    %eax, -72(%ebp)        
+     movl    -68(%ebp), %eax         #   6:     add    t7 <- t5, t6
+     movl    -72(%ebp), %ebx        
+     addl    %ebx, %eax             
+     movl    $3, %eax                #   7:     param  1 <- 3
+     pushl   %eax                   
-     movl    -72(%ebp), %eax         #   6:     add    t7 <- t5, t6
+     movl    12(%ebp), %eax          #   8:     param  0 <- v1
-     movl    -76(%ebp), %ebx        
+     pushl   %eax                   
+     call    DIM                     #   9:     call   t8 <- DIM
-     addl    %ebx, %eax             
+     addl    $8, %esp               
-     movl    $3, %eax                #   7:     param  1 <- 3
+     movl    -76(%ebp), %eax         #  10:     mul    t9 <- t7, t8
+     movl    -80(%ebp), %ebx        
-     pushl   %eax                   
+     imull   %ebx                   
-     movl    12(%ebp), %eax          #   8:     param  0 <- v1
-     pushl   %eax                   
-     call    DIM                     #   9:     call   t8 <- DIM
-     addl    $8, %esp               
-     movl    $52270, %eax            #  10:     add    t10 <- 52270, 34458
+     movl    -84(%ebp), %eax         #  11:     add    t10 <- t9, 56391
-     movl    $34458, %ebx           
+     movl    $56391, %ebx           
+     movl    $4, %eax                #  12:     param  1 <- 4
-     movl    -80(%ebp), %eax         #  11:     mul    t9 <- t7, t8
-     movl    -84(%ebp), %ebx        
-     imull   %ebx                   
+     pushl   %eax                   
-     movl    %eax, -88(%ebp)        
-     movl    -88(%ebp), %eax         #  12:     add    t11 <- t9, 56391
+     movl    12(%ebp), %eax          #  13:     param  0 <- v1
-     movl    $56391, %ebx           
+     pushl   %eax                   
+     call    DIM                     #  14:     call   t11 <- DIM
-     addl    %ebx, %eax             
+     addl    $8, %esp               
-     movl    $4, %eax                #  13:     param  1 <- 4
+     movl    -16(%ebp), %eax         #  15:     mul    t12 <- t10, t11
+     movl    -20(%ebp), %ebx        
-     pushl   %eax                   
+     imull   %ebx                   
-     movl    12(%ebp), %eax          #  14:     param  0 <- v1
-     pushl   %eax                   
-     call    DIM                     #  15:     call   t12 <- DIM
-     addl    $8, %esp               
-     movl    -20(%ebp), %eax         #  16:     mul    t13 <- t11, t12
+     movl    -24(%ebp), %eax         #  16:     add    t13 <- t12, 7031
-     movl    -24(%ebp), %ebx        
+     movl    $7031, %ebx            
-     imull   %ebx                   
+     addl    %ebx, %eax             
+     movl    $5, %eax                #  17:     param  1 <- 5
+     pushl   %eax                   
-     movl    -28(%ebp), %eax         #  17:     add    t14 <- t13, 7031
+     movl    12(%ebp), %eax          #  18:     param  0 <- v1
-     movl    $7031, %ebx            
+     pushl   %eax                   
+     call    DIM                     #  19:     call   t14 <- DIM
-     addl    %ebx, %eax             
+     addl    $8, %esp               
-     movl    $5, %eax                #  18:     param  1 <- 5
+     movl    -28(%ebp), %eax         #  20:     mul    t15 <- t13, t14
+     movl    -32(%ebp), %ebx        
-     pushl   %eax                   
+     imull   %ebx                   
-     movl    12(%ebp), %eax          #  19:     param  0 <- v1
-     pushl   %eax                   
-     call    DIM                     #  20:     call   t15 <- DIM
-     addl    $8, %esp               
-     movl    -32(%ebp), %eax         #  21:     mul    t16 <- t14, t15
+     movl    -36(%ebp), %eax         #  21:     add    t16 <- t15, 4863
-     movl    -36(%ebp), %ebx        
+     movl    $4863, %ebx            
-     imull   %ebx                   
+     addl    %ebx, %eax             
-     movl    -40(%ebp), %eax         #  22:     add    t17 <- t16, 4863
+     movl    -40(%ebp), %eax         #  22:     mul    t17 <- t16, 4
-     movl    $4863, %ebx            
+     movl    $4, %ebx               
-     addl    %ebx, %eax             
+     imull   %ebx                   
-     movl    -44(%ebp), %eax         #  23:     mul    t18 <- t17, 4
+     movl    12(%ebp), %eax          #  23:     param  0 <- v1
-     movl    $4, %ebx               
-     imull   %ebx                   
+     pushl   %eax                   
+     call    DOFS                    #  24:     call   t18 <- DOFS
+     addl    $4, %esp               
-     movl    12(%ebp), %eax          #  24:     param  0 <- v1
+     movl    -44(%ebp), %eax         #  25:     add    t19 <- t17, t18
+     movl    -48(%ebp), %ebx        
-     pushl   %eax                   
-     call    DOFS                    #  25:     call   t19 <- DOFS
-     addl    $4, %esp               
+     addl    %ebx, %eax             
-     movl    -48(%ebp), %eax         #  26:     add    t20 <- t18, t19
+     movl    12(%ebp), %eax          #  26:     add    t20 <- v1, t19
-     movl    12(%ebp), %eax          #  27:     add    t21 <- v1, t20
-     movl    -56(%ebp), %ebx        
-     addl    %ebx, %eax             
-     movl    %eax, -60(%ebp)        
-     movl    $91534, %eax            #  28:     assign @t21 <- 91534
+     movl    $91534, %eax            #  27:     assign @t20 <- 91534
-     movl    -60(%ebp), %edi        
+     movl    -56(%ebp), %edi        
-     jmp     l_f0_2                  #  30:     goto   2
+     jmp     l_f0_2                  #  29:     goto   2
-     call    dummyCHARfunc           #  31:     call   t22 <- dummyCHARfunc
+     call    dummyCHARfunc           #  30:     call   t21 <- dummyCHARfunc
-     movb    %al, -61(%ebp)         
+     movb    %al, -57(%ebp)         
-     movzbl  -61(%ebp), %eax         #  32:     return t22
+     movzbl  -57(%ebp), %eax         #  31:     return t21
-     jmp     l_f0_3_while_cond       #  33:     goto   3_while_cond
+     jmp     l_f0_3_while_cond       #  32:     goto   3_while_cond
-     addl    $84, %esp               # remove locals
+     addl    $80, %esp               # remove locals
-     #-8872336(%ebp)8872224  [ $v3       <array 15 of <array 93 of <array 12 of <array 10 of <array 53 of <char>>>>>> %ebp-8872336 ]
+     #   -8872336(%ebp)  8872224  [ $v3       <array 15 of <array 93 of <array 12 of <array 10 of <array 53 of <char>>>>>> %ebp-8872336 ]
-     #1472268504(%ebp)-1481140840  [ $v4       <array 66 of <array 79 of <array 97 of <array 80 of <array 97 of <int>>>>>> %ebp+1472268504 ]
+     #   1472268504(%ebp)  -1481140840  [ $v4       <array 66 of <array 79 of <array 97 of <array 80 of <array 97 of <int>>>>>> %ebp+1472268504 ]
-     #1472268503(%ebp)   1  [ $v5       <bool> %ebp+1472268503 ]
+     #   1472268503(%ebp)   1  [ $v5       <bool> %ebp+1472268503 ]
-     pushl   %ebp                   
-     movl    %esp, %ebp             
-     pushl   %ebx                    # save callee saved registers
-     pushl   %esi                   
+     pushl   %ebp                   
+     movl    %esp, %ebp             
+     pushl   %ebx                    # save callee saved registers
-     pushl   %edi                   
+     pushl   %esi                   
+     pushl   %edi                   
-     subl    $-1472268508, %esp      # make room for locals
+     subl    $-1472268512, %esp      # make room for locals
+     cld                             # memset local stack area to 0
+     xorl    %eax, %eax             
+     movl    $-368067128, %ecx      
+     mov     %esp, %edi             
+     rep     stosl                  
-     addl    $-1472268508, %esp      # remove locals
+     addl    $-1472268512, %esp      # remove locals
