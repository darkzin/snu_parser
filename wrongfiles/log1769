+     jmp     l_f0_2                  #   0:     goto   2
+     jmp     l_f0_2                  #   1:     goto   2
-     movl    $1, %eax                #   0:     assign t1 <- 1
+     movl    $1, %eax                #   2:     assign t1 <- 1
-     jmp     l_f0_3                  #   1:     goto   3
+     jmp     l_f0_3                  #   3:     goto   3
+ l_f0_2:
-     movl    $0, %eax                #   2:     assign t1 <- 0
+     movl    $0, %eax                #   5:     assign t1 <- 0
-     movzbl  -13(%ebp), %eax         #   4:     return t1
+     movzbl  -13(%ebp), %eax         #   7:     return t1
-     call    dummyCHARfunc           #   5:     call   t2 <- dummyCHARfunc
+     call    dummyCHARfunc           #   8:     call   t2 <- dummyCHARfunc
-     movl    $98, %eax               #   6:     if     98 # t2 goto 7_if_true
+     movl    $98, %eax               #   9:     if     98 # t2 goto 7_if_true
-     jmp     l_f0_8_if_false         #   7:     goto   8_if_false
+     jmp     l_f0_8_if_false         #  10:     goto   8_if_false
-     call    dummyBOOLfunc           #   9:     call   t3 <- dummyBOOLfunc
+     call    dummyBOOLfunc           #  12:     call   t3 <- dummyBOOLfunc
-     movl    $64951, %eax            #  10:     if     64951 = 77826 goto 12
+     movl    $64951, %eax            #  13:     if     64951 = 77826 goto 12
-     jmp     l_f0_13                 #  11:     goto   13
+     jmp     l_f0_13                 #  14:     goto   13
-     movl    $1, %eax                #  13:     assign t4 <- 1
+     movl    $1, %eax                #  16:     assign t4 <- 1
-     jmp     l_f0_14                 #  14:     goto   14
+     jmp     l_f0_14                 #  17:     goto   14
-     movl    $0, %eax                #  16:     assign t4 <- 0
+     movl    $0, %eax                #  19:     assign t4 <- 0
-     movzbl  -16(%ebp), %eax         #  18:     return t4
+     movzbl  -16(%ebp), %eax         #  21:     return t4
-     jmp     l_f0_6                  #  19:     goto   6
+     jmp     l_f0_6                  #  22:     goto   6
-     movl    $32768, %eax            #  22:     if     32768 < 6141 goto 17_if_true
+     movl    $32768, %eax            #  25:     if     32768 < 6141 goto 17_if_true
-     jmp     l_f0_18_if_false        #  23:     goto   18_if_false
+     jmp     l_f0_18_if_false        #  26:     goto   18_if_false
-     call    dummyCHARfunc           #  25:     call   t5 <- dummyCHARfunc
+     call    dummyCHARfunc           #  28:     call   t5 <- dummyCHARfunc
-     movl    $71468, %eax            #  26:     assign v1 <- 71468
+     movl    $71468, %eax            #  29:     assign v1 <- 71468
-     movl    $100, %eax              #  27:     if     100 <= 100 goto 23
+     movl    $100, %eax              #  30:     if     100 <= 100 goto 23
-     jmp     l_f0_24                 #  28:     goto   24
+     jmp     l_f0_24                 #  31:     goto   24
-     movl    $1, %eax                #  30:     assign t6 <- 1
+     movl    $1, %eax                #  33:     assign t6 <- 1
-     jmp     l_f0_25                 #  31:     goto   25
+     jmp     l_f0_25                 #  34:     goto   25
-     movl    $0, %eax                #  33:     assign t6 <- 0
+     movl    $0, %eax                #  36:     assign t6 <- 0
-     movzbl  -18(%ebp), %eax         #  35:     return t6
+     movzbl  -18(%ebp), %eax         #  38:     return t6
-     jmp     l_f0_27                 #  36:     goto   27
+     jmp     l_f0_27                 #  39:     goto   27
-     jmp     l_f0_16                 #  38:     goto   16
+     jmp     l_f0_16                 #  41:     goto   16
+     jmp     l_f1_2                  #   0:     goto   2
-     movl    $1, %eax                #   0:     assign t1 <- 1
+     movl    $1, %eax                #   1:     assign t1 <- 1
-     jmp     l_f1_3                  #   1:     goto   3
+     jmp     l_f1_3                  #   2:     goto   3
+ l_f1_2:
-     movl    $0, %eax                #   2:     assign t1 <- 0
+     movl    $0, %eax                #   4:     assign t1 <- 0
-     movzbl  -13(%ebp), %eax         #   4:     assign v2 <- t1
+     movzbl  -13(%ebp), %eax         #   6:     assign v2 <- t1
-     movl    $99, %eax               #   5:     assign v4 <- 99
+     movl    $99, %eax               #   7:     assign v4 <- 99
-     jmp     l_f1_8_while_body       #   7:     goto   8_while_body
-     jmp     l_f1_8_while_body       #   8:     goto   8_while_body
+     jmp     l_f1_8_while_body       #  11:     goto   8_while_body
+     jmp     l_f1_8_while_body       #  12:     goto   8_while_body
-     jmp     l_f1_7_while_cond       #  12:     goto   7_while_cond
+     jmp     l_f1_7_while_cond       #  14:     goto   7_while_cond
+     jmp     l_test_0                #   1:     goto   0
-     movl    $31301, %eax            #   1:     assign v0 <- 31301
+     movl    $31301, %eax            #   2:     assign v0 <- 31301
-     jmp     l_test_1_while_cond     #   2:     goto   1_while_cond
+     jmp     l_test_1_while_cond     #   3:     goto   1_while_cond
+ l_test_0:
-     call    dummyBOOLfunc           #   3:     call   t0 <- dummyBOOLfunc
+     call    dummyBOOLfunc           #   5:     call   t0 <- dummyBOOLfunc
-     movl    $97, %eax               #   4:     assign v1 <- 97
+     movl    $97, %eax               #   6:     assign v1 <- 97
