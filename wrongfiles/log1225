-     #    -88(%ebp)   4  [ $t29      <int> %ebp-88 ]
-     #    -89(%ebp)   1  [ $t30      <bool> %ebp-89 ]
+     #    -85(%ebp)   1  [ $t29      <bool> %ebp-85 ]
-     #    -96(%ebp)   4  [ $t31      <ptr(4) to <array 5 of <char>>> %ebp-96 ]
+     #    -92(%ebp)   4  [ $t30      <ptr(4) to <array 5 of <char>>> %ebp-92 ]
-     #    -97(%ebp)   1  [ $t32      <char> %ebp-97 ]
+     #    -93(%ebp)   1  [ $t31      <char> %ebp-93 ]
-     #    -98(%ebp)   1  [ $v3       <bool> %ebp-98 ]
+     #    -94(%ebp)   1  [ $v3       <bool> %ebp-94 ]
-     pushl   %ebp                   
-     movl    %esp, %ebp             
-     pushl   %ebx                    # save callee saved registers
-     pushl   %esi                   
+     pushl   %ebp                   
+     movl    %esp, %ebp             
+     pushl   %ebx                    # save callee saved registers
-     pushl   %edi                   
+     pushl   %esi                   
+     pushl   %edi                   
-     subl    $88, %esp               # make room for locals
+     subl    $84, %esp               # make room for locals
-     movl    $22, %ecx              
+     movl    $21, %ecx              
+     jmp     l_f0_2                  #   2:     goto   2
-     movl    $1, %eax                #   3:     assign t11 <- 1
+     movl    $1, %eax                #   4:     assign t11 <- 1
-     jmp     l_f0_3                  #   4:     goto   3
+     jmp     l_f0_3                  #   5:     goto   3
+ l_f0_2:
-     movl    $0, %eax                #   5:     assign t11 <- 0
+     movl    $0, %eax                #   7:     assign t11 <- 0
-     movl    $48787, %eax            #   7:     sub    t12 <- 48787, 2852
+     movl    $48787, %eax            #   9:     sub    t12 <- 48787, 2852
-     movl    $2, %eax                #   8:     param  1 <- 2
+     movl    $2, %eax                #  10:     param  1 <- 2
-     movl    12(%ebp), %eax          #   9:     param  0 <- v1
+     movl    12(%ebp), %eax          #  11:     param  0 <- v1
-     call    DIM                     #  10:     call   t13 <- DIM
+     call    DIM                     #  12:     call   t13 <- DIM
-     movl    $48787, %eax            #  11:     sub    t15 <- 48787, 2852
+     movl    -20(%ebp), %eax         #  13:     mul    t14 <- t12, t13
+     movl    -24(%ebp), %ebx        
+     imull   %ebx                   
+     movl    %eax, -28(%ebp)        
+     movl    -28(%ebp), %eax         #  14:     add    t15 <- t14, 14541
-     movl    $2852, %ebx            
+     movl    $14541, %ebx           
-     subl    %ebx, %eax             
+     addl    %ebx, %eax             
+     movl    $3, %eax                #  15:     param  1 <- 3
-     movl    -20(%ebp), %eax         #  12:     mul    t14 <- t12, t13
-     movl    -24(%ebp), %ebx        
-     imull   %ebx                   
+     pushl   %eax                   
-     movl    %eax, -28(%ebp)        
-     movl    -28(%ebp), %eax         #  13:     add    t16 <- t14, 14541
+     movl    12(%ebp), %eax          #  16:     param  0 <- v1
-     movl    $14541, %ebx           
+     pushl   %eax                   
+     call    DIM                     #  17:     call   t16 <- DIM
-     addl    %ebx, %eax             
+     addl    $8, %esp               
+     movl    -32(%ebp), %eax         #  18:     mul    t17 <- t15, t16
+     movl    -36(%ebp), %ebx        
+     imull   %ebx                   
+     movl    %eax, -40(%ebp)        
+     movl    -40(%ebp), %eax         #  19:     add    t18 <- t17, 99151
+     movl    $99151, %ebx           
+     addl    %ebx, %eax             
+     movl    %eax, -44(%ebp)        
-     movl    $3, %eax                #  14:     param  1 <- 3
+     movl    $4, %eax                #  20:     param  1 <- 4
-     movl    12(%ebp), %eax          #  15:     param  0 <- v1
+     movl    12(%ebp), %eax          #  21:     param  0 <- v1
-     call    DIM                     #  16:     call   t17 <- DIM
+     call    DIM                     #  22:     call   t19 <- DIM
-     movl    %eax, -40(%ebp)        
-     movl    -36(%ebp), %eax         #  17:     mul    t18 <- t16, t17
-     movl    -40(%ebp), %ebx        
-     imull   %ebx                   
-     movl    %eax, -44(%ebp)        
-     movl    -44(%ebp), %eax         #  18:     add    t19 <- t18, 99151
-     movl    $99151, %ebx           
-     addl    %ebx, %eax             
+     movl    -44(%ebp), %eax         #  23:     mul    t20 <- t18, t19
+     movl    -48(%ebp), %ebx        
+     imull   %ebx                   
+     movl    %eax, -52(%ebp)        
+     movl    -52(%ebp), %eax         #  24:     add    t21 <- t20, 39160
+     movl    $39160, %ebx           
+     addl    %ebx, %eax             
+     movl    %eax, -56(%ebp)        
-     movl    $4, %eax                #  19:     param  1 <- 4
+     movl    $5, %eax                #  25:     param  1 <- 5
-     movl    12(%ebp), %eax          #  20:     param  0 <- v1
+     movl    12(%ebp), %eax          #  26:     param  0 <- v1
-     call    DIM                     #  21:     call   t20 <- DIM
+     call    DIM                     #  27:     call   t22 <- DIM
-     movl    %eax, -52(%ebp)        
-     movl    -48(%ebp), %eax         #  22:     mul    t21 <- t19, t20
-     movl    -52(%ebp), %ebx        
-     imull   %ebx                   
-     movl    %eax, -56(%ebp)        
-     movl    -56(%ebp), %eax         #  23:     add    t22 <- t21, 39160
-     movl    $39160, %ebx           
-     addl    %ebx, %eax             
-     movl    $5, %eax                #  24:     param  1 <- 5
+     movl    -56(%ebp), %eax         #  28:     mul    t23 <- t21, t22
+     movl    -60(%ebp), %ebx        
-     pushl   %eax                   
+     imull   %ebx                   
-     movl    12(%ebp), %eax          #  25:     param  0 <- v1
-     pushl   %eax                   
-     call    DIM                     #  26:     call   t23 <- DIM
-     addl    $8, %esp               
-     movl    -60(%ebp), %eax         #  27:     mul    t24 <- t22, t23
+     movl    -64(%ebp), %eax         #  29:     add    t24 <- t23, 4484
-     movl    -64(%ebp), %ebx        
+     movl    $4484, %ebx            
-     imull   %ebx                   
+     addl    %ebx, %eax             
-     movl    -68(%ebp), %eax         #  28:     add    t25 <- t24, 4484
+     movl    -68(%ebp), %eax         #  30:     mul    t25 <- t24, 1
-     movl    $4484, %ebx            
+     movl    $1, %ebx               
-     addl    %ebx, %eax             
+     imull   %ebx                   
-     movl    -72(%ebp), %eax         #  29:     mul    t26 <- t25, 1
+     movl    12(%ebp), %eax          #  31:     param  0 <- v1
-     movl    $1, %ebx               
-     imull   %ebx                   
+     pushl   %eax                   
+     call    DOFS                    #  32:     call   t26 <- DOFS
+     addl    $4, %esp               
-     movl    12(%ebp), %eax          #  30:     param  0 <- v1
+     movl    -72(%ebp), %eax         #  33:     add    t27 <- t25, t26
+     movl    -76(%ebp), %ebx        
-     pushl   %eax                   
-     call    DOFS                    #  31:     call   t27 <- DOFS
-     addl    $4, %esp               
+     addl    %ebx, %eax             
-     movl    -76(%ebp), %eax         #  32:     add    t28 <- t26, t27
+     movl    12(%ebp), %eax          #  34:     add    t28 <- v1, t27
-     movl    12(%ebp), %eax          #  33:     add    t29 <- v1, t28
-     movl    -84(%ebp), %ebx        
-     addl    %ebx, %eax             
-     movl    %eax, -88(%ebp)        
-     movzbl  -13(%ebp), %eax         #  34:     assign @t29 <- t11
+     movzbl  -13(%ebp), %eax         #  35:     assign @t28 <- t11
-     movl    -88(%ebp), %edi        
+     movl    -84(%ebp), %edi        
-     movl    $4713, %eax             #  35:     if     4713 # 16224 goto 7_if_true
+     movl    $4713, %eax             #  36:     if     4713 # 16224 goto 7_if_true
-     jmp     l_f0_8_if_false         #  36:     goto   8_if_false
+     jmp     l_f0_8_if_false         #  37:     goto   8_if_false
-     call    dummyBOOLfunc           #  38:     call   t30 <- dummyBOOLfunc
+     call    dummyBOOLfunc           #  39:     call   t29 <- dummyBOOLfunc
-     movb    %al, -89(%ebp)         
+     movb    %al, -85(%ebp)         
-     call    dummyProcedure          #  39:     call   dummyProcedure
+     call    dummyProcedure          #  40:     call   dummyProcedure
-     leal    _str_1, %eax            #  40:     &()    t31 <- _str_1
+     leal    _str_1, %eax            #  41:     &()    t30 <- _str_1
-     movl    %eax, -96(%ebp)        
+     movl    %eax, -92(%ebp)        
-     movl    -96(%ebp), %eax         #  41:     param  0 <- t31
+     movl    -92(%ebp), %eax         #  42:     param  0 <- t30
-     call    WriteStr                #  42:     call   WriteStr
+     call    WriteStr                #  43:     call   WriteStr
-     movl    $69039, %eax            #  43:     assign v2 <- 69039
+     movl    $69039, %eax            #  44:     assign v2 <- 69039
-     jmp     l_f0_6                  #  44:     goto   6
+     jmp     l_f0_6                  #  45:     goto   6
-     call    dummyCHARfunc           #  47:     call   t32 <- dummyCHARfunc
+     call    dummyCHARfunc           #  48:     call   t31 <- dummyCHARfunc
-     movb    %al, -97(%ebp)         
+     movb    %al, -93(%ebp)         
-     addl    $88, %esp               # remove locals
+     addl    $84, %esp               # remove locals
-     jmp     l_test_4                #   0:     goto   4
+     jmp     l_test_5                #   0:     goto   5
-     jmp     l_test_4                #   1:     goto   4
+     jmp     l_test_5                #   1:     goto   5
-     jmp     l_test_4                #   2:     goto   4
+     jmp     l_test_5                #   2:     goto   5
-     jmp     l_test_4                #   3:     goto   4
+     jmp     l_test_5                #   3:     goto   5
- l_test_4:
+ l_test_5:
-     jmp     l_test_6                #   6:     goto   6
+     jmp     l_test_7                #   6:     goto   7
- l_test_6:
+ l_test_7:
-     jmp     l_test_16               #  10:     goto   16
+     jmp     l_test_17               #  10:     goto   17
- l_test_16:
+ l_test_17:
