-     #    -72(%ebp)   4  [ $t24      <int> %ebp-72 ]
-     #    -73(%ebp)   1  [ $t3       <bool> %ebp-73 ]
+     #    -69(%ebp)   1  [ $t3       <bool> %ebp-69 ]
-     #    -74(%ebp)   1  [ $t4       <bool> %ebp-74 ]
+     #    -70(%ebp)   1  [ $t4       <bool> %ebp-70 ]
+     #    -76(%ebp)   4  [ $t5       <int> %ebp-76 ]
-     #    -80(%ebp)   4  [ $t5       <int> %ebp-80 ]
+     #    -80(%ebp)   4  [ $t6       <int> %ebp-80 ]
-     #    -84(%ebp)   4  [ $t6       <int> %ebp-84 ]
+     #    -84(%ebp)   4  [ $t7       <int> %ebp-84 ]
-     #    -88(%ebp)   4  [ $t7       <int> %ebp-88 ]
+     #    -88(%ebp)   4  [ $t8       <int> %ebp-88 ]
-     #    -92(%ebp)   4  [ $t8       <int> %ebp-92 ]
+     #    -92(%ebp)   4  [ $t9       <int> %ebp-92 ]
-     #    -96(%ebp)   4  [ $t9       <int> %ebp-96 ]
-     #    -97(%ebp)   1  [ $v2       <bool> %ebp-97 ]
+     #    -93(%ebp)   1  [ $v2       <bool> %ebp-93 ]
-     #   -104(%ebp)   4  [ $v3       <int> %ebp-104 ]
+     #   -100(%ebp)   4  [ $v3       <int> %ebp-100 ]
-     pushl   %ebp                   
-     movl    %esp, %ebp             
-     pushl   %ebx                    # save callee saved registers
-     pushl   %esi                   
+     pushl   %ebp                   
+     movl    %esp, %ebp             
+     pushl   %ebx                    # save callee saved registers
-     pushl   %edi                   
+     pushl   %esi                   
+     pushl   %edi                   
-     subl    $92, %esp               # make room for locals
+     subl    $88, %esp               # make room for locals
-     movl    $23, %ecx              
+     movl    $22, %ecx              
-     movb    %al, -73(%ebp)         
+     movb    %al, -69(%ebp)         
-     movzbl  -73(%ebp), %ebx        
+     movzbl  -69(%ebp), %ebx        
-     movb    %al, -74(%ebp)         
+     movb    %al, -70(%ebp)         
-     movb    %al, -74(%ebp)         
+     movb    %al, -70(%ebp)         
-     movl    %eax, -80(%ebp)        
+     movl    %eax, -76(%ebp)        
+     movl    %eax, -80(%ebp)        
+     movl    -76(%ebp), %eax         #  13:     mul    t7 <- t5, t6
+     movl    -80(%ebp), %ebx        
+     imull   %ebx                   
-     movl    $18000, %eax            #  13:     add    t8 <- 18000, 16341
+     movl    -84(%ebp), %eax         #  14:     add    t8 <- t7, 1864
-     movl    $16341, %ebx           
+     movl    $1864, %ebx            
+     addl    %ebx, %eax             
+     movl    %eax, -88(%ebp)        
+     movl    $3, %eax                #  15:     param  1 <- 3
+     pushl   %eax                   
+     movl    8(%ebp), %eax           #  16:     param  0 <- v0
+     pushl   %eax                   
+     call    DIM                     #  17:     call   t9 <- DIM
-     addl    %ebx, %eax             
+     addl    $8, %esp               
-     movl    -80(%ebp), %eax         #  14:     mul    t7 <- t5, t6
+     movl    -88(%ebp), %eax         #  18:     mul    t10 <- t8, t9
-     movl    -84(%ebp), %ebx        
+     movl    -92(%ebp), %ebx        
-     movl    %eax, -88(%ebp)        
-     movl    -88(%ebp), %eax         #  15:     add    t9 <- t7, 1864
-     movl    $1864, %ebx            
-     addl    %ebx, %eax             
-     movl    %eax, -96(%ebp)        
+     movl    %eax, -16(%ebp)        
+     movl    -16(%ebp), %eax         #  19:     add    t11 <- t10, 54424
+     movl    $54424, %ebx           
+     addl    %ebx, %eax             
+     movl    %eax, -20(%ebp)        
-     movl    $3, %eax                #  16:     param  1 <- 3
+     movl    $4, %eax                #  20:     param  1 <- 4
-     movl    8(%ebp), %eax           #  17:     param  0 <- v0
+     movl    8(%ebp), %eax           #  21:     param  0 <- v0
-     call    DIM                     #  18:     call   t10 <- DIM
+     call    DIM                     #  22:     call   t12 <- DIM
-     movl    %eax, -16(%ebp)        
-     movl    -96(%ebp), %eax         #  19:     mul    t11 <- t9, t10
-     movl    -16(%ebp), %ebx        
-     imull   %ebx                   
-     movl    %eax, -20(%ebp)        
-     movl    -20(%ebp), %eax         #  20:     add    t12 <- t11, 54424
-     movl    $54424, %ebx           
-     addl    %ebx, %eax             
+     movl    -20(%ebp), %eax         #  23:     mul    t13 <- t11, t12
+     movl    -24(%ebp), %ebx        
+     imull   %ebx                   
+     movl    %eax, -28(%ebp)        
+     movl    -28(%ebp), %eax         #  24:     add    t14 <- t13, 26000
+     movl    $26000, %ebx           
+     addl    %ebx, %eax             
+     movl    %eax, -32(%ebp)        
-     movl    $4, %eax                #  21:     param  1 <- 4
+     movl    $5, %eax                #  25:     param  1 <- 5
-     movl    8(%ebp), %eax           #  22:     param  0 <- v0
+     movl    8(%ebp), %eax           #  26:     param  0 <- v0
-     call    DIM                     #  23:     call   t13 <- DIM
+     call    DIM                     #  27:     call   t15 <- DIM
-     movl    %eax, -28(%ebp)        
-     movl    -24(%ebp), %eax         #  24:     mul    t14 <- t12, t13
-     movl    -28(%ebp), %ebx        
-     imull   %ebx                   
-     movl    %eax, -32(%ebp)        
-     movl    -32(%ebp), %eax         #  25:     add    t15 <- t14, 26000
-     movl    $26000, %ebx           
-     addl    %ebx, %eax             
-     movl    $5, %eax                #  26:     param  1 <- 5
+     movl    -32(%ebp), %eax         #  28:     mul    t16 <- t14, t15
+     movl    -36(%ebp), %ebx        
-     pushl   %eax                   
+     imull   %ebx                   
-     movl    8(%ebp), %eax           #  27:     param  0 <- v0
-     pushl   %eax                   
-     call    DIM                     #  28:     call   t16 <- DIM
-     addl    $8, %esp               
-     movl    -36(%ebp), %eax         #  29:     mul    t17 <- t15, t16
+     movl    -40(%ebp), %eax         #  29:     add    t17 <- t16, 9600
-     movl    -40(%ebp), %ebx        
+     movl    $9600, %ebx            
-     imull   %ebx                   
+     addl    %ebx, %eax             
-     movl    -44(%ebp), %eax         #  30:     add    t18 <- t17, 9600
+     movl    -44(%ebp), %eax         #  30:     mul    t18 <- t17, 1
-     movl    $9600, %ebx            
+     movl    $1, %ebx               
-     addl    %ebx, %eax             
+     imull   %ebx                   
-     movl    -48(%ebp), %eax         #  31:     mul    t19 <- t18, 1
+     movl    8(%ebp), %eax           #  31:     param  0 <- v0
-     movl    $1, %ebx               
-     imull   %ebx                   
+     pushl   %eax                   
+     call    DOFS                    #  32:     call   t19 <- DOFS
+     addl    $4, %esp               
-     movl    8(%ebp), %eax           #  32:     param  0 <- v0
+     movl    -48(%ebp), %eax         #  33:     add    t20 <- t18, t19
+     movl    -52(%ebp), %ebx        
-     pushl   %eax                   
-     call    DOFS                    #  33:     call   t20 <- DOFS
-     addl    $4, %esp               
+     addl    %ebx, %eax             
-     movl    -52(%ebp), %eax         #  34:     add    t21 <- t19, t20
+     movl    8(%ebp), %eax           #  34:     add    t21 <- v0, t20
-     movl    8(%ebp), %eax           #  35:     add    t22 <- v0, t21
-     movl    -60(%ebp), %ebx        
-     addl    %ebx, %eax             
-     movl    %eax, -64(%ebp)        
-     movzbl  -74(%ebp), %eax         #  36:     assign @t22 <- t4
+     movzbl  -70(%ebp), %eax         #  35:     assign @t21 <- t4
-     movl    -64(%ebp), %edi        
+     movl    -60(%ebp), %edi        
+     jmp     l_f1_5                  #  37:     goto   5
-     call    dummyINTfunc            #  38:     call   t23 <- dummyINTfunc
+     call    dummyINTfunc            #  38:     call   t22 <- dummyINTfunc
-     movl    %eax, -68(%ebp)        
+     movl    %eax, -64(%ebp)        
+ l_f1_5:
-     movl    $100, %eax              #  42:     if     100 < 98 goto 15_if_true
+     movl    $100, %eax              #  43:     if     100 < 98 goto 15_if_true
-     jmp     l_f1_16_if_false        #  43:     goto   16_if_false
+     jmp     l_f1_16_if_false        #  44:     goto   16_if_false
-     movl    $60129, %eax            #  46:     if     60129 > 76920 goto 20_while_body
+     movl    $60129, %eax            #  47:     if     60129 > 76920 goto 20_while_body
-     jmp     l_f1_18                 #  47:     goto   18
+     jmp     l_f1_18                 #  48:     goto   18
-     call    ReadInt                 #  49:     call   t24 <- ReadInt
+     call    ReadInt                 #  50:     call   t23 <- ReadInt
-     movl    %eax, -72(%ebp)        
+     movl    %eax, -68(%ebp)        
-     movl    $54133, %eax            #  50:     assign v3 <- 54133
+     movl    $54133, %eax            #  51:     assign v3 <- 54133
-     movl    %eax, -104(%ebp)       
+     movl    %eax, -100(%ebp)       
-     jmp     l_f1_19_while_cond      #  51:     goto   19_while_cond
+     jmp     l_f1_19_while_cond      #  52:     goto   19_while_cond
-     jmp     l_f1_14                 #  53:     goto   14
+     jmp     l_f1_14                 #  54:     goto   14
-     addl    $92, %esp               # remove locals
+     addl    $88, %esp               # remove locals
+     jmp     l_test_8_if_false       #  10:     goto   8_if_false
+     jmp     l_test_8_if_false       #  11:     goto   8_if_false
+     jmp     l_test_8_if_false       #  12:     goto   8_if_false
-     jmp     l_test_6                #  10:     goto   6
+     jmp     l_test_6                #  13:     goto   6
+ l_test_8_if_false:
