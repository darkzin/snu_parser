+     jmp     l_f1_0                  #   3:     goto   0
-     jmp     l_f1_1_while_cond       #   4:     goto   1_while_cond
+     jmp     l_f1_1_while_cond       #   5:     goto   1_while_cond
+ l_f1_0:
-     movl    $100, %eax              #   6:     if     100 > 99 goto 8_while_body
+     movl    $100, %eax              #   8:     if     100 > 99 goto 8_while_body
-     jmp     l_f1_6                  #   7:     goto   6
+     jmp     l_f1_6                  #   9:     goto   6
-     jmp     l_f1_7_while_cond       #   9:     goto   7_while_cond
+     jmp     l_f1_7_while_cond       #  11:     goto   7_while_cond
-     call    dummyCHARfunc           #  11:     call   t6 <- dummyCHARfunc
+     call    dummyCHARfunc           #  13:     call   t6 <- dummyCHARfunc
-     movl    $98, %eax               #  12:     if     98 = t6 goto 11
+     movl    $98, %eax               #  14:     if     98 = t6 goto 11
-     jmp     l_f1_12                 #  13:     goto   12
+     jmp     l_f1_12                 #  15:     goto   12
-     movl    $1, %eax                #  15:     assign t7 <- 1
+     movl    $1, %eax                #  17:     assign t7 <- 1
-     jmp     l_f1_13                 #  16:     goto   13
+     jmp     l_f1_13                 #  18:     goto   13
-     movl    $0, %eax                #  18:     assign t7 <- 0
+     movl    $0, %eax                #  20:     assign t7 <- 0
-     movzbl  -14(%ebp), %eax         #  20:     return t7
+     movzbl  -14(%ebp), %eax         #  22:     return t7
+     jmp     l_f2_0                  #   3:     goto   0
-     jmp     l_f2_1_while_cond       #   4:     goto   1_while_cond
+     jmp     l_f2_1_while_cond       #   5:     goto   1_while_cond
+ l_f2_0:
-     call    dummyINTfunc            #   5:     call   t6 <- dummyINTfunc
+     call    dummyINTfunc            #   7:     call   t6 <- dummyINTfunc
-     movl    $2, %eax                #   6:     param  1 <- 2
+     movl    $2, %eax                #   8:     param  1 <- 2
-     movl    16(%ebp), %eax          #   7:     param  0 <- v3
+     movl    16(%ebp), %eax          #   9:     param  0 <- v3
-     call    DIM                     #   8:     call   t7 <- DIM
+     call    DIM                     #  10:     call   t7 <- DIM
-     movl    $15087, %eax            #   9:     mul    t8 <- 15087, t7
+     movl    $15087, %eax            #  11:     mul    t8 <- 15087, t7
-     movl    -80(%ebp), %eax         #  10:     add    t9 <- t8, 35693
+     movl    -80(%ebp), %eax         #  12:     add    t9 <- t8, 35693
-     movl    $3, %eax                #  11:     param  1 <- 3
+     movl    $3, %eax                #  13:     param  1 <- 3
-     movl    16(%ebp), %eax          #  12:     param  0 <- v3
+     movl    16(%ebp), %eax          #  14:     param  0 <- v3
-     call    DIM                     #  13:     call   t10 <- DIM
+     call    DIM                     #  15:     call   t10 <- DIM
-     movl    -84(%ebp), %eax         #  14:     mul    t11 <- t9, t10
+     movl    -84(%ebp), %eax         #  16:     mul    t11 <- t9, t10
-     movl    -20(%ebp), %eax         #  15:     add    t12 <- t11, 95099
+     movl    -20(%ebp), %eax         #  17:     add    t12 <- t11, 95099
-     movl    $4, %eax                #  16:     param  1 <- 4
+     movl    $4, %eax                #  18:     param  1 <- 4
-     movl    16(%ebp), %eax          #  17:     param  0 <- v3
+     movl    16(%ebp), %eax          #  19:     param  0 <- v3
-     call    DIM                     #  18:     call   t13 <- DIM
+     call    DIM                     #  20:     call   t13 <- DIM
-     movl    -24(%ebp), %eax         #  19:     mul    t14 <- t12, t13
+     movl    -24(%ebp), %eax         #  21:     mul    t14 <- t12, t13
-     movl    -32(%ebp), %eax         #  20:     add    t15 <- t14, 10706
+     movl    -32(%ebp), %eax         #  22:     add    t15 <- t14, 10706
-     movl    $5, %eax                #  21:     param  1 <- 5
+     movl    $5, %eax                #  23:     param  1 <- 5
-     movl    16(%ebp), %eax          #  22:     param  0 <- v3
+     movl    16(%ebp), %eax          #  24:     param  0 <- v3
-     call    DIM                     #  23:     call   t16 <- DIM
+     call    DIM                     #  25:     call   t16 <- DIM
-     movl    -36(%ebp), %eax         #  24:     mul    t17 <- t15, t16
+     movl    -36(%ebp), %eax         #  26:     mul    t17 <- t15, t16
-     movl    -44(%ebp), %eax         #  25:     add    t18 <- t17, 58782
+     movl    -44(%ebp), %eax         #  27:     add    t18 <- t17, 58782
-     movl    -48(%ebp), %eax         #  26:     mul    t19 <- t18, 4
+     movl    -48(%ebp), %eax         #  28:     mul    t19 <- t18, 4
-     movl    16(%ebp), %eax          #  27:     param  0 <- v3
+     movl    16(%ebp), %eax          #  29:     param  0 <- v3
-     call    DOFS                    #  28:     call   t20 <- DOFS
+     call    DOFS                    #  30:     call   t20 <- DOFS
-     movl    -52(%ebp), %eax         #  29:     add    t21 <- t19, t20
+     movl    -52(%ebp), %eax         #  31:     add    t21 <- t19, t20
-     movl    16(%ebp), %eax          #  30:     add    t22 <- v3, t21
+     movl    16(%ebp), %eax          #  32:     add    t22 <- v3, t21
-     movl    -72(%ebp), %eax         #  31:     assign @t22 <- t6
+     movl    -72(%ebp), %eax         #  33:     assign @t22 <- t6
-     jmp     l_f2_9                  #  32:     goto   9
+     jmp     l_f2_10                 #  34:     goto   10
+     jmp     l_f2_11                 #  35:     goto   11
- l_f2_9:
+ l_f2_10:
-     movl    $1, %eax                #  34:     assign t23 <- 1
+     movl    $1, %eax                #  37:     assign t23 <- 1
-     jmp     l_f2_11                 #  35:     goto   11
+     jmp     l_f2_12                 #  38:     goto   12
+ l_f2_11:
-     movl    $0, %eax                #  36:     assign t23 <- 0
+     movl    $0, %eax                #  40:     assign t23 <- 0
- l_f2_11:
+ l_f2_12:
-     movzbl  -65(%ebp), %eax         #  38:     if     t23 # 0 goto 7_if_true
+     movzbl  -65(%ebp), %eax         #  42:     if     t23 # 0 goto 7_if_true
-     jmp     l_f2_8_if_false         #  39:     goto   8_if_false
+     jmp     l_f2_8_if_false         #  43:     goto   8_if_false
-     movl    $1, %eax                #  41:     assign v4 <- 1
+     movl    $1, %eax                #  45:     assign v4 <- 1
-     movl    $100, %eax              #  42:     if     100 < 98 goto 16
+     movl    $100, %eax              #  46:     if     100 < 98 goto 16
-     jmp     l_f2_17                 #  43:     goto   17
+     jmp     l_f2_17                 #  47:     goto   17
-     movl    $1, %eax                #  45:     assign t24 <- 1
+     movl    $1, %eax                #  49:     assign t24 <- 1
-     jmp     l_f2_18                 #  46:     goto   18
+     jmp     l_f2_18                 #  50:     goto   18
-     movl    $0, %eax                #  48:     assign t24 <- 0
+     movl    $0, %eax                #  52:     assign t24 <- 0
-     movzbl  -66(%ebp), %eax         #  50:     assign v4 <- t24
+     movzbl  -66(%ebp), %eax         #  54:     assign v4 <- t24
-     jmp     l_f2_6                  #  51:     goto   6
+     jmp     l_f2_6                  #  55:     goto   6
+     jmp     l_test_6                #   8:     goto   6
+ l_test_6:
-     movl    $1, %eax                #   8:     assign t3 <- 1
+     movl    $1, %eax                #  10:     assign t3 <- 1
-     jmp     l_test_5                #   9:     goto   5
+     jmp     l_test_5                #  11:     goto   5
-     movl    $0, %eax                #  10:     assign t3 <- 0
+     movl    $0, %eax                #  12:     assign t3 <- 0
-     movzbl  -25(%ebp), %eax         #  12:     param  0 <- t3
+     movzbl  -25(%ebp), %eax         #  14:     param  0 <- t3
-     call    f1                      #  13:     call   t4 <- f1
+     call    f1                      #  15:     call   t4 <- f1
-     addl    $13, %esp              
+     addl    $16, %esp              
-     call    dummyINTfunc            #  15:     call   t5 <- dummyINTfunc
+     call    dummyINTfunc            #  17:     call   t5 <- dummyINTfunc
-     jmp     l_test_9                #  16:     goto   9
+     jmp     l_test_9                #  18:     goto   9
