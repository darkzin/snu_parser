+     jmp     l_f2_2_if_false         #   0:     goto   2_if_false
+     jmp     l_f2_2_if_false         #   1:     goto   2_if_false
-     movl    $2, %eax                #   0:     param  1 <- 2
+     movl    $2, %eax                #   2:     param  1 <- 2
-     movl    8(%ebp), %eax           #   1:     param  0 <- v0
+     movl    8(%ebp), %eax           #   3:     param  0 <- v0
-     call    DIM                     #   2:     call   t1 <- DIM
+     call    DIM                     #   4:     call   t1 <- DIM
-     movl    $37128, %eax            #   3:     mul    t2 <- 37128, t1
+     movl    $37128, %eax            #   5:     mul    t2 <- 37128, t1
-     movl    -48(%ebp), %eax         #   4:     add    t3 <- t2, 44932
+     movl    -48(%ebp), %eax         #   6:     add    t3 <- t2, 44932
-     movl    $3, %eax                #   5:     param  1 <- 3
+     movl    $3, %eax                #   7:     param  1 <- 3
-     movl    8(%ebp), %eax           #   6:     param  0 <- v0
+     movl    8(%ebp), %eax           #   8:     param  0 <- v0
-     call    DIM                     #   7:     call   t4 <- DIM
+     call    DIM                     #   9:     call   t4 <- DIM
-     movl    -52(%ebp), %eax         #   8:     mul    t5 <- t3, t4
+     movl    -52(%ebp), %eax         #  10:     mul    t5 <- t3, t4
-     movl    -60(%ebp), %eax         #   9:     add    t6 <- t5, 43593
+     movl    -60(%ebp), %eax         #  11:     add    t6 <- t5, 43593
-     movl    $4, %eax                #  10:     param  1 <- 4
+     movl    $4, %eax                #  12:     param  1 <- 4
-     movl    8(%ebp), %eax           #  11:     param  0 <- v0
+     movl    8(%ebp), %eax           #  13:     param  0 <- v0
-     call    DIM                     #  12:     call   t7 <- DIM
+     call    DIM                     #  14:     call   t7 <- DIM
-     movl    -64(%ebp), %eax         #  13:     mul    t8 <- t6, t7
+     movl    -64(%ebp), %eax         #  15:     mul    t8 <- t6, t7
-     movl    -72(%ebp), %eax         #  14:     add    t9 <- t8, 9834
+     movl    -72(%ebp), %eax         #  16:     add    t9 <- t8, 9834
-     movl    $5, %eax                #  15:     param  1 <- 5
+     movl    $5, %eax                #  17:     param  1 <- 5
-     movl    8(%ebp), %eax           #  16:     param  0 <- v0
+     movl    8(%ebp), %eax           #  18:     param  0 <- v0
-     call    DIM                     #  17:     call   t10 <- DIM
+     call    DIM                     #  19:     call   t10 <- DIM
-     movl    -76(%ebp), %eax         #  18:     mul    t11 <- t9, t10
+     movl    -76(%ebp), %eax         #  20:     mul    t11 <- t9, t10
-     movl    -24(%ebp), %eax         #  19:     add    t12 <- t11, 13018
+     movl    -24(%ebp), %eax         #  21:     add    t12 <- t11, 13018
-     movl    -28(%ebp), %eax         #  20:     mul    t13 <- t12, 1
+     movl    -28(%ebp), %eax         #  22:     mul    t13 <- t12, 1
-     movl    8(%ebp), %eax           #  21:     param  0 <- v0
+     movl    8(%ebp), %eax           #  23:     param  0 <- v0
-     call    DOFS                    #  22:     call   t14 <- DOFS
+     call    DOFS                    #  24:     call   t14 <- DOFS
-     movl    -32(%ebp), %eax         #  23:     add    t15 <- t13, t14
+     movl    -32(%ebp), %eax         #  25:     add    t15 <- t13, t14
-     movl    8(%ebp), %eax           #  24:     add    t16 <- v0, t15
+     movl    8(%ebp), %eax           #  26:     add    t16 <- v0, t15
-     movl    $100, %eax              #  25:     assign @t16 <- 100
+     movl    $100, %eax              #  27:     assign @t16 <- 100
-     jmp     l_f2_0                  #  26:     goto   0
+     jmp     l_f2_0                  #  28:     goto   0
+ l_f2_2_if_false:
-     jmp     l_f2_7                  #  29:     goto   7
+     jmp     l_f2_7                  #  32:     goto   7
-     jmp     l_f2_12_if_false        #  30:     goto   12_if_false
+     jmp     l_f2_12_if_false        #  33:     goto   12_if_false
-     jmp     l_f2_10                 #  31:     goto   10
+     jmp     l_f2_10                 #  34:     goto   10
-     movl    $1, %eax                #  34:     return 1
+     movl    $1, %eax                #  37:     return 1
-     jmp     l_f2_8_while_cond       #  35:     goto   8_while_cond
+     jmp     l_f2_8_while_cond       #  38:     goto   8_while_cond
-     movl    $100, %eax              #  38:     if     100 <= 99 goto 16_while_body
+     movl    $100, %eax              #  41:     if     100 <= 99 goto 16_while_body
-     jmp     l_f2_14                 #  39:     goto   14
+     jmp     l_f2_14                 #  42:     goto   14
-     jmp     l_f2_15_while_cond      #  41:     goto   15_while_cond
+     jmp     l_f2_15_while_cond      #  44:     goto   15_while_cond
