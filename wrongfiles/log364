+     jmp     l_f0_2_if_false         #   0:     goto   2_if_false
-     movl    $100, %eax              #   0:     assign v0 <- 100
+     movl    $100, %eax              #   1:     assign v0 <- 100
-     jmp     l_f0_0                  #   1:     goto   0
+     jmp     l_f0_0                  #   2:     goto   0
+ l_f0_2_if_false:
-     call    dummyProcedure          #   3:     call   dummyProcedure
+     call    dummyProcedure          #   5:     call   dummyProcedure
-     jmp     l_f0_8_if_false         #   4:     goto   8_if_false
+     jmp     l_f0_8_if_false         #   6:     goto   8_if_false
-     movl    $100, %eax              #   5:     assign v0 <- 100
+     movl    $100, %eax              #   7:     assign v0 <- 100
-     call    dummyCHARfunc           #   6:     call   t4 <- dummyCHARfunc
+     call    dummyCHARfunc           #   8:     call   t4 <- dummyCHARfunc
-     jmp     l_f0_13_if_false        #   7:     goto   13_if_false
+     jmp     l_f0_13_if_false        #   9:     goto   13_if_false
-     jmp     l_f0_11                 #   8:     goto   11
+     jmp     l_f0_11                 #  10:     goto   11
-     jmp     l_f0_6                  #  11:     goto   6
+     jmp     l_f0_6                  #  13:     goto   6
-     #    -76(%ebp)   4  [ $t25      <int> %ebp-76 ]
+     #    -76(%ebp)   4  [ $t4       <int> %ebp-76 ]
-     #    -80(%ebp)   4  [ $t26      <int> %ebp-80 ]
+     #    -80(%ebp)   4  [ $t5       <int> %ebp-80 ]
-     #    -84(%ebp)   4  [ $t27      <int> %ebp-84 ]
+     #    -84(%ebp)   4  [ $t6       <int> %ebp-84 ]
-     #    -88(%ebp)   4  [ $t28      <int> %ebp-88 ]
+     #    -88(%ebp)   4  [ $t7       <int> %ebp-88 ]
-     #    -92(%ebp)   4  [ $t4       <int> %ebp-92 ]
+     #    -92(%ebp)   4  [ $t8       <int> %ebp-92 ]
-     #    -96(%ebp)   4  [ $t5       <int> %ebp-96 ]
+     #    -96(%ebp)   4  [ $t9       <int> %ebp-96 ]
-     #   -100(%ebp)   4  [ $t6       <int> %ebp-100 ]
-     #   -104(%ebp)   4  [ $t7       <int> %ebp-104 ]
-     #   -108(%ebp)   4  [ $t8       <int> %ebp-108 ]
-     #   -112(%ebp)   4  [ $t9       <int> %ebp-112 ]
-     #   -113(%ebp)   1  [ $v1       <char> %ebp-113 ]
+     #    -97(%ebp)   1  [ $v1       <char> %ebp-97 ]
-     pushl   %ebp                   
-     movl    %esp, %ebp             
-     pushl   %ebx                    # save callee saved registers
-     pushl   %esi                   
+     pushl   %ebp                   
+     movl    %esp, %ebp             
+     pushl   %ebx                    # save callee saved registers
-     pushl   %edi                   
+     pushl   %esi                   
+     pushl   %edi                   
-     subl    $104, %esp              # make room for locals
+     subl    $88, %esp               # make room for locals
-     movl    $26, %ecx              
+     movl    $22, %ecx              
-     movl    %eax, -92(%ebp)        
+     movl    %eax, -76(%ebp)        
-     movl    -92(%ebp), %eax         #   1:     return t4
+     movl    -76(%ebp), %eax         #   1:     return t4
-     movl    %eax, -96(%ebp)        
+     movl    %eax, -80(%ebp)        
-     movl    -96(%ebp), %eax         #   5:     div    t6 <- t5, 53010
+     movl    -80(%ebp), %eax         #   5:     div    t6 <- t5, 53010
-     movl    %eax, -100(%ebp)       
+     movl    %eax, -84(%ebp)        
-     movl    -100(%ebp), %eax        #   6:     mul    t7 <- t6, 59091
+     movl    -84(%ebp), %eax         #   6:     mul    t7 <- t6, 59091
-     movl    %eax, -104(%ebp)       
+     movl    %eax, -88(%ebp)        
-     movl    -104(%ebp), %eax        #   7:     div    t8 <- t7, 91851
+     movl    -88(%ebp), %eax         #   7:     div    t8 <- t7, 91851
-     movl    %eax, -108(%ebp)       
+     movl    %eax, -92(%ebp)        
-     movl    %eax, -112(%ebp)       
-     movl    $4894, %eax             #  11:     div    t11 <- 4894, 6852
-     movl    $6852, %ebx            
-     cdq                            
-     idivl   %ebx                   
-     movl    %eax, -20(%ebp)        
+     movl    %eax, -96(%ebp)        
-     movl    -20(%ebp), %eax         #  12:     div    t12 <- t11, 53010
-     movl    $53010, %ebx           
-     cdq                            
-     idivl   %ebx                   
-     movl    %eax, -24(%ebp)        
-     movl    -24(%ebp), %eax         #  13:     mul    t13 <- t12, 59091
-     movl    $59091, %ebx           
-     imull   %ebx                   
-     movl    %eax, -28(%ebp)        
-     movl    -28(%ebp), %eax         #  14:     div    t14 <- t13, 91851
-     movl    $91851, %ebx           
-     cdq                            
-     idivl   %ebx                   
-     movl    %eax, -32(%ebp)        
-     movl    -108(%ebp), %eax        #  15:     mul    t10 <- t8, t9
+     movl    -92(%ebp), %eax         #  11:     mul    t10 <- t8, t9
-     movl    -112(%ebp), %ebx       
+     movl    -96(%ebp), %ebx        
-     movl    -16(%ebp), %eax         #  16:     add    t15 <- t10, 41234
+     movl    -16(%ebp), %eax         #  12:     add    t11 <- t10, 41234
-     movl    %eax, -36(%ebp)        
+     movl    %eax, -20(%ebp)        
-     movl    $3, %eax                #  17:     param  1 <- 3
+     movl    $3, %eax                #  13:     param  1 <- 3
-     movl    8(%ebp), %eax           #  18:     param  0 <- v0
+     movl    8(%ebp), %eax           #  14:     param  0 <- v0
-     call    DIM                     #  19:     call   t16 <- DIM
+     call    DIM                     #  15:     call   t12 <- DIM
-     movl    %eax, -40(%ebp)        
+     movl    %eax, -24(%ebp)        
-     movl    -36(%ebp), %eax         #  20:     mul    t17 <- t15, t16
+     movl    -20(%ebp), %eax         #  16:     mul    t13 <- t11, t12
-     movl    -40(%ebp), %ebx        
+     movl    -24(%ebp), %ebx        
-     movl    %eax, -44(%ebp)        
+     movl    %eax, -28(%ebp)        
-     movl    -44(%ebp), %eax         #  21:     add    t18 <- t17, 26672
+     movl    -28(%ebp), %eax         #  17:     add    t14 <- t13, 26672
-     movl    %eax, -48(%ebp)        
+     movl    %eax, -32(%ebp)        
-     movl    $4, %eax                #  22:     param  1 <- 4
+     movl    $4, %eax                #  18:     param  1 <- 4
-     movl    8(%ebp), %eax           #  23:     param  0 <- v0
+     movl    8(%ebp), %eax           #  19:     param  0 <- v0
-     call    DIM                     #  24:     call   t19 <- DIM
+     call    DIM                     #  20:     call   t15 <- DIM
-     movl    %eax, -52(%ebp)        
-     movl    -48(%ebp), %eax         #  25:     mul    t20 <- t18, t19
-     movl    -52(%ebp), %ebx        
-     imull   %ebx                   
-     movl    %eax, -56(%ebp)        
+     movl    %eax, -36(%ebp)        
+     movl    -32(%ebp), %eax         #  21:     mul    t16 <- t14, t15
+     movl    -36(%ebp), %ebx        
+     imull   %ebx                   
+     movl    %eax, -40(%ebp)        
-     movl    -56(%ebp), %eax         #  26:     add    t21 <- t20, 29639
+     movl    -40(%ebp), %eax         #  22:     add    t17 <- t16, 29639
-     movl    %eax, -60(%ebp)        
+     movl    %eax, -44(%ebp)        
-     movl    $5, %eax                #  27:     param  1 <- 5
+     movl    $5, %eax                #  23:     param  1 <- 5
-     movl    8(%ebp), %eax           #  28:     param  0 <- v0
+     movl    8(%ebp), %eax           #  24:     param  0 <- v0
-     call    DIM                     #  29:     call   t22 <- DIM
+     call    DIM                     #  25:     call   t18 <- DIM
-     movl    %eax, -64(%ebp)        
+     movl    %eax, -48(%ebp)        
-     movl    -60(%ebp), %eax         #  30:     mul    t23 <- t21, t22
+     movl    -44(%ebp), %eax         #  26:     mul    t19 <- t17, t18
-     movl    -64(%ebp), %ebx        
+     movl    -48(%ebp), %ebx        
-     movl    %eax, -68(%ebp)        
+     movl    %eax, -52(%ebp)        
-     movl    -68(%ebp), %eax         #  31:     add    t24 <- t23, 65214
+     movl    -52(%ebp), %eax         #  27:     add    t20 <- t19, 65214
+     movl    %eax, -56(%ebp)        
+     movl    -56(%ebp), %eax         #  28:     mul    t21 <- t20, 1
+     movl    $1, %ebx               
+     imull   %ebx                   
+     movl    %eax, -60(%ebp)        
+     movl    8(%ebp), %eax           #  29:     param  0 <- v0
+     pushl   %eax                   
+     call    DOFS                    #  30:     call   t22 <- DOFS
+     addl    $4, %esp               
+     movl    %eax, -64(%ebp)        
+     movl    -60(%ebp), %eax         #  31:     add    t23 <- t21, t22
+     movl    -64(%ebp), %ebx        
+     addl    %ebx, %eax             
+     movl    %eax, -68(%ebp)        
+     movl    8(%ebp), %eax           #  32:     add    t24 <- v0, t23
+     movl    -68(%ebp), %ebx        
+     addl    %ebx, %eax             
-     movl    -72(%ebp), %eax         #  32:     mul    t25 <- t24, 1
-     movl    $1, %ebx               
-     imull   %ebx                   
-     movl    %eax, -76(%ebp)        
-     movl    8(%ebp), %eax           #  33:     param  0 <- v0
-     pushl   %eax                   
-     call    DOFS                    #  34:     call   t26 <- DOFS
-     addl    $4, %esp               
-     movl    %eax, -80(%ebp)        
-     movl    -76(%ebp), %eax         #  35:     add    t27 <- t25, t26
-     movl    -80(%ebp), %ebx        
-     addl    %ebx, %eax             
-     movl    %eax, -84(%ebp)        
-     movl    8(%ebp), %eax           #  36:     add    t28 <- v0, t27
-     movl    -84(%ebp), %ebx        
-     addl    %ebx, %eax             
-     movl    %eax, -88(%ebp)        
-     movl    $100, %eax              #  37:     assign @t28 <- 100
+     movl    $100, %eax              #  33:     assign @t24 <- 100
-     movl    -88(%ebp), %edi        
+     movl    -72(%ebp), %edi        
-     jmp     l_f1_7_if_false         #  38:     goto   7_if_false
+     jmp     l_f1_7_if_false         #  34:     goto   7_if_false
-     jmp     l_f1_10_if_false        #  39:     goto   10_if_false
+     jmp     l_f1_10_if_false        #  35:     goto   10_if_false
-     jmp     l_f1_8                  #  40:     goto   8
+     jmp     l_f1_8                  #  36:     goto   8
-     movl    $39412, %eax            #  43:     return 39412
+     movl    $39412, %eax            #  39:     return 39412
-     jmp     l_f1_5                  #  44:     goto   5
+     jmp     l_f1_5                  #  40:     goto   5
-     addl    $104, %esp              # remove locals
+     addl    $88, %esp               # remove locals
-     #   -792(%ebp) 744  [ $v3       <array 4 of <array 5 of <array 2 of <array 6 of <array 3 of <char>>>>>> %ebp-792 ]
+     #   -792(%ebp)  744  [ $v3       <array 4 of <array 5 of <array 2 of <array 6 of <array 3 of <char>>>>>> %ebp-792 ]
