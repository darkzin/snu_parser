+     jmp     l_f0_8_if_false         #  16:     goto   8_if_false
-     movl    $100, %eax              #  17:     assign v0 <- 100
+     movl    $100, %eax              #  18:     assign v0 <- 100
-     movl    $97, %eax               #  18:     assign v0 <- 97
+     movl    $97, %eax               #  19:     assign v0 <- 97
-     call    dummyProcedure          #  19:     call   dummyProcedure
+     call    dummyProcedure          #  20:     call   dummyProcedure
-     movl    $99, %eax               #  20:     if     99 = 97 goto 16
+     movl    $99, %eax               #  21:     if     99 = 97 goto 16
-     jmp     l_f0_17                 #  21:     goto   17
+     jmp     l_f0_17                 #  22:     goto   17
-     movl    $1, %eax                #  23:     assign t12 <- 1
+     movl    $1, %eax                #  24:     assign t12 <- 1
-     jmp     l_f0_18                 #  24:     goto   18
+     jmp     l_f0_18                 #  25:     goto   18
-     movl    $0, %eax                #  26:     assign t12 <- 0
+     movl    $0, %eax                #  27:     assign t12 <- 0
-     movzbl  -18(%ebp), %eax         #  28:     assign v1 <- t12
+     movzbl  -18(%ebp), %eax         #  29:     assign v1 <- t12
-     jmp     l_f0_6                  #  29:     goto   6
+     jmp     l_f0_6                  #  30:     goto   6
+ l_f0_8_if_false:
+     jmp     l_f2_5                  #  16:     goto   5
+     jmp     l_f2_5                  #  17:     goto   5
-     jmp     l_f2_6_while_cond       #  16:     goto   6_while_cond
+     jmp     l_f2_6_while_cond       #  18:     goto   6_while_cond
-     jmp     l_f2_13_if_false        #  18:     goto   13_if_false
+     jmp     l_f2_13_if_false        #  20:     goto   13_if_false
-     jmp     l_f2_15_while_cond      #  20:     goto   15_while_cond
+     jmp     l_f2_15_while_cond      #  22:     goto   15_while_cond
-     movl    $0, %eax                #  21:     return 0
+     movl    $0, %eax                #  23:     return 0
-     call    dummyBOOLfunc           #  22:     call   t10 <- dummyBOOLfunc
+     call    dummyBOOLfunc           #  24:     call   t10 <- dummyBOOLfunc
-     movl    $2, %eax                #  23:     param  1 <- 2
+     movl    $2, %eax                #  25:     param  1 <- 2
-     movl    8(%ebp), %eax           #  24:     param  0 <- v0
+     movl    8(%ebp), %eax           #  26:     param  0 <- v0
-     call    DIM                     #  25:     call   t11 <- DIM
+     call    DIM                     #  27:     call   t11 <- DIM
-     movl    $20539, %eax            #  26:     mul    t12 <- 20539, t11
+     movl    $20539, %eax            #  28:     mul    t12 <- 20539, t11
-     movl    -24(%ebp), %eax         #  27:     add    t13 <- t12, 93995
+     movl    -24(%ebp), %eax         #  29:     add    t13 <- t12, 93995
-     movl    $3, %eax                #  28:     param  1 <- 3
+     movl    $3, %eax                #  30:     param  1 <- 3
-     movl    8(%ebp), %eax           #  29:     param  0 <- v0
+     movl    8(%ebp), %eax           #  31:     param  0 <- v0
-     call    DIM                     #  30:     call   t14 <- DIM
+     call    DIM                     #  32:     call   t14 <- DIM
-     movl    -28(%ebp), %eax         #  31:     mul    t15 <- t13, t14
+     movl    -28(%ebp), %eax         #  33:     mul    t15 <- t13, t14
-     movl    -36(%ebp), %eax         #  32:     add    t16 <- t15, 9458
+     movl    -36(%ebp), %eax         #  34:     add    t16 <- t15, 9458
-     movl    $4, %eax                #  33:     param  1 <- 4
+     movl    $4, %eax                #  35:     param  1 <- 4
-     movl    8(%ebp), %eax           #  34:     param  0 <- v0
+     movl    8(%ebp), %eax           #  36:     param  0 <- v0
-     call    DIM                     #  35:     call   t17 <- DIM
+     call    DIM                     #  37:     call   t17 <- DIM
-     movl    -40(%ebp), %eax         #  36:     mul    t18 <- t16, t17
+     movl    -40(%ebp), %eax         #  38:     mul    t18 <- t16, t17
-     movl    -48(%ebp), %eax         #  37:     add    t19 <- t18, 51391
+     movl    -48(%ebp), %eax         #  39:     add    t19 <- t18, 51391
-     movl    $5, %eax                #  38:     param  1 <- 5
+     movl    $5, %eax                #  40:     param  1 <- 5
-     movl    8(%ebp), %eax           #  39:     param  0 <- v0
+     movl    8(%ebp), %eax           #  41:     param  0 <- v0
-     call    DIM                     #  40:     call   t20 <- DIM
+     call    DIM                     #  42:     call   t20 <- DIM
-     movl    -52(%ebp), %eax         #  41:     mul    t21 <- t19, t20
+     movl    -52(%ebp), %eax         #  43:     mul    t21 <- t19, t20
-     movl    -60(%ebp), %eax         #  42:     add    t22 <- t21, 23388
+     movl    -60(%ebp), %eax         #  44:     add    t22 <- t21, 23388
-     movl    -64(%ebp), %eax         #  43:     mul    t23 <- t22, 4
+     movl    -64(%ebp), %eax         #  45:     mul    t23 <- t22, 4
-     movl    8(%ebp), %eax           #  44:     param  0 <- v0
+     movl    8(%ebp), %eax           #  46:     param  0 <- v0
-     call    DOFS                    #  45:     call   t24 <- DOFS
+     call    DOFS                    #  47:     call   t24 <- DOFS
-     movl    -68(%ebp), %eax         #  46:     add    t25 <- t23, t24
+     movl    -68(%ebp), %eax         #  48:     add    t25 <- t23, t24
-     movl    8(%ebp), %eax           #  47:     add    t26 <- v0, t25
+     movl    8(%ebp), %eax           #  49:     add    t26 <- v0, t25
-     movl    $46460, %eax            #  48:     assign @t26 <- 46460
+     movl    $46460, %eax            #  50:     assign @t26 <- 46460
-     jmp     l_f2_11                 #  49:     goto   11
+     jmp     l_f2_11                 #  51:     goto   11
-     movl    $20727, %eax            #  22:     if     20727 >= 28816 goto 17
+     movl    $20727, %eax            #  22:     if     20727 >= 28816 goto 18
-     jge     l_test_17              
+     jge     l_test_18              
- l_test_17:
+ l_test_18:
-     jmp     l_test_19               #  25:     goto   19
+     jmp     l_test_20               #  25:     goto   20
- l_test_19:
+ l_test_20:
