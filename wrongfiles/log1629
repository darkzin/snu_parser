-     #    -72(%ebp)   4  [ $t30      <int> %ebp-72 ]
-     #    -76(%ebp)   4  [ $t31      <ptr(4) to <array 15 of <array 13 of <array 36 of <array 56 of <array 33 of <bool>>>>>>> %ebp-76 ]
+     #    -72(%ebp)   4  [ $t30      <ptr(4) to <array 15 of <array 13 of <array 36 of <array 56 of <array 33 of <bool>>>>>>> %ebp-72 ]
+     #    -76(%ebp)   4  [ $t31      <int> %ebp-76 ]
-     #    -88(%ebp)   4  [ $t34      <int> %ebp-88 ]
-     #    -92(%ebp)   4  [ $t35      <ptr(4) to <array 15 of <array 13 of <array 36 of <array 56 of <array 33 of <bool>>>>>>> %ebp-92 ]
+     #    -88(%ebp)   4  [ $t34      <ptr(4) to <array 15 of <array 13 of <array 36 of <array 56 of <array 33 of <bool>>>>>>> %ebp-88 ]
+     #    -92(%ebp)   4  [ $t35      <int> %ebp-92 ]
-     #   -108(%ebp)   4  [ $t39      <int> %ebp-108 ]
-     #   -112(%ebp)   4  [ $t40      <ptr(4) to <array 15 of <array 13 of <array 36 of <array 56 of <array 33 of <bool>>>>>>> %ebp-112 ]
+     #   -108(%ebp)   4  [ $t39      <ptr(4) to <array 15 of <array 13 of <array 36 of <array 56 of <array 33 of <bool>>>>>>> %ebp-108 ]
+     #   -112(%ebp)   4  [ $t40      <int> %ebp-112 ]
-     #   -124(%ebp)   4  [ $t43      <int> %ebp-124 ]
-     #   -128(%ebp)   4  [ $t6       <ptr(4) to <array 77 of <array 63 of <array 50 of <array 62 of <array 76 of <bool>>>>>>> %ebp-128 ]
+     #   -124(%ebp)   4  [ $t6       <ptr(4) to <array 77 of <array 63 of <array 50 of <array 62 of <array 76 of <bool>>>>>>> %ebp-124 ]
-     #   -132(%ebp)   4  [ $t7       <ptr(4) to <array 15 of <array 13 of <array 36 of <array 56 of <array 33 of <bool>>>>>>> %ebp-132 ]
+     #   -128(%ebp)   4  [ $t7       <ptr(4) to <array 15 of <array 13 of <array 36 of <array 56 of <array 33 of <bool>>>>>>> %ebp-128 ]
-     #   -136(%ebp)   4  [ $t8       <ptr(4) to <array 77 of <array 63 of <array 50 of <array 62 of <array 76 of <bool>>>>>>> %ebp-136 ]
+     #   -132(%ebp)   4  [ $t8       <ptr(4) to <array 77 of <array 63 of <array 50 of <array 62 of <array 76 of <bool>>>>>>> %ebp-132 ]
-     #   -140(%ebp)   4  [ $t9       <ptr(4) to <array 15 of <array 13 of <array 36 of <array 56 of <array 33 of <bool>>>>>>> %ebp-140 ]
+     #   -136(%ebp)   4  [ $t9       <ptr(4) to <array 15 of <array 13 of <array 36 of <array 56 of <array 33 of <bool>>>>>>> %ebp-136 ]
-     #-12973124(%ebp)12972984  [ $v3       <array 15 of <array 13 of <array 36 of <array 56 of <array 33 of <bool>>>>>> %ebp-12973124 ]
+     #   -12973120(%ebp)  12972984  [ $v3       <array 15 of <array 13 of <array 36 of <array 56 of <array 33 of <bool>>>>>> %ebp-12973120 ]
-     #-1155868748(%ebp)1142895624  [ $v4       <array 77 of <array 63 of <array 50 of <array 62 of <array 76 of <bool>>>>>> %ebp-1155868748 ]
+     #   -1155868744(%ebp)  1142895624  [ $v4       <array 77 of <array 63 of <array 50 of <array 62 of <array 76 of <bool>>>>>> %ebp-1155868744 ]
-     pushl   %ebp                   
-     movl    %esp, %ebp             
-     pushl   %ebx                    # save callee saved registers
-     pushl   %esi                   
+     pushl   %ebp                   
+     movl    %esp, %ebp             
+     pushl   %ebx                    # save callee saved registers
-     pushl   %edi                   
+     pushl   %esi                   
+     pushl   %edi                   
-     subl    $1155868736, %esp       # make room for locals
+     subl    $1155868732, %esp       # make room for locals
-     movl    $288967184, %ecx       
+     movl    $288967183, %ecx       
-     movl    $5,-12973124(%ebp)      # local array 'v3': 5 dimensions
+     movl    $5,-12973120(%ebp)      # local array 'v3': 5 dimensions
-     movl    $15,-12973120(%ebp)     #   dimension 1: 15 elements
+     movl    $15,-12973116(%ebp)     #   dimension 1: 15 elements
-     movl    $13,-12973116(%ebp)     #   dimension 2: 13 elements
+     movl    $13,-12973112(%ebp)     #   dimension 2: 13 elements
-     movl    $36,-12973112(%ebp)     #   dimension 3: 36 elements
+     movl    $36,-12973108(%ebp)     #   dimension 3: 36 elements
-     movl    $56,-12973108(%ebp)     #   dimension 4: 56 elements
+     movl    $56,-12973104(%ebp)     #   dimension 4: 56 elements
-     movl    $33,-12973104(%ebp)     #   dimension 5: 33 elements
+     movl    $33,-12973100(%ebp)     #   dimension 5: 33 elements
-     movl    $5,-1155868748(%ebp)    # local array 'v4': 5 dimensions
+     movl    $5,-1155868744(%ebp)    # local array 'v4': 5 dimensions
-     movl    $77,-1155868744(%ebp)   #   dimension 1: 77 elements
+     movl    $77,-1155868740(%ebp)   #   dimension 1: 77 elements
-     movl    $63,-1155868740(%ebp)   #   dimension 2: 63 elements
+     movl    $63,-1155868736(%ebp)   #   dimension 2: 63 elements
-     movl    $50,-1155868736(%ebp)   #   dimension 3: 50 elements
+     movl    $50,-1155868732(%ebp)   #   dimension 3: 50 elements
-     movl    $62,-1155868732(%ebp)   #   dimension 4: 62 elements
+     movl    $62,-1155868728(%ebp)   #   dimension 4: 62 elements
-     movl    $76,-1155868728(%ebp)   #   dimension 5: 76 elements
+     movl    $76,-1155868724(%ebp)   #   dimension 5: 76 elements
-     leal    -1155868748(%ebp), %eax #   1:     &()    t6 <- v4
+     leal    -1155868744(%ebp), %eax #   1:     &()    t6 <- v4
+     movl    %eax, -124(%ebp)       
+     movl    -124(%ebp), %eax        #   2:     param  2 <- t6
+     pushl   %eax                   
+     leal    -12973120(%ebp), %eax   #   3:     &()    t7 <- v3
-     movl    -128(%ebp), %eax        #   2:     param  2 <- t6
+     movl    -128(%ebp), %eax        #   4:     param  1 <- t7
-     leal    -12973124(%ebp), %eax   #   3:     &()    t7 <- v3
+     leal    -1155868744(%ebp), %eax #   5:     &()    t8 <- v4
-     movl    -132(%ebp), %eax        #   4:     param  1 <- t7
+     movl    -132(%ebp), %eax        #   6:     param  2 <- t8
-     leal    -1155868748(%ebp), %eax #   5:     &()    t8 <- v4
+     leal    -12973120(%ebp), %eax   #   7:     &()    t9 <- v3
-     movl    -136(%ebp), %eax        #   6:     param  2 <- t8
-     pushl   %eax                   
-     leal    -12973124(%ebp), %eax   #   7:     &()    t9 <- v3
-     movl    %eax, -140(%ebp)       
-     movl    -140(%ebp), %eax        #   8:     param  1 <- t9
+     movl    -136(%ebp), %eax        #   8:     param  1 <- t9
-     leal    -1155868748(%ebp), %eax #   9:     &()    t10 <- v4
+     leal    -1155868744(%ebp), %eax #   9:     &()    t10 <- v4
-     leal    -12973124(%ebp), %eax   #  11:     &()    t11 <- v3
+     leal    -12973120(%ebp), %eax   #  11:     &()    t11 <- v3
+     jmp     l_f1_10                 #  13:     goto   10
+     jmp     l_f1_10                 #  14:     goto   10
+     jmp     l_f1_11                 #  15:     goto   11
+ l_f1_10:
+     movl    $1, %eax                #  17:     assign t12 <- 1
+     movb    %al, -21(%ebp)         
+     jmp     l_f1_12                 #  18:     goto   12
+ l_f1_11:
+     movl    $0, %eax                #  20:     assign t12 <- 0
+     movb    %al, -21(%ebp)         
+ l_f1_12:
+     movzbl  -21(%ebp), %eax         #  22:     param  0 <- t12
+     pushl   %eax                   
+     call    f0                      #  23:     call   t13 <- f0
+     addl    $12, %esp              
+     movb    %al, -22(%ebp)         
+     movzbl  -22(%ebp), %eax         #  24:     if     t13 <= 100 goto 6
+     movl    $100, %ebx             
+     cmpl    %ebx, %eax             
+     jle     l_f1_6                 
+     jmp     l_f1_7                  #  25:     goto   7
+ l_f1_6:
+     movl    $1, %eax                #  27:     assign t14 <- 1
+     movb    %al, -23(%ebp)         
-     jmp     l_f1_8                  #  13:     goto   8
+     jmp     l_f1_8                  #  28:     goto   8
-     jmp     l_f1_8                  #  14:     goto   8
+ l_f1_7:
+     movl    $0, %eax                #  30:     assign t14 <- 0
+     movb    %al, -23(%ebp)         
-     movl    $1, %eax                #  16:     assign t12 <- 1
-     movb    %al, -21(%ebp)         
-     jmp     l_f1_10                 #  17:     goto   10
-     movl    $0, %eax                #  18:     assign t12 <- 0
-     movb    %al, -21(%ebp)         
- l_f1_10:
-     movzbl  -21(%ebp), %eax         #  20:     param  0 <- t12
-     pushl   %eax                   
-     call    f0                      #  21:     call   t13 <- f0
-     addl    $9, %esp               
-     movb    %al, -22(%ebp)         
-     movzbl  -22(%ebp), %eax         #  22:     if     t13 <= 100 goto 5
-     movl    $100, %ebx             
-     cmpl    %ebx, %eax             
-     jle     l_f1_5                 
-     jmp     l_f1_6                  #  23:     goto   6
- l_f1_5:
-     movl    $1, %eax                #  25:     assign t14 <- 1
-     movb    %al, -23(%ebp)         
-     jmp     l_f1_7                  #  26:     goto   7
- l_f1_6:
-     movl    $0, %eax                #  28:     assign t14 <- 0
-     movb    %al, -23(%ebp)         
- l_f1_7:
-     movzbl  -23(%ebp), %eax         #  30:     param  0 <- t14
+     movzbl  -23(%ebp), %eax         #  32:     param  0 <- t14
-     call    f0                      #  31:     call   t15 <- f0
+     call    f0                      #  33:     call   t15 <- f0
-     addl    $9, %esp               
+     addl    $12, %esp              
-     call    dummyCHARfunc           #  32:     call   t16 <- dummyCHARfunc
+     call    dummyCHARfunc           #  34:     call   t16 <- dummyCHARfunc
-     movzbl  -24(%ebp), %eax         #  33:     if     t15 >= t16 goto 2
+     movzbl  -24(%ebp), %eax         #  35:     if     t15 >= t16 goto 2
-     jmp     l_f1_3                  #  34:     goto   3
+     jmp     l_f1_3                  #  36:     goto   3
-     movl    $1, %eax                #  36:     assign t17 <- 1
+     movl    $1, %eax                #  38:     assign t17 <- 1
-     jmp     l_f1_4                  #  37:     goto   4
+     jmp     l_f1_4                  #  39:     goto   4
-     movl    $0, %eax                #  39:     assign t17 <- 0
+     movl    $0, %eax                #  41:     assign t17 <- 0
-     movzbl  -26(%ebp), %eax         #  41:     param  0 <- t17
+     movzbl  -26(%ebp), %eax         #  43:     param  0 <- t17
-     call    f0                      #  42:     call   t18 <- f0
+     call    f0                      #  44:     call   t18 <- f0
-     addl    $9, %esp               
+     addl    $12, %esp              
-     movl    $34504, %eax            #  43:     if     34504 = 5201 goto 16
+     movl    $34504, %eax            #  45:     if     34504 = 5201 goto 16
-     jmp     l_f1_17                 #  44:     goto   17
+     jmp     l_f1_17                 #  46:     goto   17
-     movl    $1, %eax                #  46:     assign t19 <- 1
+     movl    $1, %eax                #  48:     assign t19 <- 1
-     jmp     l_f1_18                 #  47:     goto   18
+     jmp     l_f1_18                 #  49:     goto   18
-     movl    $0, %eax                #  49:     assign t19 <- 0
+     movl    $0, %eax                #  51:     assign t19 <- 0
-     leal    -12973124(%ebp), %eax   #  51:     &()    t20 <- v3
+     leal    -12973120(%ebp), %eax   #  53:     &()    t20 <- v3
-     movl    $2, %eax                #  52:     param  1 <- 2
+     movl    $2, %eax                #  54:     param  1 <- 2
-     leal    -12973124(%ebp), %eax   #  53:     &()    t21 <- v3
+     leal    -12973120(%ebp), %eax   #  55:     &()    t21 <- v3
-     movl    -36(%ebp), %eax         #  54:     param  0 <- t21
+     movl    -36(%ebp), %eax         #  56:     param  0 <- t21
-     call    DIM                     #  55:     call   t22 <- DIM
+     call    DIM                     #  57:     call   t22 <- DIM
-     movl    $33537, %eax            #  56:     mul    t23 <- 33537, t22
+     movl    $33537, %eax            #  58:     mul    t23 <- 33537, t22
-     call    dummyINTfunc            #  57:     call   t24 <- dummyINTfunc
+     call    dummyINTfunc            #  59:     call   t24 <- dummyINTfunc
-     movl    -44(%ebp), %eax         #  58:     add    t25 <- t23, t24
+     movl    -44(%ebp), %eax         #  60:     add    t25 <- t23, t24
-     movl    $3, %eax                #  59:     param  1 <- 3
+     movl    $3, %eax                #  61:     param  1 <- 3
-     leal    -12973124(%ebp), %eax   #  60:     &()    t26 <- v3
+     leal    -12973120(%ebp), %eax   #  62:     &()    t26 <- v3
-     movl    -56(%ebp), %eax         #  61:     param  0 <- t26
+     movl    -56(%ebp), %eax         #  63:     param  0 <- t26
-     call    DIM                     #  62:     call   t27 <- DIM
+     call    DIM                     #  64:     call   t27 <- DIM
-     call    dummyINTfunc            #  63:     call   t29 <- dummyINTfunc
-     movl    %eax, -68(%ebp)        
-     movl    -52(%ebp), %eax         #  64:     mul    t28 <- t25, t27
+     movl    -52(%ebp), %eax         #  65:     mul    t28 <- t25, t27
-     movl    -64(%ebp), %eax         #  65:     add    t30 <- t28, 84320
+     movl    -64(%ebp), %eax         #  66:     add    t29 <- t28, 84320
+     movl    %eax, -68(%ebp)        
+     movl    $4, %eax                #  67:     param  1 <- 4
+     pushl   %eax                   
+     leal    -12973120(%ebp), %eax   #  68:     &()    t30 <- v3
-     movl    $4, %eax                #  66:     param  1 <- 4
+     movl    -72(%ebp), %eax         #  69:     param  0 <- t30
-     leal    -12973124(%ebp), %eax   #  67:     &()    t31 <- v3
+     call    DIM                     #  70:     call   t31 <- DIM
+     addl    $8, %esp               
-     movl    -76(%ebp), %eax         #  68:     param  0 <- t31
+     movl    -68(%ebp), %eax         #  71:     mul    t32 <- t29, t31
+     movl    -76(%ebp), %ebx        
-     pushl   %eax                   
+     imull   %ebx                   
-     call    DIM                     #  69:     call   t32 <- DIM
-     addl    $8, %esp               
-     movl    -72(%ebp), %eax         #  70:     mul    t33 <- t30, t32
-     movl    -80(%ebp), %ebx        
-     imull   %ebx                   
-     movl    %eax, -84(%ebp)        
-     movl    -84(%ebp), %eax         #  71:     add    t34 <- t33, 8313
+     movl    -80(%ebp), %eax         #  72:     add    t33 <- t32, 8313
+     movl    %eax, -84(%ebp)        
+     movl    $5, %eax                #  73:     param  1 <- 5
+     pushl   %eax                   
+     leal    -12973120(%ebp), %eax   #  74:     &()    t34 <- v3
-     movl    $5, %eax                #  72:     param  1 <- 5
+     movl    -88(%ebp), %eax         #  75:     param  0 <- t34
-     leal    -12973124(%ebp), %eax   #  73:     &()    t35 <- v3
+     call    DIM                     #  76:     call   t35 <- DIM
+     addl    $8, %esp               
-     movl    -92(%ebp), %eax         #  74:     param  0 <- t35
+     movl    -84(%ebp), %eax         #  77:     mul    t36 <- t33, t35
+     movl    -92(%ebp), %ebx        
-     pushl   %eax                   
+     imull   %ebx                   
-     call    DIM                     #  75:     call   t36 <- DIM
-     addl    $8, %esp               
-     movl    -88(%ebp), %eax         #  76:     mul    t37 <- t34, t36
-     movl    -96(%ebp), %ebx        
-     imull   %ebx                   
-     movl    %eax, -100(%ebp)       
-     movl    -100(%ebp), %eax        #  77:     add    t38 <- t37, 96367
+     movl    -96(%ebp), %eax         #  78:     add    t37 <- t36, 96367
+     movl    %eax, -100(%ebp)       
+     movl    -100(%ebp), %eax        #  79:     mul    t38 <- t37, 1
+     movl    $1, %ebx               
+     imull   %ebx                   
-     movl    -104(%ebp), %eax        #  78:     mul    t39 <- t38, 1
+     leal    -12973120(%ebp), %eax   #  80:     &()    t39 <- v3
-     movl    $1, %ebx               
-     imull   %ebx                   
-     leal    -12973124(%ebp), %eax   #  79:     &()    t40 <- v3
+     movl    -108(%ebp), %eax        #  81:     param  0 <- t39
+     pushl   %eax                   
+     call    DOFS                    #  82:     call   t40 <- DOFS
+     addl    $4, %esp               
-     movl    -112(%ebp), %eax        #  80:     param  0 <- t40
+     movl    -104(%ebp), %eax        #  83:     add    t41 <- t38, t40
+     movl    -112(%ebp), %ebx       
-     pushl   %eax                   
-     call    DOFS                    #  81:     call   t41 <- DOFS
-     addl    $4, %esp               
+     addl    %ebx, %eax             
-     movl    -108(%ebp), %eax        #  82:     add    t42 <- t39, t41
+     movl    -32(%ebp), %eax         #  84:     add    t42 <- t20, t41
-     movl    -32(%ebp), %eax         #  83:     add    t43 <- t20, t42
-     movl    -120(%ebp), %ebx       
-     addl    %ebx, %eax             
-     movl    %eax, -124(%ebp)       
-     movzbl  -28(%ebp), %eax         #  84:     assign @t43 <- t19
+     movzbl  -28(%ebp), %eax         #  85:     assign @t42 <- t19
-     movl    -124(%ebp), %edi       
+     movl    -120(%ebp), %edi       
-     addl    $1155868736, %esp       # remove locals
+     addl    $1155868732, %esp       # remove locals
-     #-12973012(%ebp)12972984  [ $v5       <array 15 of <array 13 of <array 36 of <array 56 of <array 33 of <bool>>>>>> %ebp-12973012 ]
+     #   -12973012(%ebp)  12972984  [ $v5       <array 15 of <array 13 of <array 36 of <array 56 of <array 33 of <bool>>>>>> %ebp-12973012 ]
-     #-1155868636(%ebp)1142895624  [ $v6       <array 77 of <array 63 of <array 50 of <array 62 of <array 76 of <bool>>>>>> %ebp-1155868636 ]
+     #   -1155868636(%ebp)  1142895624  [ $v6       <array 77 of <array 63 of <array 50 of <array 62 of <array 76 of <bool>>>>>> %ebp-1155868636 ]
-     addl    $9, %esp               
+     addl    $12, %esp              
