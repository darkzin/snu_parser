+     jmp     l_f1_4                  #   0:     goto   4
+ l_f1_4:
+     jmp     l_f1_2                  #   2:     goto   2
-     movl    $1, %eax                #   0:     assign t3 <- 1
+     movl    $1, %eax                #   3:     assign t3 <- 1
-     jmp     l_f1_3                  #   1:     goto   3
+     jmp     l_f1_3                  #   4:     goto   3
+ l_f1_2:
-     movl    $0, %eax                #   2:     assign t3 <- 0
+     movl    $0, %eax                #   6:     assign t3 <- 0
-     movzbl  -13(%ebp), %eax         #   4:     return t3
+     movzbl  -13(%ebp), %eax         #   8:     return t3
-     movl    $35403, %eax            #   6:     mul    t4 <- 35403, 74042
+     movl    $35403, %eax            #  10:     mul    t4 <- 35403, 74042
-     movl    $77012, %eax            #   7:     if     77012 = t4 goto 8_while_body
+     movl    $77012, %eax            #  11:     if     77012 = t4 goto 8_while_body
-     jmp     l_f1_6                  #   8:     goto   6
+     jmp     l_f1_6                  #  12:     goto   6
-     jmp     l_f1_7_while_cond       #  10:     goto   7_while_cond
+     jmp     l_f1_7_while_cond       #  14:     goto   7_while_cond
-     jmp     l_f1_12_while_body      #  13:     goto   12_while_body
+     jmp     l_f1_12_while_body      #  17:     goto   12_while_body
+     jmp     l_f1_10                 #  18:     goto   10
-     movl    $1, %eax                #  15:     assign v1 <- 1
+     movl    $1, %eax                #  20:     assign v1 <- 1
-     jmp     l_f1_11_while_cond      #  16:     goto   11_while_cond
+     jmp     l_f1_11_while_cond      #  21:     goto   11_while_cond
+ l_f1_10:
-     jmp     l_f2_9                  #  10:     goto   9
+     jmp     l_f2_10                 #  10:     goto   10
-     jmp     l_f2_9                  #  11:     goto   9
+     jmp     l_f2_10                 #  11:     goto   10
+     jmp     l_f2_11                 #  12:     goto   11
- l_f2_9:
+ l_f2_10:
-     movl    $1, %eax                #  13:     assign t5 <- 1
+     movl    $1, %eax                #  14:     assign t5 <- 1
-     jmp     l_f2_11                 #  14:     goto   11
+     jmp     l_f2_12                 #  15:     goto   12
+ l_f2_11:
-     movl    $0, %eax                #  15:     assign t5 <- 0
+     movl    $0, %eax                #  17:     assign t5 <- 0
- l_f2_11:
+ l_f2_12:
-     movzbl  -76(%ebp), %eax         #  17:     if     t5 = 1 goto 6
+     movzbl  -76(%ebp), %eax         #  19:     if     t5 = 1 goto 6
-     jmp     l_f2_7                  #  18:     goto   7
+     jmp     l_f2_7                  #  20:     goto   7
-     movl    $1, %eax                #  20:     assign t6 <- 1
+     movl    $1, %eax                #  22:     assign t6 <- 1
-     jmp     l_f2_8                  #  21:     goto   8
+     jmp     l_f2_8                  #  23:     goto   8
-     movl    $0, %eax                #  23:     assign t6 <- 0
+     movl    $0, %eax                #  25:     assign t6 <- 0
-     movl    $2, %eax                #  25:     param  1 <- 2
+     movl    $2, %eax                #  27:     param  1 <- 2
-     movl    8(%ebp), %eax           #  26:     param  0 <- v1
+     movl    8(%ebp), %eax           #  28:     param  0 <- v1
-     call    DIM                     #  27:     call   t7 <- DIM
+     call    DIM                     #  29:     call   t7 <- DIM
-     movl    $74460, %eax            #  28:     mul    t8 <- 74460, t7
+     movl    $74460, %eax            #  30:     mul    t8 <- 74460, t7
-     movl    -88(%ebp), %eax         #  29:     add    t9 <- t8, 65482
+     movl    -88(%ebp), %eax         #  31:     add    t9 <- t8, 65482
-     movl    $3, %eax                #  30:     param  1 <- 3
+     movl    $3, %eax                #  32:     param  1 <- 3
-     movl    8(%ebp), %eax           #  31:     param  0 <- v1
+     movl    8(%ebp), %eax           #  33:     param  0 <- v1
-     call    DIM                     #  32:     call   t10 <- DIM
+     call    DIM                     #  34:     call   t10 <- DIM
-     movl    -92(%ebp), %eax         #  33:     mul    t11 <- t9, t10
+     movl    -92(%ebp), %eax         #  35:     mul    t11 <- t9, t10
-     movl    -20(%ebp), %eax         #  34:     add    t12 <- t11, 62173
+     movl    -20(%ebp), %eax         #  36:     add    t12 <- t11, 62173
-     movl    $4, %eax                #  35:     param  1 <- 4
+     movl    $4, %eax                #  37:     param  1 <- 4
-     movl    8(%ebp), %eax           #  36:     param  0 <- v1
+     movl    8(%ebp), %eax           #  38:     param  0 <- v1
-     call    DIM                     #  37:     call   t13 <- DIM
+     call    DIM                     #  39:     call   t13 <- DIM
-     movl    -24(%ebp), %eax         #  38:     mul    t14 <- t12, t13
+     movl    -24(%ebp), %eax         #  40:     mul    t14 <- t12, t13
-     movl    -32(%ebp), %eax         #  39:     add    t15 <- t14, 91285
+     movl    -32(%ebp), %eax         #  41:     add    t15 <- t14, 91285
-     movl    $5, %eax                #  40:     param  1 <- 5
+     movl    $5, %eax                #  42:     param  1 <- 5
-     movl    8(%ebp), %eax           #  41:     param  0 <- v1
+     movl    8(%ebp), %eax           #  43:     param  0 <- v1
-     call    DIM                     #  42:     call   t16 <- DIM
+     call    DIM                     #  44:     call   t16 <- DIM
-     movl    -36(%ebp), %eax         #  43:     mul    t17 <- t15, t16
+     movl    -36(%ebp), %eax         #  45:     mul    t17 <- t15, t16
-     movl    -44(%ebp), %eax         #  44:     add    t18 <- t17, 8653
+     movl    -44(%ebp), %eax         #  46:     add    t18 <- t17, 8653
-     movl    -48(%ebp), %eax         #  45:     mul    t19 <- t18, 1
+     movl    -48(%ebp), %eax         #  47:     mul    t19 <- t18, 1
-     movl    8(%ebp), %eax           #  46:     param  0 <- v1
+     movl    8(%ebp), %eax           #  48:     param  0 <- v1
-     call    DOFS                    #  47:     call   t20 <- DOFS
+     call    DOFS                    #  49:     call   t20 <- DOFS
-     movl    -52(%ebp), %eax         #  48:     add    t21 <- t19, t20
+     movl    -52(%ebp), %eax         #  50:     add    t21 <- t19, t20
-     movl    8(%ebp), %eax           #  49:     add    t22 <- v1, t21
+     movl    8(%ebp), %eax           #  51:     add    t22 <- v1, t21
-     movzbl  -77(%ebp), %eax         #  50:     assign @t22 <- t6
+     movzbl  -77(%ebp), %eax         #  52:     assign @t22 <- t6
-     movl    $46365, %eax            #  51:     add    t23 <- 46365, 6778
+     movl    $46365, %eax            #  53:     add    t23 <- 46365, 6778
-     movl    -68(%ebp), %eax         #  52:     add    t24 <- t23, 977
+     movl    -68(%ebp), %eax         #  54:     add    t24 <- t23, 977
-     movl    -72(%ebp), %eax         #  53:     if     t24 > 90000 goto 17
+     movl    -72(%ebp), %eax         #  55:     if     t24 > 90000 goto 17
-     jmp     l_f2_18                 #  54:     goto   18
+     jmp     l_f2_18                 #  56:     goto   18
-     movl    $1, %eax                #  56:     assign t25 <- 1
+     movl    $1, %eax                #  58:     assign t25 <- 1
-     jmp     l_f2_19                 #  57:     goto   19
+     jmp     l_f2_19                 #  59:     goto   19
-     movl    $0, %eax                #  59:     assign t25 <- 0
+     movl    $0, %eax                #  61:     assign t25 <- 0
-     movzbl  -73(%ebp), %eax         #  61:     return t25
+     movzbl  -73(%ebp), %eax         #  63:     return t25
-     jmp     l_test_5                #   4:     goto   5
+     jmp     l_test_6                #   4:     goto   6
+     jmp     l_test_7                #   5:     goto   7
- l_test_5:
+ l_test_6:
-     movl    $1, %eax                #   6:     assign t0 <- 1
+     movl    $1, %eax                #   7:     assign t0 <- 1
-     jmp     l_test_7                #   7:     goto   7
+     jmp     l_test_8                #   8:     goto   8
+ l_test_7:
-     movl    $0, %eax                #   8:     assign t0 <- 0
+     movl    $0, %eax                #  10:     assign t0 <- 0
- l_test_7:
+ l_test_8:
-     movl    $1, %eax                #  10:     if     1 = t0 goto 4_while_body
+     movl    $1, %eax                #  12:     if     1 = t0 goto 4_while_body
-     jmp     l_test_2                #  11:     goto   2
+     jmp     l_test_2                #  13:     goto   2
-     call    dummyCHARfunc           #  13:     call   t1 <- dummyCHARfunc
+     call    dummyCHARfunc           #  15:     call   t1 <- dummyCHARfunc
-     movl    $98, %eax               #  14:     param  0 <- 98
+     movl    $98, %eax               #  16:     param  0 <- 98
-     call    WriteChar               #  15:     call   WriteChar
+     call    WriteChar               #  17:     call   WriteChar
-     addl    $1, %esp               
+     addl    $4, %esp               
-     movl    $99, %eax               #  16:     if     99 <= 99 goto 15_if_true
+     movl    $99, %eax               #  18:     if     99 <= 99 goto 15_if_true
-     jmp     l_test_16_if_false      #  17:     goto   16_if_false
+     jmp     l_test_16_if_false      #  19:     goto   16_if_false
-     jmp     l_test_14               #  19:     goto   14
+     jmp     l_test_14               #  21:     goto   14
-     jmp     l_test_3_while_cond     #  22:     goto   3_while_cond
+     jmp     l_test_3_while_cond     #  24:     goto   3_while_cond
-     leal    _str_1, %eax            #  24:     &()    t2 <- _str_1
+     leal    _str_1, %eax            #  26:     &()    t2 <- _str_1
-     movl    -20(%ebp), %eax         #  25:     param  0 <- t2
+     movl    -20(%ebp), %eax         #  27:     param  0 <- t2
-     call    WriteStr                #  26:     call   WriteStr
+     call    WriteStr                #  28:     call   WriteStr
-     jmp     l_test_19               #  28:     goto   19
+     jmp     l_test_19               #  30:     goto   19
-     movl    $97, %eax               #  30:     assign v0 <- 97
+     movl    $97, %eax               #  32:     assign v0 <- 97
