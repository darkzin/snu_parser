+     jmp     l_f0_7                  #  12:     goto   7
-     movl    $1, %eax                #  12:     assign t7 <- 1
+     movl    $1, %eax                #  13:     assign t7 <- 1
-     jmp     l_f0_8                  #  13:     goto   8
+     jmp     l_f0_8                  #  14:     goto   8
-     movl    $0, %eax                #  15:     assign t7 <- 0
+     movl    $0, %eax                #  16:     assign t7 <- 0
-     movzbl  -15(%ebp), %eax         #  17:     assign v3 <- t7
+     movzbl  -15(%ebp), %eax         #  18:     assign v3 <- t7
-     movl    $99, %eax               #  19:     if     99 < 99 goto 13_while_body
+     movl    $99, %eax               #  20:     if     99 < 99 goto 13_while_body
-     jmp     l_f0_11                 #  20:     goto   11
+     jmp     l_f0_11                 #  21:     goto   11
-     movl    $85319, %eax            #  22:     assign v0 <- 85319
+     movl    $85319, %eax            #  23:     assign v0 <- 85319
-     movl    $3375, %eax             #  23:     div    t8 <- 3375, 52703
+     movl    $3375, %eax             #  24:     div    t8 <- 3375, 52703
-     movl    $33723, %eax            #  24:     if     33723 >= t8 goto 17_if_true
+     movl    $33723, %eax            #  25:     if     33723 >= t8 goto 17_if_true
-     jmp     l_f0_18_if_false        #  25:     goto   18_if_false
+     jmp     l_f0_18_if_false        #  26:     goto   18_if_false
-     jmp     l_f0_16                 #  27:     goto   16
+     jmp     l_f0_16                 #  28:     goto   16
-     jmp     l_f0_12_while_cond      #  30:     goto   12_while_cond
+     jmp     l_f0_12_while_cond      #  31:     goto   12_while_cond
-     #-3903100(%ebp)3903000  [ $v4       <array 56 of <array 2 of <array 33 of <array 88 of <array 3 of <int>>>>>> %ebp-3903100 ]
+     #   -3903100(%ebp)  3903000  [ $v4       <array 56 of <array 2 of <array 33 of <array 88 of <array 3 of <int>>>>>> %ebp-3903100 ]
-     addl    $9, %esp               
+     addl    $12, %esp              
-     addl    $9, %esp               
+     addl    $12, %esp              
-     #    -84(%ebp)   4  [ $t27      <int> %ebp-84 ]
+     #    -84(%ebp)   4  [ $t5       <int> %ebp-84 ]
-     #    -88(%ebp)   4  [ $t28      <int> %ebp-88 ]
+     #    -88(%ebp)   4  [ $t6       <int> %ebp-88 ]
-     #    -92(%ebp)   4  [ $t5       <int> %ebp-92 ]
+     #    -92(%ebp)   4  [ $t7       <int> %ebp-92 ]
-     #    -96(%ebp)   4  [ $t6       <int> %ebp-96 ]
+     #    -96(%ebp)   4  [ $t8       <int> %ebp-96 ]
-     #   -100(%ebp)   4  [ $t7       <int> %ebp-100 ]
+     #   -100(%ebp)   4  [ $t9       <int> %ebp-100 ]
-     #   -104(%ebp)   4  [ $t8       <int> %ebp-104 ]
-     #   -108(%ebp)   4  [ $t9       <int> %ebp-108 ]
-     #   -109(%ebp)   1  [ $v4       <char> %ebp-109 ]
+     #   -101(%ebp)   1  [ $v4       <char> %ebp-101 ]
-     subl    $100, %esp              # make room for locals
+     subl    $92, %esp               # make room for locals
-     movl    $25, %ecx              
+     movl    $23, %ecx              
-     movl    %eax, -92(%ebp)        
+     movl    %eax, -84(%ebp)        
-     movl    -92(%ebp), %ebx        
+     movl    -84(%ebp), %ebx        
-     movl    %eax, -96(%ebp)        
+     movl    %eax, -88(%ebp)        
-     movl    %eax, -100(%ebp)       
+     movl    %eax, -92(%ebp)        
-     movl    -100(%ebp), %eax        #   5:     div    t8 <- t7, 36794
+     movl    -92(%ebp), %eax         #   5:     div    t8 <- t7, 36794
+     movl    %eax, -96(%ebp)        
+     movl    -88(%ebp), %eax         #   6:     add    t9 <- t6, t8
+     movl    -96(%ebp), %ebx        
+     addl    %ebx, %eax             
-     movl    %eax, -104(%ebp)       
+     movl    %eax, -100(%ebp)       
-     movl    -96(%ebp), %eax         #   6:     add    t9 <- t6, t8
-     movl    -104(%ebp), %ebx       
-     addl    %ebx, %eax             
-     movl    %eax, -108(%ebp)       
-     movl    $29728, %eax            #  10:     div    t12 <- 29728, 14647
+     movl    -100(%ebp), %eax        #  10:     mul    t11 <- t9, t10
-     movl    $14647, %ebx           
+     movl    -16(%ebp), %ebx        
-     cdq                            
-     idivl   %ebx                   
+     imull   %ebx                   
+     movl    %eax, -20(%ebp)        
+     movl    -20(%ebp), %eax         #  11:     add    t12 <- t11, 46331
+     movl    $46331, %ebx           
+     addl    %ebx, %eax             
+     movl    $4, %eax                #  12:     param  1 <- 4
-     movl    -24(%ebp), %eax         #  11:     div    t13 <- t12, 36794
-     movl    $36794, %ebx           
-     cdq                            
-     idivl   %ebx                   
+     pushl   %eax                   
+     movl    12(%ebp), %eax          #  13:     param  0 <- v1
+     pushl   %eax                   
+     call    DIM                     #  14:     call   t13 <- DIM
+     addl    $8, %esp               
-     movl    -108(%ebp), %eax        #  12:     mul    t11 <- t9, t10
+     movl    -24(%ebp), %eax         #  15:     mul    t14 <- t12, t13
-     movl    -16(%ebp), %ebx        
+     movl    -28(%ebp), %ebx        
-     movl    %eax, -20(%ebp)        
-     movl    -20(%ebp), %eax         #  13:     add    t14 <- t11, 46331
-     movl    $46331, %ebx           
-     addl    %ebx, %eax             
+     movl    -32(%ebp), %eax         #  16:     add    t15 <- t14, 45233
+     movl    $45233, %ebx           
+     addl    %ebx, %eax             
+     movl    %eax, -36(%ebp)        
-     movl    $4, %eax                #  14:     param  1 <- 4
+     movl    $5, %eax                #  17:     param  1 <- 5
-     movl    12(%ebp), %eax          #  15:     param  0 <- v1
+     movl    12(%ebp), %eax          #  18:     param  0 <- v1
-     call    DIM                     #  16:     call   t15 <- DIM
+     call    DIM                     #  19:     call   t16 <- DIM
-     movl    %eax, -36(%ebp)        
-     movl    -32(%ebp), %eax         #  17:     mul    t16 <- t14, t15
-     movl    -36(%ebp), %ebx        
-     imull   %ebx                   
-     movl    -40(%ebp), %eax         #  18:     add    t17 <- t16, 45233
+     movl    -36(%ebp), %eax         #  20:     mul    t17 <- t15, t16
-     movl    $45233, %ebx           
+     movl    -40(%ebp), %ebx        
-     addl    %ebx, %eax             
+     imull   %ebx                   
-     movl    $5, %eax                #  19:     param  1 <- 5
-     pushl   %eax                   
-     movl    12(%ebp), %eax          #  20:     param  0 <- v1
+     movl    -44(%ebp), %eax         #  21:     add    t18 <- t17, 5516
+     movl    $5516, %ebx            
-     pushl   %eax                   
-     call    DIM                     #  21:     call   t18 <- DIM
-     addl    $8, %esp               
+     addl    %ebx, %eax             
-     movl    -44(%ebp), %eax         #  22:     mul    t19 <- t17, t18
+     movl    -48(%ebp), %eax         #  22:     mul    t19 <- t18, 1
-     movl    -48(%ebp), %ebx        
+     movl    $1, %ebx               
-     movl    -52(%ebp), %eax         #  23:     add    t20 <- t19, 5516
+     movl    12(%ebp), %eax          #  23:     param  0 <- v1
-     movl    $5516, %ebx            
+     pushl   %eax                   
+     call    DOFS                    #  24:     call   t20 <- DOFS
-     addl    %ebx, %eax             
+     addl    $4, %esp               
-     movl    -56(%ebp), %eax         #  24:     mul    t21 <- t20, 1
+     movl    -52(%ebp), %eax         #  25:     add    t21 <- t19, t20
+     movl    -56(%ebp), %ebx        
-     movl    $1, %ebx               
+     addl    %ebx, %eax             
-     imull   %ebx                   
-     movl    12(%ebp), %eax          #  25:     param  0 <- v1
+     movl    12(%ebp), %eax          #  26:     add    t22 <- v1, t21
+     movl    -60(%ebp), %ebx        
-     pushl   %eax                   
-     call    DOFS                    #  26:     call   t22 <- DOFS
-     addl    $4, %esp               
+     addl    %ebx, %eax             
-     movl    -60(%ebp), %eax         #  27:     add    t23 <- t21, t22
-     movl    -64(%ebp), %ebx        
-     addl    %ebx, %eax             
-     movl    %eax, -68(%ebp)        
-     movl    12(%ebp), %eax          #  28:     add    t24 <- v1, t23
-     movl    -68(%ebp), %ebx        
-     addl    %ebx, %eax             
-     movl    %eax, -72(%ebp)        
-     movl    $99, %eax               #  29:     assign @t24 <- 99
+     movl    $99, %eax               #  27:     assign @t22 <- 99
-     movl    -72(%ebp), %edi        
+     movl    -64(%ebp), %edi        
-     movl    $75924, %eax            #  30:     sub    t25 <- 75924, 55056
+     movl    $75924, %eax            #  28:     sub    t23 <- 75924, 55056
-     movl    %eax, -76(%ebp)        
+     movl    %eax, -68(%ebp)        
-     movl    -76(%ebp), %eax         #  31:     sub    t26 <- t25, 57570
+     movl    -68(%ebp), %eax         #  29:     sub    t24 <- t23, 57570
-     movl    %eax, -80(%ebp)        
+     movl    %eax, -72(%ebp)        
-     movl    -80(%ebp), %eax         #  32:     sub    t27 <- t26, 32234
+     movl    -72(%ebp), %eax         #  30:     sub    t25 <- t24, 32234
-     movl    %eax, -84(%ebp)        
+     movl    %eax, -76(%ebp)        
-     movl    -84(%ebp), %eax         #  33:     sub    t28 <- t27, 77374
+     movl    -76(%ebp), %eax         #  31:     sub    t26 <- t25, 77374
-     movl    %eax, -88(%ebp)        
+     movl    %eax, -80(%ebp)        
-     movl    -88(%ebp), %eax         #  34:     return t28
+     movl    -80(%ebp), %eax         #  32:     return t26
-     movl    $52427, %eax            #  35:     if     52427 # 73880 goto 3_if_true
+     movl    $52427, %eax            #  33:     if     52427 # 73880 goto 3_if_true
-     jmp     l_f2_4_if_false         #  36:     goto   4_if_false
+     jmp     l_f2_4_if_false         #  34:     goto   4_if_false
-     movl    $100, %eax              #  38:     assign v4 <- 100
+     movl    $100, %eax              #  36:     assign v4 <- 100
-     movb    %al, -109(%ebp)        
+     movb    %al, -101(%ebp)        
-     jmp     l_f2_2                  #  39:     goto   2
+     jmp     l_f2_2                  #  37:     goto   2
-     addl    $100, %esp              # remove locals
+     addl    $92, %esp               # remove locals
-     addl    $9, %esp               
+     addl    $12, %esp              
-     addl    $9, %esp               
+     addl    $12, %esp              
