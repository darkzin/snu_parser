-     #   -204(%ebp)   4  [ $t52      <int> %ebp-204 ]
+     #   -204(%ebp)   4  [ $t6       <int> %ebp-204 ]
-     #   -208(%ebp)   4  [ $t6       <int> %ebp-208 ]
+     #   -208(%ebp)   4  [ $t7       <int> %ebp-208 ]
-     #   -212(%ebp)   4  [ $t7       <int> %ebp-212 ]
+     #   -212(%ebp)   4  [ $t8       <int> %ebp-212 ]
-     #   -216(%ebp)   4  [ $t8       <int> %ebp-216 ]
+     #   -216(%ebp)   4  [ $t9       <int> %ebp-216 ]
-     #   -220(%ebp)   4  [ $t9       <int> %ebp-220 ]
-     #   -221(%ebp)   1  [ $v4       <char> %ebp-221 ]
+     #   -217(%ebp)   1  [ $v4       <char> %ebp-217 ]
-     pushl   %ebp                   
-     movl    %esp, %ebp             
-     pushl   %ebx                    # save callee saved registers
-     pushl   %esi                   
+     pushl   %ebp                   
+     movl    %esp, %ebp             
+     pushl   %ebx                    # save callee saved registers
-     pushl   %edi                   
+     pushl   %esi                   
+     pushl   %edi                   
-     subl    $212, %esp              # make room for locals
+     subl    $208, %esp              # make room for locals
-     movl    $53, %ecx              
+     movl    $52, %ecx              
+     movl    %eax, -204(%ebp)       
+     movl    -204(%ebp), %eax        #  25:     add    t7 <- t6, 89229
+     movl    $89229, %ebx           
+     addl    %ebx, %eax             
+     movl    $4, %eax                #  26:     param  1 <- 4
+     pushl   %eax                   
-     movl    -208(%ebp), %eax        #  25:     add    t7 <- t6, 89229
+     movl    16(%ebp), %eax          #  27:     param  0 <- v2
-     movl    $89229, %ebx           
+     pushl   %eax                   
+     call    DIM                     #  28:     call   t8 <- DIM
-     addl    %ebx, %eax             
+     addl    $8, %esp               
-     movl    $4, %eax                #  26:     param  1 <- 4
+     movl    -208(%ebp), %eax        #  29:     mul    t9 <- t7, t8
+     movl    -212(%ebp), %ebx       
-     pushl   %eax                   
+     imull   %ebx                   
-     movl    16(%ebp), %eax          #  27:     param  0 <- v2
-     pushl   %eax                   
-     call    DIM                     #  28:     call   t8 <- DIM
-     addl    $8, %esp               
-     movl    -212(%ebp), %eax        #  29:     mul    t9 <- t7, t8
-     movl    -216(%ebp), %ebx       
-     imull   %ebx                   
-     movl    %eax, -220(%ebp)       
-     movl    -220(%ebp), %eax        #  30:     add    t10 <- t9, 1976
+     movl    -216(%ebp), %eax        #  30:     add    t10 <- t9, 1976
+     movl    -128(%ebp), %eax        #  89:     mul    t37 <- t35, t36
+     movl    -132(%ebp), %ebx       
-     movl    $17680, %eax            #  89:     div    t38 <- 17680, 60809
-     movl    $60809, %ebx           
-     cdq                            
-     idivl   %ebx                   
+     imull   %ebx                   
+     movl    %eax, -136(%ebp)       
+     movl    -136(%ebp), %eax        #  90:     add    t38 <- t37, 35257
+     movl    $35257, %ebx           
+     addl    %ebx, %eax             
+     movl    $3, %eax                #  91:     param  1 <- 3
-     movl    -128(%ebp), %eax        #  90:     mul    t37 <- t35, t36
-     movl    -132(%ebp), %ebx       
-     imull   %ebx                   
+     pushl   %eax                   
-     movl    %eax, -136(%ebp)       
-     movl    -136(%ebp), %eax        #  91:     add    t39 <- t37, 35257
+     movl    20(%ebp), %eax          #  92:     param  0 <- v3
-     movl    $35257, %ebx           
+     pushl   %eax                   
+     call    DIM                     #  93:     call   t39 <- DIM
-     addl    %ebx, %eax             
+     addl    $8, %esp               
-     movl    $3, %eax                #  92:     param  1 <- 3
+     movl    -140(%ebp), %eax        #  94:     mul    t40 <- t38, t39
+     movl    -144(%ebp), %ebx       
-     pushl   %eax                   
+     imull   %ebx                   
-     movl    20(%ebp), %eax          #  93:     param  0 <- v3
-     pushl   %eax                   
-     call    DIM                     #  94:     call   t40 <- DIM
-     addl    $8, %esp               
-     movl    -144(%ebp), %eax        #  95:     mul    t41 <- t39, t40
+     movl    -152(%ebp), %eax        #  95:     add    t41 <- t40, 21263
-     movl    -152(%ebp), %ebx       
+     movl    $21263, %ebx           
-     imull   %ebx                   
+     addl    %ebx, %eax             
+     movl    $4, %eax                #  96:     param  1 <- 4
+     pushl   %eax                   
-     movl    -156(%ebp), %eax        #  96:     add    t42 <- t41, 21263
+     movl    20(%ebp), %eax          #  97:     param  0 <- v3
-     movl    $21263, %ebx           
+     pushl   %eax                   
+     call    DIM                     #  98:     call   t42 <- DIM
-     addl    %ebx, %eax             
+     addl    $8, %esp               
-     movl    $4, %eax                #  97:     param  1 <- 4
+     movl    -156(%ebp), %eax        #  99:     mul    t43 <- t41, t42
+     movl    -160(%ebp), %ebx       
-     pushl   %eax                   
+     imull   %ebx                   
-     movl    20(%ebp), %eax          #  98:     param  0 <- v3
-     pushl   %eax                   
-     call    DIM                     #  99:     call   t43 <- DIM
-     addl    $8, %esp               
-     movl    -160(%ebp), %eax        # 100:     mul    t44 <- t42, t43
+     movl    -164(%ebp), %eax        # 100:     add    t44 <- t43, 80351
-     movl    -164(%ebp), %ebx       
+     movl    $80351, %ebx           
-     imull   %ebx                   
+     addl    %ebx, %eax             
+     movl    $5, %eax                # 101:     param  1 <- 5
+     pushl   %eax                   
-     movl    -168(%ebp), %eax        # 101:     add    t45 <- t44, 80351
+     movl    20(%ebp), %eax          # 102:     param  0 <- v3
-     movl    $80351, %ebx           
+     pushl   %eax                   
+     call    DIM                     # 103:     call   t45 <- DIM
-     addl    %ebx, %eax             
+     addl    $8, %esp               
-     movl    $5, %eax                # 102:     param  1 <- 5
+     movl    -168(%ebp), %eax        # 104:     mul    t46 <- t44, t45
+     movl    -172(%ebp), %ebx       
-     pushl   %eax                   
+     imull   %ebx                   
-     movl    20(%ebp), %eax          # 103:     param  0 <- v3
-     pushl   %eax                   
-     call    DIM                     # 104:     call   t46 <- DIM
-     addl    $8, %esp               
-     movl    -172(%ebp), %eax        # 105:     mul    t47 <- t45, t46
+     movl    -176(%ebp), %eax        # 105:     add    t47 <- t46, 86156
-     movl    -176(%ebp), %ebx       
+     movl    $86156, %ebx           
-     imull   %ebx                   
+     addl    %ebx, %eax             
-     movl    -180(%ebp), %eax        # 106:     add    t48 <- t47, 86156
+     movl    -180(%ebp), %eax        # 106:     mul    t48 <- t47, 1
-     movl    $86156, %ebx           
+     movl    $1, %ebx               
-     addl    %ebx, %eax             
+     imull   %ebx                   
-     movl    -184(%ebp), %eax        # 107:     mul    t49 <- t48, 1
+     movl    20(%ebp), %eax          # 107:     param  0 <- v3
-     movl    $1, %ebx               
-     imull   %ebx                   
+     pushl   %eax                   
+     call    DOFS                    # 108:     call   t49 <- DOFS
+     addl    $4, %esp               
-     movl    20(%ebp), %eax          # 108:     param  0 <- v3
+     movl    -184(%ebp), %eax        # 109:     add    t50 <- t48, t49
+     movl    -188(%ebp), %ebx       
-     pushl   %eax                   
-     call    DOFS                    # 109:     call   t50 <- DOFS
-     addl    $4, %esp               
+     addl    %ebx, %eax             
-     movl    -188(%ebp), %eax        # 110:     add    t51 <- t49, t50
+     movl    20(%ebp), %eax          # 110:     add    t51 <- v3, t50
-     movl    20(%ebp), %eax          # 111:     add    t52 <- v3, t51
-     movl    -200(%ebp), %ebx       
-     addl    %ebx, %eax             
-     movl    %eax, -204(%ebp)       
-     movzbl  -121(%ebp), %eax        # 112:     assign @t52 <- t34
+     movzbl  -121(%ebp), %eax        # 111:     assign @t51 <- t34
-     movl    -204(%ebp), %edi       
+     movl    -200(%ebp), %edi       
-     addl    $212, %esp              # remove locals
+     addl    $208, %esp              # remove locals
+     jmp     l_f1_11                 #  10:     goto   11
-     movl    $1, %eax                #  11:     assign t2 <- 1
+     movl    $1, %eax                #  12:     assign t2 <- 1
-     jmp     l_f1_12                 #  12:     goto   12
+     jmp     l_f1_12                 #  13:     goto   12
+ l_f1_11:
-     movl    $0, %eax                #  13:     assign t2 <- 0
+     movl    $0, %eax                #  15:     assign t2 <- 0
-     movzbl  -14(%ebp), %eax         #  15:     return t2
+     movzbl  -14(%ebp), %eax         #  17:     return t2
-     jmp     l_f1_6_while_cond       #  16:     goto   6_while_cond
+     jmp     l_f1_6_while_cond       #  18:     goto   6_while_cond
-     call    dummyProcedure          #  18:     call   dummyProcedure
+     call    dummyProcedure          #  20:     call   dummyProcedure
+     jmp     l_test_6                #   4:     goto   6
+ l_test_6:
-     jmp     l_test_3                #   4:     goto   3
+     jmp     l_test_3                #   6:     goto   3
+     jmp     l_test_8                #   9:     goto   8
+     jmp     l_test_8                #  10:     goto   8
+     jmp     l_test_8                #  11:     goto   8
+     jmp     l_test_8                #  12:     goto   8
+     jmp     l_test_8                #  13:     goto   8
-     movl    $87273, %eax            #   7:     assign v0 <- 87273
+     movl    $87273, %eax            #  14:     assign v0 <- 87273
-     jmp     l_test_9_while_cond     #   8:     goto   9_while_cond
+     jmp     l_test_9_while_cond     #  15:     goto   9_while_cond
+ l_test_8:
