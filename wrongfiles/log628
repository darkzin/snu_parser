-     #    -80(%ebp)   4  [ $t26      <int> %ebp-80 ]
+     #    -77(%ebp)   1  [ $t5       <bool> %ebp-77 ]
-     #    -84(%ebp)   4  [ $t27      <int> %ebp-84 ]
+     #    -84(%ebp)   4  [ $t6       <int> %ebp-84 ]
-     #    -88(%ebp)   4  [ $t28      <int> %ebp-88 ]
+     #    -88(%ebp)   4  [ $t7       <int> %ebp-88 ]
-     #    -89(%ebp)   1  [ $t5       <bool> %ebp-89 ]
+     #    -92(%ebp)   4  [ $t8       <int> %ebp-92 ]
-     #    -96(%ebp)   4  [ $t6       <int> %ebp-96 ]
+     #    -96(%ebp)   4  [ $t9       <int> %ebp-96 ]
-     #   -100(%ebp)   4  [ $t7       <int> %ebp-100 ]
-     #   -104(%ebp)   4  [ $t8       <int> %ebp-104 ]
-     #   -108(%ebp)   4  [ $t9       <int> %ebp-108 ]
-     #   -112(%ebp)   4  [ $v2       <int> %ebp-112 ]
+     #   -100(%ebp)   4  [ $v2       <int> %ebp-100 ]
-     #   -113(%ebp)   1  [ $v3       <char> %ebp-113 ]
+     #   -101(%ebp)   1  [ $v3       <char> %ebp-101 ]
-     #   -114(%ebp)   1  [ $v4       <bool> %ebp-114 ]
+     #   -102(%ebp)   1  [ $v4       <bool> %ebp-102 ]
-     pushl   %ebp                   
-     movl    %esp, %ebp             
-     pushl   %ebx                    # save callee saved registers
-     pushl   %esi                   
+     pushl   %ebp                   
+     movl    %esp, %ebp             
+     pushl   %ebx                    # save callee saved registers
-     pushl   %edi                   
+     pushl   %esi                   
+     pushl   %edi                   
-     subl    $104, %esp              # make room for locals
+     subl    $92, %esp               # make room for locals
-     movl    $26, %ecx              
+     movl    $23, %ecx              
-     movb    %al, -89(%ebp)         
+     movb    %al, -77(%ebp)         
-     movl    %eax, -112(%ebp)       
+     movl    %eax, -100(%ebp)       
-     movl    %eax, -96(%ebp)        
+     movl    %eax, -84(%ebp)        
-     movl    -96(%ebp), %ebx        
+     movl    -84(%ebp), %ebx        
-     movl    %eax, -100(%ebp)       
+     movl    %eax, -88(%ebp)        
-     movl    %eax, -104(%ebp)       
+     movl    %eax, -92(%ebp)        
-     movl    -104(%ebp), %eax        #  13:     add    t9 <- t8, 20364
+     movl    -92(%ebp), %eax         #  13:     add    t9 <- t8, 20364
-     movl    %eax, -108(%ebp)       
+     movl    %eax, -96(%ebp)        
-     movl    -108(%ebp), %eax        #  14:     sub    t10 <- t9, 92189
+     movl    -96(%ebp), %eax         #  14:     sub    t10 <- t9, 92189
-     movl    -100(%ebp), %eax        #  15:     add    t11 <- t7, t10
+     movl    -88(%ebp), %eax         #  15:     add    t11 <- t7, t10
-     movl    $18277, %eax            #  19:     div    t14 <- 18277, 85367
-     movl    $85367, %ebx           
-     cdq                            
-     idivl   %ebx                   
-     movl    %eax, -32(%ebp)        
-     movl    -32(%ebp), %eax         #  20:     add    t15 <- t14, 20364
-     movl    $20364, %ebx           
-     addl    %ebx, %eax             
-     movl    %eax, -36(%ebp)        
-     movl    -36(%ebp), %eax         #  21:     sub    t16 <- t15, 92189
-     movl    $92189, %ebx           
-     subl    %ebx, %eax             
-     movl    %eax, -40(%ebp)        
-     movl    -20(%ebp), %eax         #  22:     mul    t13 <- t11, t12
+     movl    -20(%ebp), %eax         #  19:     mul    t13 <- t11, t12
-     movl    -28(%ebp), %eax         #  23:     add    t17 <- t13, 68831
+     movl    -28(%ebp), %eax         #  20:     add    t14 <- t13, 68831
+     movl    %eax, -32(%ebp)        
+     movl    $4, %eax                #  21:     param  1 <- 4
+     pushl   %eax                   
+     movl    8(%ebp), %eax           #  22:     param  0 <- v1
+     pushl   %eax                   
+     call    DIM                     #  23:     call   t15 <- DIM
+     addl    $8, %esp               
+     movl    %eax, -36(%ebp)        
+     movl    -32(%ebp), %eax         #  24:     mul    t16 <- t14, t15
+     movl    -36(%ebp), %ebx        
+     imull   %ebx                   
+     movl    %eax, -40(%ebp)        
+     movl    -40(%ebp), %eax         #  25:     add    t17 <- t16, 68177
+     movl    $68177, %ebx           
+     addl    %ebx, %eax             
-     movl    $4, %eax                #  24:     param  1 <- 4
+     movl    $5, %eax                #  26:     param  1 <- 5
-     movl    8(%ebp), %eax           #  25:     param  0 <- v1
+     movl    8(%ebp), %eax           #  27:     param  0 <- v1
-     call    DIM                     #  26:     call   t18 <- DIM
+     call    DIM                     #  28:     call   t18 <- DIM
-     movl    -44(%ebp), %eax         #  27:     mul    t19 <- t17, t18
+     movl    -44(%ebp), %eax         #  29:     mul    t19 <- t17, t18
-     movl    -52(%ebp), %eax         #  28:     add    t20 <- t19, 68177
+     movl    -52(%ebp), %eax         #  30:     add    t20 <- t19, 99001
-     movl    $68177, %ebx           
+     movl    $99001, %ebx           
-     movl    $5, %eax                #  29:     param  1 <- 5
-     pushl   %eax                   
-     movl    8(%ebp), %eax           #  30:     param  0 <- v1
-     pushl   %eax                   
-     call    DIM                     #  31:     call   t21 <- DIM
-     addl    $8, %esp               
-     movl    %eax, -60(%ebp)        
-     movl    -56(%ebp), %eax         #  32:     mul    t22 <- t20, t21
+     movl    -56(%ebp), %eax         #  31:     mul    t21 <- t20, 1
-     movl    -60(%ebp), %ebx        
-     imull   %ebx                   
-     movl    %eax, -64(%ebp)        
-     movl    -64(%ebp), %eax         #  33:     add    t23 <- t22, 99001
-     movl    $99001, %ebx           
-     addl    %ebx, %eax             
-     movl    %eax, -68(%ebp)        
-     movl    -68(%ebp), %eax         #  34:     mul    t24 <- t23, 1
+     movl    %eax, -60(%ebp)        
+     movl    8(%ebp), %eax           #  32:     param  0 <- v1
+     pushl   %eax                   
+     call    DOFS                    #  33:     call   t22 <- DOFS
+     addl    $4, %esp               
+     movl    %eax, -64(%ebp)        
+     movl    -60(%ebp), %eax         #  34:     add    t23 <- t21, t22
+     movl    -64(%ebp), %ebx        
+     addl    %ebx, %eax             
+     movl    %eax, -68(%ebp)        
+     movl    8(%ebp), %eax           #  35:     add    t24 <- v1, t23
+     movl    -68(%ebp), %ebx        
+     addl    %ebx, %eax             
-     movl    8(%ebp), %eax           #  35:     param  0 <- v1
-     pushl   %eax                   
-     call    DOFS                    #  36:     call   t25 <- DOFS
-     addl    $4, %esp               
-     movl    %eax, -76(%ebp)        
-     movl    -72(%ebp), %eax         #  37:     add    t26 <- t24, t25
-     movl    -76(%ebp), %ebx        
-     addl    %ebx, %eax             
-     movl    %eax, -80(%ebp)        
-     movl    8(%ebp), %eax           #  38:     add    t27 <- v1, t26
-     movl    -80(%ebp), %ebx        
-     addl    %ebx, %eax             
-     movl    %eax, -84(%ebp)        
-     movl    $99, %eax               #  39:     assign @t27 <- 99
+     movl    $99, %eax               #  36:     assign @t24 <- 99
-     movl    -84(%ebp), %edi        
+     movl    -72(%ebp), %edi        
-     call    dummyINTfunc            #  41:     call   t28 <- dummyINTfunc
+     call    dummyINTfunc            #  38:     call   t25 <- dummyINTfunc
-     movl    %eax, -88(%ebp)        
+     movl    %eax, -76(%ebp)        
-     movl    $69930, %eax            #  42:     if     69930 < t28 goto 11_while_body
+     movl    $69930, %eax            #  39:     if     69930 < t25 goto 11_while_body
-     movl    -88(%ebp), %ebx        
+     movl    -76(%ebp), %ebx        
-     jmp     l_f0_9                  #  43:     goto   9
+     jmp     l_f0_9                  #  40:     goto   9
-     movl    $1, %eax                #  45:     assign v4 <- 1
+     movl    $1, %eax                #  42:     assign v4 <- 1
-     movb    %al, -114(%ebp)        
+     movb    %al, -102(%ebp)        
-     movl    $100, %eax              #  48:     if     100 <= 97 goto 17_while_body
+     movl    $100, %eax              #  45:     if     100 <= 97 goto 17_while_body
-     jmp     l_f0_15                 #  49:     goto   15
+     jmp     l_f0_15                 #  46:     goto   15
-     jmp     l_f0_16_while_cond      #  51:     goto   16_while_cond
+     jmp     l_f0_16_while_cond      #  48:     goto   16_while_cond
-     jmp     l_f0_10_while_cond      #  53:     goto   10_while_cond
+     jmp     l_f0_10_while_cond      #  50:     goto   10_while_cond
-     addl    $104, %esp              # remove locals
+     addl    $92, %esp               # remove locals
-     jmp     l_test_26               #  29:     goto   26
+     jmp     l_test_27               #  29:     goto   27
-     jmp     l_test_26               #  30:     goto   26
+     jmp     l_test_27               #  30:     goto   27
-     jmp     l_test_26               #  31:     goto   26
+     jmp     l_test_27               #  31:     goto   27
- l_test_26:
+ l_test_27:
-     jmp     l_test_28               #  34:     goto   28
+     jmp     l_test_29               #  34:     goto   29
- l_test_28:
+ l_test_29:
