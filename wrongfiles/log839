-     #    -60(%ebp)   4  [ $t21      <int> %ebp-60 ]
+     #    -60(%ebp)   4  [ $t3       <int> %ebp-60 ]
-     #    -64(%ebp)   4  [ $t22      <int> %ebp-64 ]
+     #    -64(%ebp)   4  [ $t4       <int> %ebp-64 ]
-     #    -68(%ebp)   4  [ $t3       <int> %ebp-68 ]
+     #    -68(%ebp)   4  [ $t5       <int> %ebp-68 ]
-     #    -72(%ebp)   4  [ $t4       <int> %ebp-72 ]
+     #    -72(%ebp)   4  [ $t6       <int> %ebp-72 ]
-     #    -76(%ebp)   4  [ $t5       <int> %ebp-76 ]
+     #    -76(%ebp)   4  [ $t7       <int> %ebp-76 ]
-     #    -80(%ebp)   4  [ $t6       <int> %ebp-80 ]
+     #    -80(%ebp)   4  [ $t8       <int> %ebp-80 ]
-     #    -84(%ebp)   4  [ $t7       <int> %ebp-84 ]
+     #    -84(%ebp)   4  [ $t9       <int> %ebp-84 ]
-     #    -88(%ebp)   4  [ $t8       <int> %ebp-88 ]
-     #    -92(%ebp)   4  [ $t9       <int> %ebp-92 ]
-     #    -96(%ebp)   4  [ $v4       <int> %ebp-96 ]
+     #    -88(%ebp)   4  [ $v4       <int> %ebp-88 ]
-     #    -97(%ebp)   1  [ $v5       <char> %ebp-97 ]
+     #    -89(%ebp)   1  [ $v5       <char> %ebp-89 ]
-     pushl   %ebp                   
-     movl    %esp, %ebp             
-     pushl   %ebx                    # save callee saved registers
-     pushl   %esi                   
+     pushl   %ebp                   
+     movl    %esp, %ebp             
+     pushl   %ebx                    # save callee saved registers
-     pushl   %edi                   
+     pushl   %esi                   
+     pushl   %edi                   
-     subl    $88, %esp               # make room for locals
+     subl    $80, %esp               # make room for locals
-     movl    $22, %ecx              
+     movl    $20, %ecx              
-     movl    %eax, -68(%ebp)        
+     movl    %eax, -60(%ebp)        
-     movl    -68(%ebp), %ebx        
+     movl    -60(%ebp), %ebx        
-     movl    %eax, -72(%ebp)        
+     movl    %eax, -64(%ebp)        
-     movl    %eax, -76(%ebp)        
+     movl    %eax, -68(%ebp)        
-     movl    -72(%ebp), %eax         #   5:     add    t6 <- t4, t5
+     movl    -64(%ebp), %eax         #   5:     add    t6 <- t4, t5
-     movl    -76(%ebp), %ebx        
+     movl    -68(%ebp), %ebx        
-     movl    %eax, -80(%ebp)        
+     movl    %eax, -72(%ebp)        
-     movl    %eax, -84(%ebp)        
+     movl    %eax, -76(%ebp)        
-     movl    $52741, %eax            #   9:     sub    t9 <- 52741, 11040
-     movl    $11040, %ebx           
-     subl    %ebx, %eax             
-     movl    %eax, -92(%ebp)        
-     movl    -80(%ebp), %eax         #  10:     mul    t8 <- t6, t7
+     movl    -72(%ebp), %eax         #   9:     mul    t8 <- t6, t7
-     movl    -84(%ebp), %ebx        
+     movl    -76(%ebp), %ebx        
-     movl    %eax, -88(%ebp)        
+     movl    %eax, -80(%ebp)        
-     movl    $31770, %eax            #  11:     mul    t10 <- 31770, 6426
+     movl    $31770, %eax            #  10:     mul    t9 <- 31770, 6426
+     movl    %eax, -84(%ebp)        
+     movl    -80(%ebp), %eax         #  11:     add    t10 <- t8, t9
+     movl    -84(%ebp), %ebx        
+     addl    %ebx, %eax             
+     movl    $4, %eax                #  12:     param  1 <- 4
+     pushl   %eax                   
-     movl    -88(%ebp), %eax         #  12:     add    t11 <- t8, t10
+     movl    16(%ebp), %eax          #  13:     param  0 <- v3
-     movl    -16(%ebp), %ebx        
+     pushl   %eax                   
+     call    DIM                     #  14:     call   t11 <- DIM
-     addl    %ebx, %eax             
+     addl    $8, %esp               
-     movl    $4, %eax                #  13:     param  1 <- 4
+     movl    -16(%ebp), %eax         #  15:     mul    t12 <- t10, t11
+     movl    -20(%ebp), %ebx        
-     pushl   %eax                   
+     imull   %ebx                   
-     movl    16(%ebp), %eax          #  14:     param  0 <- v3
-     pushl   %eax                   
-     call    DIM                     #  15:     call   t12 <- DIM
-     addl    $8, %esp               
-     movl    $31770, %eax            #  16:     mul    t14 <- 31770, 6426
-     movl    $6426, %ebx            
-     imull   %ebx                   
-     movl    %eax, -32(%ebp)        
-     movl    -20(%ebp), %eax         #  17:     mul    t13 <- t11, t12
-     movl    -24(%ebp), %ebx        
-     imull   %ebx                   
-     movl    %eax, -28(%ebp)        
-     movl    -28(%ebp), %eax         #  18:     add    t15 <- t13, 41610
+     movl    -24(%ebp), %eax         #  16:     add    t13 <- t12, 41610
+     movl    %eax, -28(%ebp)        
+     movl    $5, %eax                #  17:     param  1 <- 5
+     pushl   %eax                   
+     movl    16(%ebp), %eax          #  18:     param  0 <- v3
+     pushl   %eax                   
+     call    DIM                     #  19:     call   t14 <- DIM
+     addl    $8, %esp               
+     movl    %eax, -32(%ebp)        
+     movl    -28(%ebp), %eax         #  20:     mul    t15 <- t13, t14
+     movl    -32(%ebp), %ebx        
+     imull   %ebx                   
-     movl    $5, %eax                #  19:     param  1 <- 5
-     pushl   %eax                   
-     movl    16(%ebp), %eax          #  20:     param  0 <- v3
+     movl    -36(%ebp), %eax         #  21:     add    t16 <- t15, 60447
+     movl    $60447, %ebx           
-     pushl   %eax                   
-     call    DIM                     #  21:     call   t16 <- DIM
-     addl    $8, %esp               
+     addl    %ebx, %eax             
-     movl    -36(%ebp), %eax         #  22:     mul    t17 <- t15, t16
+     movl    -40(%ebp), %eax         #  22:     mul    t17 <- t16, 4
-     movl    -40(%ebp), %ebx        
+     movl    $4, %ebx               
+     movl    16(%ebp), %eax          #  23:     param  0 <- v3
+     pushl   %eax                   
+     call    DOFS                    #  24:     call   t18 <- DOFS
+     addl    $4, %esp               
+     movl    %eax, -48(%ebp)        
-     movl    -44(%ebp), %eax         #  23:     add    t18 <- t17, 60447
+     movl    -44(%ebp), %eax         #  25:     add    t19 <- t17, t18
-     movl    $60447, %ebx           
+     movl    -48(%ebp), %ebx        
-     movl    %eax, -48(%ebp)        
-     movl    -48(%ebp), %eax         #  24:     mul    t19 <- t18, 4
-     movl    $4, %ebx               
-     imull   %ebx                   
-     movl    16(%ebp), %eax          #  25:     param  0 <- v3
+     movl    16(%ebp), %eax          #  26:     add    t20 <- v3, t19
+     movl    -52(%ebp), %ebx        
-     pushl   %eax                   
-     call    DOFS                    #  26:     call   t20 <- DOFS
-     addl    $4, %esp               
+     addl    %ebx, %eax             
-     movl    -52(%ebp), %eax         #  27:     add    t21 <- t19, t20
-     movl    -56(%ebp), %ebx        
-     addl    %ebx, %eax             
-     movl    %eax, -60(%ebp)        
-     movl    16(%ebp), %eax          #  28:     add    t22 <- v3, t21
-     movl    -60(%ebp), %ebx        
-     addl    %ebx, %eax             
-     movl    %eax, -64(%ebp)        
-     movl    $49507, %eax            #  29:     assign @t22 <- 49507
+     movl    $49507, %eax            #  27:     assign @t20 <- 49507
-     movl    -64(%ebp), %edi        
+     movl    -56(%ebp), %edi        
-     call    WriteLn                 #  30:     call   WriteLn
+     call    WriteLn                 #  28:     call   WriteLn
-     movl    $98, %eax               #  31:     assign v5 <- 98
+     movl    $98, %eax               #  29:     assign v5 <- 98
-     movb    %al, -97(%ebp)         
+     movb    %al, -89(%ebp)         
-     addl    $88, %esp               # remove locals
+     addl    $80, %esp               # remove locals
-     #  -4380(%ebp)4344  [ $v4       <array 9 of <array 2 of <array 4 of <array 6 of <array 10 of <bool>>>>>> %ebp-4380 ]
+     #   -4380(%ebp)  4344  [ $v4       <array 9 of <array 2 of <array 4 of <array 6 of <array 10 of <bool>>>>>> %ebp-4380 ]
-     #  -4908(%ebp) 528  [ $v5       <array 3 of <array 7 of <array 1 of <array 6 of <array 1 of <int>>>>>> %ebp-4908 ]
+     #   -4908(%ebp)  528  [ $v5       <array 3 of <array 7 of <array 1 of <array 6 of <array 1 of <int>>>>>> %ebp-4908 ]
-     jmp     l_f1_14                 #  13:     goto   14
+     jmp     l_f1_15                 #  13:     goto   15
- l_f1_14:
+ l_f1_15:
-     movl    $99, %eax               #  20:     if     99 > 99 goto 16
+     movl    $99, %eax               #  20:     if     99 > 99 goto 17
-     jg      l_f1_16                
+     jg      l_f1_17                
-     jmp     l_f1_17                 #  21:     goto   17
+     jmp     l_f1_18                 #  21:     goto   18
- l_f1_16:
+ l_f1_17:
-     jmp     l_f1_18                 #  24:     goto   18
+     jmp     l_f1_19                 #  24:     goto   19
- l_f1_17:
+ l_f1_18:
- l_f1_18:
+ l_f1_19:
-     addl    $9, %esp               
+     addl    $12, %esp              
-     #  -4412(%ebp)4344  [ $v2       <array 9 of <array 2 of <array 4 of <array 6 of <array 10 of <bool>>>>>> %ebp-4412 ]
+     #   -4412(%ebp)  4344  [ $v2       <array 9 of <array 2 of <array 4 of <array 6 of <array 10 of <bool>>>>>> %ebp-4412 ]
-     #  -4940(%ebp) 528  [ $v3       <array 3 of <array 7 of <array 1 of <array 6 of <array 1 of <int>>>>>> %ebp-4940 ]
+     #   -4940(%ebp)  528  [ $v3       <array 3 of <array 7 of <array 1 of <array 6 of <array 1 of <int>>>>>> %ebp-4940 ]
-     #  -4941(%ebp)   1  [ $v4       <bool> %ebp-4941 ]
+     #   -4941(%ebp)   1  [ $v4       <bool> %ebp-4941 ]
-     # -31968(%ebp)27024  [ $v5       <array 9 of <array 10 of <array 10 of <array 6 of <array 5 of <bool>>>>>> %ebp-31968 ]
+     #   -31968(%ebp)  27024  [ $v5       <array 9 of <array 10 of <array 10 of <array 6 of <array 5 of <bool>>>>>> %ebp-31968 ]
-     # -32232(%ebp) 264  [ $v6       <array 2 of <array 2 of <array 2 of <array 5 of <array 6 of <char>>>>>> %ebp-32232 ]
+     #   -32232(%ebp)  264  [ $v6       <array 2 of <array 2 of <array 2 of <array 5 of <array 6 of <char>>>>>> %ebp-32232 ]
-     addl    $9, %esp               
+     addl    $12, %esp              
-     addl    $9, %esp               
+     addl    $12, %esp              
-     addl    $9, %esp               
+     addl    $12, %esp              
-     addl    $9, %esp               
+     addl    $12, %esp              
