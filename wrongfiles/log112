-     #    -76(%ebp)   4  [ $t25      <int> %ebp-76 ]
-     #    -77(%ebp)   1  [ $t3       <char> %ebp-77 ]
+     #    -73(%ebp)   1  [ $t3       <char> %ebp-73 ]
-     #    -84(%ebp)   4  [ $t4       <ptr(4) to <array 7 of <array 10 of <array 7 of <array 3 of <array 7 of <bool>>>>>>> %ebp-84 ]
+     #    -80(%ebp)   4  [ $t4       <ptr(4) to <array 7 of <array 10 of <array 7 of <array 3 of <array 7 of <bool>>>>>>> %ebp-80 ]
-     #    -88(%ebp)   4  [ $t5       <ptr(4) to <array 8 of <array 7 of <array 8 of <array 9 of <array 6 of <bool>>>>>>> %ebp-88 ]
+     #    -84(%ebp)   4  [ $t5       <ptr(4) to <array 8 of <array 7 of <array 8 of <array 9 of <array 6 of <bool>>>>>>> %ebp-84 ]
-     #    -92(%ebp)   4  [ $t6       <ptr(4) to <array 1 of <array 3 of <array 6 of <array 9 of <array 7 of <int>>>>>>> %ebp-92 ]
+     #    -88(%ebp)   4  [ $t6       <ptr(4) to <array 1 of <array 3 of <array 6 of <array 9 of <array 7 of <int>>>>>>> %ebp-88 ]
-     #    -93(%ebp)   1  [ $t7       <char> %ebp-93 ]
+     #    -89(%ebp)   1  [ $t7       <char> %ebp-89 ]
+     #    -96(%ebp)   4  [ $t8       <int> %ebp-96 ]
-     #   -100(%ebp)   4  [ $t8       <int> %ebp-100 ]
+     #   -100(%ebp)   4  [ $t9       <int> %ebp-100 ]
-     #   -104(%ebp)   4  [ $t9       <int> %ebp-104 ]
-     #   -105(%ebp)   1  [ $v2       <bool> %ebp-105 ]
+     #   -101(%ebp)   1  [ $v2       <bool> %ebp-101 ]
-     #   -106(%ebp)   1  [ $v3       <char> %ebp-106 ]
+     #   -102(%ebp)   1  [ $v3       <char> %ebp-102 ]
-     #  -4668(%ebp)4560  [ $v4       <array 1 of <array 3 of <array 6 of <array 9 of <array 7 of <int>>>>>> %ebp-4668 ]
+     #   -4664(%ebp)  4560  [ $v4       <array 1 of <array 3 of <array 6 of <array 9 of <array 7 of <int>>>>>> %ebp-4664 ]
-     # -28884(%ebp)24216  [ $v5       <array 8 of <array 7 of <array 8 of <array 9 of <array 6 of <bool>>>>>> %ebp-28884 ]
+     #   -28880(%ebp)  24216  [ $v5       <array 8 of <array 7 of <array 8 of <array 9 of <array 6 of <bool>>>>>> %ebp-28880 ]
-     # -39200(%ebp)10314  [ $v6       <array 7 of <array 10 of <array 7 of <array 3 of <array 7 of <bool>>>>>> %ebp-39200 ]
+     #   -39196(%ebp)  10314  [ $v6       <array 7 of <array 10 of <array 7 of <array 3 of <array 7 of <bool>>>>>> %ebp-39196 ]
-     pushl   %ebp                   
-     movl    %esp, %ebp             
-     pushl   %ebx                    # save callee saved registers
-     pushl   %esi                   
+     pushl   %ebp                   
+     movl    %esp, %ebp             
+     pushl   %ebx                    # save callee saved registers
-     pushl   %edi                   
+     pushl   %esi                   
+     pushl   %edi                   
-     subl    $39188, %esp            # make room for locals
+     subl    $39184, %esp            # make room for locals
-     movl    $9797, %ecx            
+     movl    $9796, %ecx            
-     movl    $5,-4668(%ebp)          # local array 'v4': 5 dimensions
+     movl    $5,-4664(%ebp)          # local array 'v4': 5 dimensions
-     movl    $1,-4664(%ebp)          #   dimension 1: 1 elements
+     movl    $1,-4660(%ebp)          #   dimension 1: 1 elements
-     movl    $3,-4660(%ebp)          #   dimension 2: 3 elements
+     movl    $3,-4656(%ebp)          #   dimension 2: 3 elements
-     movl    $6,-4656(%ebp)          #   dimension 3: 6 elements
+     movl    $6,-4652(%ebp)          #   dimension 3: 6 elements
-     movl    $9,-4652(%ebp)          #   dimension 4: 9 elements
+     movl    $9,-4648(%ebp)          #   dimension 4: 9 elements
-     movl    $7,-4648(%ebp)          #   dimension 5: 7 elements
+     movl    $7,-4644(%ebp)          #   dimension 5: 7 elements
-     movl    $5,-28884(%ebp)         # local array 'v5': 5 dimensions
+     movl    $5,-28880(%ebp)         # local array 'v5': 5 dimensions
-     movl    $8,-28880(%ebp)         #   dimension 1: 8 elements
+     movl    $8,-28876(%ebp)         #   dimension 1: 8 elements
-     movl    $7,-28876(%ebp)         #   dimension 2: 7 elements
+     movl    $7,-28872(%ebp)         #   dimension 2: 7 elements
-     movl    $8,-28872(%ebp)         #   dimension 3: 8 elements
+     movl    $8,-28868(%ebp)         #   dimension 3: 8 elements
-     movl    $9,-28868(%ebp)         #   dimension 4: 9 elements
+     movl    $9,-28864(%ebp)         #   dimension 4: 9 elements
-     movl    $6,-28864(%ebp)         #   dimension 5: 6 elements
+     movl    $6,-28860(%ebp)         #   dimension 5: 6 elements
-     movl    $5,-39200(%ebp)         # local array 'v6': 5 dimensions
+     movl    $5,-39196(%ebp)         # local array 'v6': 5 dimensions
-     movl    $7,-39196(%ebp)         #   dimension 1: 7 elements
+     movl    $7,-39192(%ebp)         #   dimension 1: 7 elements
-     movl    $10,-39192(%ebp)        #   dimension 2: 10 elements
+     movl    $10,-39188(%ebp)        #   dimension 2: 10 elements
-     movl    $7,-39188(%ebp)         #   dimension 3: 7 elements
+     movl    $7,-39184(%ebp)         #   dimension 3: 7 elements
-     movl    $3,-39184(%ebp)         #   dimension 4: 3 elements
+     movl    $3,-39180(%ebp)         #   dimension 4: 3 elements
-     movl    $7,-39180(%ebp)         #   dimension 5: 7 elements
+     movl    $7,-39176(%ebp)         #   dimension 5: 7 elements
-     movb    %al, -77(%ebp)         
+     movb    %al, -73(%ebp)         
+     jmp     l_f2_6_if_false         #   3:     goto   6_if_false
-     movl    $1, %eax                #   5:     assign v2 <- 1
+     movl    $1, %eax                #   6:     assign v2 <- 1
-     movb    %al, -105(%ebp)        
+     movb    %al, -101(%ebp)        
-     jmp     l_f2_4                  #   6:     goto   4
+     jmp     l_f2_4                  #   7:     goto   4
+ l_f2_6_if_false:
-     leal    -39200(%ebp), %eax      #   8:     &()    t4 <- v6
+     leal    -39196(%ebp), %eax      #  10:     &()    t4 <- v6
+     movl    %eax, -80(%ebp)        
+     movl    -80(%ebp), %eax         #  11:     param  3 <- t4
+     pushl   %eax                   
+     leal    -28880(%ebp), %eax      #  12:     &()    t5 <- v5
-     movl    -84(%ebp), %eax         #   9:     param  3 <- t4
+     movl    -84(%ebp), %eax         #  13:     param  2 <- t5
-     leal    -28884(%ebp), %eax      #  10:     &()    t5 <- v5
+     leal    -4664(%ebp), %eax       #  14:     &()    t6 <- v4
-     movl    -88(%ebp), %eax         #  11:     param  2 <- t5
+     movl    -88(%ebp), %eax         #  15:     param  1 <- t6
-     leal    -4668(%ebp), %eax       #  12:     &()    t6 <- v4
-     movl    %eax, -92(%ebp)        
-     movl    -92(%ebp), %eax         #  13:     param  1 <- t6
-     pushl   %eax                   
-     movl    $100, %eax              #  14:     param  0 <- 100
+     movl    $100, %eax              #  16:     param  0 <- 100
-     call    f0                      #  15:     call   t7 <- f0
+     call    f0                      #  17:     call   t7 <- f0
-     addl    $13, %esp              
+     addl    $16, %esp              
-     movb    %al, -93(%ebp)         
+     movb    %al, -89(%ebp)         
-     movl    $71619, %eax            #  16:     sub    t8 <- 71619, 79284
+     movl    $71619, %eax            #  18:     sub    t8 <- 71619, 79284
+     movl    %eax, -96(%ebp)        
+     movl    $2, %eax                #  19:     param  1 <- 2
+     pushl   %eax                   
+     movl    12(%ebp), %eax          #  20:     param  0 <- v1
+     pushl   %eax                   
+     call    DIM                     #  21:     call   t9 <- DIM
+     addl    $8, %esp               
-     movl    $2, %eax                #  17:     param  1 <- 2
-     pushl   %eax                   
-     movl    12(%ebp), %eax          #  18:     param  0 <- v1
-     pushl   %eax                   
-     call    DIM                     #  19:     call   t9 <- DIM
-     addl    $8, %esp               
-     movl    %eax, -104(%ebp)       
-     movl    $71619, %eax            #  20:     sub    t11 <- 71619, 79284
-     movl    $79284, %ebx           
-     subl    %ebx, %eax             
-     movl    %eax, -20(%ebp)        
-     movl    -100(%ebp), %eax        #  21:     mul    t10 <- t8, t9
+     movl    -96(%ebp), %eax         #  22:     mul    t10 <- t8, t9
-     movl    -104(%ebp), %ebx       
+     movl    -100(%ebp), %ebx       
-     movl    -16(%ebp), %eax         #  22:     add    t12 <- t10, 48755
+     movl    -16(%ebp), %eax         #  23:     add    t11 <- t10, 48755
+     movl    %eax, -20(%ebp)        
+     movl    $3, %eax                #  24:     param  1 <- 3
+     pushl   %eax                   
+     movl    12(%ebp), %eax          #  25:     param  0 <- v1
+     pushl   %eax                   
+     call    DIM                     #  26:     call   t12 <- DIM
+     addl    $8, %esp               
+     movl    -20(%ebp), %eax         #  27:     mul    t13 <- t11, t12
+     movl    -24(%ebp), %ebx        
+     imull   %ebx                   
+     movl    %eax, -28(%ebp)        
+     movl    -28(%ebp), %eax         #  28:     add    t14 <- t13, 6238
+     movl    $6238, %ebx            
+     addl    %ebx, %eax             
+     movl    %eax, -32(%ebp)        
-     movl    $3, %eax                #  23:     param  1 <- 3
+     movl    $4, %eax                #  29:     param  1 <- 4
-     movl    12(%ebp), %eax          #  24:     param  0 <- v1
+     movl    12(%ebp), %eax          #  30:     param  0 <- v1
-     call    DIM                     #  25:     call   t13 <- DIM
+     call    DIM                     #  31:     call   t15 <- DIM
-     movl    %eax, -28(%ebp)        
+     movl    %eax, -36(%ebp)        
-     movl    -24(%ebp), %eax         #  26:     mul    t14 <- t12, t13
+     movl    -32(%ebp), %eax         #  32:     mul    t16 <- t14, t15
-     movl    -28(%ebp), %ebx        
+     movl    -36(%ebp), %ebx        
-     movl    %eax, -32(%ebp)        
+     movl    %eax, -40(%ebp)        
-     movl    -32(%ebp), %eax         #  27:     add    t15 <- t14, 6238
+     movl    -40(%ebp), %eax         #  33:     add    t17 <- t16, 46134
-     movl    $6238, %ebx            
+     movl    $46134, %ebx           
-     movl    %eax, -36(%ebp)        
+     movl    %eax, -44(%ebp)        
-     movl    $4, %eax                #  28:     param  1 <- 4
+     movl    $5, %eax                #  34:     param  1 <- 5
-     movl    12(%ebp), %eax          #  29:     param  0 <- v1
+     movl    12(%ebp), %eax          #  35:     param  0 <- v1
-     call    DIM                     #  30:     call   t16 <- DIM
+     call    DIM                     #  36:     call   t18 <- DIM
-     movl    %eax, -40(%ebp)        
+     movl    %eax, -48(%ebp)        
-     movl    -36(%ebp), %eax         #  31:     mul    t17 <- t15, t16
+     movl    -44(%ebp), %eax         #  37:     mul    t19 <- t17, t18
-     movl    -40(%ebp), %ebx        
+     movl    -48(%ebp), %ebx        
-     movl    %eax, -44(%ebp)        
-     movl    -44(%ebp), %eax         #  32:     add    t18 <- t17, 46134
-     movl    $46134, %ebx           
-     addl    %ebx, %eax             
-     movl    %eax, -48(%ebp)        
-     movl    $5, %eax                #  33:     param  1 <- 5
-     pushl   %eax                   
-     movl    12(%ebp), %eax          #  34:     param  0 <- v1
-     pushl   %eax                   
-     call    DIM                     #  35:     call   t19 <- DIM
-     addl    $8, %esp               
-     movl    -48(%ebp), %eax         #  36:     mul    t20 <- t18, t19
+     movl    -52(%ebp), %eax         #  38:     add    t20 <- t19, 64058
-     movl    -52(%ebp), %ebx        
+     movl    $64058, %ebx           
-     imull   %ebx                   
+     addl    %ebx, %eax             
-     movl    -56(%ebp), %eax         #  37:     add    t21 <- t20, 64058
-     movl    $64058, %ebx           
-     addl    %ebx, %eax             
-     movl    %eax, -60(%ebp)        
-     movl    -60(%ebp), %eax         #  38:     mul    t22 <- t21, 1
+     movl    -56(%ebp), %eax         #  39:     mul    t21 <- t20, 1
+     movl    %eax, -60(%ebp)        
+     movl    12(%ebp), %eax          #  40:     param  0 <- v1
+     pushl   %eax                   
+     call    DOFS                    #  41:     call   t22 <- DOFS
+     addl    $4, %esp               
-     movl    12(%ebp), %eax          #  39:     param  0 <- v1
+     movl    -60(%ebp), %eax         #  42:     add    t23 <- t21, t22
+     movl    -64(%ebp), %ebx        
-     pushl   %eax                   
-     call    DOFS                    #  40:     call   t23 <- DOFS
-     addl    $4, %esp               
+     addl    %ebx, %eax             
-     movl    -64(%ebp), %eax         #  41:     add    t24 <- t22, t23
+     movl    12(%ebp), %eax          #  43:     add    t24 <- v1, t23
-     movl    12(%ebp), %eax          #  42:     add    t25 <- v1, t24
-     movl    -72(%ebp), %ebx        
-     addl    %ebx, %eax             
-     movl    %eax, -76(%ebp)        
-     movzbl  -93(%ebp), %eax         #  43:     assign @t25 <- t7
+     movzbl  -89(%ebp), %eax         #  44:     assign @t24 <- t7
-     movl    -76(%ebp), %edi        
+     movl    -72(%ebp), %edi        
-     addl    $39188, %esp            # remove locals
+     addl    $39184, %esp            # remove locals
+     jmp     l_test_11               #  16:     goto   11
-     leal    _str_1, %eax            #  16:     &()    t1 <- _str_1
+     leal    _str_1, %eax            #  17:     &()    t1 <- _str_1
-     movl    -20(%ebp), %eax         #  17:     param  0 <- t1
+     movl    -20(%ebp), %eax         #  18:     param  0 <- t1
-     call    WriteStr                #  18:     call   WriteStr
+     call    WriteStr                #  19:     call   WriteStr
-     jmp     l_test_12_while_cond    #  20:     goto   12_while_cond
+     jmp     l_test_12_while_cond    #  21:     goto   12_while_cond
+ l_test_11:
-     call    dummyCHARfunc           #  21:     call   t2 <- dummyCHARfunc
+     call    dummyCHARfunc           #  23:     call   t2 <- dummyCHARfunc
-     movl    $100, %eax              #  25:     assign v0 <- 100
+     movl    $100, %eax              #  27:     assign v0 <- 100
-     jmp     l_test_20               #  26:     goto   20
+     jmp     l_test_20               #  28:     goto   20
