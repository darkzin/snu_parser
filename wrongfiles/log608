-     #  -1216(%ebp)1176  [ $v3       <array 9 of <array 2 of <array 4 of <array 8 of <array 2 of <bool>>>>>> %ebp-1216 ]
+     #   -1216(%ebp)  1176  [ $v3       <array 9 of <array 2 of <array 4 of <array 8 of <array 2 of <bool>>>>>> %ebp-1216 ]
-     #  -1217(%ebp)   1  [ $v4       <char> %ebp-1217 ]
+     #   -1217(%ebp)   1  [ $v4       <char> %ebp-1217 ]
-     addl    $1, %esp               
+     addl    $4, %esp               
+     jmp     l_f2_17                 #  26:     goto   17
-     jmp     l_f2_18_while_cond      #  26:     goto   18_while_cond
+     jmp     l_f2_18_while_cond      #  27:     goto   18_while_cond
+ l_f2_17:
-     jmp     l_f2_13                 #  27:     goto   13
+     jmp     l_f2_13                 #  29:     goto   13
+     jmp     l_test_7_if_false       #  11:     goto   7_if_false
+     jmp     l_test_7_if_false       #  12:     goto   7_if_false
-     movl    $98, %eax               #  11:     param  0 <- 98
+     movl    $98, %eax               #  13:     param  0 <- 98
-     call    WriteChar               #  12:     call   WriteChar
+     call    WriteChar               #  14:     call   WriteChar
-     addl    $1, %esp               
+     addl    $4, %esp               
-     movl    $99, %eax               #  13:     assign v1 <- 99
+     movl    $99, %eax               #  15:     assign v1 <- 99
-     movl    $44102, %eax            #  15:     if     44102 >= 36089 goto 14_while_body
+     movl    $44102, %eax            #  17:     if     44102 >= 36089 goto 14_while_body
-     jmp     l_test_12               #  16:     goto   12
+     jmp     l_test_12               #  18:     goto   12
-     jmp     l_test_13_while_cond    #  18:     goto   13_while_cond
+     jmp     l_test_13_while_cond    #  20:     goto   13_while_cond
-     movl    $97, %eax               #  21:     assign v1 <- 97
+     movl    $97, %eax               #  23:     assign v1 <- 97
-     jmp     l_test_5                #  22:     goto   5
+     jmp     l_test_5                #  24:     goto   5
+ l_test_7_if_false:
-     call    dummyINTfunc            #  24:     call   t4 <- dummyINTfunc
+     call    dummyINTfunc            #  27:     call   t4 <- dummyINTfunc
-     jmp     l_test_19               #  26:     goto   19
+     jmp     l_test_19               #  29:     goto   19
-     movl    $36392, %eax            #  27:     if     36392 <= 46578 goto 23_if_true
+     movl    $36392, %eax            #  30:     if     36392 <= 46578 goto 23_if_true
-     jmp     l_test_24_if_false      #  28:     goto   24_if_false
+     jmp     l_test_24_if_false      #  31:     goto   24_if_false
-     jmp     l_test_22               #  30:     goto   22
+     jmp     l_test_22               #  33:     goto   22
-     movl    $100, %eax              #  33:     assign v1 <- 100
+     movl    $100, %eax              #  36:     assign v1 <- 100
-     movl    $84667, %eax            #  34:     assign v0 <- 84667
+     movl    $84667, %eax            #  37:     assign v0 <- 84667
-     jmp     l_test_20_while_cond    #  35:     goto   20_while_cond
+     jmp     l_test_20_while_cond    #  38:     goto   20_while_cond
-     call    ReadInt                 #  37:     call   t5 <- ReadInt
+     call    ReadInt                 #  40:     call   t5 <- ReadInt
