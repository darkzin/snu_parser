-     #-3761704(%ebp)3761664  [ $v2       <array 86 of <array 9 of <array 36 of <array 27 of <array 5 of <char>>>>>> %ebp-3761704 ]
+     #   -3761704(%ebp)  3761664  [ $v2       <array 86 of <array 9 of <array 36 of <array 27 of <array 5 of <char>>>>>> %ebp-3761704 ]
-     #-3761705(%ebp)   1  [ $v3       <char> %ebp-3761705 ]
+     #   -3761705(%ebp)   1  [ $v3       <char> %ebp-3761705 ]
-     jmp     l_f2_15                 #  16:     goto   15
+     jmp     l_f2_16                 #  16:     goto   16
+     jmp     l_f2_17                 #  17:     goto   17
- l_f2_15:
+ l_f2_16:
-     movl    $1, %eax                #  18:     assign t4 <- 1
+     movl    $1, %eax                #  19:     assign t4 <- 1
-     jmp     l_f2_17                 #  19:     goto   17
+     jmp     l_f2_18                 #  20:     goto   18
+ l_f2_17:
-     movl    $0, %eax                #  20:     assign t4 <- 0
+     movl    $0, %eax                #  22:     assign t4 <- 0
- l_f2_17:
+ l_f2_18:
-     movl    $1, %eax                #  22:     if     1 = t4 goto 13_if_true
+     movl    $1, %eax                #  24:     if     1 = t4 goto 13_if_true
-     jmp     l_f2_14_if_false        #  23:     goto   14_if_false
+     jmp     l_f2_14_if_false        #  25:     goto   14_if_false
-     jmp     l_f2_23_if_false        #  25:     goto   23_if_false
+     jmp     l_f2_23_if_false        #  27:     goto   23_if_false
-     jmp     l_f2_21                 #  26:     goto   21
+     jmp     l_f2_21                 #  28:     goto   21
-     call    ReadInt                 #  29:     call   t5 <- ReadInt
+     call    ReadInt                 #  31:     call   t5 <- ReadInt
-     jmp     l_f2_26_while_cond      #  31:     goto   26_while_cond
+     jmp     l_f2_26_while_cond      #  33:     goto   26_while_cond
-     movl    $0, %eax                #  32:     assign v1 <- 0
+     movl    $0, %eax                #  34:     assign v1 <- 0
-     movl    $100, %eax              #  33:     if     100 > 98 goto 30
+     movl    $100, %eax              #  35:     if     100 > 98 goto 30
-     jmp     l_f2_31                 #  34:     goto   31
+     jmp     l_f2_31                 #  36:     goto   31
-     movl    $1, %eax                #  36:     assign t6 <- 1
+     movl    $1, %eax                #  38:     assign t6 <- 1
-     jmp     l_f2_32                 #  37:     goto   32
+     jmp     l_f2_32                 #  39:     goto   32
-     movl    $0, %eax                #  39:     assign t6 <- 0
+     movl    $0, %eax                #  41:     assign t6 <- 0
-     movzbl  -21(%ebp), %eax         #  41:     return t6
+     movzbl  -21(%ebp), %eax         #  43:     return t6
-     jmp     l_f2_12                 #  42:     goto   12
+     jmp     l_f2_12                 #  44:     goto   12
-     jmp     l_test_17               #  22:     goto   17
+     jmp     l_test_21               #  22:     goto   21
+     jmp     l_test_18               #  23:     goto   18
- l_test_17:
+ l_test_21:
+ l_test_18:
-     movl    $1, %eax                #  24:     assign t1 <- 1
+     movl    $1, %eax                #  26:     assign t1 <- 1
-     jmp     l_test_19               #  25:     goto   19
+     jmp     l_test_20               #  27:     goto   20
-     movl    $0, %eax                #  26:     assign t1 <- 0
+     movl    $0, %eax                #  28:     assign t1 <- 0
- l_test_19:
+ l_test_20:
-     movzbl  -14(%ebp), %eax         #  28:     if     t1 = 0 goto 16_while_body
+     movzbl  -14(%ebp), %eax         #  30:     if     t1 = 0 goto 16_while_body
-     jmp     l_test_14               #  29:     goto   14
+     jmp     l_test_14               #  31:     goto   14
-     jmp     l_test_15_while_cond    #  31:     goto   15_while_cond
+     jmp     l_test_15_while_cond    #  33:     goto   15_while_cond
-     movl    $68954, %eax            #  33:     add    t2 <- 68954, 30012
+     movl    $68954, %eax            #  35:     add    t2 <- 68954, 30012
-     movl    -20(%ebp), %eax         #  34:     assign v0 <- t2
+     movl    -20(%ebp), %eax         #  36:     assign v0 <- t2
-     movl    $0, %eax                #  35:     assign v1 <- 0
+     movl    $0, %eax                #  37:     assign v1 <- 0
