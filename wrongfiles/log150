+     jmp     l_f1_3_if_false         #   1:     goto   3_if_false
-     jmp     l_f1_6_while_cond       #   2:     goto   6_while_cond
+     jmp     l_f1_6_while_cond       #   3:     goto   6_while_cond
-     movl    $84107, %eax            #   4:     if     84107 < 36969 goto 10_while_body
+     movl    $84107, %eax            #   5:     if     84107 < 36969 goto 10_while_body
-     jmp     l_f1_8                  #   5:     goto   8
+     jmp     l_f1_8                  #   6:     goto   8
-     jmp     l_f1_9_while_cond       #   7:     goto   9_while_cond
+     jmp     l_f1_9_while_cond       #   8:     goto   9_while_cond
-     jmp     l_f1_13_while_cond      #  10:     goto   13_while_cond
+     jmp     l_f1_13_while_cond      #  11:     goto   13_while_cond
-     movl    $73280, %eax            #  11:     assign v1 <- 73280
+     movl    $73280, %eax            #  12:     assign v1 <- 73280
-     movl    $98, %eax               #  12:     if     98 < 100 goto 17_if_true
+     movl    $98, %eax               #  13:     if     98 < 100 goto 17_if_true
-     jmp     l_f1_18_if_false        #  13:     goto   18_if_false
+     jmp     l_f1_18_if_false        #  14:     goto   18_if_false
-     jmp     l_f1_16                 #  15:     goto   16
+     jmp     l_f1_16                 #  16:     goto   16
-     jmp     l_f1_1                  #  18:     goto   1
+     jmp     l_f1_1                  #  19:     goto   1
+ l_f1_3_if_false:
-     movl    $98, %eax               #  20:     param  0 <- 98
+     movl    $98, %eax               #  22:     param  0 <- 98
-     call    WriteChar               #  21:     call   WriteChar
+     call    WriteChar               #  23:     call   WriteChar
-     addl    $1, %esp               
+     addl    $4, %esp               
-     jmp     l_f2_2_while_body       #   1:     goto   2_while_body
+     jmp     l_f2_5                  #   1:     goto   5
+ l_f2_5:
-     jmp     l_f2_2_while_body       #   3:     goto   2_while_body
+     jmp     l_f2_2_while_body       #   4:     goto   2_while_body
+     jmp     l_f2_2_while_body       #   5:     goto   2_while_body
+     jmp     l_f2_0                  #   6:     goto   0
-     jmp     l_f2_1_while_cond       #   5:     goto   1_while_cond
+     jmp     l_f2_1_while_cond       #   8:     goto   1_while_cond
+ l_f2_0:
-     jmp     l_f2_9                  #   7:     goto   9
+     jmp     l_f2_9                  #  11:     goto   9
-     movl    $100, %eax              #   9:     if     100 > 99 goto 14_while_body
+     movl    $100, %eax              #  13:     if     100 > 99 goto 14_while_body
-     jmp     l_f2_12                 #  10:     goto   12
+     jmp     l_f2_12                 #  14:     goto   12
-     movl    $46618, %eax            #  12:     assign v1 <- 46618
+     movl    $46618, %eax            #  16:     assign v1 <- 46618
-     movl    $99, %eax               #  13:     assign v2 <- 99
+     movl    $99, %eax               #  17:     assign v2 <- 99
-     jmp     l_f2_13_while_cond      #  14:     goto   13_while_cond
+     jmp     l_f2_13_while_cond      #  18:     goto   13_while_cond
-     jmp     l_f2_10_while_cond      #  16:     goto   10_while_cond
+     jmp     l_f2_10_while_cond      #  20:     goto   10_while_cond
-     call    dummyCHARfunc           #  18:     call   t6 <- dummyCHARfunc
+     call    dummyCHARfunc           #  22:     call   t6 <- dummyCHARfunc
