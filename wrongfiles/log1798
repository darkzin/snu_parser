+     jmp     l_f0_6                  #   3:     goto   6
-     movl    $1, %eax                #   3:     assign t2 <- 1
+     movl    $1, %eax                #   4:     assign t2 <- 1
-     jmp     l_f0_6                  #   4:     goto   6
+     jmp     l_f0_7                  #   5:     goto   7
+ l_f0_6:
-     movl    $0, %eax                #   5:     assign t2 <- 0
+     movl    $0, %eax                #   7:     assign t2 <- 0
- l_f0_6:
+ l_f0_7:
-     movl    $0, %eax                #   7:     if     0 # t2 goto 3_while_body
+     movl    $0, %eax                #   9:     if     0 # t2 goto 3_while_body
-     jmp     l_f0_1                  #   8:     goto   1
+     jmp     l_f0_1                  #  10:     goto   1
-     movl    $100, %eax              #  11:     if     100 >= 100 goto 11_while_body
+     movl    $100, %eax              #  13:     if     100 >= 100 goto 11_while_body
-     jmp     l_f0_9                  #  12:     goto   9
+     jmp     l_f0_9                  #  14:     goto   9
-     jmp     l_f0_10_while_cond      #  14:     goto   10_while_cond
+     jmp     l_f0_10_while_cond      #  16:     goto   10_while_cond
-     movl    $97, %eax               #  16:     if     97 # 97 goto 14_if_true
+     movl    $97, %eax               #  18:     if     97 # 97 goto 14_if_true
-     jmp     l_f0_15_if_false        #  17:     goto   15_if_false
+     jmp     l_f0_15_if_false        #  19:     goto   15_if_false
-     jmp     l_f0_13                 #  19:     goto   13
+     jmp     l_f0_13                 #  21:     goto   13
-     movl    $97, %eax               #  22:     if     97 < 99 goto 18
+     movl    $97, %eax               #  24:     if     97 < 99 goto 18
-     jmp     l_f0_19                 #  23:     goto   19
+     jmp     l_f0_19                 #  25:     goto   19
-     movl    $1, %eax                #  25:     assign t3 <- 1
+     movl    $1, %eax                #  27:     assign t3 <- 1
-     jmp     l_f0_20                 #  26:     goto   20
+     jmp     l_f0_20                 #  28:     goto   20
-     movl    $0, %eax                #  28:     assign t3 <- 0
+     movl    $0, %eax                #  30:     assign t3 <- 0
-     movzbl  -18(%ebp), %eax         #  30:     return t3
+     movzbl  -18(%ebp), %eax         #  32:     return t3
-     movl    $96676, %eax            #  31:     if     96676 # 3695 goto 23
+     movl    $96676, %eax            #  33:     if     96676 # 3695 goto 23
-     jmp     l_f0_24                 #  32:     goto   24
+     jmp     l_f0_24                 #  34:     goto   24
-     movl    $1, %eax                #  34:     assign t4 <- 1
+     movl    $1, %eax                #  36:     assign t4 <- 1
-     jmp     l_f0_25                 #  35:     goto   25
+     jmp     l_f0_25                 #  37:     goto   25
-     movl    $0, %eax                #  37:     assign t4 <- 0
+     movl    $0, %eax                #  39:     assign t4 <- 0
-     movzbl  -19(%ebp), %eax         #  39:     return t4
+     movzbl  -19(%ebp), %eax         #  41:     return t4
-     movl    $0, %eax                #  40:     return 0
+     movl    $0, %eax                #  42:     return 0
-     jmp     l_f0_2_while_cond       #  41:     goto   2_while_cond
+     jmp     l_f0_2_while_cond       #  43:     goto   2_while_cond
-     movl    $0, %eax                #  43:     assign v2 <- 0
+     movl    $0, %eax                #  45:     assign v2 <- 0
-     #-8822904(%ebp)8822864  [ $v0       <array 65 of <array 76 of <array 1 of <array 38 of <array 47 of <bool>>>>>> %ebp-8822904 ]
+     #   -8822904(%ebp)  8822864  [ $v0       <array 65 of <array 76 of <array 1 of <array 38 of <array 47 of <bool>>>>>> %ebp-8822904 ]
-     #-43543152(%ebp)34720248  [ $v1       <array 28 of <array 11 of <array 61 of <array 84 of <array 22 of <bool>>>>>> %ebp-43543152 ]
+     #   -43543152(%ebp)  34720248  [ $v1       <array 28 of <array 11 of <array 61 of <array 84 of <array 22 of <bool>>>>>> %ebp-43543152 ]
-     #-43543156(%ebp)   4  [ $v2       <int> %ebp-43543156 ]
+     #   -43543156(%ebp)   4  [ $v2       <int> %ebp-43543156 ]
