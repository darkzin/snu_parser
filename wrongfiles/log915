-     #    -60(%ebp)   4  [ $t21      <int> %ebp-60 ]
+     #    -60(%ebp)   4  [ $t21      <ptr(4) to <array 8 of <array 8 of <array 4 of <array 9 of <array 10 of <int>>>>>>> %ebp-60 ]
+     #    -72(%ebp)   4  [ $t24      <int> %ebp-72 ]
-     #    -72(%ebp)   4  [ $t24      <ptr(4) to <array 8 of <array 8 of <array 4 of <array 9 of <array 10 of <int>>>>>>> %ebp-72 ]
+     #    -76(%ebp)   4  [ $t25      <ptr(4) to <array 8 of <array 8 of <array 4 of <array 9 of <array 10 of <int>>>>>>> %ebp-76 ]
-     #    -76(%ebp)   4  [ $t25      <int> %ebp-76 ]
-     #    -88(%ebp)   4  [ $t28      <ptr(4) to <array 8 of <array 8 of <array 4 of <array 9 of <array 10 of <int>>>>>>> %ebp-88 ]
+     #    -88(%ebp)   4  [ $t28      <int> %ebp-88 ]
-     #    -96(%ebp)   4  [ $t30      <int> %ebp-96 ]
+     #    -96(%ebp)   4  [ $t30      <ptr(4) to <array 8 of <array 8 of <array 4 of <array 9 of <array 10 of <int>>>>>>> %ebp-96 ]
-     #   -108(%ebp)   4  [ $t33      <ptr(4) to <array 8 of <array 8 of <array 4 of <array 9 of <array 10 of <int>>>>>>> %ebp-108 ]
-     #   -112(%ebp)   4  [ $t34      <int> %ebp-112 ]
-     #   -116(%ebp)   4  [ $t35      <int> %ebp-116 ]
-     #   -120(%ebp)   4  [ $t36      <int> %ebp-120 ]
+     #   -108(%ebp)   4  [ $t33      <int> %ebp-108 ]
-     #   -121(%ebp)   1  [ $t4       <char> %ebp-121 ]
+     #   -109(%ebp)   1  [ $t4       <char> %ebp-109 ]
-     #   -128(%ebp)   4  [ $t5       <ptr(4) to <array 8 of <array 8 of <array 4 of <array 9 of <array 10 of <int>>>>>>> %ebp-128 ]
+     #   -116(%ebp)   4  [ $t5       <ptr(4) to <array 8 of <array 8 of <array 4 of <array 9 of <array 10 of <int>>>>>>> %ebp-116 ]
-     #   -132(%ebp)   4  [ $t6       <ptr(4) to <array 9 of <array 8 of <array 10 of <array 8 of <array 5 of <int>>>>>>> %ebp-132 ]
+     #   -120(%ebp)   4  [ $t6       <ptr(4) to <array 9 of <array 8 of <array 10 of <array 8 of <array 5 of <int>>>>>>> %ebp-120 ]
-     #   -133(%ebp)   1  [ $t7       <char> %ebp-133 ]
+     #   -121(%ebp)   1  [ $t7       <char> %ebp-121 ]
-     #   -140(%ebp)   4  [ $t8       <int> %ebp-140 ]
+     #   -128(%ebp)   4  [ $t8       <int> %ebp-128 ]
-     #   -144(%ebp)   4  [ $t9       <ptr(4) to <array 8 of <array 8 of <array 4 of <array 9 of <array 10 of <int>>>>>>> %ebp-144 ]
+     #   -132(%ebp)   4  [ $t9       <ptr(4) to <array 8 of <array 8 of <array 4 of <array 9 of <array 10 of <int>>>>>>> %ebp-132 ]
-     #-115368(%ebp)115224  [ $v1       <array 9 of <array 8 of <array 10 of <array 8 of <array 5 of <int>>>>>> %ebp-115368 ]
+     #   -115356(%ebp)  115224  [ $v1       <array 9 of <array 8 of <array 10 of <array 8 of <array 5 of <int>>>>>> %ebp-115356 ]
-     #-207552(%ebp)92184  [ $v2       <array 8 of <array 8 of <array 4 of <array 9 of <array 10 of <int>>>>>> %ebp-207552 ]
+     #   -207540(%ebp)  92184  [ $v2       <array 8 of <array 8 of <array 4 of <array 9 of <array 10 of <int>>>>>> %ebp-207540 ]
-     #-207556(%ebp)   4  [ $v3       <int> %ebp-207556 ]
+     #   -207544(%ebp)   4  [ $v3       <int> %ebp-207544 ]
-     pushl   %ebp                   
-     movl    %esp, %ebp             
-     pushl   %ebx                    # save callee saved registers
-     pushl   %esi                   
+     pushl   %ebp                   
+     movl    %esp, %ebp             
+     pushl   %ebx                    # save callee saved registers
-     pushl   %edi                   
+     pushl   %esi                   
+     pushl   %edi                   
-     subl    $207544, %esp           # make room for locals
+     subl    $207532, %esp           # make room for locals
-     movl    $51886, %ecx           
+     movl    $51883, %ecx           
-     movl    $5,-115368(%ebp)        # local array 'v1': 5 dimensions
+     movl    $5,-115356(%ebp)        # local array 'v1': 5 dimensions
-     movl    $9,-115364(%ebp)        #   dimension 1: 9 elements
+     movl    $9,-115352(%ebp)        #   dimension 1: 9 elements
-     movl    $8,-115360(%ebp)        #   dimension 2: 8 elements
+     movl    $8,-115348(%ebp)        #   dimension 2: 8 elements
-     movl    $10,-115356(%ebp)       #   dimension 3: 10 elements
+     movl    $10,-115344(%ebp)       #   dimension 3: 10 elements
-     movl    $8,-115352(%ebp)        #   dimension 4: 8 elements
+     movl    $8,-115340(%ebp)        #   dimension 4: 8 elements
-     movl    $5,-115348(%ebp)        #   dimension 5: 5 elements
+     movl    $5,-115336(%ebp)        #   dimension 5: 5 elements
-     movl    $5,-207552(%ebp)        # local array 'v2': 5 dimensions
+     movl    $5,-207540(%ebp)        # local array 'v2': 5 dimensions
-     movl    $8,-207548(%ebp)        #   dimension 1: 8 elements
+     movl    $8,-207536(%ebp)        #   dimension 1: 8 elements
-     movl    $8,-207544(%ebp)        #   dimension 2: 8 elements
+     movl    $8,-207532(%ebp)        #   dimension 2: 8 elements
-     movl    $4,-207540(%ebp)        #   dimension 3: 4 elements
+     movl    $4,-207528(%ebp)        #   dimension 3: 4 elements
-     movl    $9,-207536(%ebp)        #   dimension 4: 9 elements
+     movl    $9,-207524(%ebp)        #   dimension 4: 9 elements
-     movl    $10,-207532(%ebp)       #   dimension 5: 10 elements
+     movl    $10,-207520(%ebp)       #   dimension 5: 10 elements
-     movb    %al, -121(%ebp)        
+     movb    %al, -109(%ebp)        
-     movzbl  -121(%ebp), %ebx       
+     movzbl  -109(%ebp), %ebx       
-     leal    -207552(%ebp), %eax     #   9:     &()    t5 <- v2
+     leal    -207540(%ebp), %eax     #   9:     &()    t5 <- v2
-     movl    %eax, -128(%ebp)       
+     movl    %eax, -116(%ebp)       
-     movl    -128(%ebp), %eax        #  10:     param  1 <- t5
+     movl    -116(%ebp), %eax        #  10:     param  1 <- t5
-     leal    -115368(%ebp), %eax     #  11:     &()    t6 <- v1
+     leal    -115356(%ebp), %eax     #  11:     &()    t6 <- v1
-     movl    %eax, -132(%ebp)       
+     movl    %eax, -120(%ebp)       
-     movl    -132(%ebp), %eax        #  12:     param  0 <- t6
+     movl    -120(%ebp), %eax        #  12:     param  0 <- t6
-     addl    $10, %esp              
+     addl    $16, %esp              
-     movb    %al, -133(%ebp)        
+     movb    %al, -121(%ebp)        
-     movl    %eax, -140(%ebp)       
+     movl    %eax, -128(%ebp)       
-     leal    -207552(%ebp), %eax     #  15:     &()    t9 <- v2
+     leal    -207540(%ebp), %eax     #  15:     &()    t9 <- v2
-     movl    %eax, -144(%ebp)       
+     movl    %eax, -132(%ebp)       
-     leal    -207552(%ebp), %eax     #  17:     &()    t10 <- v2
+     leal    -207540(%ebp), %eax     #  17:     &()    t10 <- v2
-     leal    -207552(%ebp), %eax     #  26:     &()    t17 <- v2
+     leal    -207540(%ebp), %eax     #  26:     &()    t17 <- v2
-     movl    $32146, %eax            #  29:     div    t20 <- 32146, 92877
-     movl    $92877, %ebx           
-     cdq                            
-     idivl   %ebx                   
-     movl    %eax, -56(%ebp)        
-     movl    -56(%ebp), %eax         #  30:     mul    t21 <- t20, 90091
-     movl    $90091, %ebx           
-     imull   %ebx                   
-     movl    %eax, -60(%ebp)        
-     movl    -60(%ebp), %eax         #  31:     div    t22 <- t21, 84123
-     movl    $84123, %ebx           
-     cdq                            
-     idivl   %ebx                   
-     movl    %eax, -64(%ebp)        
-     movl    -40(%ebp), %eax         #  32:     mul    t19 <- t16, t18
+     movl    -40(%ebp), %eax         #  29:     mul    t19 <- t16, t18
-     movl    -52(%ebp), %eax         #  33:     add    t23 <- t19, 60763
+     movl    -52(%ebp), %eax         #  30:     add    t20 <- t19, 60763
+     movl    %eax, -56(%ebp)        
+     movl    $4, %eax                #  31:     param  1 <- 4
+     pushl   %eax                   
+     leal    -207540(%ebp), %eax     #  32:     &()    t21 <- v2
+     movl    %eax, -60(%ebp)        
+     movl    -60(%ebp), %eax         #  33:     param  0 <- t21
+     pushl   %eax                   
+     call    DIM                     #  34:     call   t22 <- DIM
+     addl    $8, %esp               
+     movl    %eax, -64(%ebp)        
+     movl    -56(%ebp), %eax         #  35:     mul    t23 <- t20, t22
+     movl    -64(%ebp), %ebx        
+     imull   %ebx                   
-     movl    $4, %eax                #  34:     param  1 <- 4
-     pushl   %eax                   
-     leal    -207552(%ebp), %eax     #  35:     &()    t24 <- v2
-     movl    %eax, -72(%ebp)        
-     movl    -72(%ebp), %eax         #  36:     param  0 <- t24
-     pushl   %eax                   
-     call    DIM                     #  37:     call   t25 <- DIM
-     addl    $8, %esp               
-     movl    %eax, -76(%ebp)        
-     movl    -68(%ebp), %eax         #  38:     mul    t26 <- t23, t25
-     movl    -76(%ebp), %ebx        
-     imull   %ebx                   
-     movl    %eax, -80(%ebp)        
-     movl    -80(%ebp), %eax         #  39:     add    t27 <- t26, 82345
+     movl    -68(%ebp), %eax         #  36:     add    t24 <- t23, 82345
+     movl    %eax, -72(%ebp)        
+     movl    $5, %eax                #  37:     param  1 <- 5
+     pushl   %eax                   
+     leal    -207540(%ebp), %eax     #  38:     &()    t25 <- v2
+     movl    %eax, -76(%ebp)        
+     movl    -76(%ebp), %eax         #  39:     param  0 <- t25
+     pushl   %eax                   
+     call    DIM                     #  40:     call   t26 <- DIM
+     addl    $8, %esp               
+     movl    %eax, -80(%ebp)        
+     movl    -72(%ebp), %eax         #  41:     mul    t27 <- t24, t26
+     movl    -80(%ebp), %ebx        
+     imull   %ebx                   
-     movl    $5, %eax                #  40:     param  1 <- 5
-     pushl   %eax                   
-     leal    -207552(%ebp), %eax     #  41:     &()    t28 <- v2
-     movl    %eax, -88(%ebp)        
-     movl    -88(%ebp), %eax         #  42:     param  0 <- t28
-     pushl   %eax                   
-     call    DIM                     #  43:     call   t29 <- DIM
-     addl    $8, %esp               
-     movl    %eax, -92(%ebp)        
-     movl    -84(%ebp), %eax         #  44:     mul    t30 <- t27, t29
-     movl    -92(%ebp), %ebx        
-     imull   %ebx                   
-     movl    %eax, -96(%ebp)        
-     movl    -96(%ebp), %eax         #  45:     add    t31 <- t30, 3267
+     movl    -84(%ebp), %eax         #  42:     add    t28 <- t27, 3267
-     movl    %eax, -100(%ebp)       
+     movl    %eax, -88(%ebp)        
-     movl    -100(%ebp), %eax        #  46:     mul    t32 <- t31, 4
+     movl    -88(%ebp), %eax         #  43:     mul    t29 <- t28, 4
+     movl    %eax, -92(%ebp)        
+     leal    -207540(%ebp), %eax     #  44:     &()    t30 <- v2
+     movl    %eax, -96(%ebp)        
+     movl    -96(%ebp), %eax         #  45:     param  0 <- t30
+     pushl   %eax                   
+     call    DOFS                    #  46:     call   t31 <- DOFS
+     addl    $4, %esp               
+     movl    %eax, -100(%ebp)       
+     movl    -92(%ebp), %eax         #  47:     add    t32 <- t29, t31
+     movl    -100(%ebp), %ebx       
+     addl    %ebx, %eax             
-     leal    -207552(%ebp), %eax     #  47:     &()    t33 <- v2
+     movl    -132(%ebp), %eax        #  48:     add    t33 <- t9, t32
+     movl    -104(%ebp), %ebx       
+     addl    %ebx, %eax             
-     movl    -108(%ebp), %eax        #  48:     param  0 <- t33
-     pushl   %eax                   
-     call    DOFS                    #  49:     call   t34 <- DOFS
-     addl    $4, %esp               
-     movl    %eax, -112(%ebp)       
-     movl    -104(%ebp), %eax        #  50:     add    t35 <- t32, t34
-     movl    -112(%ebp), %ebx       
-     addl    %ebx, %eax             
-     movl    %eax, -116(%ebp)       
-     movl    -144(%ebp), %eax        #  51:     add    t36 <- t9, t35
-     movl    -116(%ebp), %ebx       
-     addl    %ebx, %eax             
-     movl    %eax, -120(%ebp)       
-     movl    -140(%ebp), %eax        #  52:     assign @t36 <- t8
+     movl    -128(%ebp), %eax        #  49:     assign @t33 <- t8
-     movl    -120(%ebp), %edi       
+     movl    -108(%ebp), %edi       
-     addl    $207544, %esp           # remove locals
+     addl    $207532, %esp           # remove locals
-     #-115268(%ebp)115224  [ $v3       <array 9 of <array 8 of <array 10 of <array 8 of <array 5 of <int>>>>>> %ebp-115268 ]
+     #   -115268(%ebp)  115224  [ $v3       <array 9 of <array 8 of <array 10 of <array 8 of <array 5 of <int>>>>>> %ebp-115268 ]
-     #-207452(%ebp)92184  [ $v4       <array 8 of <array 8 of <array 4 of <array 9 of <array 10 of <int>>>>>> %ebp-207452 ]
+     #   -207452(%ebp)  92184  [ $v4       <array 8 of <array 8 of <array 4 of <array 9 of <array 10 of <int>>>>>> %ebp-207452 ]
-     addl    $10, %esp              
+     addl    $16, %esp              
-     movl    $73996, %eax            #  30:     if     73996 = 31583 goto 20
+     movl    $73996, %eax            #  30:     if     73996 = 31583 goto 21
-     je      l_f2_20                
+     je      l_f2_21                
-     jmp     l_f2_21                 #  31:     goto   21
+     jmp     l_f2_22                 #  31:     goto   22
- l_f2_20:
+ l_f2_21:
-     jmp     l_f2_22                 #  34:     goto   22
+     jmp     l_f2_23                 #  34:     goto   23
- l_f2_21:
+ l_f2_22:
- l_f2_22:
+ l_f2_23:
-     addl    $10, %esp              
+     addl    $16, %esp              
+     jmp     l_test_1                #   2:     goto   1
-     movl    $97, %eax               #   3:     if     97 > 97 goto 7_while_body
+     movl    $97, %eax               #   4:     if     97 > 97 goto 7_while_body
-     jmp     l_test_5                #   4:     goto   5
+     jmp     l_test_5                #   5:     goto   5
-     jmp     l_test_6_while_cond     #   6:     goto   6_while_cond
+     jmp     l_test_6_while_cond     #   7:     goto   6_while_cond
-     jmp     l_test_2_while_cond     #   8:     goto   2_while_cond
+     jmp     l_test_2_while_cond     #   9:     goto   2_while_cond
+ l_test_1:
-     movl    $9342, %eax             #   9:     if     9342 > 14094 goto 10
+     movl    $9342, %eax             #  11:     if     9342 > 14094 goto 10
-     jmp     l_test_11               #  10:     goto   11
+     jmp     l_test_11               #  12:     goto   11
-     movl    $1, %eax                #  12:     assign t0 <- 1
+     movl    $1, %eax                #  14:     assign t0 <- 1
-     jmp     l_test_12               #  13:     goto   12
+     jmp     l_test_12               #  15:     goto   12
-     movl    $0, %eax                #  15:     assign t0 <- 0
+     movl    $0, %eax                #  17:     assign t0 <- 0
-     movzbl  -13(%ebp), %eax         #  17:     param  3 <- t0
+     movzbl  -13(%ebp), %eax         #  19:     param  3 <- t0
-     movl    $97, %eax               #  18:     param  2 <- 97
+     movl    $97, %eax               #  20:     param  2 <- 97
-     leal    v1, %eax                #  19:     &()    t1 <- v1
+     leal    v1, %eax                #  21:     &()    t1 <- v1
-     movl    -20(%ebp), %eax         #  20:     param  1 <- t1
+     movl    -20(%ebp), %eax         #  22:     param  1 <- t1
-     leal    v0, %eax                #  21:     &()    t2 <- v0
+     leal    v0, %eax                #  23:     &()    t2 <- v0
-     movl    -24(%ebp), %eax         #  22:     param  0 <- t2
+     movl    -24(%ebp), %eax         #  24:     param  0 <- t2
-     call    f0                      #  23:     call   t3 <- f0
+     call    f0                      #  25:     call   t3 <- f0
-     addl    $10, %esp              
+     addl    $16, %esp              
-     call    dummyProcedure          #  24:     call   dummyProcedure
+     call    dummyProcedure          #  26:     call   dummyProcedure
