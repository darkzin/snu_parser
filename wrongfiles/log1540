+     jmp     l_f1_2_if_false         #   0:     goto   2_if_false
+     jmp     l_f1_2_if_false         #   1:     goto   2_if_false
+     jmp     l_f1_2_if_false         #   2:     goto   2_if_false
-     movl    $100, %eax              #   0:     assign v0 <- 100
+     movl    $100, %eax              #   3:     assign v0 <- 100
-     movl    $70078, %eax            #   2:     if     70078 >= 97158 goto 9_while_body
+     movl    $70078, %eax            #   5:     if     70078 >= 97158 goto 9_while_body
-     jmp     l_f1_7                  #   3:     goto   7
+     jmp     l_f1_7                  #   6:     goto   7
-     jmp     l_f1_8_while_cond       #   5:     goto   8_while_cond
+     jmp     l_f1_8_while_cond       #   8:     goto   8_while_cond
-     movl    $98, %eax               #   7:     assign v0 <- 98
+     movl    $98, %eax               #  10:     assign v0 <- 98
-     jmp     l_f1_0                  #   8:     goto   0
+     jmp     l_f1_0                  #  11:     goto   0
+ l_f1_2_if_false:
-     call    dummyBOOLfunc           #  12:     call   t9 <- dummyBOOLfunc
+     call    dummyBOOLfunc           #  16:     call   t9 <- dummyBOOLfunc
-     movzbl  -14(%ebp), %eax         #  13:     if     t9 = 1 goto 15_while_body
+     movzbl  -14(%ebp), %eax         #  17:     if     t9 = 1 goto 15_while_body
-     jmp     l_f1_13                 #  14:     goto   13
+     jmp     l_f1_13                 #  18:     goto   13
-     call    dummyCHARfunc           #  16:     call   t10 <- dummyCHARfunc
+     call    dummyCHARfunc           #  20:     call   t10 <- dummyCHARfunc
-     jmp     l_f1_14_while_cond      #  17:     goto   14_while_cond
+     jmp     l_f1_14_while_cond      #  21:     goto   14_while_cond
-     addl    $1, %esp               
+     addl    $4, %esp               
+     jmp     l_f2_18                 #  24:     goto   18
+     jmp     l_f2_18                 #  25:     goto   18
-     jmp     l_f2_25_if_false        #  24:     goto   25_if_false
+     jmp     l_f2_25_if_false        #  26:     goto   25_if_false
-     jmp     l_f2_23                 #  25:     goto   23
+     jmp     l_f2_23                 #  27:     goto   23
-     jmp     l_f2_26                 #  28:     goto   26
+     jmp     l_f2_26                 #  30:     goto   26
-     movl    $82041, %eax            #  30:     return 82041
+     movl    $82041, %eax            #  32:     return 82041
-     jmp     l_f2_19_while_cond      #  31:     goto   19_while_cond
+     jmp     l_f2_19_while_cond      #  33:     goto   19_while_cond
+ l_f2_18:
