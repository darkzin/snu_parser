-     #  -6532(%ebp)6504  [ $v2       <array 10 of <array 1 of <array 6 of <array 3 of <array 9 of <int>>>>>> %ebp-6532 ]
+     #   -6532(%ebp)  6504  [ $v2       <array 10 of <array 1 of <array 6 of <array 3 of <array 9 of <int>>>>>> %ebp-6532 ]
-     #  -6536(%ebp)   4  [ $v3       <int> %ebp-6536 ]
+     #   -6536(%ebp)   4  [ $v3       <int> %ebp-6536 ]
-     #    -76(%ebp)   4  [ $t22      <int> %ebp-76 ]
+     #    -73(%ebp)   1  [ $t22      <char> %ebp-73 ]
+     #    -74(%ebp)   1  [ $t3       <bool> %ebp-74 ]
-     #    -80(%ebp)   4  [ $t23      <int> %ebp-80 ]
+     #    -80(%ebp)   4  [ $t4       <int> %ebp-80 ]
-     #    -81(%ebp)   1  [ $t24      <char> %ebp-81 ]
-     #    -82(%ebp)   1  [ $t3       <bool> %ebp-82 ]
+     #    -84(%ebp)   4  [ $t5       <int> %ebp-84 ]
-     #    -88(%ebp)   4  [ $t4       <int> %ebp-88 ]
+     #    -88(%ebp)   4  [ $t6       <int> %ebp-88 ]
-     #    -92(%ebp)   4  [ $t5       <int> %ebp-92 ]
+     #    -92(%ebp)   4  [ $t7       <int> %ebp-92 ]
-     #    -96(%ebp)   4  [ $t6       <int> %ebp-96 ]
+     #    -96(%ebp)   4  [ $t8       <int> %ebp-96 ]
-     #   -100(%ebp)   4  [ $t7       <int> %ebp-100 ]
+     #   -100(%ebp)   4  [ $t9       <int> %ebp-100 ]
-     #   -104(%ebp)   4  [ $t8       <int> %ebp-104 ]
-     #   -108(%ebp)   4  [ $t9       <int> %ebp-108 ]
-     subl    $96, %esp               # make room for locals
+     subl    $88, %esp               # make room for locals
-     movl    $24, %ecx              
+     movl    $22, %ecx              
-     movb    %al, -82(%ebp)         
+     movb    %al, -74(%ebp)         
-     movb    %al, -82(%ebp)         
+     movb    %al, -74(%ebp)         
-     movzbl  -82(%ebp), %eax         #  11:     return t3
+     movzbl  -74(%ebp), %eax         #  11:     return t3
+     movl    %eax, -80(%ebp)        
+     movl    -80(%ebp), %eax         #  13:     add    t5 <- t4, 61825
+     movl    $61825, %ebx           
+     addl    %ebx, %eax             
+     movl    %eax, -84(%ebp)        
+     movl    $2, %eax                #  14:     param  1 <- 2
+     pushl   %eax                   
+     movl    16(%ebp), %eax          #  15:     param  0 <- v2
+     pushl   %eax                   
+     call    DIM                     #  16:     call   t6 <- DIM
+     addl    $8, %esp               
-     movl    -88(%ebp), %eax         #  13:     add    t5 <- t4, 61825
+     movl    -84(%ebp), %eax         #  17:     mul    t7 <- t5, t6
-     movl    $61825, %ebx           
+     movl    -88(%ebp), %ebx        
-     addl    %ebx, %eax             
+     imull   %ebx                   
-     movl    $2, %eax                #  14:     param  1 <- 2
-     pushl   %eax                   
-     movl    16(%ebp), %eax          #  15:     param  0 <- v2
+     movl    -92(%ebp), %eax         #  18:     add    t8 <- t7, 21065
+     movl    $21065, %ebx           
-     pushl   %eax                   
-     call    DIM                     #  16:     call   t6 <- DIM
-     addl    $8, %esp               
+     addl    %ebx, %eax             
+     movl    $3, %eax                #  19:     param  1 <- 3
-     movl    $95889, %eax            #  17:     div    t8 <- 95889, 67065
-     movl    $67065, %ebx           
-     cdq                            
-     idivl   %ebx                   
-     movl    %eax, -104(%ebp)       
-     movl    -104(%ebp), %eax        #  18:     add    t9 <- t8, 61825
-     movl    $61825, %ebx           
-     addl    %ebx, %eax             
-     movl    %eax, -108(%ebp)       
-     movl    -92(%ebp), %eax         #  19:     mul    t7 <- t5, t6
-     movl    -96(%ebp), %ebx        
-     imull   %ebx                   
+     pushl   %eax                   
+     movl    16(%ebp), %eax          #  20:     param  0 <- v2
+     pushl   %eax                   
+     call    DIM                     #  21:     call   t9 <- DIM
+     addl    $8, %esp               
-     movl    -100(%ebp), %eax        #  20:     add    t10 <- t7, 21065
+     movl    -96(%ebp), %eax         #  22:     mul    t10 <- t8, t9
-     movl    $21065, %ebx           
+     movl    -100(%ebp), %ebx       
-     addl    %ebx, %eax             
+     imull   %ebx                   
-     movl    $3, %eax                #  21:     param  1 <- 3
-     pushl   %eax                   
-     movl    16(%ebp), %eax          #  22:     param  0 <- v2
+     movl    -24(%ebp), %eax         #  23:     add    t11 <- t10, 50842
+     movl    $50842, %ebx           
-     pushl   %eax                   
-     call    DIM                     #  23:     call   t11 <- DIM
-     addl    $8, %esp               
+     addl    %ebx, %eax             
+     movl    $4, %eax                #  24:     param  1 <- 4
-     movl    -24(%ebp), %eax         #  24:     mul    t12 <- t10, t11
-     movl    -28(%ebp), %ebx        
-     imull   %ebx                   
+     pushl   %eax                   
+     movl    16(%ebp), %eax          #  25:     param  0 <- v2
+     pushl   %eax                   
+     call    DIM                     #  26:     call   t12 <- DIM
+     addl    $8, %esp               
-     movl    -32(%ebp), %eax         #  25:     add    t13 <- t12, 50842
+     movl    -28(%ebp), %eax         #  27:     mul    t13 <- t11, t12
-     movl    $50842, %ebx           
+     movl    -32(%ebp), %ebx        
-     addl    %ebx, %eax             
+     imull   %ebx                   
-     movl    $4, %eax                #  26:     param  1 <- 4
-     pushl   %eax                   
-     movl    16(%ebp), %eax          #  27:     param  0 <- v2
+     movl    -36(%ebp), %eax         #  28:     add    t14 <- t13, 147
+     movl    $147, %ebx             
-     pushl   %eax                   
-     call    DIM                     #  28:     call   t14 <- DIM
-     addl    $8, %esp               
+     addl    %ebx, %eax             
+     movl    $5, %eax                #  29:     param  1 <- 5
-     movl    -36(%ebp), %eax         #  29:     mul    t15 <- t13, t14
-     movl    -40(%ebp), %ebx        
-     imull   %ebx                   
+     pushl   %eax                   
+     movl    16(%ebp), %eax          #  30:     param  0 <- v2
+     pushl   %eax                   
+     call    DIM                     #  31:     call   t15 <- DIM
+     addl    $8, %esp               
-     movl    -44(%ebp), %eax         #  30:     add    t16 <- t15, 147
+     movl    -40(%ebp), %eax         #  32:     mul    t16 <- t14, t15
-     movl    $147, %ebx             
+     movl    -44(%ebp), %ebx        
-     addl    %ebx, %eax             
+     imull   %ebx                   
-     movl    $5, %eax                #  31:     param  1 <- 5
-     pushl   %eax                   
-     movl    16(%ebp), %eax          #  32:     param  0 <- v2
+     movl    -48(%ebp), %eax         #  33:     add    t17 <- t16, 42242
+     movl    $42242, %ebx           
-     pushl   %eax                   
-     call    DIM                     #  33:     call   t17 <- DIM
-     addl    $8, %esp               
+     addl    %ebx, %eax             
-     movl    -48(%ebp), %eax         #  34:     mul    t18 <- t16, t17
+     movl    -52(%ebp), %eax         #  34:     mul    t18 <- t17, 1
-     movl    -52(%ebp), %ebx        
+     movl    $1, %ebx               
-     movl    -56(%ebp), %eax         #  35:     add    t19 <- t18, 42242
+     movl    16(%ebp), %eax          #  35:     param  0 <- v2
-     movl    $42242, %ebx           
+     pushl   %eax                   
+     call    DOFS                    #  36:     call   t19 <- DOFS
-     addl    %ebx, %eax             
+     addl    $4, %esp               
-     movl    -60(%ebp), %eax         #  36:     mul    t20 <- t19, 1
+     movl    -56(%ebp), %eax         #  37:     add    t20 <- t18, t19
+     movl    -60(%ebp), %ebx        
-     movl    $1, %ebx               
+     addl    %ebx, %eax             
-     imull   %ebx                   
-     movl    16(%ebp), %eax          #  37:     param  0 <- v2
+     movl    16(%ebp), %eax          #  38:     add    t21 <- v2, t20
+     movl    -68(%ebp), %ebx        
-     pushl   %eax                   
-     call    DOFS                    #  38:     call   t21 <- DOFS
-     addl    $4, %esp               
+     addl    %ebx, %eax             
-     movl    -68(%ebp), %eax         #  39:     add    t22 <- t20, t21
-     movl    -72(%ebp), %ebx        
-     addl    %ebx, %eax             
-     movl    %eax, -76(%ebp)        
-     movl    16(%ebp), %eax          #  40:     add    t23 <- v2, t22
-     movl    -76(%ebp), %ebx        
-     addl    %ebx, %eax             
-     movl    %eax, -80(%ebp)        
-     movl    $99, %eax               #  41:     assign @t23 <- 99
+     movl    $99, %eax               #  39:     assign @t21 <- 99
-     movl    -80(%ebp), %edi        
+     movl    -72(%ebp), %edi        
-     call    dummyCHARfunc           #  42:     call   t24 <- dummyCHARfunc
+     call    dummyCHARfunc           #  40:     call   t22 <- dummyCHARfunc
-     movb    %al, -81(%ebp)         
+     movb    %al, -73(%ebp)         
-     addl    $96, %esp               # remove locals
+     addl    $88, %esp               # remove locals
-     jmp     l_test_3_while_body     #   2:     goto   3_while_body
+     jmp     l_test_7                #   2:     goto   7
+ l_test_7:
+     jmp     l_test_3_while_body     #   5:     goto   3_while_body
+     jmp     l_test_1                #   6:     goto   1
-     jmp     l_test_2_while_cond     #   5:     goto   2_while_cond
+     jmp     l_test_2_while_cond     #   8:     goto   2_while_cond
+ l_test_1:
-     jmp     l_test_11_while_body    #   7:     goto   11_while_body
-     jmp     l_test_11_while_body    #   8:     goto   11_while_body
-     jmp     l_test_11_while_body    #   9:     goto   11_while_body
-     jmp     l_test_11_while_body    #  10:     goto   11_while_body
+     jmp     l_test_11_while_body    #  11:     goto   11_while_body
+     jmp     l_test_11_while_body    #  12:     goto   11_while_body
+     jmp     l_test_11_while_body    #  13:     goto   11_while_body
+     jmp     l_test_11_while_body    #  14:     goto   11_while_body
+     jmp     l_test_9                #  15:     goto   9
-     jmp     l_test_10_while_cond    #  12:     goto   10_while_cond
+     jmp     l_test_10_while_cond    #  17:     goto   10_while_cond
+ l_test_9:
-     movl    $99, %eax               #  13:     if     99 # 98 goto 18_if_true
+     movl    $99, %eax               #  19:     if     99 # 98 goto 18_if_true
-     jmp     l_test_19_if_false      #  14:     goto   19_if_false
+     jmp     l_test_19_if_false      #  20:     goto   19_if_false
-     movl    $1, %eax                #  17:     assign v0 <- 1
+     movl    $1, %eax                #  23:     assign v0 <- 1
-     jmp     l_test_17               #  18:     goto   17
+     jmp     l_test_17               #  24:     goto   17
