-     #    -60(%ebp)   4  [ $t21      <int> %ebp-60 ]
+     #    -60(%ebp)   4  [ $t3       <int> %ebp-60 ]
-     #    -64(%ebp)   4  [ $t22      <int> %ebp-64 ]
+     #    -64(%ebp)   4  [ $t4       <int> %ebp-64 ]
-     #    -68(%ebp)   4  [ $t3       <int> %ebp-68 ]
+     #    -68(%ebp)   4  [ $t5       <int> %ebp-68 ]
-     #    -72(%ebp)   4  [ $t4       <int> %ebp-72 ]
+     #    -72(%ebp)   4  [ $t6       <int> %ebp-72 ]
-     #    -76(%ebp)   4  [ $t5       <int> %ebp-76 ]
+     #    -76(%ebp)   4  [ $t7       <int> %ebp-76 ]
-     #    -80(%ebp)   4  [ $t6       <int> %ebp-80 ]
+     #    -80(%ebp)   4  [ $t8       <int> %ebp-80 ]
-     #    -84(%ebp)   4  [ $t7       <int> %ebp-84 ]
+     #    -84(%ebp)   4  [ $t9       <int> %ebp-84 ]
-     #    -88(%ebp)   4  [ $t8       <int> %ebp-88 ]
-     #    -92(%ebp)   4  [ $t9       <int> %ebp-92 ]
-     #    -96(%ebp)   4  [ $v2       <int> %ebp-96 ]
+     #    -88(%ebp)   4  [ $v2       <int> %ebp-88 ]
-     pushl   %ebp                   
-     movl    %esp, %ebp             
-     pushl   %ebx                    # save callee saved registers
-     pushl   %esi                   
+     pushl   %ebp                   
+     movl    %esp, %ebp             
+     pushl   %ebx                    # save callee saved registers
-     pushl   %edi                   
+     pushl   %esi                   
+     pushl   %edi                   
-     subl    $84, %esp               # make room for locals
+     subl    $76, %esp               # make room for locals
-     movl    $21, %ecx              
+     movl    $19, %ecx              
+     jmp     l_f0_0                  #   4:     goto   0
-     jmp     l_f0_1_while_cond       #   5:     goto   1_while_cond
+     jmp     l_f0_1_while_cond       #   6:     goto   1_while_cond
+ l_f0_0:
-     movl    $71365, %eax            #   6:     div    t3 <- 71365, 12185
+     movl    $71365, %eax            #   8:     div    t3 <- 71365, 12185
+     movl    %eax, -60(%ebp)        
+     movl    $2, %eax                #   9:     param  1 <- 2
+     pushl   %eax                   
+     movl    8(%ebp), %eax           #  10:     param  0 <- v0
+     pushl   %eax                   
+     call    DIM                     #  11:     call   t4 <- DIM
+     addl    $8, %esp               
+     movl    %eax, -64(%ebp)        
+     movl    -60(%ebp), %eax         #  12:     mul    t5 <- t3, t4
+     movl    -64(%ebp), %ebx        
+     imull   %ebx                   
+     movl    -68(%ebp), %eax         #  13:     add    t6 <- t5, 97477
+     movl    $97477, %ebx           
+     addl    %ebx, %eax             
+     movl    %eax, -72(%ebp)        
-     movl    $2, %eax                #   7:     param  1 <- 2
+     movl    $3, %eax                #  14:     param  1 <- 3
-     movl    8(%ebp), %eax           #   8:     param  0 <- v0
+     movl    8(%ebp), %eax           #  15:     param  0 <- v0
-     call    DIM                     #   9:     call   t4 <- DIM
+     call    DIM                     #  16:     call   t7 <- DIM
-     movl    %eax, -72(%ebp)        
+     movl    %eax, -76(%ebp)        
-     movl    $71365, %eax            #  10:     div    t6 <- 71365, 12185
+     movl    -72(%ebp), %eax         #  17:     mul    t8 <- t6, t7
-     movl    $12185, %ebx           
+     movl    -76(%ebp), %ebx        
-     cdq                            
-     idivl   %ebx                   
+     imull   %ebx                   
-     movl    -68(%ebp), %eax         #  11:     mul    t5 <- t3, t4
-     movl    -72(%ebp), %ebx        
-     imull   %ebx                   
-     movl    %eax, -76(%ebp)        
-     movl    -76(%ebp), %eax         #  12:     add    t7 <- t5, 97477
-     movl    $97477, %ebx           
-     addl    %ebx, %eax             
-     movl    %eax, -84(%ebp)        
-     movl    $3, %eax                #  13:     param  1 <- 3
-     pushl   %eax                   
-     movl    8(%ebp), %eax           #  14:     param  0 <- v0
-     pushl   %eax                   
-     call    DIM                     #  15:     call   t8 <- DIM
-     addl    $8, %esp               
-     movl    %eax, -88(%ebp)        
-     movl    -84(%ebp), %eax         #  16:     mul    t9 <- t7, t8
-     movl    -88(%ebp), %ebx        
-     imull   %ebx                   
-     movl    %eax, -92(%ebp)        
-     movl    $1466, %eax             #  17:     sub    t10 <- 1466, 60359
+     movl    $1466, %eax             #  18:     sub    t9 <- 1466, 60359
+     movl    %eax, -84(%ebp)        
+     movl    -80(%ebp), %eax         #  19:     add    t10 <- t8, t9
+     movl    -84(%ebp), %ebx        
+     addl    %ebx, %eax             
+     movl    $4, %eax                #  20:     param  1 <- 4
+     pushl   %eax                   
-     movl    -92(%ebp), %eax         #  18:     add    t11 <- t9, t10
+     movl    8(%ebp), %eax           #  21:     param  0 <- v0
-     movl    -16(%ebp), %ebx        
+     pushl   %eax                   
+     call    DIM                     #  22:     call   t11 <- DIM
-     addl    %ebx, %eax             
+     addl    $8, %esp               
+     movl    -16(%ebp), %eax         #  23:     mul    t12 <- t10, t11
+     movl    -20(%ebp), %ebx        
+     imull   %ebx                   
+     movl    %eax, -24(%ebp)        
+     movl    -24(%ebp), %eax         #  24:     add    t13 <- t12, 97363
+     movl    $97363, %ebx           
+     addl    %ebx, %eax             
+     movl    %eax, -28(%ebp)        
-     movl    $4, %eax                #  19:     param  1 <- 4
+     movl    $5, %eax                #  25:     param  1 <- 5
-     movl    8(%ebp), %eax           #  20:     param  0 <- v0
+     movl    8(%ebp), %eax           #  26:     param  0 <- v0
-     call    DIM                     #  21:     call   t12 <- DIM
+     call    DIM                     #  27:     call   t14 <- DIM
-     movl    %eax, -24(%ebp)        
-     movl    $1466, %eax             #  22:     sub    t14 <- 1466, 60359
-     movl    $60359, %ebx           
-     subl    %ebx, %eax             
-     movl    -20(%ebp), %eax         #  23:     mul    t13 <- t11, t12
+     movl    -28(%ebp), %eax         #  28:     mul    t15 <- t13, t14
-     movl    -24(%ebp), %ebx        
+     movl    -32(%ebp), %ebx        
-     movl    %eax, -28(%ebp)        
-     movl    -28(%ebp), %eax         #  24:     add    t15 <- t13, 97363
-     movl    $97363, %ebx           
-     addl    %ebx, %eax             
-     movl    $5, %eax                #  25:     param  1 <- 5
-     pushl   %eax                   
-     movl    8(%ebp), %eax           #  26:     param  0 <- v0
+     movl    -36(%ebp), %eax         #  29:     add    t16 <- t15, 30340
+     movl    $30340, %ebx           
-     pushl   %eax                   
-     call    DIM                     #  27:     call   t16 <- DIM
-     addl    $8, %esp               
+     addl    %ebx, %eax             
-     movl    -36(%ebp), %eax         #  28:     mul    t17 <- t15, t16
+     movl    -40(%ebp), %eax         #  30:     mul    t17 <- t16, 4
-     movl    -40(%ebp), %ebx        
+     movl    $4, %ebx               
-     movl    -44(%ebp), %eax         #  29:     add    t18 <- t17, 30340
+     movl    8(%ebp), %eax           #  31:     param  0 <- v0
-     movl    $30340, %ebx           
+     pushl   %eax                   
+     call    DOFS                    #  32:     call   t18 <- DOFS
-     addl    %ebx, %eax             
+     addl    $4, %esp               
-     movl    -48(%ebp), %eax         #  30:     mul    t19 <- t18, 4
+     movl    -44(%ebp), %eax         #  33:     add    t19 <- t17, t18
-     movl    $4, %ebx               
+     movl    -48(%ebp), %ebx        
-     imull   %ebx                   
+     addl    %ebx, %eax             
-     movl    8(%ebp), %eax           #  31:     param  0 <- v0
+     movl    8(%ebp), %eax           #  34:     add    t20 <- v0, t19
+     movl    -52(%ebp), %ebx        
-     pushl   %eax                   
-     call    DOFS                    #  32:     call   t20 <- DOFS
-     addl    $4, %esp               
+     addl    %ebx, %eax             
-     movl    -52(%ebp), %eax         #  33:     add    t21 <- t19, t20
-     movl    -56(%ebp), %ebx        
-     addl    %ebx, %eax             
-     movl    %eax, -60(%ebp)        
-     movl    8(%ebp), %eax           #  34:     add    t22 <- v0, t21
-     movl    -60(%ebp), %ebx        
-     addl    %ebx, %eax             
-     movl    %eax, -64(%ebp)        
-     movl    $58223, %eax            #  35:     assign @t22 <- 58223
+     movl    $58223, %eax            #  35:     assign @t20 <- 58223
-     movl    -64(%ebp), %edi        
+     movl    -56(%ebp), %edi        
-     addl    $84, %esp               # remove locals
+     addl    $76, %esp               # remove locals
+     jmp     l_f2_2                  #   2:     goto   2
-     movl    $1, %eax                #   3:     assign t3 <- 1
+     movl    $1, %eax                #   4:     assign t3 <- 1
-     jmp     l_f2_3                  #   4:     goto   3
+     jmp     l_f2_3                  #   5:     goto   3
+ l_f2_2:
-     movl    $0, %eax                #   5:     assign t3 <- 0
+     movl    $0, %eax                #   7:     assign t3 <- 0
-     movzbl  -13(%ebp), %eax         #   7:     assign v1 <- t3
+     movzbl  -13(%ebp), %eax         #   9:     assign v1 <- t3
-     movl    $98, %eax               #   8:     assign v0 <- 98
+     movl    $98, %eax               #  10:     assign v0 <- 98
-     jmp     l_f2_7                  #  10:     goto   7
+     jmp     l_f2_7                  #  12:     goto   7
-     movl    $99, %eax               #  11:     if     99 > 100 goto 11_if_true
+     movl    $99, %eax               #  13:     if     99 > 100 goto 11_if_true
-     jmp     l_f2_12_if_false        #  12:     goto   12_if_false
+     jmp     l_f2_12_if_false        #  14:     goto   12_if_false
-     jmp     l_f2_14                 #  15:     goto   14
+     jmp     l_f2_14                 #  17:     goto   14
-     jmp     l_f2_15_while_cond      #  16:     goto   15_while_cond
+     jmp     l_f2_15_while_cond      #  18:     goto   15_while_cond
-     movl    $97, %eax               #  18:     if     97 = 100 goto 18
+     movl    $97, %eax               #  20:     if     97 = 100 goto 18
-     jmp     l_f2_19                 #  19:     goto   19
+     jmp     l_f2_19                 #  21:     goto   19
-     movl    $1, %eax                #  21:     assign t4 <- 1
+     movl    $1, %eax                #  23:     assign t4 <- 1
-     jmp     l_f2_20                 #  22:     goto   20
+     jmp     l_f2_20                 #  24:     goto   20
-     movl    $0, %eax                #  24:     assign t4 <- 0
+     movl    $0, %eax                #  26:     assign t4 <- 0
-     movzbl  -14(%ebp), %eax         #  26:     return t4
+     movzbl  -14(%ebp), %eax         #  28:     return t4
-     jmp     l_f2_23_while_cond      #  28:     goto   23_while_cond
+     jmp     l_f2_23_while_cond      #  30:     goto   23_while_cond
-     movl    $97, %eax               #  30:     if     97 >= 100 goto 27_while_body
+     movl    $97, %eax               #  32:     if     97 >= 100 goto 27_while_body
-     jmp     l_f2_25                 #  31:     goto   25
+     jmp     l_f2_25                 #  33:     goto   25
-     jmp     l_f2_26_while_cond      #  33:     goto   26_while_cond
+     jmp     l_f2_26_while_cond      #  35:     goto   26_while_cond
-     jmp     l_f2_10                 #  35:     goto   10
+     jmp     l_f2_10                 #  37:     goto   10
-     jmp     l_f2_8_while_cond       #  38:     goto   8_while_cond
+     jmp     l_f2_8_while_cond       #  40:     goto   8_while_cond
-     addl    $1, %esp               
+     addl    $4, %esp               
