+     jmp     l_f0_8_if_false         #  14:     goto   8_if_false
-     movl    $0, %eax                #  15:     return 0
+     movl    $0, %eax                #  16:     return 0
-     jmp     l_f0_6                  #  16:     goto   6
+     jmp     l_f0_6                  #  17:     goto   6
+ l_f0_8_if_false:
-     #  -5812(%ebp)5784  [ $v0       <array 2 of <array 8 of <array 3 of <array 6 of <array 5 of <int>>>>>> %ebp-5812 ]
+     #   -5812(%ebp)  5784  [ $v0       <array 2 of <array 8 of <array 3 of <array 6 of <array 5 of <int>>>>>> %ebp-5812 ]
-     addl    $9, %esp               
+     addl    $12, %esp              
+     jmp     l_f2_2                  #  15:     goto   2
-     movl    $1, %eax                #  16:     assign t11 <- 1
+     movl    $1, %eax                #  17:     assign t11 <- 1
-     jmp     l_f2_3                  #  17:     goto   3
+     jmp     l_f2_3                  #  18:     goto   3
+ l_f2_2:
-     movl    $0, %eax                #  18:     assign t11 <- 0
+     movl    $0, %eax                #  20:     assign t11 <- 0
-     movzbl  -14(%ebp), %eax         #  20:     return t11
+     movzbl  -14(%ebp), %eax         #  22:     return t11
-     call    f1                      #  21:     call   t12 <- f1
+     call    f1                      #  23:     call   t12 <- f1
-     call    f1                      #  23:     call   t13 <- f1
+     call    f1                      #  25:     call   t13 <- f1
-     movl    $97, %eax               #  24:     if     97 > t13 goto 13_while_body
+     movl    $97, %eax               #  26:     if     97 > t13 goto 13_while_body
-     jmp     l_f2_11                 #  25:     goto   11
+     jmp     l_f2_11                 #  27:     goto   11
-     movl    $0, %eax                #  27:     return 0
+     movl    $0, %eax                #  29:     return 0
-     jmp     l_f2_12_while_cond      #  28:     goto   12_while_cond
+     jmp     l_f2_12_while_cond      #  30:     goto   12_while_cond
+     jmp     l_test_2                #   5:     goto   2
-     movl    $1, %eax                #   5:     assign t3 <- 1
+     movl    $1, %eax                #   6:     assign t3 <- 1
-     jmp     l_test_3                #   6:     goto   3
+     jmp     l_test_3                #   7:     goto   3
+ l_test_2:
-     movl    $0, %eax                #   7:     assign t3 <- 0
+     movl    $0, %eax                #   9:     assign t3 <- 0
-     movzbl  -25(%ebp), %eax         #   9:     param  0 <- t3
+     movzbl  -25(%ebp), %eax         #  11:     param  0 <- t3
-     call    f0                      #  10:     call   t4 <- f0
+     call    f0                      #  12:     call   t4 <- f0
-     addl    $9, %esp               
+     addl    $12, %esp              
+     jmp     l_test_8_if_false       #  13:     goto   8_if_false
+     jmp     l_test_8_if_false       #  14:     goto   8_if_false
-     movl    $3039, %eax             #  11:     if     3039 >= 56156 goto 11_if_true
+     movl    $3039, %eax             #  15:     if     3039 >= 56156 goto 11_if_true
-     jmp     l_test_12_if_false      #  12:     goto   12_if_false
+     jmp     l_test_12_if_false      #  16:     goto   12_if_false
-     jmp     l_test_10               #  14:     goto   10
+     jmp     l_test_10               #  18:     goto   10
-     movl    $97, %eax               #  18:     if     97 >= 97 goto 16_while_body
+     movl    $97, %eax               #  22:     if     97 >= 97 goto 16_while_body
-     jmp     l_test_14               #  19:     goto   14
+     jmp     l_test_14               #  23:     goto   14
-     jmp     l_test_15_while_cond    #  21:     goto   15_while_cond
+     jmp     l_test_15_while_cond    #  25:     goto   15_while_cond
-     jmp     l_test_6                #  24:     goto   6
+     jmp     l_test_6                #  28:     goto   6
+ l_test_8_if_false:
-     call    dummyCHARfunc           #  26:     call   t5 <- dummyCHARfunc
+     call    dummyCHARfunc           #  31:     call   t5 <- dummyCHARfunc
-     movl    $98, %eax               #  27:     if     98 = t5 goto 20
+     movl    $98, %eax               #  32:     if     98 = t5 goto 20
-     jmp     l_test_21               #  28:     goto   21
+     jmp     l_test_21               #  33:     goto   21
-     movl    $1, %eax                #  30:     assign t6 <- 1
+     movl    $1, %eax                #  35:     assign t6 <- 1
-     jmp     l_test_22               #  31:     goto   22
+     jmp     l_test_22               #  36:     goto   22
-     movl    $0, %eax                #  33:     assign t6 <- 0
+     movl    $0, %eax                #  38:     assign t6 <- 0
-     movzbl  -28(%ebp), %eax         #  35:     assign v1 <- t6
+     movzbl  -28(%ebp), %eax         #  40:     assign v1 <- t6
