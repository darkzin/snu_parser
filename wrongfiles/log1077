+     jmp     l_f1_2_if_false         #   0:     goto   2_if_false
+     jmp     l_f1_2_if_false         #   1:     goto   2_if_false
-     jmp     l_f1_0                  #   0:     goto   0
+     jmp     l_f1_0                  #   2:     goto   0
+ l_f1_2_if_false:
-     movl    $0, %eax                #   2:     if     0 > 87506 goto 5_if_true
+     movl    $0, %eax                #   5:     if     0 > 87506 goto 5_if_true
-     jmp     l_f1_6_if_false         #   3:     goto   6_if_false
+     jmp     l_f1_6_if_false         #   6:     goto   6_if_false
-     movl    $68607, %eax            #   5:     if     68607 # 59479 goto 9_if_true
+     movl    $68607, %eax            #   8:     if     68607 # 59479 goto 9_if_true
-     jmp     l_f1_10_if_false        #   6:     goto   10_if_false
+     jmp     l_f1_10_if_false        #   9:     goto   10_if_false
-     jmp     l_f1_8                  #   8:     goto   8
+     jmp     l_f1_8                  #  11:     goto   8
-     call    dummyINTfunc            #  11:     call   t4 <- dummyINTfunc
+     call    dummyINTfunc            #  14:     call   t4 <- dummyINTfunc
-     call    dummyINTfunc            #  12:     call   t5 <- dummyINTfunc
+     call    dummyINTfunc            #  15:     call   t5 <- dummyINTfunc
-     movl    $0, %eax                #  13:     return 0
+     movl    $0, %eax                #  16:     return 0
-     jmp     l_f1_15                 #  14:     goto   15
+     jmp     l_f1_15                 #  17:     goto   15
-     movl    $52780, %eax            #  16:     assign v3 <- 52780
+     movl    $52780, %eax            #  19:     assign v3 <- 52780
-     call    WriteLn                 #  17:     call   WriteLn
+     call    WriteLn                 #  20:     call   WriteLn
-     jmp     l_f1_4                  #  18:     goto   4
+     jmp     l_f1_4                  #  21:     goto   4
-     movl    $33838, %eax            #  21:     if     33838 = 99972 goto 21_if_true
+     movl    $33838, %eax            #  24:     if     33838 = 99972 goto 21_if_true
-     jmp     l_f1_22_if_false        #  22:     goto   22_if_false
+     jmp     l_f1_22_if_false        #  25:     goto   22_if_false
-     call    dummyINTfunc            #  24:     call   t6 <- dummyINTfunc
+     call    dummyINTfunc            #  27:     call   t6 <- dummyINTfunc
-     movl    $90552, %eax            #  25:     assign v3 <- 90552
+     movl    $90552, %eax            #  28:     assign v3 <- 90552
-     jmp     l_f1_20                 #  26:     goto   20
+     jmp     l_f1_20                 #  29:     goto   20
-     jmp     l_test_3                #   1:     goto   3
+     jmp     l_test_4                #   1:     goto   4
+     jmp     l_test_5                #   2:     goto   5
- l_test_3:
+ l_test_4:
-     movl    $1, %eax                #   3:     assign t0 <- 1
+     movl    $1, %eax                #   4:     assign t0 <- 1
-     jmp     l_test_5                #   4:     goto   5
+     jmp     l_test_6                #   5:     goto   6
+ l_test_5:
-     movl    $0, %eax                #   5:     assign t0 <- 0
+     movl    $0, %eax                #   7:     assign t0 <- 0
- l_test_5:
+ l_test_6:
-     movzbl  -13(%ebp), %eax         #   7:     if     t0 # 0 goto 2_while_body
+     movzbl  -13(%ebp), %eax         #   9:     if     t0 # 0 goto 2_while_body
-     jmp     l_test_0                #   8:     goto   0
+     jmp     l_test_0                #  10:     goto   0
-     movl    $61782, %eax            #  10:     if     61782 <= 39000 goto 12_if_true
+     movl    $61782, %eax            #  12:     if     61782 <= 39000 goto 12_if_true
-     jmp     l_test_13_if_false      #  11:     goto   13_if_false
+     jmp     l_test_13_if_false      #  13:     goto   13_if_false
-     jmp     l_test_11               #  13:     goto   11
+     jmp     l_test_11               #  15:     goto   11
-     jmp     l_test_1_while_cond     #  16:     goto   1_while_cond
+     jmp     l_test_1_while_cond     #  18:     goto   1_while_cond
-     jmp     l_test_17_if_false      #  18:     goto   17_if_false
+     jmp     l_test_17_if_false      #  20:     goto   17_if_false
-     jmp     l_test_22_if_false      #  21:     goto   22_if_false
+     jmp     l_test_22_if_false      #  23:     goto   22_if_false
-     jmp     l_test_20               #  22:     goto   20
+     jmp     l_test_20               #  24:     goto   20
-     jmp     l_test_23               #  26:     goto   23
+     jmp     l_test_23               #  28:     goto   23
-     jmp     l_test_24_while_cond    #  27:     goto   24_while_cond
+     jmp     l_test_24_while_cond    #  29:     goto   24_while_cond
-     movl    $100, %eax              #  29:     param  0 <- 100
+     movl    $100, %eax              #  31:     param  0 <- 100
-     call    WriteChar               #  30:     call   WriteChar
+     call    WriteChar               #  32:     call   WriteChar
-     addl    $1, %esp               
+     addl    $4, %esp               
-     jmp     l_test_15               #  31:     goto   15
+     jmp     l_test_15               #  33:     goto   15
-     call    ReadInt                 #  34:     call   t1 <- ReadInt
+     call    ReadInt                 #  36:     call   t1 <- ReadInt
-     call    dummyCHARfunc           #  36:     call   t2 <- dummyCHARfunc
+     call    dummyCHARfunc           #  38:     call   t2 <- dummyCHARfunc
-     movl    $97, %eax               #  37:     if     97 = t2 goto 30_while_body
+     movl    $97, %eax               #  39:     if     97 = t2 goto 30_while_body
-     jmp     l_test_28               #  38:     goto   28
+     jmp     l_test_28               #  40:     goto   28
-     jmp     l_test_29_while_cond    #  40:     goto   29_while_cond
+     jmp     l_test_29_while_cond    #  42:     goto   29_while_cond
+     jmp     l_test_34               #  44:     goto   34
-     movl    $1, %eax                #  42:     assign t3 <- 1
+     movl    $1, %eax                #  45:     assign t3 <- 1
-     jmp     l_test_35               #  43:     goto   35
+     jmp     l_test_35               #  46:     goto   35
+ l_test_34:
-     movl    $0, %eax                #  44:     assign t3 <- 0
+     movl    $0, %eax                #  48:     assign t3 <- 0
-     movzbl  -22(%ebp), %eax         #  46:     assign v0 <- t3
+     movzbl  -22(%ebp), %eax         #  50:     assign v0 <- t3
-     movl    $38777, %eax            #  47:     assign v1 <- 38777
+     movl    $38777, %eax            #  51:     assign v1 <- 38777
