+     jmp     l_f0_15_if_false        #  18:     goto   15_if_false
+     jmp     l_f0_15_if_false        #  19:     goto   15_if_false
+     jmp     l_f0_15_if_false        #  20:     goto   15_if_false
+     jmp     l_f0_15_if_false        #  21:     goto   15_if_false
-     jmp     l_f0_13                 #  18:     goto   13
+     jmp     l_f0_13                 #  22:     goto   13
+ l_f0_15_if_false:
-     #-304722492(%ebp)304722456  [ $v5       <array 56 of <array 67 of <array 47 of <array 24 of <array 72 of <bool>>>>>> %ebp-304722492 ]
+     #   -304722492(%ebp)  304722456  [ $v5       <array 56 of <array 67 of <array 47 of <array 24 of <array 72 of <bool>>>>>> %ebp-304722492 ]
-     #141344556(%ebp)-446067048  [ $v6       <array 79 of <array 67 of <array 76 of <array 52 of <array 46 of <int>>>>>> %ebp+141344556 ]
+     #   141344556(%ebp)  -446067048  [ $v6       <array 79 of <array 67 of <array 76 of <array 52 of <array 46 of <int>>>>>> %ebp+141344556 ]
+     cld                             # memset local stack area to 0
+     xorl    %eax, %eax             
+     movl    $-35336142, %ecx       
+     mov     %esp, %edi             
+     rep     stosl                  
+     jmp     l_f1_1                  #   4:     goto   1
-     jmp     l_f1_2_while_cond       #   5:     goto   2_while_cond
+     jmp     l_f1_2_while_cond       #   6:     goto   2_while_cond
+ l_f1_1:
-     movl    $84005, %eax            #   6:     param  3 <- 84005
+     movl    $84005, %eax            #   8:     param  3 <- 84005
-     leal    141344556(%ebp), %eax   #   7:     &()    t6 <- v6
+     leal    141344556(%ebp), %eax   #   9:     &()    t6 <- v6
-     movl    -24(%ebp), %eax         #   8:     param  2 <- t6
+     movl    -24(%ebp), %eax         #  10:     param  2 <- t6
-     movl    $80410, %eax            #   9:     mul    t7 <- 80410, 93598
+     movl    $80410, %eax            #  11:     mul    t7 <- 80410, 93598
-     movl    -28(%ebp), %eax         #  10:     mul    t8 <- t7, 92883
+     movl    -28(%ebp), %eax         #  12:     mul    t8 <- t7, 92883
-     movl    -32(%ebp), %eax         #  11:     mul    t9 <- t8, 13416
+     movl    -32(%ebp), %eax         #  13:     mul    t9 <- t8, 13416
-     movl    -36(%ebp), %eax         #  12:     param  1 <- t9
+     movl    -36(%ebp), %eax         #  14:     param  1 <- t9
-     leal    -304722492(%ebp), %eax  #  13:     &()    t10 <- v5
+     leal    -304722492(%ebp), %eax  #  15:     &()    t10 <- v5
-     movl    -16(%ebp), %eax         #  14:     param  0 <- t10
+     movl    -16(%ebp), %eax         #  16:     param  0 <- t10
-     call    f0                      #  15:     call   t11 <- f0
+     call    f0                      #  17:     call   t11 <- f0
-     movzbl  -17(%ebp), %eax         #  16:     return t11
+     movzbl  -17(%ebp), %eax         #  18:     return t11
+     jmp     l_f2_6                  #   6:     goto   6
-     movl    $1, %eax                #   7:     assign t5 <- 1
+     movl    $1, %eax                #   8:     assign t5 <- 1
-     jmp     l_f2_7                  #   8:     goto   7
+     jmp     l_f2_7                  #   9:     goto   7
+ l_f2_6:
-     movl    $0, %eax                #   9:     assign t5 <- 0
+     movl    $0, %eax                #  11:     assign t5 <- 0
-     movzbl  -14(%ebp), %eax         #  11:     assign v3 <- t5
+     movzbl  -14(%ebp), %eax         #  13:     assign v3 <- t5
-     call    dummyINTfunc            #  12:     call   t6 <- dummyINTfunc
+     call    dummyINTfunc            #  14:     call   t6 <- dummyINTfunc
