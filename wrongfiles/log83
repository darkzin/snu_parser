-     jmp     l_f1_16                 #  18:     goto   16
+     jmp     l_f1_19                 #  18:     goto   19
+ l_f1_19:
+     jmp     l_f1_16                 #  20:     goto   16
+     #   -116(%ebp)   4  [ $t35      <ptr(4) to <array 8 of <array 2 of <array 8 of <array 10 of <array 5 of <char>>>>>>> %ebp-116 ]
-     #   -116(%ebp)   4  [ $t35      <int> %ebp-116 ]
+     #   -117(%ebp)   1  [ $t36      <char> %ebp-117 ]
-     #   -120(%ebp)   4  [ $t36      <int> %ebp-120 ]
-     #   -124(%ebp)   4  [ $t37      <int> %ebp-124 ]
+     #   -124(%ebp)   4  [ $t8       <int> %ebp-124 ]
-     #   -128(%ebp)   4  [ $t38      <ptr(4) to <array 8 of <array 2 of <array 8 of <array 10 of <array 5 of <char>>>>>>> %ebp-128 ]
-     #   -129(%ebp)   1  [ $t39      <char> %ebp-129 ]
-     #   -136(%ebp)   4  [ $t8       <int> %ebp-136 ]
-     #   -140(%ebp)   4  [ $t9       <int> %ebp-140 ]
+     #   -128(%ebp)   4  [ $t9       <int> %ebp-128 ]
-     #  -6564(%ebp)6424  [ $v5       <array 8 of <array 2 of <array 8 of <array 10 of <array 5 of <char>>>>>> %ebp-6564 ]
+     #   -6552(%ebp)  6424  [ $v5       <array 8 of <array 2 of <array 8 of <array 10 of <array 5 of <char>>>>>> %ebp-6552 ]
-     pushl   %ebp                   
-     movl    %esp, %ebp             
-     pushl   %ebx                    # save callee saved registers
-     pushl   %esi                   
+     pushl   %ebp                   
+     movl    %esp, %ebp             
+     pushl   %ebx                    # save callee saved registers
-     pushl   %edi                   
+     pushl   %esi                   
+     pushl   %edi                   
-     subl    $6552, %esp             # make room for locals
+     subl    $6540, %esp             # make room for locals
-     movl    $1638, %ecx            
+     movl    $1635, %ecx            
-     movl    $5,-6564(%ebp)          # local array 'v5': 5 dimensions
+     movl    $5,-6552(%ebp)          # local array 'v5': 5 dimensions
-     movl    $8,-6560(%ebp)          #   dimension 1: 8 elements
+     movl    $8,-6548(%ebp)          #   dimension 1: 8 elements
-     movl    $2,-6556(%ebp)          #   dimension 2: 2 elements
+     movl    $2,-6544(%ebp)          #   dimension 2: 2 elements
-     movl    $8,-6552(%ebp)          #   dimension 3: 8 elements
+     movl    $8,-6540(%ebp)          #   dimension 3: 8 elements
-     movl    $10,-6548(%ebp)         #   dimension 4: 10 elements
+     movl    $10,-6536(%ebp)         #   dimension 4: 10 elements
-     movl    $5,-6544(%ebp)          #   dimension 5: 5 elements
+     movl    $5,-6532(%ebp)          #   dimension 5: 5 elements
-     movl    %eax, -136(%ebp)       
+     movl    %eax, -124(%ebp)       
-     movl    -136(%ebp), %eax        #   1:     sub    t9 <- t8, 8676
+     movl    -124(%ebp), %eax        #   1:     sub    t9 <- t8, 8676
-     movl    %eax, -140(%ebp)       
+     movl    %eax, -128(%ebp)       
-     movl    -140(%ebp), %eax        #   2:     sub    t10 <- t9, 93671
+     movl    -128(%ebp), %eax        #   2:     sub    t10 <- t9, 93671
-     movl    $68542, %eax            #  17:     sub    t16 <- 68542, 99944
-     movl    $99944, %ebx           
-     subl    %ebx, %eax             
-     movl    %eax, -40(%ebp)        
-     movl    -40(%ebp), %eax         #  18:     sub    t17 <- t16, 49180
-     movl    $49180, %ebx           
-     subl    %ebx, %eax             
-     movl    %eax, -44(%ebp)        
-     movl    -28(%ebp), %eax         #  19:     mul    t15 <- t13, t14
+     movl    -28(%ebp), %eax         #  17:     mul    t15 <- t13, t14
-     movl    -36(%ebp), %eax         #  20:     add    t18 <- t15, 6927
+     movl    -36(%ebp), %eax         #  18:     add    t16 <- t15, 6927
+     movl    %eax, -40(%ebp)        
+     movl    $3, %eax                #  19:     param  1 <- 3
+     pushl   %eax                   
+     movl    12(%ebp), %eax          #  20:     param  0 <- v2
+     pushl   %eax                   
+     call    DIM                     #  21:     call   t17 <- DIM
+     addl    $8, %esp               
+     movl    %eax, -44(%ebp)        
+     movl    -40(%ebp), %eax         #  22:     mul    t18 <- t16, t17
+     movl    -44(%ebp), %ebx        
+     imull   %ebx                   
+     movl    $2958, %eax             #  23:     sub    t19 <- 2958, 9501
+     movl    $9501, %ebx            
+     subl    %ebx, %eax             
+     movl    %eax, -52(%ebp)        
+     movl    -48(%ebp), %eax         #  24:     add    t20 <- t18, t19
+     movl    -52(%ebp), %ebx        
+     addl    %ebx, %eax             
+     movl    %eax, -56(%ebp)        
-     movl    $3, %eax                #  21:     param  1 <- 3
+     movl    $4, %eax                #  25:     param  1 <- 4
-     movl    12(%ebp), %eax          #  22:     param  0 <- v2
+     movl    12(%ebp), %eax          #  26:     param  0 <- v2
-     call    DIM                     #  23:     call   t19 <- DIM
+     call    DIM                     #  27:     call   t21 <- DIM
-     movl    %eax, -52(%ebp)        
+     movl    %eax, -60(%ebp)        
-     movl    -48(%ebp), %eax         #  24:     mul    t20 <- t18, t19
+     movl    -56(%ebp), %eax         #  28:     mul    t22 <- t20, t21
-     movl    -52(%ebp), %ebx        
+     movl    -60(%ebp), %ebx        
-     movl    %eax, -56(%ebp)        
-     movl    $2958, %eax             #  25:     sub    t21 <- 2958, 9501
-     movl    $9501, %ebx            
-     subl    %ebx, %eax             
-     movl    %eax, -60(%ebp)        
-     movl    -56(%ebp), %eax         #  26:     add    t22 <- t20, t21
-     movl    -60(%ebp), %ebx        
-     addl    %ebx, %eax             
+     movl    -64(%ebp), %eax         #  29:     add    t23 <- t22, 14626
+     movl    $14626, %ebx           
+     addl    %ebx, %eax             
+     movl    %eax, -68(%ebp)        
-     movl    $4, %eax                #  27:     param  1 <- 4
+     movl    $5, %eax                #  30:     param  1 <- 5
-     movl    12(%ebp), %eax          #  28:     param  0 <- v2
+     movl    12(%ebp), %eax          #  31:     param  0 <- v2
-     call    DIM                     #  29:     call   t23 <- DIM
+     call    DIM                     #  32:     call   t24 <- DIM
-     movl    %eax, -68(%ebp)        
+     movl    %eax, -72(%ebp)        
-     movl    $2958, %eax             #  30:     sub    t25 <- 2958, 9501
+     movl    -68(%ebp), %eax         #  33:     mul    t25 <- t23, t24
-     movl    $9501, %ebx            
+     movl    -72(%ebp), %ebx        
-     subl    %ebx, %eax             
+     imull   %ebx                   
-     movl    -64(%ebp), %eax         #  31:     mul    t24 <- t22, t23
-     movl    -68(%ebp), %ebx        
-     imull   %ebx                   
-     movl    %eax, -72(%ebp)        
-     movl    -72(%ebp), %eax         #  32:     add    t26 <- t24, 14626
+     movl    -76(%ebp), %eax         #  34:     add    t26 <- t25, 94897
-     movl    $14626, %ebx           
+     movl    $94897, %ebx           
-     movl    $5, %eax                #  33:     param  1 <- 5
-     pushl   %eax                   
-     movl    12(%ebp), %eax          #  34:     param  0 <- v2
-     pushl   %eax                   
-     call    DIM                     #  35:     call   t27 <- DIM
-     addl    $8, %esp               
-     movl    %eax, -84(%ebp)        
-     movl    -80(%ebp), %eax         #  36:     mul    t28 <- t26, t27
+     movl    -80(%ebp), %eax         #  35:     mul    t27 <- t26, 1
-     movl    -84(%ebp), %ebx        
-     imull   %ebx                   
-     movl    %eax, -88(%ebp)        
-     movl    -88(%ebp), %eax         #  37:     add    t29 <- t28, 94897
-     movl    $94897, %ebx           
-     addl    %ebx, %eax             
-     movl    %eax, -92(%ebp)        
-     movl    -92(%ebp), %eax         #  38:     mul    t30 <- t29, 1
+     movl    %eax, -84(%ebp)        
+     movl    12(%ebp), %eax          #  36:     param  0 <- v2
+     pushl   %eax                   
+     call    DOFS                    #  37:     call   t28 <- DOFS
+     addl    $4, %esp               
+     movl    %eax, -88(%ebp)        
+     movl    -84(%ebp), %eax         #  38:     add    t29 <- t27, t28
+     movl    -88(%ebp), %ebx        
+     addl    %ebx, %eax             
+     movl    %eax, -92(%ebp)        
+     movl    12(%ebp), %eax          #  39:     add    t30 <- v2, t29
+     movl    -92(%ebp), %ebx        
+     addl    %ebx, %eax             
-     movl    12(%ebp), %eax          #  39:     param  0 <- v2
-     pushl   %eax                   
-     call    DOFS                    #  40:     call   t31 <- DOFS
-     addl    $4, %esp               
-     movl    %eax, -100(%ebp)       
-     movl    -96(%ebp), %eax         #  41:     add    t32 <- t30, t31
-     movl    -100(%ebp), %ebx       
-     addl    %ebx, %eax             
-     movl    %eax, -104(%ebp)       
-     movl    12(%ebp), %eax          #  42:     add    t33 <- v2, t32
-     movl    -104(%ebp), %ebx       
-     addl    %ebx, %eax             
-     movl    %eax, -108(%ebp)       
-     movl    $100, %eax              #  43:     assign @t33 <- 100
+     movl    $100, %eax              #  40:     assign @t30 <- 100
-     movl    -108(%ebp), %edi       
+     movl    -96(%ebp), %edi        
-     movl    $58761, %eax            #  45:     sub    t34 <- 58761, 19605
+     movl    $58761, %eax            #  42:     sub    t31 <- 58761, 19605
+     movl    %eax, -100(%ebp)       
+     movl    -100(%ebp), %eax        #  43:     sub    t32 <- t31, 14245
+     movl    $14245, %ebx           
+     subl    %ebx, %eax             
+     movl    %eax, -104(%ebp)       
+     movl    -104(%ebp), %eax        #  44:     sub    t33 <- t32, 22937
+     movl    $22937, %ebx           
+     subl    %ebx, %eax             
+     movl    %eax, -108(%ebp)       
+     movl    -108(%ebp), %eax        #  45:     sub    t34 <- t33, 53337
+     movl    $53337, %ebx           
+     subl    %ebx, %eax             
-     movl    -112(%ebp), %eax        #  46:     sub    t35 <- t34, 14245
+     movl    -112(%ebp), %eax        #  46:     param  1 <- t34
-     movl    $14245, %ebx           
-     subl    %ebx, %eax             
+     pushl   %eax                   
+     leal    -6552(%ebp), %eax       #  47:     &()    t35 <- v5
-     movl    -116(%ebp), %eax        #  47:     sub    t36 <- t35, 22937
-     movl    $22937, %ebx           
-     subl    %ebx, %eax             
-     movl    %eax, -120(%ebp)       
-     movl    -120(%ebp), %eax        #  48:     sub    t37 <- t36, 53337
-     movl    $53337, %ebx           
-     subl    %ebx, %eax             
-     movl    %eax, -124(%ebp)       
-     movl    -124(%ebp), %eax        #  49:     param  1 <- t37
+     movl    -116(%ebp), %eax        #  48:     param  0 <- t35
-     leal    -6564(%ebp), %eax       #  50:     &()    t38 <- v5
-     movl    %eax, -128(%ebp)       
-     movl    -128(%ebp), %eax        #  51:     param  0 <- t38
-     pushl   %eax                   
-     call    f0                      #  52:     call   t39 <- f0
+     call    f0                      #  49:     call   t36 <- f0
-     movb    %al, -129(%ebp)        
+     movb    %al, -117(%ebp)        
-     movl    $97, %eax               #  53:     if     97 > t39 goto 8_while_body
+     movl    $97, %eax               #  50:     if     97 > t36 goto 8_while_body
-     movzbl  -129(%ebp), %ebx       
+     movzbl  -117(%ebp), %ebx       
-     jmp     l_f2_6                  #  54:     goto   6
+     jmp     l_f2_6                  #  51:     goto   6
-     jmp     l_f2_10                 #  56:     goto   10
+     jmp     l_f2_10                 #  53:     goto   10
-     jmp     l_f2_7_while_cond       #  58:     goto   7_while_cond
+     jmp     l_f2_7_while_cond       #  55:     goto   7_while_cond
-     addl    $6552, %esp             # remove locals
+     addl    $6540, %esp             # remove locals
+     jmp     l_test_0                #   1:     goto   0
+     jmp     l_test_0                #   2:     goto   0
-     movl    $36251, %eax            #   1:     assign v0 <- 36251
+     movl    $36251, %eax            #   3:     assign v0 <- 36251
-     jmp     l_test_6                #   2:     goto   6
+     jmp     l_test_6                #   4:     goto   6
-     jmp     l_test_1_while_cond     #   4:     goto   1_while_cond
+     jmp     l_test_1_while_cond     #   6:     goto   1_while_cond
+ l_test_0:
-     call    dummyINTfunc            #   5:     call   t0 <- dummyINTfunc
+     call    dummyINTfunc            #   8:     call   t0 <- dummyINTfunc
-     movl    -16(%ebp), %eax         #   6:     add    t1 <- t0, 47534
+     movl    -16(%ebp), %eax         #   9:     add    t1 <- t0, 47534
-     movl    -20(%ebp), %eax         #   7:     sub    t2 <- t1, 72896
+     movl    -20(%ebp), %eax         #  10:     sub    t2 <- t1, 72896
-     movl    -24(%ebp), %eax         #   8:     add    t3 <- t2, 18609
+     movl    -24(%ebp), %eax         #  11:     add    t3 <- t2, 18609
-     movl    -28(%ebp), %eax         #   9:     assign v0 <- t3
+     movl    -28(%ebp), %eax         #  12:     assign v0 <- t3
+     jmp     l_test_10               #  14:     goto   10
+     jmp     l_test_10               #  15:     goto   10
+     jmp     l_test_10               #  16:     goto   10
-     jmp     l_test_11_while_cond    #  11:     goto   11_while_cond
+     jmp     l_test_11_while_cond    #  17:     goto   11_while_cond
+ l_test_10:
-     movl    $84078, %eax            #  12:     assign v0 <- 84078
+     movl    $84078, %eax            #  19:     assign v0 <- 84078
-     movl    $19949, %eax            #  14:     sub    t4 <- 19949, 52663
+     movl    $19949, %eax            #  21:     sub    t4 <- 19949, 52663
-     movl    -32(%ebp), %eax         #  15:     add    t5 <- t4, 36815
+     movl    -32(%ebp), %eax         #  22:     add    t5 <- t4, 36815
-     movl    -36(%ebp), %eax         #  16:     sub    t6 <- t5, 52896
+     movl    -36(%ebp), %eax         #  23:     sub    t6 <- t5, 52896
-     movl    -40(%ebp), %eax         #  17:     if     t6 # 35016 goto 19_while_body
+     movl    -40(%ebp), %eax         #  24:     if     t6 # 35016 goto 19_while_body
-     jmp     l_test_17               #  18:     goto   17
+     jmp     l_test_17               #  25:     goto   17
-     jmp     l_test_21               #  20:     goto   21
+     jmp     l_test_21               #  27:     goto   21
-     call    dummyINTfunc            #  23:     call   t7 <- dummyINTfunc
+     call    dummyINTfunc            #  30:     call   t7 <- dummyINTfunc
-     jmp     l_test_18_while_cond    #  24:     goto   18_while_cond
+     jmp     l_test_18_while_cond    #  31:     goto   18_while_cond
-     movl    $98, %eax               #  28:     if     98 # 99 goto 32_while_body
+     movl    $98, %eax               #  35:     if     98 # 99 goto 32_while_body
-     jmp     l_test_30               #  29:     goto   30
+     jmp     l_test_30               #  36:     goto   30
-     jmp     l_test_31_while_cond    #  31:     goto   31_while_cond
+     jmp     l_test_31_while_cond    #  38:     goto   31_while_cond
-     jmp     l_test_27_while_cond    #  33:     goto   27_while_cond
+     jmp     l_test_27_while_cond    #  40:     goto   27_while_cond
