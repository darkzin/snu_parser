+     jmp     l_f0_15                 #  19:     goto   15
-     movl    $1, %eax                #  19:     assign t15 <- 1
+     movl    $1, %eax                #  20:     assign t15 <- 1
-     jmp     l_f0_15                 #  20:     goto   15
+     jmp     l_f0_16                 #  21:     goto   16
+ l_f0_15:
-     movl    $0, %eax                #  21:     assign t15 <- 0
+     movl    $0, %eax                #  23:     assign t15 <- 0
- l_f0_15:
+ l_f0_16:
-     movzbl  -33(%ebp), %eax         #  23:     if     t15 # 1 goto 11_if_true
+     movzbl  -33(%ebp), %eax         #  25:     if     t15 # 1 goto 11_if_true
-     jmp     l_f0_12_if_false        #  24:     goto   12_if_false
+     jmp     l_f0_12_if_false        #  26:     goto   12_if_false
-     movl    $25026, %eax            #  26:     assign v5 <- 25026
+     movl    $25026, %eax            #  28:     assign v5 <- 25026
-     jmp     l_f0_10                 #  27:     goto   10
+     jmp     l_f0_10                 #  29:     goto   10
-     #    -80(%ebp)   4  [ $t26      <int> %ebp-80 ]
-     #    -81(%ebp)   1  [ $t27      <bool> %ebp-81 ]
+     #    -77(%ebp)   1  [ $t26      <bool> %ebp-77 ]
-     #    -88(%ebp)   4  [ $t28      <ptr(4) to <array 4 of <array 6 of <array 7 of <array 5 of <array 9 of <bool>>>>>>> %ebp-88 ]
+     #    -84(%ebp)   4  [ $t27      <ptr(4) to <array 4 of <array 6 of <array 7 of <array 5 of <array 9 of <bool>>>>>>> %ebp-84 ]
-     #    -92(%ebp)   4  [ $t29      <ptr(4) to <array 5 of <array 4 of <array 8 of <array 8 of <array 8 of <int>>>>>>> %ebp-92 ]
+     #    -88(%ebp)   4  [ $t28      <ptr(4) to <array 5 of <array 4 of <array 8 of <array 8 of <array 8 of <int>>>>>>> %ebp-88 ]
-     #    -96(%ebp)   4  [ $t30      <int> %ebp-96 ]
+     #    -92(%ebp)   4  [ $t29      <int> %ebp-92 ]
-     #    -97(%ebp)   1  [ $t6       <char> %ebp-97 ]
+     #    -93(%ebp)   1  [ $t6       <char> %ebp-93 ]
-     #    -98(%ebp)   1  [ $t7       <char> %ebp-98 ]
+     #    -94(%ebp)   1  [ $t7       <char> %ebp-94 ]
+     #   -100(%ebp)   4  [ $t8       <int> %ebp-100 ]
-     #   -104(%ebp)   4  [ $t8       <int> %ebp-104 ]
+     #   -104(%ebp)   4  [ $t9       <int> %ebp-104 ]
-     #   -108(%ebp)   4  [ $t9       <int> %ebp-108 ]
-     # -41092(%ebp)40984  [ $v5       <array 5 of <array 4 of <array 8 of <array 8 of <array 8 of <int>>>>>> %ebp-41092 ]
+     #   -41088(%ebp)  40984  [ $v5       <array 5 of <array 4 of <array 8 of <array 8 of <array 8 of <int>>>>>> %ebp-41088 ]
-     # -48676(%ebp)7584  [ $v6       <array 4 of <array 6 of <array 7 of <array 5 of <array 9 of <bool>>>>>> %ebp-48676 ]
+     #   -48672(%ebp)  7584  [ $v6       <array 4 of <array 6 of <array 7 of <array 5 of <array 9 of <bool>>>>>> %ebp-48672 ]
-     pushl   %ebp                   
-     movl    %esp, %ebp             
-     pushl   %ebx                    # save callee saved registers
-     pushl   %esi                   
+     pushl   %ebp                   
+     movl    %esp, %ebp             
+     pushl   %ebx                    # save callee saved registers
-     pushl   %edi                   
+     pushl   %esi                   
+     pushl   %edi                   
-     subl    $48664, %esp            # make room for locals
+     subl    $48660, %esp            # make room for locals
-     movl    $12166, %ecx           
+     movl    $12165, %ecx           
-     movl    $5,-41092(%ebp)         # local array 'v5': 5 dimensions
+     movl    $5,-41088(%ebp)         # local array 'v5': 5 dimensions
-     movl    $5,-41088(%ebp)         #   dimension 1: 5 elements
+     movl    $5,-41084(%ebp)         #   dimension 1: 5 elements
-     movl    $4,-41084(%ebp)         #   dimension 2: 4 elements
+     movl    $4,-41080(%ebp)         #   dimension 2: 4 elements
-     movl    $8,-41080(%ebp)         #   dimension 3: 8 elements
-     movl    $8,-41076(%ebp)         #   dimension 4: 8 elements
+     movl    $8,-41076(%ebp)         #   dimension 3: 8 elements
-     movl    $8,-41072(%ebp)         #   dimension 5: 8 elements
+     movl    $8,-41072(%ebp)         #   dimension 4: 8 elements
+     movl    $8,-41068(%ebp)         #   dimension 5: 8 elements
-     movl    $5,-48676(%ebp)         # local array 'v6': 5 dimensions
+     movl    $5,-48672(%ebp)         # local array 'v6': 5 dimensions
-     movl    $4,-48672(%ebp)         #   dimension 1: 4 elements
+     movl    $4,-48668(%ebp)         #   dimension 1: 4 elements
-     movl    $6,-48668(%ebp)         #   dimension 2: 6 elements
+     movl    $6,-48664(%ebp)         #   dimension 2: 6 elements
-     movl    $7,-48664(%ebp)         #   dimension 3: 7 elements
+     movl    $7,-48660(%ebp)         #   dimension 3: 7 elements
-     movl    $5,-48660(%ebp)         #   dimension 4: 5 elements
+     movl    $5,-48656(%ebp)         #   dimension 4: 5 elements
-     movl    $9,-48656(%ebp)         #   dimension 5: 9 elements
+     movl    $9,-48652(%ebp)         #   dimension 5: 9 elements
-     movb    %al, -97(%ebp)         
+     movb    %al, -93(%ebp)         
-     movb    %al, -98(%ebp)         
+     movb    %al, -94(%ebp)         
+     movl    %eax, -100(%ebp)       
+     movl    $15604, %eax            #   5:     mul    t9 <- 15604, t8
+     movl    -100(%ebp), %ebx       
+     imull   %ebx                   
-     movl    $15604, %eax            #   5:     mul    t9 <- 15604, t8
-     movl    -104(%ebp), %ebx       
-     imull   %ebx                   
-     movl    %eax, -108(%ebp)       
-     movl    -108(%ebp), %eax        #   6:     add    t10 <- t9, 61694
+     movl    -104(%ebp), %eax        #   6:     add    t10 <- t9, 61694
-     movl    $65445, %eax            #  21:     add    t20 <- 65445, 89736
-     movl    $89736, %ebx           
-     addl    %ebx, %eax             
-     movl    %eax, -56(%ebp)        
-     movl    -44(%ebp), %eax         #  22:     mul    t19 <- t17, t18
+     movl    -44(%ebp), %eax         #  21:     mul    t19 <- t17, t18
-     movl    -52(%ebp), %eax         #  23:     add    t21 <- t19, 13206
+     movl    -52(%ebp), %eax         #  22:     add    t20 <- t19, 13206
-     movl    %eax, -60(%ebp)        
+     movl    %eax, -56(%ebp)        
-     movl    -60(%ebp), %eax         #  24:     mul    t22 <- t21, 1
+     movl    -56(%ebp), %eax         #  23:     mul    t21 <- t20, 1
+     movl    %eax, -60(%ebp)        
+     movl    20(%ebp), %eax          #  24:     param  0 <- v4
+     pushl   %eax                   
+     call    DOFS                    #  25:     call   t22 <- DOFS
+     addl    $4, %esp               
-     movl    20(%ebp), %eax          #  25:     param  0 <- v4
+     movl    -60(%ebp), %eax         #  26:     add    t23 <- t21, t22
+     movl    -64(%ebp), %ebx        
-     pushl   %eax                   
-     call    DOFS                    #  26:     call   t23 <- DOFS
-     addl    $4, %esp               
+     addl    %ebx, %eax             
-     movl    -64(%ebp), %eax         #  27:     add    t24 <- t22, t23
+     movl    20(%ebp), %eax          #  27:     add    t24 <- v4, t23
-     movl    20(%ebp), %eax          #  28:     add    t25 <- v4, t24
-     movl    -72(%ebp), %ebx        
-     addl    %ebx, %eax             
-     movl    %eax, -76(%ebp)        
-     movzbl  -98(%ebp), %eax         #  29:     assign @t25 <- t7
+     movzbl  -94(%ebp), %eax         #  28:     assign @t24 <- t7
-     movl    -76(%ebp), %edi        
+     movl    -72(%ebp), %edi        
-     movl    $100, %eax              #  30:     param  3 <- 100
+     movl    $100, %eax              #  29:     param  3 <- 100
-     movl    $17753, %eax            #  31:     div    t26 <- 17753, 6127
+     movl    $17753, %eax            #  30:     div    t25 <- 17753, 6127
-     movl    %eax, -80(%ebp)        
+     movl    %eax, -76(%ebp)        
-     movl    -80(%ebp), %eax         #  32:     if     t26 >= 49615 goto 3
+     movl    -76(%ebp), %eax         #  31:     if     t25 >= 49615 goto 3
-     jmp     l_f1_4                  #  33:     goto   4
+     jmp     l_f1_4                  #  32:     goto   4
-     movl    $1, %eax                #  35:     assign t27 <- 1
+     movl    $1, %eax                #  34:     assign t26 <- 1
-     movb    %al, -81(%ebp)         
+     movb    %al, -77(%ebp)         
-     jmp     l_f1_5                  #  36:     goto   5
+     jmp     l_f1_5                  #  35:     goto   5
-     movl    $0, %eax                #  38:     assign t27 <- 0
+     movl    $0, %eax                #  37:     assign t26 <- 0
-     movb    %al, -81(%ebp)         
+     movb    %al, -77(%ebp)         
-     movzbl  -81(%ebp), %eax         #  40:     param  2 <- t27
+     movzbl  -77(%ebp), %eax         #  39:     param  2 <- t26
-     leal    -48676(%ebp), %eax      #  41:     &()    t28 <- v6
+     leal    -48672(%ebp), %eax      #  40:     &()    t27 <- v6
+     movl    %eax, -84(%ebp)        
+     movl    -84(%ebp), %eax         #  41:     param  1 <- t27
+     pushl   %eax                   
+     leal    -41088(%ebp), %eax      #  42:     &()    t28 <- v5
-     movl    -88(%ebp), %eax         #  42:     param  1 <- t28
+     movl    -88(%ebp), %eax         #  43:     param  0 <- t28
-     leal    -41092(%ebp), %eax      #  43:     &()    t29 <- v5
+     call    f0                      #  44:     call   t29 <- f0
+     addl    $16, %esp              
-     movl    -92(%ebp), %eax         #  44:     param  0 <- t29
-     pushl   %eax                   
-     call    f0                      #  45:     call   t30 <- f0
-     addl    $10, %esp              
-     movl    %eax, -96(%ebp)        
-     movl    -96(%ebp), %eax         #  46:     return t30
+     movl    -92(%ebp), %eax         #  45:     return t29
-     addl    $48664, %esp            # remove locals
+     addl    $48660, %esp            # remove locals
