+     jmp     l_f1_0                  #   1:     goto   0
-     movl    $13056, %eax            #   1:     param  0 <- 13056
+     movl    $13056, %eax            #   2:     param  0 <- 13056
-     call    WriteInt                #   2:     call   WriteInt
+     call    WriteInt                #   3:     call   WriteInt
-     jmp     l_f1_1_while_cond       #   3:     goto   1_while_cond
+     jmp     l_f1_1_while_cond       #   4:     goto   1_while_cond
+ l_f1_0:
-     movl    $23805, %eax            #   4:     if     23805 <= 17583 goto 6_if_true
+     movl    $23805, %eax            #   6:     if     23805 <= 17583 goto 6_if_true
-     jmp     l_f1_7_if_false         #   5:     goto   7_if_false
+     jmp     l_f1_7_if_false         #   7:     goto   7_if_false
-     movl    $3270, %eax             #   7:     assign v3 <- 3270
+     movl    $3270, %eax             #   9:     assign v3 <- 3270
-     movl    $0, %eax                #   8:     if     0 = 0 goto 11_if_true
+     movl    $0, %eax                #  10:     if     0 = 0 goto 11_if_true
-     jmp     l_f1_12_if_false        #   9:     goto   12_if_false
+     jmp     l_f1_12_if_false        #  11:     goto   12_if_false
-     jmp     l_f1_10                 #  11:     goto   10
+     jmp     l_f1_10                 #  13:     goto   10
-     jmp     l_f1_5                  #  14:     goto   5
+     jmp     l_f1_5                  #  16:     goto   5
-     call    dummyCHARfunc           #  17:     call   t2 <- dummyCHARfunc
+     call    dummyCHARfunc           #  19:     call   t2 <- dummyCHARfunc
+     jmp     l_f2_6                  #   8:     goto   6
-     jmp     l_f2_7_while_cond       #   8:     goto   7_while_cond
+     jmp     l_f2_7_while_cond       #   9:     goto   7_while_cond
+ l_f2_6:
+     jmp     l_test_6_if_false       #   4:     goto   6_if_false
-     jmp     l_test_4                #   4:     goto   4
+     jmp     l_test_4                #   5:     goto   4
+ l_test_6_if_false:
-     jmp     l_test_11               #   6:     goto   11
-     jmp     l_test_11               #   7:     goto   11
+     jmp     l_test_11               #   9:     goto   11
+     jmp     l_test_11               #  10:     goto   11
+     jmp     l_test_12               #  11:     goto   12
+     jmp     l_test_12               #  12:     goto   12
-     movl    $1, %eax                #  10:     assign t1 <- 1
+     movl    $1, %eax                #  14:     assign t1 <- 1
-     jmp     l_test_13               #  11:     goto   13
+     jmp     l_test_13               #  15:     goto   13
+ l_test_12:
-     movl    $0, %eax                #  12:     assign t1 <- 0
+     movl    $0, %eax                #  17:     assign t1 <- 0
-     movzbl  -14(%ebp), %eax         #  14:     assign v2 <- t1
+     movzbl  -14(%ebp), %eax         #  19:     assign v2 <- t1
