+     jmp     l_f0_6                  #   0:     goto   6
-     movl    $1, %eax                #   0:     assign t5 <- 1
+     movl    $1, %eax                #   1:     assign t5 <- 1
-     jmp     l_f0_6                  #   1:     goto   6
+     jmp     l_f0_7                  #   2:     goto   7
+ l_f0_6:
-     movl    $0, %eax                #   2:     assign t5 <- 0
+     movl    $0, %eax                #   4:     assign t5 <- 0
- l_f0_6:
+ l_f0_7:
-     movl    $0, %eax                #   4:     if     0 # t5 goto 1
+     movl    $0, %eax                #   6:     if     0 # t5 goto 1
-     jmp     l_f0_2                  #   5:     goto   2
+     jmp     l_f0_2                  #   7:     goto   2
-     movl    $1, %eax                #   7:     assign t6 <- 1
+     movl    $1, %eax                #   9:     assign t6 <- 1
-     jmp     l_f0_3                  #   8:     goto   3
+     jmp     l_f0_3                  #  10:     goto   3
-     movl    $0, %eax                #  10:     assign t6 <- 0
+     movl    $0, %eax                #  12:     assign t6 <- 0
-     movzbl  -14(%ebp), %eax         #  12:     return t6
+     movzbl  -14(%ebp), %eax         #  14:     return t6
-     call    dummyCHARfunc           #  13:     call   t7 <- dummyCHARfunc
+     call    dummyCHARfunc           #  15:     call   t7 <- dummyCHARfunc
-     movl    $97, %eax               #  14:     if     97 > 100 goto 12
+     movl    $97, %eax               #  16:     if     97 > 100 goto 12
-     jmp     l_f0_13                 #  15:     goto   13
+     jmp     l_f0_13                 #  17:     goto   13
-     movl    $1, %eax                #  17:     assign t8 <- 1
+     movl    $1, %eax                #  19:     assign t8 <- 1
-     jmp     l_f0_14                 #  18:     goto   14
+     jmp     l_f0_14                 #  20:     goto   14
-     movl    $0, %eax                #  20:     assign t8 <- 0
+     movl    $0, %eax                #  22:     assign t8 <- 0
-     movzbl  -16(%ebp), %eax         #  22:     return t8
+     movzbl  -16(%ebp), %eax         #  24:     return t8
+     jmp     l_f1_15                 #  24:     goto   15
+     jmp     l_f1_15                 #  25:     goto   15
+     jmp     l_f1_15                 #  26:     goto   15
-     jmp     l_f1_16_while_cond      #  24:     goto   16_while_cond
+     jmp     l_f1_16_while_cond      #  27:     goto   16_while_cond
+ l_f1_15:
-     jmp     l_f1_11_while_cond      #  25:     goto   11_while_cond
+     jmp     l_f1_11_while_cond      #  29:     goto   11_while_cond
+     jmp     l_f2_3_if_false         #   4:     goto   3_if_false
-     jmp     l_f2_1                  #   5:     goto   1
+     jmp     l_f2_1                  #   6:     goto   1
+ l_f2_3_if_false:
-     movl    $68501, %eax            #   7:     sub    t7 <- 68501, 82836
+     movl    $68501, %eax            #   9:     sub    t7 <- 68501, 82836
-     movl    -20(%ebp), %eax         #   8:     assign v2 <- t7
+     movl    -20(%ebp), %eax         #  10:     assign v2 <- t7
-     movl    $52062, %eax            #  19:     if     52062 = 90794 goto 22
+     movl    $52062, %eax            #  19:     if     52062 = 90794 goto 23
-     je      l_test_22              
+     je      l_test_23              
-     jmp     l_test_23               #  20:     goto   23
+     jmp     l_test_24               #  20:     goto   24
- l_test_22:
+ l_test_23:
-     jmp     l_test_24               #  23:     goto   24
+     jmp     l_test_25               #  23:     goto   25
- l_test_23:
+ l_test_24:
- l_test_24:
+ l_test_25:
