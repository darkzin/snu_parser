+     jmp     l_f0_6                  #  11:     goto   6
-     jmp     l_f0_7_while_cond       #  11:     goto   7_while_cond
+     jmp     l_f0_7_while_cond       #  12:     goto   7_while_cond
+ l_f0_6:
-     #    -60(%ebp)   4  [ $t20      <int> %ebp-60 ]
+     #    -60(%ebp)   4  [ $t3       <int> %ebp-60 ]
-     #    -64(%ebp)   4  [ $t3       <int> %ebp-64 ]
+     #    -64(%ebp)   4  [ $t4       <int> %ebp-64 ]
-     #    -68(%ebp)   4  [ $t4       <int> %ebp-68 ]
+     #    -68(%ebp)   4  [ $t5       <int> %ebp-68 ]
-     #    -72(%ebp)   4  [ $t5       <int> %ebp-72 ]
+     #    -72(%ebp)   4  [ $t6       <int> %ebp-72 ]
-     #    -76(%ebp)   4  [ $t6       <int> %ebp-76 ]
+     #    -76(%ebp)   4  [ $t7       <int> %ebp-76 ]
-     #    -80(%ebp)   4  [ $t7       <int> %ebp-80 ]
+     #    -80(%ebp)   4  [ $t8       <int> %ebp-80 ]
-     #    -84(%ebp)   4  [ $t8       <int> %ebp-84 ]
+     #    -84(%ebp)   4  [ $t9       <int> %ebp-84 ]
-     #    -88(%ebp)   4  [ $t9       <int> %ebp-88 ]
-     #    -92(%ebp)   4  [ $v3       <int> %ebp-92 ]
+     #    -88(%ebp)   4  [ $v3       <int> %ebp-88 ]
-     pushl   %ebp                   
-     movl    %esp, %ebp             
-     pushl   %ebx                    # save callee saved registers
-     pushl   %esi                   
+     pushl   %ebp                   
+     movl    %esp, %ebp             
+     pushl   %ebx                    # save callee saved registers
-     pushl   %edi                   
+     pushl   %esi                   
+     pushl   %edi                   
-     subl    $80, %esp               # make room for locals
+     subl    $76, %esp               # make room for locals
-     movl    $20, %ecx              
+     movl    $19, %ecx              
+     movl    %eax, -60(%ebp)        
+     movl    $86159, %eax            #   4:     mul    t4 <- 86159, t3
+     movl    -60(%ebp), %ebx        
+     imull   %ebx                   
-     movl    $86159, %eax            #   4:     mul    t4 <- 86159, t3
-     movl    -64(%ebp), %ebx        
-     imull   %ebx                   
-     movl    %eax, -68(%ebp)        
+     movl    %eax, -68(%ebp)        
+     movl    -64(%ebp), %eax         #   6:     add    t6 <- t4, t5
+     movl    -68(%ebp), %ebx        
+     addl    %ebx, %eax             
+     movl    $3, %eax                #   7:     param  1 <- 3
+     pushl   %eax                   
-     movl    -68(%ebp), %eax         #   6:     add    t6 <- t4, t5
+     movl    8(%ebp), %eax           #   8:     param  0 <- v0
-     movl    -72(%ebp), %ebx        
+     pushl   %eax                   
+     call    DIM                     #   9:     call   t7 <- DIM
-     addl    %ebx, %eax             
+     addl    $8, %esp               
-     movl    $3, %eax                #   7:     param  1 <- 3
+     movl    -72(%ebp), %eax         #  10:     mul    t8 <- t6, t7
+     movl    -76(%ebp), %ebx        
-     pushl   %eax                   
+     imull   %ebx                   
-     movl    8(%ebp), %eax           #   8:     param  0 <- v0
-     pushl   %eax                   
-     call    DIM                     #   9:     call   t7 <- DIM
-     addl    $8, %esp               
-     movl    $73214, %eax            #  10:     add    t9 <- 73214, 24326
+     movl    -80(%ebp), %eax         #  11:     add    t9 <- t8, 18666
-     movl    $24326, %ebx           
+     movl    $18666, %ebx           
-     movl    %eax, -88(%ebp)        
-     movl    -76(%ebp), %eax         #  11:     mul    t8 <- t6, t7
-     movl    -80(%ebp), %ebx        
-     imull   %ebx                   
+     movl    $4, %eax                #  12:     param  1 <- 4
+     pushl   %eax                   
-     movl    -84(%ebp), %eax         #  12:     add    t10 <- t8, 18666
+     movl    8(%ebp), %eax           #  13:     param  0 <- v0
-     movl    $18666, %ebx           
+     pushl   %eax                   
+     call    DIM                     #  14:     call   t10 <- DIM
-     addl    %ebx, %eax             
+     addl    $8, %esp               
-     movl    $4, %eax                #  13:     param  1 <- 4
+     movl    -84(%ebp), %eax         #  15:     mul    t11 <- t9, t10
+     movl    -16(%ebp), %ebx        
-     pushl   %eax                   
+     imull   %ebx                   
-     movl    8(%ebp), %eax           #  14:     param  0 <- v0
-     pushl   %eax                   
-     call    DIM                     #  15:     call   t11 <- DIM
-     addl    $8, %esp               
-     movl    -16(%ebp), %eax         #  16:     mul    t12 <- t10, t11
+     movl    -20(%ebp), %eax         #  16:     add    t12 <- t11, 59310
-     movl    -20(%ebp), %ebx        
+     movl    $59310, %ebx           
-     imull   %ebx                   
+     addl    %ebx, %eax             
+     movl    $5, %eax                #  17:     param  1 <- 5
+     pushl   %eax                   
-     movl    -24(%ebp), %eax         #  17:     add    t13 <- t12, 59310
+     movl    8(%ebp), %eax           #  18:     param  0 <- v0
-     movl    $59310, %ebx           
+     pushl   %eax                   
+     call    DIM                     #  19:     call   t13 <- DIM
-     addl    %ebx, %eax             
+     addl    $8, %esp               
-     movl    $5, %eax                #  18:     param  1 <- 5
+     movl    -24(%ebp), %eax         #  20:     mul    t14 <- t12, t13
+     movl    -28(%ebp), %ebx        
-     pushl   %eax                   
+     imull   %ebx                   
-     movl    8(%ebp), %eax           #  19:     param  0 <- v0
-     pushl   %eax                   
-     call    DIM                     #  20:     call   t14 <- DIM
-     addl    $8, %esp               
-     movl    -28(%ebp), %eax         #  21:     mul    t15 <- t13, t14
+     movl    -32(%ebp), %eax         #  21:     add    t15 <- t14, 69481
-     movl    -32(%ebp), %ebx        
+     movl    $69481, %ebx           
-     imull   %ebx                   
+     addl    %ebx, %eax             
-     movl    -36(%ebp), %eax         #  22:     add    t16 <- t15, 69481
+     movl    -36(%ebp), %eax         #  22:     mul    t16 <- t15, 1
-     movl    $69481, %ebx           
+     movl    $1, %ebx               
-     addl    %ebx, %eax             
+     imull   %ebx                   
-     movl    -40(%ebp), %eax         #  23:     mul    t17 <- t16, 1
+     movl    8(%ebp), %eax           #  23:     param  0 <- v0
-     movl    $1, %ebx               
-     imull   %ebx                   
+     pushl   %eax                   
+     call    DOFS                    #  24:     call   t17 <- DOFS
+     addl    $4, %esp               
-     movl    8(%ebp), %eax           #  24:     param  0 <- v0
+     movl    -40(%ebp), %eax         #  25:     add    t18 <- t16, t17
+     movl    -44(%ebp), %ebx        
-     pushl   %eax                   
-     call    DOFS                    #  25:     call   t18 <- DOFS
-     addl    $4, %esp               
+     addl    %ebx, %eax             
-     movl    -44(%ebp), %eax         #  26:     add    t19 <- t17, t18
+     movl    8(%ebp), %eax           #  26:     add    t19 <- v0, t18
-     movl    8(%ebp), %eax           #  27:     add    t20 <- v0, t19
-     movl    -52(%ebp), %ebx        
-     addl    %ebx, %eax             
-     movl    %eax, -60(%ebp)        
-     movl    $100, %eax              #  28:     assign @t20 <- 100
+     movl    $100, %eax              #  27:     assign @t19 <- 100
-     movl    -60(%ebp), %edi        
+     movl    -52(%ebp), %edi        
-     movl    $98, %eax               #  30:     if     98 <= 97 goto 4_while_body
+     movl    $98, %eax               #  29:     if     98 <= 97 goto 4_while_body
-     jmp     l_f1_2                  #  31:     goto   2
+     jmp     l_f1_2                  #  30:     goto   2
-     movl    $98, %eax               #  33:     if     98 = 99 goto 7_if_true
+     movl    $98, %eax               #  32:     if     98 = 99 goto 7_if_true
-     jmp     l_f1_8_if_false         #  34:     goto   8_if_false
+     jmp     l_f1_8_if_false         #  33:     goto   8_if_false
-     jmp     l_f1_11_while_cond      #  37:     goto   11_while_cond
+     jmp     l_f1_11_while_cond      #  36:     goto   11_while_cond
-     movl    $27471, %eax            #  38:     assign v3 <- 27471
+     movl    $27471, %eax            #  37:     assign v3 <- 27471
-     movl    %eax, -92(%ebp)        
+     movl    %eax, -88(%ebp)        
-     movl    $98, %eax               #  39:     param  0 <- 98
+     movl    $98, %eax               #  38:     param  0 <- 98
-     call    WriteChar               #  40:     call   WriteChar
+     call    WriteChar               #  39:     call   WriteChar
-     addl    $1, %esp               
+     addl    $4, %esp               
-     movl    $100, %eax              #  41:     return 100
+     movl    $100, %eax              #  40:     return 100
-     jmp     l_f1_6                  #  42:     goto   6
+     jmp     l_f1_6                  #  41:     goto   6
-     jmp     l_f1_3_while_cond       #  45:     goto   3_while_cond
+     jmp     l_f1_3_while_cond       #  44:     goto   3_while_cond
-     addl    $80, %esp               # remove locals
+     addl    $76, %esp               # remove locals
+     jmp     l_test_6                #   1:     goto   6
+     jmp     l_test_6                #   2:     goto   6
-     jmp     l_test_2_while_body     #   1:     goto   2_while_body
+     jmp     l_test_2_while_body     #   3:     goto   2_while_body
+ l_test_6:
-     jmp     l_test_2_while_body     #   2:     goto   2_while_body
+     jmp     l_test_2_while_body     #   5:     goto   2_while_body
-     jmp     l_test_1_while_cond     #   4:     goto   1_while_cond
+     jmp     l_test_1_while_cond     #   7:     goto   1_while_cond
-     call    dummyCHARfunc           #   5:     call   t0 <- dummyCHARfunc
+     call    dummyCHARfunc           #   8:     call   t0 <- dummyCHARfunc
-     movzbl  -13(%ebp), %eax         #   6:     assign v0 <- t0
+     movzbl  -13(%ebp), %eax         #   9:     assign v0 <- t0
-     call    dummyINTfunc            #   7:     call   t1 <- dummyINTfunc
+     call    dummyINTfunc            #  10:     call   t1 <- dummyINTfunc
-     movl    -20(%ebp), %eax         #   8:     assign v1 <- t1
+     movl    -20(%ebp), %eax         #  11:     assign v1 <- t1
