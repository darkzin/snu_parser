+     jmp     l_f0_5                  #   1:     goto   5
-     movl    $1, %eax                #   1:     assign t0 <- 1
+     movl    $1, %eax                #   2:     assign t0 <- 1
-     jmp     l_f0_5                  #   2:     goto   5
+     jmp     l_f0_6                  #   3:     goto   6
+ l_f0_5:
-     movl    $0, %eax                #   3:     assign t0 <- 0
+     movl    $0, %eax                #   5:     assign t0 <- 0
- l_f0_5:
+ l_f0_6:
-     movzbl  -13(%ebp), %eax         #   5:     if     t0 = 0 goto 2_while_body
+     movzbl  -13(%ebp), %eax         #   7:     if     t0 = 0 goto 2_while_body
-     jmp     l_f0_0                  #   6:     goto   0
+     jmp     l_f0_0                  #   8:     goto   0
-     movl    $1, %eax                #   8:     assign v3 <- 1
+     movl    $1, %eax                #  10:     assign v3 <- 1
-     movl    $97, %eax               #   9:     if     97 # 99 goto 10
+     movl    $97, %eax               #  11:     if     97 # 99 goto 10
-     jmp     l_f0_11                 #  10:     goto   11
+     jmp     l_f0_11                 #  12:     goto   11
-     movl    $1, %eax                #  12:     assign t1 <- 1
+     movl    $1, %eax                #  14:     assign t1 <- 1
-     jmp     l_f0_12                 #  13:     goto   12
+     jmp     l_f0_12                 #  15:     goto   12
-     movl    $0, %eax                #  15:     assign t1 <- 0
+     movl    $0, %eax                #  17:     assign t1 <- 0
-     movzbl  -14(%ebp), %eax         #  17:     return t1
+     movzbl  -14(%ebp), %eax         #  19:     return t1
-     jmp     l_f0_1_while_cond       #  18:     goto   1_while_cond
+     jmp     l_f0_1_while_cond       #  20:     goto   1_while_cond
-     movl    $80958, %eax            #  20:     if     80958 < 76451 goto 15_if_true
+     movl    $80958, %eax            #  22:     if     80958 < 76451 goto 15_if_true
-     jmp     l_f0_16_if_false        #  21:     goto   16_if_false
+     jmp     l_f0_16_if_false        #  23:     goto   16_if_false
-     movl    $58611, %eax            #  23:     assign v4 <- 58611
+     movl    $58611, %eax            #  25:     assign v4 <- 58611
-     jmp     l_f0_19                 #  25:     goto   19
+     jmp     l_f0_19                 #  27:     goto   19
-     jmp     l_f0_20_while_cond      #  26:     goto   20_while_cond
+     jmp     l_f0_20_while_cond      #  28:     goto   20_while_cond
-     call    dummyINTfunc            #  28:     call   t2 <- dummyINTfunc
+     call    dummyINTfunc            #  30:     call   t2 <- dummyINTfunc
-     movl    $99, %eax               #  30:     if     99 < 97 goto 25_while_body
+     movl    $99, %eax               #  32:     if     99 < 97 goto 25_while_body
-     jmp     l_f0_23                 #  31:     goto   23
+     jmp     l_f0_23                 #  33:     goto   23
-     jmp     l_f0_24_while_cond      #  33:     goto   24_while_cond
+     jmp     l_f0_24_while_cond      #  35:     goto   24_while_cond
-     jmp     l_f0_14                 #  35:     goto   14
+     jmp     l_f0_14                 #  37:     goto   14
-     jmp     l_f0_28                 #  38:     goto   28
+     jmp     l_f0_28                 #  40:     goto   28
+     jmp     l_f0_29                 #  41:     goto   29
-     movl    $1, %eax                #  40:     assign t3 <- 1
+     movl    $1, %eax                #  43:     assign t3 <- 1
-     jmp     l_f0_30                 #  41:     goto   30
+     jmp     l_f0_30                 #  44:     goto   30
+ l_f0_29:
-     movl    $0, %eax                #  42:     assign t3 <- 0
+     movl    $0, %eax                #  46:     assign t3 <- 0
-     movzbl  -21(%ebp), %eax         #  44:     return t3
+     movzbl  -21(%ebp), %eax         #  48:     return t3
+     jmp     l_f2_14                 #   8:     goto   14
+     jmp     l_f2_14                 #   9:     goto   14
-     jmp     l_f2_9                  #   8:     goto   9
+     jmp     l_f2_9                  #  10:     goto   9
+ l_f2_14:
-     jmp     l_f2_9                  #   9:     goto   9
+     jmp     l_f2_9                  #  12:     goto   9
-     movl    $1, %eax                #  11:     assign t5 <- 1
+     movl    $1, %eax                #  14:     assign t5 <- 1
-     jmp     l_f2_11                 #  12:     goto   11
+     jmp     l_f2_11                 #  15:     goto   11
-     movl    $0, %eax                #  13:     assign t5 <- 0
+     movl    $0, %eax                #  16:     assign t5 <- 0
-     movzbl  -33(%ebp), %eax         #  15:     return t5
+     movzbl  -33(%ebp), %eax         #  18:     return t5
