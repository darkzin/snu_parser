+     jmp     l_f1_2_if_false         #   1:     goto   2_if_false
-     movl    $97, %eax               #   2:     assign v1 <- 97
+     movl    $97, %eax               #   3:     assign v1 <- 97
-     movl    $83113, %eax            #   3:     assign v2 <- 83113
+     movl    $83113, %eax            #   4:     assign v2 <- 83113
-     jmp     l_f1_0                  #   4:     goto   0
+     jmp     l_f1_0                  #   5:     goto   0
+ l_f1_2_if_false:
+     jmp     l_f1_7                  #   9:     goto   7
-     movl    $98, %eax               #   7:     if     98 < 97 goto 12
+     movl    $98, %eax               #  10:     if     98 < 97 goto 12
-     jmp     l_f1_13                 #   8:     goto   13
+     jmp     l_f1_13                 #  11:     goto   13
-     movl    $1, %eax                #  10:     assign t2 <- 1
+     movl    $1, %eax                #  13:     assign t2 <- 1
-     jmp     l_f1_14                 #  11:     goto   14
+     jmp     l_f1_14                 #  14:     goto   14
-     movl    $0, %eax                #  13:     assign t2 <- 0
+     movl    $0, %eax                #  16:     assign t2 <- 0
-     movzbl  -13(%ebp), %eax         #  15:     assign v3 <- t2
+     movzbl  -13(%ebp), %eax         #  18:     assign v3 <- t2
-     jmp     l_f1_8_while_cond       #  16:     goto   8_while_cond
+     jmp     l_f1_8_while_cond       #  19:     goto   8_while_cond
+ l_f1_7:
-     call    dummyCHARfunc           #  17:     call   t3 <- dummyCHARfunc
+     call    dummyCHARfunc           #  21:     call   t3 <- dummyCHARfunc
-     movzbl  -14(%ebp), %eax         #  18:     if     t3 <= 97 goto 17
+     movzbl  -14(%ebp), %eax         #  22:     if     t3 <= 97 goto 17
-     jmp     l_f1_18                 #  19:     goto   18
+     jmp     l_f1_18                 #  23:     goto   18
-     movl    $1, %eax                #  21:     assign t4 <- 1
+     movl    $1, %eax                #  25:     assign t4 <- 1
-     jmp     l_f1_19                 #  22:     goto   19
+     jmp     l_f1_19                 #  26:     goto   19
-     movl    $0, %eax                #  24:     assign t4 <- 0
+     movl    $0, %eax                #  28:     assign t4 <- 0
-     movzbl  -15(%ebp), %eax         #  26:     return t4
+     movzbl  -15(%ebp), %eax         #  30:     return t4
