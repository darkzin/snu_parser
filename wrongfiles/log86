+     jmp     l_f0_6_if_false         #   5:     goto   6_if_false
-     call    dummyCHARfunc           #   5:     call   t3 <- dummyCHARfunc
+     call    dummyCHARfunc           #   6:     call   t3 <- dummyCHARfunc
-     jmp     l_f0_4                  #   6:     goto   4
+     jmp     l_f0_4                  #   7:     goto   4
+ l_f0_6_if_false:
-     call    dummyCHARfunc           #   8:     call   t4 <- dummyCHARfunc
+     call    dummyCHARfunc           #  10:     call   t4 <- dummyCHARfunc
-     movzbl  -15(%ebp), %eax         #   9:     assign v1 <- t4
+     movzbl  -15(%ebp), %eax         #  11:     assign v1 <- t4
-     #    -84(%ebp)   4  [ $t26      <int> %ebp-84 ]
+     #    -81(%ebp)   1  [ $t26      <char> %ebp-81 ]
-     #    -88(%ebp)   4  [ $t27      <int> %ebp-88 ]
+     #    -88(%ebp)   4  [ $t3       <int> %ebp-88 ]
-     #    -92(%ebp)   4  [ $t28      <int> %ebp-92 ]
+     #    -92(%ebp)   4  [ $t4       <int> %ebp-92 ]
-     #    -96(%ebp)   4  [ $t29      <int> %ebp-96 ]
+     #    -93(%ebp)   1  [ $t5       <bool> %ebp-93 ]
-     #   -100(%ebp)   4  [ $t3       <int> %ebp-100 ]
+     #   -100(%ebp)   4  [ $t6       <int> %ebp-100 ]
-     #   -101(%ebp)   1  [ $t30      <char> %ebp-101 ]
+     #   -104(%ebp)   4  [ $t7       <int> %ebp-104 ]
-     #   -108(%ebp)   4  [ $t4       <int> %ebp-108 ]
+     #   -108(%ebp)   4  [ $t8       <int> %ebp-108 ]
-     #   -109(%ebp)   1  [ $t5       <bool> %ebp-109 ]
-     #   -116(%ebp)   4  [ $t6       <int> %ebp-116 ]
-     #   -120(%ebp)   4  [ $t7       <int> %ebp-120 ]
-     #   -124(%ebp)   4  [ $t8       <int> %ebp-124 ]
-     #   -128(%ebp)   4  [ $t9       <int> %ebp-128 ]
+     #   -112(%ebp)   4  [ $t9       <int> %ebp-112 ]
-     #   -129(%ebp)   1  [ $v3       <bool> %ebp-129 ]
+     #   -113(%ebp)   1  [ $v3       <bool> %ebp-113 ]
-     pushl   %ebp                   
-     movl    %esp, %ebp             
-     pushl   %ebx                    # save callee saved registers
-     pushl   %esi                   
+     pushl   %ebp                   
+     movl    %esp, %ebp             
+     pushl   %ebx                    # save callee saved registers
-     pushl   %edi                   
+     pushl   %esi                   
+     pushl   %edi                   
-     subl    $120, %esp              # make room for locals
+     subl    $104, %esp              # make room for locals
-     movl    $30, %ecx              
+     movl    $26, %ecx              
-     movl    %eax, -100(%ebp)       
+     movl    %eax, -88(%ebp)        
-     movl    -100(%ebp), %eax        #   2:     add    t4 <- t3, 14138
+     movl    -88(%ebp), %eax         #   2:     add    t4 <- t3, 14138
-     movl    %eax, -108(%ebp)       
+     movl    %eax, -92(%ebp)        
-     movl    -108(%ebp), %eax        #   3:     if     t4 >= 89472 goto 1
+     movl    -92(%ebp), %eax         #   3:     if     t4 >= 89472 goto 1
-     movb    %al, -109(%ebp)        
+     movb    %al, -93(%ebp)         
-     movb    %al, -109(%ebp)        
+     movb    %al, -93(%ebp)         
-     movl    %eax, -116(%ebp)       
+     movl    %eax, -100(%ebp)       
-     movl    -116(%ebp), %ebx       
+     movl    -100(%ebp), %ebx       
-     movl    %eax, -120(%ebp)       
+     movl    %eax, -104(%ebp)       
-     movl    %eax, -124(%ebp)       
+     movl    %eax, -108(%ebp)       
-     movl    -124(%ebp), %eax        #  16:     sub    t9 <- t8, 96540
+     movl    -108(%ebp), %eax        #  16:     sub    t9 <- t8, 96540
-     movl    %eax, -128(%ebp)       
+     movl    %eax, -112(%ebp)       
-     movl    -128(%ebp), %eax        #  17:     sub    t10 <- t9, 18283
+     movl    -112(%ebp), %eax        #  17:     sub    t10 <- t9, 18283
-     movl    -120(%ebp), %eax        #  19:     add    t12 <- t7, t11
+     movl    -104(%ebp), %eax        #  19:     add    t12 <- t7, t11
-     movl    $64750, %eax            #  23:     sub    t15 <- 64750, 45261
+     movl    -24(%ebp), %eax         #  23:     mul    t14 <- t12, t13
+     movl    -28(%ebp), %ebx        
+     imull   %ebx                   
+     movl    %eax, -32(%ebp)        
+     movl    -32(%ebp), %eax         #  24:     add    t15 <- t14, 38392
-     movl    $45261, %ebx           
+     movl    $38392, %ebx           
-     subl    %ebx, %eax             
+     addl    %ebx, %eax             
+     movl    $4, %eax                #  25:     param  1 <- 4
+     pushl   %eax                   
-     movl    -36(%ebp), %eax         #  24:     sub    t16 <- t15, 96540
+     movl    16(%ebp), %eax          #  26:     param  0 <- v2
-     movl    $96540, %ebx           
-     subl    %ebx, %eax             
+     pushl   %eax                   
+     call    DIM                     #  27:     call   t16 <- DIM
+     addl    $8, %esp               
-     movl    -40(%ebp), %eax         #  25:     sub    t17 <- t16, 18283
+     movl    -36(%ebp), %eax         #  28:     mul    t17 <- t15, t16
-     movl    $18283, %ebx           
+     movl    -40(%ebp), %ebx        
-     subl    %ebx, %eax             
+     imull   %ebx                   
-     movl    -44(%ebp), %eax         #  26:     sub    t18 <- t17, 48402
+     movl    -44(%ebp), %eax         #  29:     add    t18 <- t17, 99525
-     movl    $48402, %ebx           
+     movl    $99525, %ebx           
-     subl    %ebx, %eax             
+     addl    %ebx, %eax             
+     movl    $5, %eax                #  30:     param  1 <- 5
-     movl    -24(%ebp), %eax         #  27:     mul    t14 <- t12, t13
-     movl    -28(%ebp), %ebx        
-     imull   %ebx                   
+     pushl   %eax                   
-     movl    %eax, -32(%ebp)        
-     movl    -32(%ebp), %eax         #  28:     add    t19 <- t14, 38392
+     movl    16(%ebp), %eax          #  31:     param  0 <- v2
-     movl    $38392, %ebx           
+     pushl   %eax                   
+     call    DIM                     #  32:     call   t19 <- DIM
-     addl    %ebx, %eax             
+     addl    $8, %esp               
-     movl    $4, %eax                #  29:     param  1 <- 4
+     movl    -48(%ebp), %eax         #  33:     mul    t20 <- t18, t19
+     movl    -52(%ebp), %ebx        
-     pushl   %eax                   
+     imull   %ebx                   
-     movl    16(%ebp), %eax          #  30:     param  0 <- v2
-     pushl   %eax                   
-     call    DIM                     #  31:     call   t20 <- DIM
-     addl    $8, %esp               
-     movl    -52(%ebp), %eax         #  32:     mul    t21 <- t19, t20
+     movl    -60(%ebp), %eax         #  34:     add    t21 <- t20, 80558
-     movl    -60(%ebp), %ebx        
+     movl    $80558, %ebx           
-     imull   %ebx                   
+     addl    %ebx, %eax             
-     movl    -64(%ebp), %eax         #  33:     add    t22 <- t21, 99525
+     movl    -64(%ebp), %eax         #  35:     mul    t22 <- t21, 1
-     movl    $99525, %ebx           
+     movl    $1, %ebx               
-     addl    %ebx, %eax             
+     imull   %ebx                   
-     movl    $5, %eax                #  34:     param  1 <- 5
-     pushl   %eax                   
-     movl    16(%ebp), %eax          #  35:     param  0 <- v2
+     movl    16(%ebp), %eax          #  36:     param  0 <- v2
-     call    DIM                     #  36:     call   t23 <- DIM
+     call    DOFS                    #  37:     call   t23 <- DOFS
-     addl    $8, %esp               
+     addl    $4, %esp               
-     movl    -68(%ebp), %eax         #  37:     mul    t24 <- t22, t23
+     movl    -68(%ebp), %eax         #  38:     add    t24 <- t22, t23
-     imull   %ebx                   
+     addl    %ebx, %eax             
-     movl    -76(%ebp), %eax         #  38:     add    t25 <- t24, 80558
+     movl    16(%ebp), %eax          #  39:     add    t25 <- v2, t24
-     movl    $80558, %ebx           
+     movl    -76(%ebp), %ebx        
-     movl    -80(%ebp), %eax         #  39:     mul    t26 <- t25, 1
-     movl    $1, %ebx               
-     imull   %ebx                   
-     movl    %eax, -84(%ebp)        
-     movl    16(%ebp), %eax          #  40:     param  0 <- v2
-     pushl   %eax                   
-     call    DOFS                    #  41:     call   t27 <- DOFS
-     addl    $4, %esp               
-     movl    %eax, -88(%ebp)        
-     movl    -84(%ebp), %eax         #  42:     add    t28 <- t26, t27
-     movl    -88(%ebp), %ebx        
-     addl    %ebx, %eax             
-     movl    %eax, -92(%ebp)        
-     movl    16(%ebp), %eax          #  43:     add    t29 <- v2, t28
-     movl    -92(%ebp), %ebx        
-     addl    %ebx, %eax             
-     movl    %eax, -96(%ebp)        
-     movzbl  -109(%ebp), %eax        #  44:     assign @t29 <- t5
+     movzbl  -93(%ebp), %eax         #  40:     assign @t25 <- t5
-     movl    -96(%ebp), %edi        
+     movl    -80(%ebp), %edi        
-     call    dummyProcedure          #  45:     call   dummyProcedure
+     call    dummyProcedure          #  41:     call   dummyProcedure
-     call    dummyCHARfunc           #  46:     call   t30 <- dummyCHARfunc
+     call    dummyCHARfunc           #  42:     call   t26 <- dummyCHARfunc
-     movb    %al, -101(%ebp)        
+     movb    %al, -81(%ebp)         
-     movzbl  -101(%ebp), %eax        #  47:     if     t30 > 97 goto 7_if_true
+     movzbl  -81(%ebp), %eax         #  43:     if     t26 > 97 goto 7_if_true
-     jmp     l_f1_8_if_false         #  48:     goto   8_if_false
+     jmp     l_f1_8_if_false         #  44:     goto   8_if_false
-     movl    $97, %eax               #  50:     return 97
+     movl    $97, %eax               #  46:     return 97
-     jmp     l_f1_6                  #  51:     goto   6
+     jmp     l_f1_6                  #  47:     goto   6
-     addl    $120, %esp              # remove locals
+     addl    $104, %esp              # remove locals
+     jmp     l_test_13               #  15:     goto   13
+     jmp     l_test_13               #  16:     goto   13
-     movl    $1, %eax                #  16:     assign t1 <- 1
+     movl    $1, %eax                #  18:     assign t1 <- 1
-     jmp     l_test_14               #  17:     goto   14
+     jmp     l_test_14               #  19:     goto   14
+ l_test_13:
-     movl    $0, %eax                #  18:     assign t1 <- 0
+     movl    $0, %eax                #  21:     assign t1 <- 0
-     movzbl  -14(%ebp), %eax         #  20:     assign v2 <- t1
+     movzbl  -14(%ebp), %eax         #  23:     assign v2 <- t1
