-     # -16172(%ebp)16152  [ $v1       <array 7 of <array 9 of <array 2 of <array 8 of <array 4 of <int>>>>>> %ebp-16172 ]
+     #   -16172(%ebp)  16152  [ $v1       <array 7 of <array 9 of <array 2 of <array 8 of <array 4 of <int>>>>>> %ebp-16172 ]
+     jmp     l_test_2                #   1:     goto   2
+     jmp     l_test_2                #   2:     goto   2
-     movl    $1, %eax                #   2:     assign t0 <- 1
+     movl    $1, %eax                #   4:     assign t0 <- 1
-     jmp     l_test_3                #   3:     goto   3
+     jmp     l_test_3                #   5:     goto   3
+ l_test_2:
-     movl    $0, %eax                #   4:     assign t0 <- 0
+     movl    $0, %eax                #   7:     assign t0 <- 0
-     movzbl  -13(%ebp), %eax         #   6:     assign v0 <- t0
+     movzbl  -13(%ebp), %eax         #   9:     assign v0 <- t0
-     movl    $98, %eax               #   7:     param  0 <- 98
+     movl    $98, %eax               #  10:     param  0 <- 98
-     call    WriteChar               #   8:     call   WriteChar
+     call    WriteChar               #  11:     call   WriteChar
-     addl    $1, %esp               
+     addl    $4, %esp               
-     movl    $100, %eax              #   9:     if     100 > 98 goto 9
+     movl    $100, %eax              #  12:     if     100 > 98 goto 9
-     jmp     l_test_10               #  10:     goto   10
+     jmp     l_test_10               #  13:     goto   10
-     movl    $1, %eax                #  12:     assign t1 <- 1
+     movl    $1, %eax                #  15:     assign t1 <- 1
-     jmp     l_test_11               #  13:     goto   11
+     jmp     l_test_11               #  16:     goto   11
-     movl    $0, %eax                #  15:     assign t1 <- 0
+     movl    $0, %eax                #  18:     assign t1 <- 0
-     movzbl  -14(%ebp), %eax         #  17:     assign v0 <- t1
+     movzbl  -14(%ebp), %eax         #  20:     assign v0 <- t1
-     jmp     l_test_15_if_false      #  18:     goto   15_if_false
+     jmp     l_test_15_if_false      #  21:     goto   15_if_false
-     movl    $97, %eax               #  19:     assign v1 <- 97
+     movl    $97, %eax               #  22:     assign v1 <- 97
-     movl    $1, %eax                #  21:     param  0 <- 1
+     movl    $1, %eax                #  24:     param  0 <- 1
-     call    f1                      #  22:     call   t2 <- f1
+     call    f1                      #  25:     call   t2 <- f1
-     addl    $1, %esp               
+     addl    $4, %esp               
-     movl    $54237, %eax            #  23:     param  0 <- 54237
+     movl    $54237, %eax            #  26:     param  0 <- 54237
-     call    WriteInt                #  24:     call   WriteInt
+     call    WriteInt                #  27:     call   WriteInt
-     movl    $78294, %eax            #  25:     assign v2 <- 78294
+     movl    $78294, %eax            #  28:     assign v2 <- 78294
-     jmp     l_test_13               #  26:     goto   13
+     jmp     l_test_13               #  29:     goto   13
-     call    dummyCHARfunc           #  29:     call   t3 <- dummyCHARfunc
+     call    dummyCHARfunc           #  32:     call   t3 <- dummyCHARfunc
-     movzbl  -21(%ebp), %eax         #  30:     if     t3 < 98 goto 22_if_true
+     movzbl  -21(%ebp), %eax         #  33:     if     t3 < 98 goto 22_if_true
-     jmp     l_test_23_if_false      #  31:     goto   23_if_false
+     jmp     l_test_23_if_false      #  34:     goto   23_if_false
-     jmp     l_test_21               #  33:     goto   21
+     jmp     l_test_21               #  36:     goto   21
-     jmp     l_test_27_if_false      #  36:     goto   27_if_false
+     jmp     l_test_27_if_false      #  39:     goto   27_if_false
-     movl    $100, %eax              #  37:     assign v1 <- 100
+     movl    $100, %eax              #  40:     assign v1 <- 100
-     movl    $14578, %eax            #  38:     if     14578 >= 60519 goto 30_if_true
+     movl    $14578, %eax            #  41:     if     14578 >= 60519 goto 30_if_true
-     jmp     l_test_31_if_false      #  39:     goto   31_if_false
+     jmp     l_test_31_if_false      #  42:     goto   31_if_false
-     jmp     l_test_29               #  41:     goto   29
+     jmp     l_test_29               #  44:     goto   29
-     jmp     l_test_25               #  44:     goto   25
+     jmp     l_test_25               #  47:     goto   25
