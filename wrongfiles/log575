+     jmp     l_f1_2                  #   0:     goto   2
-     movl    $1, %eax                #   0:     assign t2 <- 1
+     movl    $1, %eax                #   1:     assign t2 <- 1
-     jmp     l_f1_3                  #   1:     goto   3
+     jmp     l_f1_3                  #   2:     goto   3
+ l_f1_2:
-     movl    $0, %eax                #   2:     assign t2 <- 0
+     movl    $0, %eax                #   4:     assign t2 <- 0
-     movzbl  -13(%ebp), %eax         #   4:     return t2
+     movzbl  -13(%ebp), %eax         #   6:     return t2
-     call    dummyCHARfunc           #   5:     call   t3 <- dummyCHARfunc
+     call    dummyCHARfunc           #   7:     call   t3 <- dummyCHARfunc
-     call    dummyCHARfunc           #   6:     call   t4 <- dummyCHARfunc
+     call    dummyCHARfunc           #   8:     call   t4 <- dummyCHARfunc
-     movzbl  -15(%ebp), %eax         #   7:     param  0 <- t4
+     movzbl  -15(%ebp), %eax         #   9:     param  0 <- t4
-     call    WriteChar               #   8:     call   WriteChar
+     call    WriteChar               #  10:     call   WriteChar
-     addl    $1, %esp               
+     addl    $4, %esp               
-     #   -984(%ebp) 864  [ $v4       <array 1 of <array 6 of <array 4 of <array 7 of <array 5 of <char>>>>>> %ebp-984 ]
+     #   -984(%ebp)  864  [ $v4       <array 1 of <array 6 of <array 4 of <array 7 of <array 5 of <char>>>>>> %ebp-984 ]
-     #  -5420(%ebp)4434  [ $v5       <array 10 of <array 9 of <array 1 of <array 7 of <array 7 of <char>>>>>> %ebp-5420 ]
+     #   -5420(%ebp)  4434  [ $v5       <array 10 of <array 9 of <array 1 of <array 7 of <array 7 of <char>>>>>> %ebp-5420 ]
-     #  -5421(%ebp)   1  [ $v6       <bool> %ebp-5421 ]
+     #   -5421(%ebp)   1  [ $v6       <bool> %ebp-5421 ]
-     #  -5422(%ebp)   1  [ $v7       <char> %ebp-5422 ]
+     #   -5422(%ebp)   1  [ $v7       <char> %ebp-5422 ]
-     addl    $13, %esp              
+     addl    $16, %esp              
-     movzbl  -97(%ebp), %eax         #   7:     if     t3 = 1 goto 6
+     movzbl  -97(%ebp), %eax         #   7:     if     t3 = 1 goto 7
-     je      l_f2_6                 
+     je      l_f2_7                 
-     jmp     l_f2_4                  #   8:     goto   4
+     jmp     l_f2_5                  #   8:     goto   5
+ l_f2_7:
+     jmp     l_f2_5                  #  10:     goto   5
+     movl    $1, %eax                #  11:     assign t4 <- 1
+     movb    %al, -99(%ebp)         
+     jmp     l_f2_6                  #  12:     goto   6
+ l_f2_5:
+     movl    $0, %eax                #  14:     assign t4 <- 0
+     movb    %al, -99(%ebp)         
-     movl    $1, %eax                #  10:     assign t4 <- 1
-     movb    %al, -99(%ebp)         
-     jmp     l_f2_5                  #  11:     goto   5
- l_f2_4:
-     movl    $0, %eax                #  13:     assign t4 <- 0
-     movb    %al, -99(%ebp)         
- l_f2_5:
-     movzbl  -99(%ebp), %eax         #  15:     if     t4 # 1 goto 2_while_body
+     movzbl  -99(%ebp), %eax         #  16:     if     t4 # 1 goto 2_while_body
-     jmp     l_f2_0                  #  16:     goto   0
+     jmp     l_f2_0                  #  17:     goto   0
-     jmp     l_f2_1_while_cond       #  18:     goto   1_while_cond
+     jmp     l_f2_1_while_cond       #  19:     goto   1_while_cond
-     jmp     l_f2_10_if_false        #  20:     goto   10_if_false
+     jmp     l_f2_10_if_false        #  21:     goto   10_if_false
-     movl    $1, %eax                #  21:     param  1 <- 1
+     movl    $1, %eax                #  22:     param  1 <- 1
-     leal    -5420(%ebp), %eax       #  22:     &()    t5 <- v5
+     leal    -5420(%ebp), %eax       #  23:     &()    t5 <- v5
-     movl    -104(%ebp), %eax        #  23:     param  0 <- t5
+     movl    -104(%ebp), %eax        #  24:     param  0 <- t5
-     call    f0                      #  24:     call   t6 <- f0
+     call    f0                      #  25:     call   t6 <- f0
-     addl    $5, %esp               
+     addl    $8, %esp               
-     movl    $0, %eax                #  25:     assign v6 <- 0
+     movl    $0, %eax                #  26:     assign v6 <- 0
-     leal    -5420(%ebp), %eax       #  26:     &()    t7 <- v5
+     leal    -5420(%ebp), %eax       #  27:     &()    t7 <- v5
-     movl    $2, %eax                #  27:     param  1 <- 2
+     movl    $2, %eax                #  28:     param  1 <- 2
-     leal    -5420(%ebp), %eax       #  28:     &()    t8 <- v5
+     leal    -5420(%ebp), %eax       #  29:     &()    t8 <- v5
-     movl    -116(%ebp), %eax        #  29:     param  0 <- t8
+     movl    -116(%ebp), %eax        #  30:     param  0 <- t8
-     call    DIM                     #  30:     call   t9 <- DIM
+     call    DIM                     #  31:     call   t9 <- DIM
-     movl    $69081, %eax            #  31:     mul    t10 <- 69081, t9
+     movl    $69081, %eax            #  32:     mul    t10 <- 69081, t9
-     movl    -16(%ebp), %eax         #  32:     add    t11 <- t10, 71845
+     movl    -16(%ebp), %eax         #  33:     add    t11 <- t10, 71845
-     movl    $3, %eax                #  33:     param  1 <- 3
+     movl    $3, %eax                #  34:     param  1 <- 3
-     leal    -5420(%ebp), %eax       #  34:     &()    t12 <- v5
+     leal    -5420(%ebp), %eax       #  35:     &()    t12 <- v5
-     movl    -24(%ebp), %eax         #  35:     param  0 <- t12
+     movl    -24(%ebp), %eax         #  36:     param  0 <- t12
-     call    DIM                     #  36:     call   t13 <- DIM
+     call    DIM                     #  37:     call   t13 <- DIM
-     movl    -20(%ebp), %eax         #  37:     mul    t14 <- t11, t13
+     movl    -20(%ebp), %eax         #  38:     mul    t14 <- t11, t13
-     movl    -32(%ebp), %eax         #  38:     add    t15 <- t14, 87576
+     movl    -32(%ebp), %eax         #  39:     add    t15 <- t14, 87576
-     movl    $4, %eax                #  39:     param  1 <- 4
+     movl    $4, %eax                #  40:     param  1 <- 4
-     leal    -5420(%ebp), %eax       #  40:     &()    t16 <- v5
+     leal    -5420(%ebp), %eax       #  41:     &()    t16 <- v5
-     movl    -40(%ebp), %eax         #  41:     param  0 <- t16
+     movl    -40(%ebp), %eax         #  42:     param  0 <- t16
-     call    DIM                     #  42:     call   t17 <- DIM
+     call    DIM                     #  43:     call   t17 <- DIM
-     movl    -36(%ebp), %eax         #  43:     mul    t18 <- t15, t17
+     movl    -36(%ebp), %eax         #  44:     mul    t18 <- t15, t17
-     movl    -48(%ebp), %eax         #  44:     add    t19 <- t18, 10763
+     movl    -48(%ebp), %eax         #  45:     add    t19 <- t18, 10763
-     movl    $5, %eax                #  45:     param  1 <- 5
+     movl    $5, %eax                #  46:     param  1 <- 5
-     leal    -5420(%ebp), %eax       #  46:     &()    t20 <- v5
+     leal    -5420(%ebp), %eax       #  47:     &()    t20 <- v5
-     movl    -60(%ebp), %eax         #  47:     param  0 <- t20
+     movl    -60(%ebp), %eax         #  48:     param  0 <- t20
-     call    DIM                     #  48:     call   t21 <- DIM
+     call    DIM                     #  49:     call   t21 <- DIM
-     movl    -52(%ebp), %eax         #  49:     mul    t22 <- t19, t21
+     movl    -52(%ebp), %eax         #  50:     mul    t22 <- t19, t21
-     movl    -68(%ebp), %eax         #  50:     add    t23 <- t22, 32954
+     movl    -68(%ebp), %eax         #  51:     add    t23 <- t22, 32954
-     movl    -72(%ebp), %eax         #  51:     mul    t24 <- t23, 1
+     movl    -72(%ebp), %eax         #  52:     mul    t24 <- t23, 1
-     leal    -5420(%ebp), %eax       #  52:     &()    t25 <- v5
+     leal    -5420(%ebp), %eax       #  53:     &()    t25 <- v5
-     movl    -80(%ebp), %eax         #  53:     param  0 <- t25
+     movl    -80(%ebp), %eax         #  54:     param  0 <- t25
-     call    DOFS                    #  54:     call   t26 <- DOFS
+     call    DOFS                    #  55:     call   t26 <- DOFS
-     movl    -76(%ebp), %eax         #  55:     add    t27 <- t24, t26
+     movl    -76(%ebp), %eax         #  56:     add    t27 <- t24, t26
-     movl    -112(%ebp), %eax        #  56:     add    t28 <- t7, t27
+     movl    -112(%ebp), %eax        #  57:     add    t28 <- t7, t27
-     movl    $99, %eax               #  57:     assign @t28 <- 99
+     movl    $99, %eax               #  58:     assign @t28 <- 99
-     movl    $0, %eax                #  58:     param  1 <- 0
+     movl    $0, %eax                #  59:     param  1 <- 0
-     leal    -5420(%ebp), %eax       #  59:     &()    t29 <- v5
+     leal    -5420(%ebp), %eax       #  60:     &()    t29 <- v5
-     movl    -96(%ebp), %eax         #  60:     param  0 <- t29
+     movl    -96(%ebp), %eax         #  61:     param  0 <- t29
-     call    f0                      #  61:     call   t30 <- f0
+     call    f0                      #  62:     call   t30 <- f0
-     addl    $5, %esp               
+     addl    $8, %esp               
-     movl    $97, %eax               #  62:     return 97
+     movl    $97, %eax               #  63:     return 97
-     jmp     l_f2_8                  #  63:     goto   8
+     jmp     l_f2_8                  #  64:     goto   8
-     movl    $100, %eax              #  66:     return 100
+     movl    $100, %eax              #  67:     return 100
+     jmp     l_test_2_if_false       #   1:     goto   2_if_false
-     jmp     l_test_0                #   3:     goto   0
+     jmp     l_test_0                #   4:     goto   0
+ l_test_2_if_false:
-     movl    $97, %eax               #   5:     assign v0 <- 97
+     movl    $97, %eax               #   7:     assign v0 <- 97
-     movl    $97441, %eax            #   7:     mul    t0 <- 97441, 60219
+     movl    $97441, %eax            #   9:     mul    t0 <- 97441, 60219
-     movl    -16(%ebp), %eax         #   8:     mul    t1 <- t0, 83581
+     movl    -16(%ebp), %eax         #  10:     mul    t1 <- t0, 83581
-     movl    $89821, %eax            #   9:     if     89821 <= t1 goto 9_while_body
+     movl    $89821, %eax            #  11:     if     89821 <= t1 goto 9_while_body
-     jmp     l_test_7                #  10:     goto   7
+     jmp     l_test_7                #  12:     goto   7
-     movl    $97, %eax               #  12:     param  0 <- 97
+     movl    $97, %eax               #  14:     param  0 <- 97
-     call    WriteChar               #  13:     call   WriteChar
+     call    WriteChar               #  15:     call   WriteChar
-     addl    $1, %esp               
+     addl    $4, %esp               
-     jmp     l_test_8_while_cond     #  14:     goto   8_while_cond
+     jmp     l_test_8_while_cond     #  16:     goto   8_while_cond
