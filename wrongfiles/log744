-     addl    $1, %esp               
+     addl    $4, %esp               
-     # -18492(%ebp)18456  [ $v2       <array 8 of <array 6 of <array 3 of <array 4 of <array 8 of <int>>>>>> %ebp-18492 ]
+     #   -18492(%ebp)  18456  [ $v2       <array 8 of <array 6 of <array 3 of <array 4 of <array 8 of <int>>>>>> %ebp-18492 ]
-     addl    $7, %esp               
+     addl    $16, %esp              
-     addl    $7, %esp               
+     addl    $16, %esp              
-     addl    $1, %esp               
+     addl    $4, %esp               
+     jmp     l_f1_16_if_false        #  33:     goto   16_if_false
+     jmp     l_f1_16_if_false        #  34:     goto   16_if_false
+     jmp     l_f1_16_if_false        #  35:     goto   16_if_false
-     jmp     l_f1_14                 #  33:     goto   14
+     jmp     l_f1_14                 #  36:     goto   14
+ l_f1_16_if_false:
-     #    -76(%ebp)   4  [ $t27      <int> %ebp-76 ]
+     #    -76(%ebp)   4  [ $t27      <ptr(4) to <array 8 of <array 6 of <array 3 of <array 4 of <array 8 of <int>>>>>>> %ebp-76 ]
-     #    -84(%ebp)   4  [ $t29      <ptr(4) to <array 8 of <array 6 of <array 3 of <array 4 of <array 8 of <int>>>>>>> %ebp-84 ]
+     #    -84(%ebp)   4  [ $t29      <int> %ebp-84 ]
-     #    -92(%ebp)   4  [ $t31      <int> %ebp-92 ]
+     #    -92(%ebp)   4  [ $t31      <ptr(4) to <array 8 of <array 6 of <array 3 of <array 4 of <array 8 of <int>>>>>>> %ebp-92 ]
-     #   -100(%ebp)   4  [ $t33      <ptr(4) to <array 8 of <array 6 of <array 3 of <array 4 of <array 8 of <int>>>>>>> %ebp-100 ]
+     #   -100(%ebp)   4  [ $t33      <int> %ebp-100 ]
-     #   -112(%ebp)   4  [ $t36      <int> %ebp-112 ]
+     #   -112(%ebp)   4  [ $t36      <ptr(4) to <array 8 of <array 6 of <array 3 of <array 4 of <array 8 of <int>>>>>>> %ebp-112 ]
-     #   -120(%ebp)   4  [ $t38      <ptr(4) to <array 8 of <array 6 of <array 3 of <array 4 of <array 8 of <int>>>>>>> %ebp-120 ]
+     #   -120(%ebp)   4  [ $t38      <int> %ebp-120 ]
-     #   -128(%ebp)   4  [ $t40      <int> %ebp-128 ]
-     #   -132(%ebp)   4  [ $t41      <int> %ebp-132 ]
-     #   -136(%ebp)   4  [ $t7       <ptr(4) to <array 8 of <array 6 of <array 3 of <array 4 of <array 8 of <int>>>>>>> %ebp-136 ]
+     #   -128(%ebp)   4  [ $t7       <ptr(4) to <array 8 of <array 6 of <array 3 of <array 4 of <array 8 of <int>>>>>>> %ebp-128 ]
-     #   -140(%ebp)   4  [ $t8       <int> %ebp-140 ]
+     #   -132(%ebp)   4  [ $t8       <int> %ebp-132 ]
-     #   -144(%ebp)   4  [ $t9       <int> %ebp-144 ]
+     #   -136(%ebp)   4  [ $t9       <int> %ebp-136 ]
-     # -18600(%ebp)18456  [ $v4       <array 8 of <array 6 of <array 3 of <array 4 of <array 8 of <int>>>>>> %ebp-18600 ]
+     #   -18592(%ebp)  18456  [ $v4       <array 8 of <array 6 of <array 3 of <array 4 of <array 8 of <int>>>>>> %ebp-18592 ]
-     # -18604(%ebp)   4  [ $v5       <int> %ebp-18604 ]
+     #   -18596(%ebp)   4  [ $v5       <int> %ebp-18596 ]
-     subl    $18592, %esp            # make room for locals
+     subl    $18584, %esp            # make room for locals
-     movl    $4648, %ecx            
+     movl    $4646, %ecx            
-     movl    $5,-18600(%ebp)         # local array 'v4': 5 dimensions
+     movl    $5,-18592(%ebp)         # local array 'v4': 5 dimensions
-     movl    $8,-18596(%ebp)         #   dimension 1: 8 elements
+     movl    $8,-18588(%ebp)         #   dimension 1: 8 elements
-     movl    $6,-18592(%ebp)         #   dimension 2: 6 elements
+     movl    $6,-18584(%ebp)         #   dimension 2: 6 elements
-     movl    $3,-18588(%ebp)         #   dimension 3: 3 elements
+     movl    $3,-18580(%ebp)         #   dimension 3: 3 elements
-     movl    $4,-18584(%ebp)         #   dimension 4: 4 elements
+     movl    $4,-18576(%ebp)         #   dimension 4: 4 elements
-     movl    $8,-18580(%ebp)         #   dimension 5: 8 elements
+     movl    $8,-18572(%ebp)         #   dimension 5: 8 elements
-     leal    -18600(%ebp), %eax      #   2:     &()    t7 <- v4
+     leal    -18592(%ebp), %eax      #   2:     &()    t7 <- v4
-     movl    %eax, -136(%ebp)       
+     movl    %eax, -128(%ebp)       
-     movl    -136(%ebp), %eax        #   3:     param  1 <- t7
+     movl    -128(%ebp), %eax        #   3:     param  1 <- t7
-     movl    %eax, -140(%ebp)       
+     movl    %eax, -132(%ebp)       
-     movl    -140(%ebp), %ebx       
+     movl    -132(%ebp), %ebx       
-     movl    %eax, -144(%ebp)       
+     movl    %eax, -136(%ebp)       
-     movl    -144(%ebp), %eax        #   6:     if     t9 # 78316 goto 1
+     movl    -136(%ebp), %eax        #   6:     if     t9 # 78316 goto 1
-     addl    $7, %esp               
+     addl    $16, %esp              
-     jmp     l_f2_8                  #  17:     goto   8
+     jmp     l_f2_9                  #  17:     goto   9
+     jmp     l_f2_10                 #  18:     goto   10
- l_f2_8:
+ l_f2_9:
-     movl    $1, %eax                #  19:     assign t12 <- 1
+     movl    $1, %eax                #  20:     assign t12 <- 1
-     jmp     l_f2_10                 #  20:     goto   10
+     jmp     l_f2_11                 #  21:     goto   11
+ l_f2_10:
-     movl    $0, %eax                #  21:     assign t12 <- 0
+     movl    $0, %eax                #  23:     assign t12 <- 0
- l_f2_10:
+ l_f2_11:
-     movzbl  -15(%ebp), %eax         #  23:     if     t12 = 1 goto 7_while_body
+     movzbl  -15(%ebp), %eax         #  25:     if     t12 = 1 goto 7_while_body
-     jmp     l_f2_5                  #  24:     goto   5
+     jmp     l_f2_5                  #  26:     goto   5
-     movl    $100, %eax              #  26:     return 100
-     jmp     l_f2_exit              
-     call    ReadInt                 #  27:     call   t13 <- ReadInt
-     movl    %eax, -20(%ebp)        
+     call    ReadInt                 #  29:     call   t13 <- ReadInt
+     movl    %eax, -20(%ebp)        
+     movl    $100, %eax              #  30:     return 100
+     jmp     l_f2_exit              
-     jmp     l_f2_6_while_cond       #  29:     goto   6_while_cond
+     jmp     l_f2_6_while_cond       #  31:     goto   6_while_cond
-     movl    $89710, %eax            #  31:     add    t14 <- 89710, 69907
+     movl    $89710, %eax            #  33:     add    t14 <- 89710, 69907
-     movl    -24(%ebp), %eax         #  32:     add    t15 <- t14, 71896
+     movl    -24(%ebp), %eax         #  34:     add    t15 <- t14, 71896
-     leal    -18600(%ebp), %eax      #  33:     &()    t16 <- v4
+     leal    -18592(%ebp), %eax      #  35:     &()    t16 <- v4
-     movl    $2, %eax                #  34:     param  1 <- 2
+     movl    $2, %eax                #  36:     param  1 <- 2
-     leal    -18600(%ebp), %eax      #  35:     &()    t17 <- v4
+     leal    -18592(%ebp), %eax      #  37:     &()    t17 <- v4
-     movl    -36(%ebp), %eax         #  36:     param  0 <- t17
+     movl    -36(%ebp), %eax         #  38:     param  0 <- t17
-     call    DIM                     #  37:     call   t18 <- DIM
+     call    DIM                     #  39:     call   t18 <- DIM
-     movl    $6963, %eax             #  38:     mul    t19 <- 6963, t18
+     movl    $6963, %eax             #  40:     mul    t19 <- 6963, t18
-     movl    $53564, %eax            #  39:     div    t20 <- 53564, 47967
+     movl    $53564, %eax            #  41:     div    t20 <- 53564, 47967
-     movl    -48(%ebp), %eax         #  40:     div    t21 <- t20, 84223
+     movl    -48(%ebp), %eax         #  42:     div    t21 <- t20, 84223
-     movl    -44(%ebp), %eax         #  41:     add    t22 <- t19, t21
+     movl    -44(%ebp), %eax         #  43:     add    t22 <- t19, t21
-     movl    $3, %eax                #  42:     param  1 <- 3
+     movl    $3, %eax                #  44:     param  1 <- 3
-     leal    -18600(%ebp), %eax      #  43:     &()    t23 <- v4
+     leal    -18592(%ebp), %eax      #  45:     &()    t23 <- v4
-     movl    -60(%ebp), %eax         #  44:     param  0 <- t23
+     movl    -60(%ebp), %eax         #  46:     param  0 <- t23
-     call    DIM                     #  45:     call   t24 <- DIM
+     call    DIM                     #  47:     call   t24 <- DIM
-     movl    $53564, %eax            #  46:     div    t26 <- 53564, 47967
-     movl    $47967, %ebx           
-     cdq                            
-     idivl   %ebx                   
-     movl    %eax, -72(%ebp)        
-     movl    -72(%ebp), %eax         #  47:     div    t27 <- t26, 84223
-     movl    $84223, %ebx           
-     cdq                            
-     idivl   %ebx                   
-     movl    %eax, -76(%ebp)        
-     movl    -68(%ebp), %eax         #  49:     add    t28 <- t25, 14846
+     movl    -68(%ebp), %eax         #  49:     add    t26 <- t25, 14846
+     movl    %eax, -72(%ebp)        
+     movl    $4, %eax                #  50:     param  1 <- 4
+     pushl   %eax                   
+     leal    -18592(%ebp), %eax      #  51:     &()    t27 <- v4
+     movl    %eax, -76(%ebp)        
+     movl    -76(%ebp), %eax         #  52:     param  0 <- t27
+     pushl   %eax                   
+     call    DIM                     #  53:     call   t28 <- DIM
+     addl    $8, %esp               
-     movl    $4, %eax                #  50:     param  1 <- 4
+     movl    -72(%ebp), %eax         #  54:     mul    t29 <- t26, t28
+     movl    -80(%ebp), %ebx        
-     pushl   %eax                   
+     imull   %ebx                   
-     leal    -18600(%ebp), %eax      #  51:     &()    t29 <- v4
+     movl    -84(%ebp), %eax         #  55:     add    t30 <- t29, 60609
+     movl    $60609, %ebx           
+     addl    %ebx, %eax             
+     movl    %eax, -88(%ebp)        
+     movl    $5, %eax                #  56:     param  1 <- 5
+     pushl   %eax                   
+     leal    -18592(%ebp), %eax      #  57:     &()    t31 <- v4
+     movl    %eax, -92(%ebp)        
-     movl    -84(%ebp), %eax         #  52:     param  0 <- t29
+     movl    -92(%ebp), %eax         #  58:     param  0 <- t31
-     call    DIM                     #  53:     call   t30 <- DIM
+     call    DIM                     #  59:     call   t32 <- DIM
-     movl    %eax, -88(%ebp)        
+     movl    %eax, -96(%ebp)        
-     movl    -80(%ebp), %eax         #  54:     mul    t31 <- t28, t30
+     movl    -88(%ebp), %eax         #  60:     mul    t33 <- t30, t32
-     movl    -88(%ebp), %ebx        
+     movl    -96(%ebp), %ebx        
-     movl    %eax, -92(%ebp)        
-     movl    -92(%ebp), %eax         #  55:     add    t32 <- t31, 60609
-     movl    $60609, %ebx           
-     addl    %ebx, %eax             
-     movl    %eax, -96(%ebp)        
-     movl    $5, %eax                #  56:     param  1 <- 5
-     pushl   %eax                   
-     leal    -18600(%ebp), %eax      #  57:     &()    t33 <- v4
-     movl    -100(%ebp), %eax        #  58:     param  0 <- t33
+     movl    -100(%ebp), %eax        #  61:     add    t34 <- t33, 47399
+     movl    $47399, %ebx           
-     pushl   %eax                   
-     call    DIM                     #  59:     call   t34 <- DIM
-     addl    $8, %esp               
+     addl    %ebx, %eax             
-     movl    -96(%ebp), %eax         #  60:     mul    t35 <- t32, t34
+     movl    -104(%ebp), %eax        #  62:     mul    t35 <- t34, 4
-     movl    -104(%ebp), %ebx       
+     movl    $4, %ebx               
-     movl    -108(%ebp), %eax        #  61:     add    t36 <- t35, 47399
+     leal    -18592(%ebp), %eax      #  63:     &()    t36 <- v4
-     movl    $47399, %ebx           
-     addl    %ebx, %eax             
-     movl    -112(%ebp), %eax        #  62:     mul    t37 <- t36, 4
+     movl    -112(%ebp), %eax        #  64:     param  0 <- t36
-     movl    $4, %ebx               
-     imull   %ebx                   
+     pushl   %eax                   
+     call    DOFS                    #  65:     call   t37 <- DOFS
+     addl    $4, %esp               
-     leal    -18600(%ebp), %eax      #  63:     &()    t38 <- v4
+     movl    -108(%ebp), %eax        #  66:     add    t38 <- t35, t37
+     movl    -116(%ebp), %ebx       
+     addl    %ebx, %eax             
-     movl    -120(%ebp), %eax        #  64:     param  0 <- t38
+     movl    -32(%ebp), %eax         #  67:     add    t39 <- t16, t38
+     movl    -120(%ebp), %ebx       
-     pushl   %eax                   
-     call    DOFS                    #  65:     call   t39 <- DOFS
-     addl    $4, %esp               
+     addl    %ebx, %eax             
-     movl    -116(%ebp), %eax        #  66:     add    t40 <- t37, t39
-     movl    -124(%ebp), %ebx       
-     addl    %ebx, %eax             
-     movl    %eax, -128(%ebp)       
-     movl    -32(%ebp), %eax         #  67:     add    t41 <- t16, t40
-     movl    -128(%ebp), %ebx       
-     addl    %ebx, %eax             
-     movl    %eax, -132(%ebp)       
-     movl    -28(%ebp), %eax         #  68:     assign @t41 <- t15
+     movl    -28(%ebp), %eax         #  68:     assign @t39 <- t15
-     movl    -132(%ebp), %edi       
+     movl    -124(%ebp), %edi       
-     addl    $18592, %esp            # remove locals
+     addl    $18584, %esp            # remove locals
+     jmp     l_test_12               #  16:     goto   12
-     jmp     l_test_13_while_cond    #  17:     goto   13_while_cond
+     jmp     l_test_13_while_cond    #  18:     goto   13_while_cond
+ l_test_12:
-     movl    $18069, %eax            #  19:     if     18069 # 77620 goto 18_while_body
+     movl    $18069, %eax            #  21:     if     18069 # 77620 goto 18_while_body
-     jmp     l_test_16               #  20:     goto   16
+     jmp     l_test_16               #  22:     goto   16
-     call    dummyINTfunc            #  22:     call   t2 <- dummyINTfunc
+     call    dummyINTfunc            #  24:     call   t2 <- dummyINTfunc
-     movl    $98, %eax               #  23:     param  3 <- 98
+     movl    $98, %eax               #  25:     param  3 <- 98
-     call    f1                      #  24:     call   t3 <- f1
+     call    f1                      #  26:     call   t3 <- f1
-     movzbl  -21(%ebp), %eax         #  25:     param  2 <- t3
+     movzbl  -21(%ebp), %eax         #  27:     param  2 <- t3
-     leal    v2, %eax                #  26:     &()    t4 <- v2
+     leal    v2, %eax                #  28:     &()    t4 <- v2
-     movl    -28(%ebp), %eax         #  27:     param  1 <- t4
+     movl    -28(%ebp), %eax         #  29:     param  1 <- t4
-     movl    $37526, %eax            #  28:     if     37526 >= 37862 goto 22
+     movl    $37526, %eax            #  30:     if     37526 >= 37862 goto 22
-     jmp     l_test_23               #  29:     goto   23
+     jmp     l_test_23               #  31:     goto   23
-     movl    $1, %eax                #  31:     assign t5 <- 1
+     movl    $1, %eax                #  33:     assign t5 <- 1
-     jmp     l_test_24               #  32:     goto   24
+     jmp     l_test_24               #  34:     goto   24
-     movl    $0, %eax                #  34:     assign t5 <- 0
+     movl    $0, %eax                #  36:     assign t5 <- 0
-     movzbl  -29(%ebp), %eax         #  36:     param  0 <- t5
+     movzbl  -29(%ebp), %eax         #  38:     param  0 <- t5
-     call    f0                      #  37:     call   t6 <- f0
+     call    f0                      #  39:     call   t6 <- f0
-     addl    $7, %esp               
+     addl    $16, %esp              
-     jmp     l_test_17_while_cond    #  38:     goto   17_while_cond
+     jmp     l_test_17_while_cond    #  40:     goto   17_while_cond
