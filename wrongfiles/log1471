+     jmp     l_f0_13                 #   9:     goto   13
+ l_f0_13:
+     jmp     l_f0_11                 #  11:     goto   11
-     movl    $1, %eax                #   9:     assign t4 <- 1
+     movl    $1, %eax                #  12:     assign t4 <- 1
-     jmp     l_f0_11                 #  10:     goto   11
+     jmp     l_f0_12                 #  13:     goto   12
+ l_f0_11:
-     movl    $0, %eax                #  11:     assign t4 <- 0
+     movl    $0, %eax                #  15:     assign t4 <- 0
- l_f0_11:
+ l_f0_12:
-     movzbl  -14(%ebp), %eax         #  13:     if     t4 = 0 goto 6
+     movzbl  -14(%ebp), %eax         #  17:     if     t4 = 0 goto 6
-     jmp     l_f0_7                  #  14:     goto   7
+     jmp     l_f0_7                  #  18:     goto   7
-     movl    $1, %eax                #  16:     assign t5 <- 1
+     movl    $1, %eax                #  20:     assign t5 <- 1
-     jmp     l_f0_8                  #  17:     goto   8
+     jmp     l_f0_8                  #  21:     goto   8
-     movl    $0, %eax                #  19:     assign t5 <- 0
+     movl    $0, %eax                #  23:     assign t5 <- 0
-     movzbl  -15(%ebp), %eax         #  21:     return t5
+     movzbl  -15(%ebp), %eax         #  25:     return t5
-     jmp     l_f0_17                 #  22:     goto   17
+     jmp     l_f0_17                 #  26:     goto   17
+     jmp     l_f0_18                 #  27:     goto   18
+     jmp     l_f0_18                 #  28:     goto   18
-     movl    $1, %eax                #  24:     assign t6 <- 1
+     movl    $1, %eax                #  30:     assign t6 <- 1
-     jmp     l_f0_19                 #  25:     goto   19
+     jmp     l_f0_19                 #  31:     goto   19
+ l_f0_18:
-     movl    $0, %eax                #  26:     assign t6 <- 0
+     movl    $0, %eax                #  33:     assign t6 <- 0
-     movzbl  -16(%ebp), %eax         #  28:     return t6
+     movzbl  -16(%ebp), %eax         #  35:     return t6
-     #   -124(%ebp)   4  [ $t36      <int> %ebp-124 ]
+     #   -124(%ebp)   4  [ $t4       <int> %ebp-124 ]
-     #   -128(%ebp)   4  [ $t4       <int> %ebp-128 ]
+     #   -128(%ebp)   4  [ $t5       <int> %ebp-128 ]
-     #   -132(%ebp)   4  [ $t5       <int> %ebp-132 ]
+     #   -132(%ebp)   4  [ $t6       <int> %ebp-132 ]
-     #   -136(%ebp)   4  [ $t6       <int> %ebp-136 ]
+     #   -136(%ebp)   4  [ $t7       <int> %ebp-136 ]
-     #   -140(%ebp)   4  [ $t7       <int> %ebp-140 ]
+     #   -140(%ebp)   4  [ $t8       <int> %ebp-140 ]
-     #   -144(%ebp)   4  [ $t8       <int> %ebp-144 ]
+     #   -144(%ebp)   4  [ $t9       <int> %ebp-144 ]
-     #   -148(%ebp)   4  [ $t9       <int> %ebp-148 ]
-     #   -152(%ebp)   4  [ $v4       <int> %ebp-152 ]
+     #   -148(%ebp)   4  [ $v4       <int> %ebp-148 ]
-     #   -153(%ebp)   1  [ $v5       <char> %ebp-153 ]
+     #   -149(%ebp)   1  [ $v5       <char> %ebp-149 ]
-     pushl   %ebp                   
-     movl    %esp, %ebp             
-     pushl   %ebx                    # save callee saved registers
-     pushl   %esi                   
+     pushl   %ebp                   
+     movl    %esp, %ebp             
+     pushl   %ebx                    # save callee saved registers
-     pushl   %edi                   
+     pushl   %esi                   
+     pushl   %edi                   
-     subl    $144, %esp              # make room for locals
+     subl    $140, %esp              # make room for locals
-     movl    $36, %ecx              
+     movl    $35, %ecx              
+     movl    %eax, -124(%ebp)       
+     movl    -124(%ebp), %eax        #  10:     add    t5 <- t4, 28076
+     movl    $28076, %ebx           
+     addl    %ebx, %eax             
+     movl    $3, %eax                #  11:     param  1 <- 3
+     pushl   %eax                   
-     movl    -128(%ebp), %eax        #  10:     add    t5 <- t4, 28076
+     movl    20(%ebp), %eax          #  12:     param  0 <- v3
-     movl    $28076, %ebx           
+     pushl   %eax                   
+     call    DIM                     #  13:     call   t6 <- DIM
-     addl    %ebx, %eax             
+     addl    $8, %esp               
-     movl    $3, %eax                #  11:     param  1 <- 3
+     movl    -128(%ebp), %eax        #  14:     mul    t7 <- t5, t6
+     movl    -132(%ebp), %ebx       
-     pushl   %eax                   
+     imull   %ebx                   
-     movl    20(%ebp), %eax          #  12:     param  0 <- v3
-     pushl   %eax                   
-     call    DIM                     #  13:     call   t6 <- DIM
-     addl    $8, %esp               
-     movl    -132(%ebp), %eax        #  14:     mul    t7 <- t5, t6
+     movl    -136(%ebp), %eax        #  15:     add    t8 <- t7, 29341
-     movl    -136(%ebp), %ebx       
+     movl    $29341, %ebx           
-     imull   %ebx                   
+     addl    %ebx, %eax             
+     movl    $4, %eax                #  16:     param  1 <- 4
+     pushl   %eax                   
-     movl    -140(%ebp), %eax        #  15:     add    t8 <- t7, 29341
+     movl    20(%ebp), %eax          #  17:     param  0 <- v3
-     movl    $29341, %ebx           
+     pushl   %eax                   
+     call    DIM                     #  18:     call   t9 <- DIM
-     addl    %ebx, %eax             
+     addl    $8, %esp               
-     movl    $4, %eax                #  16:     param  1 <- 4
-     pushl   %eax                   
-     movl    20(%ebp), %eax          #  17:     param  0 <- v3
-     pushl   %eax                   
-     call    DIM                     #  18:     call   t9 <- DIM
-     addl    $8, %esp               
-     movl    %eax, -148(%ebp)       
-     movl    -144(%ebp), %eax        #  19:     mul    t10 <- t8, t9
+     movl    -140(%ebp), %eax        #  19:     mul    t10 <- t8, t9
-     movl    -148(%ebp), %ebx       
+     movl    -144(%ebp), %ebx       
-     movl    $36821, %eax            #  42:     mul    t22 <- 36821, 3745
+     movl    -52(%ebp), %eax         #  42:     mul    t21 <- t19, t20
+     movl    -56(%ebp), %ebx        
+     imull   %ebx                   
+     movl    %eax, -60(%ebp)        
+     movl    -60(%ebp), %eax         #  43:     add    t22 <- t21, 45139
-     movl    $3745, %ebx            
+     movl    $45139, %ebx           
-     imull   %ebx                   
+     addl    %ebx, %eax             
+     movl    $3, %eax                #  44:     param  1 <- 3
-     movl    -52(%ebp), %eax         #  43:     mul    t21 <- t19, t20
-     movl    -56(%ebp), %ebx        
-     imull   %ebx                   
+     pushl   %eax                   
-     movl    %eax, -60(%ebp)        
-     movl    -60(%ebp), %eax         #  44:     add    t23 <- t21, 45139
+     movl    16(%ebp), %eax          #  45:     param  0 <- v2
-     movl    $45139, %ebx           
+     pushl   %eax                   
+     call    DIM                     #  46:     call   t23 <- DIM
-     addl    %ebx, %eax             
+     addl    $8, %esp               
-     movl    $3, %eax                #  45:     param  1 <- 3
+     movl    -64(%ebp), %eax         #  47:     mul    t24 <- t22, t23
+     movl    -68(%ebp), %ebx        
-     pushl   %eax                   
+     imull   %ebx                   
-     movl    16(%ebp), %eax          #  46:     param  0 <- v2
-     pushl   %eax                   
-     call    DIM                     #  47:     call   t24 <- DIM
-     addl    $8, %esp               
-     movl    -68(%ebp), %eax         #  48:     mul    t25 <- t23, t24
+     movl    -72(%ebp), %eax         #  48:     add    t25 <- t24, 70228
-     movl    -72(%ebp), %ebx        
+     movl    $70228, %ebx           
-     imull   %ebx                   
+     addl    %ebx, %eax             
+     movl    $4, %eax                #  49:     param  1 <- 4
+     pushl   %eax                   
-     movl    -76(%ebp), %eax         #  49:     add    t26 <- t25, 70228
+     movl    16(%ebp), %eax          #  50:     param  0 <- v2
-     movl    $70228, %ebx           
+     pushl   %eax                   
+     call    DIM                     #  51:     call   t26 <- DIM
-     addl    %ebx, %eax             
+     addl    $8, %esp               
-     movl    $4, %eax                #  50:     param  1 <- 4
+     movl    -76(%ebp), %eax         #  52:     mul    t27 <- t25, t26
+     movl    -80(%ebp), %ebx        
-     pushl   %eax                   
+     imull   %ebx                   
-     movl    16(%ebp), %eax          #  51:     param  0 <- v2
-     pushl   %eax                   
-     call    DIM                     #  52:     call   t27 <- DIM
-     addl    $8, %esp               
-     movl    -80(%ebp), %eax         #  53:     mul    t28 <- t26, t27
+     movl    -84(%ebp), %eax         #  53:     add    t28 <- t27, 62772
-     movl    -84(%ebp), %ebx        
+     movl    $62772, %ebx           
-     imull   %ebx                   
+     addl    %ebx, %eax             
+     movl    $5, %eax                #  54:     param  1 <- 5
+     pushl   %eax                   
-     movl    -88(%ebp), %eax         #  54:     add    t29 <- t28, 62772
+     movl    16(%ebp), %eax          #  55:     param  0 <- v2
-     movl    $62772, %ebx           
+     pushl   %eax                   
+     call    DIM                     #  56:     call   t29 <- DIM
-     addl    %ebx, %eax             
+     addl    $8, %esp               
-     movl    $5, %eax                #  55:     param  1 <- 5
+     movl    -88(%ebp), %eax         #  57:     mul    t30 <- t28, t29
+     movl    -92(%ebp), %ebx        
-     pushl   %eax                   
+     imull   %ebx                   
-     movl    16(%ebp), %eax          #  56:     param  0 <- v2
-     pushl   %eax                   
-     call    DIM                     #  57:     call   t30 <- DIM
-     addl    $8, %esp               
-     movl    -92(%ebp), %eax         #  58:     mul    t31 <- t29, t30
+     movl    -100(%ebp), %eax        #  58:     add    t31 <- t30, 22454
-     movl    -100(%ebp), %ebx       
-     imull   %ebx                   
+     movl    $22454, %ebx           
+     addl    %ebx, %eax             
-     movl    -104(%ebp), %eax        #  59:     add    t32 <- t31, 22454
+     movl    -104(%ebp), %eax        #  59:     mul    t32 <- t31, 1
-     movl    $22454, %ebx           
+     movl    $1, %ebx               
-     addl    %ebx, %eax             
+     imull   %ebx                   
-     movl    -108(%ebp), %eax        #  60:     mul    t33 <- t32, 1
+     movl    16(%ebp), %eax          #  60:     param  0 <- v2
-     movl    $1, %ebx               
-     imull   %ebx                   
+     pushl   %eax                   
+     call    DOFS                    #  61:     call   t33 <- DOFS
+     addl    $4, %esp               
-     movl    16(%ebp), %eax          #  61:     param  0 <- v2
+     movl    -108(%ebp), %eax        #  62:     add    t34 <- t32, t33
+     movl    -112(%ebp), %ebx       
-     pushl   %eax                   
-     call    DOFS                    #  62:     call   t34 <- DOFS
-     addl    $4, %esp               
+     addl    %ebx, %eax             
-     movl    -112(%ebp), %eax        #  63:     add    t35 <- t33, t34
+     movl    16(%ebp), %eax          #  63:     add    t35 <- v2, t34
-     movl    16(%ebp), %eax          #  64:     add    t36 <- v2, t35
-     movl    -120(%ebp), %ebx       
-     addl    %ebx, %eax             
-     movl    %eax, -124(%ebp)       
-     movl    $100, %eax              #  65:     assign @t36 <- 100
+     movl    $100, %eax              #  64:     assign @t35 <- 100
-     movl    -124(%ebp), %edi       
+     movl    -120(%ebp), %edi       
-     movl    $97, %eax               #  66:     if     97 <= 100 goto 11_if_true
+     movl    $97, %eax               #  65:     if     97 <= 100 goto 11_if_true
-     jmp     l_f1_12_if_false        #  67:     goto   12_if_false
+     jmp     l_f1_12_if_false        #  66:     goto   12_if_false
-     movl    $97, %eax               #  69:     return 97
+     movl    $97, %eax               #  68:     return 97
-     jmp     l_f1_10                 #  70:     goto   10
+     jmp     l_f1_10                 #  69:     goto   10
-     addl    $144, %esp              # remove locals
+     addl    $140, %esp              # remove locals
-     #-14820704(%ebp)14820648  [ $v1       <array 16 of <array 87 of <array 3 of <array 91 of <array 39 of <char>>>>>> %ebp-14820704 ]
+     #   -14820704(%ebp)  14820648  [ $v1       <array 16 of <array 87 of <array 3 of <array 91 of <array 39 of <char>>>>>> %ebp-14820704 ]
-     #-203933048(%ebp)189112344  [ $v2       <array 96 of <array 48 of <array 60 of <array 3 of <array 57 of <int>>>>>> %ebp-203933048 ]
+     #   -203933048(%ebp)  189112344  [ $v2       <array 96 of <array 48 of <array 60 of <array 3 of <array 57 of <int>>>>>> %ebp-203933048 ]
-     #-1258091372(%ebp)1054158324  [ $v3       <array 90 of <array 47 of <array 54 of <array 71 of <array 65 of <char>>>>>> %ebp-1258091372 ]
+     #   -1258091372(%ebp)  1054158324  [ $v3       <array 90 of <array 47 of <array 54 of <array 71 of <array 65 of <char>>>>>> %ebp-1258091372 ]
-     #-1506093956(%ebp)248002584  [ $v4       <array 96 of <array 69 of <array 20 of <array 26 of <array 18 of <int>>>>>> %ebp-1506093956 ]
+     #   -1506093956(%ebp)  248002584  [ $v4       <array 96 of <array 69 of <array 20 of <array 26 of <array 18 of <int>>>>>> %ebp-1506093956 ]
-     #-1506093960(%ebp)   4  [ $v5       <int> %ebp-1506093960 ]
+     #   -1506093960(%ebp)   4  [ $v5       <int> %ebp-1506093960 ]
