+     jmp     l_f0_2                  #   0:     goto   2
-     movl    $100, %eax              #   0:     if     100 > 100 goto 1
+     movl    $100, %eax              #   1:     if     100 > 100 goto 1
-     jmp     l_f0_2                  #   1:     goto   2
+     jmp     l_f0_2                  #   2:     goto   2
-     movl    $1, %eax                #   3:     assign t1 <- 1
+     movl    $1, %eax                #   4:     assign t1 <- 1
-     jmp     l_f0_3                  #   4:     goto   3
+     jmp     l_f0_3                  #   5:     goto   3
-     movl    $0, %eax                #   6:     assign t1 <- 0
+     movl    $0, %eax                #   7:     assign t1 <- 0
-     movzbl  -13(%ebp), %eax         #   8:     return t1
+     movzbl  -13(%ebp), %eax         #   9:     return t1
-     movl    $80008, %eax            #   9:     mul    t2 <- 80008, 66373
+     movl    $80008, %eax            #  10:     mul    t2 <- 80008, 66373
-     movl    -60(%ebp), %eax         #  10:     div    t3 <- t2, 31179
+     movl    -60(%ebp), %eax         #  11:     div    t3 <- t2, 31179
-     movl    $72679, %eax            #  11:     if     72679 # t3 goto 8
+     movl    $72679, %eax            #  12:     if     72679 # t3 goto 8
-     jmp     l_f0_9                  #  12:     goto   9
+     jmp     l_f0_9                  #  13:     goto   9
-     movl    $1, %eax                #  14:     assign t4 <- 1
+     movl    $1, %eax                #  15:     assign t4 <- 1
-     jmp     l_f0_10                 #  15:     goto   10
+     jmp     l_f0_10                 #  16:     goto   10
-     movl    $0, %eax                #  17:     assign t4 <- 0
+     movl    $0, %eax                #  18:     assign t4 <- 0
-     movzbl  -77(%ebp), %eax         #  19:     return t4
+     movzbl  -77(%ebp), %eax         #  20:     return t4
-     jmp     l_f0_14_if_false        #  20:     goto   14_if_false
+     jmp     l_f0_14_if_false        #  21:     goto   14_if_false
-     call    dummyCHARfunc           #  21:     call   t5 <- dummyCHARfunc
+     call    dummyCHARfunc           #  22:     call   t5 <- dummyCHARfunc
-     movl    $72580, %eax            #  22:     param  0 <- 72580
+     movl    $72580, %eax            #  23:     param  0 <- 72580
-     call    WriteInt                #  23:     call   WriteInt
+     call    WriteInt                #  24:     call   WriteInt
-     jmp     l_f0_19_if_false        #  24:     goto   19_if_false
+     jmp     l_f0_19_if_false        #  25:     goto   19_if_false
-     jmp     l_f0_17                 #  25:     goto   17
+     jmp     l_f0_17                 #  26:     goto   17
-     jmp     l_f0_20                 #  28:     goto   20
+     jmp     l_f0_20                 #  29:     goto   20
-     movl    $99, %eax               #  30:     if     99 = 98 goto 24
+     movl    $99, %eax               #  31:     if     99 = 98 goto 24
-     jmp     l_f0_25                 #  31:     goto   25
+     jmp     l_f0_25                 #  32:     goto   25
-     movl    $1, %eax                #  33:     assign t6 <- 1
+     movl    $1, %eax                #  34:     assign t6 <- 1
-     jmp     l_f0_26                 #  34:     goto   26
+     jmp     l_f0_26                 #  35:     goto   26
-     movl    $0, %eax                #  36:     assign t6 <- 0
+     movl    $0, %eax                #  37:     assign t6 <- 0
-     movzbl  -79(%ebp), %eax         #  38:     assign v0 <- t6
+     movzbl  -79(%ebp), %eax         #  39:     assign v0 <- t6
-     movl    $0, %eax                #  39:     if     0 # 0 goto 29_if_true
+     movl    $0, %eax                #  40:     if     0 # 0 goto 29_if_true
-     jmp     l_f0_30_if_false        #  40:     goto   30_if_false
+     jmp     l_f0_30_if_false        #  41:     goto   30_if_false
-     jmp     l_f0_28                 #  42:     goto   28
+     jmp     l_f0_28                 #  43:     goto   28
-     movl    $99, %eax               #  46:     if     99 >= 100 goto 34_while_body
+     movl    $99, %eax               #  47:     if     99 >= 100 goto 34_while_body
-     jmp     l_f0_32                 #  47:     goto   32
+     jmp     l_f0_32                 #  48:     goto   32
-     jmp     l_f0_33_while_cond      #  49:     goto   33_while_cond
+     jmp     l_f0_33_while_cond      #  50:     goto   33_while_cond
-     jmp     l_f0_36                 #  52:     goto   36
+     jmp     l_f0_36                 #  53:     goto   36
-     jmp     l_f0_37_while_cond      #  53:     goto   37_while_cond
+     jmp     l_f0_37_while_cond      #  54:     goto   37_while_cond
-     movl    $2, %eax                #  55:     param  1 <- 2
+     movl    $2, %eax                #  56:     param  1 <- 2
-     movl    12(%ebp), %eax          #  56:     param  0 <- v1
+     movl    12(%ebp), %eax          #  57:     param  0 <- v1
-     call    DIM                     #  57:     call   t7 <- DIM
+     call    DIM                     #  58:     call   t7 <- DIM
-     movl    $20790, %eax            #  58:     mul    t8 <- 20790, t7
+     movl    $20790, %eax            #  59:     mul    t8 <- 20790, t7
-     movl    -88(%ebp), %eax         #  59:     add    t9 <- t8, 38861
+     movl    -88(%ebp), %eax         #  60:     add    t9 <- t8, 38861
-     movl    $3, %eax                #  60:     param  1 <- 3
+     movl    $3, %eax                #  61:     param  1 <- 3
-     movl    12(%ebp), %eax          #  61:     param  0 <- v1
+     movl    12(%ebp), %eax          #  62:     param  0 <- v1
-     call    DIM                     #  62:     call   t10 <- DIM
+     call    DIM                     #  63:     call   t10 <- DIM
-     movl    -92(%ebp), %eax         #  63:     mul    t11 <- t9, t10
+     movl    -92(%ebp), %eax         #  64:     mul    t11 <- t9, t10
-     movl    -24(%ebp), %eax         #  64:     add    t12 <- t11, 19381
+     movl    -24(%ebp), %eax         #  65:     add    t12 <- t11, 19381
-     movl    $4, %eax                #  65:     param  1 <- 4
+     movl    $4, %eax                #  66:     param  1 <- 4
-     movl    12(%ebp), %eax          #  66:     param  0 <- v1
+     movl    12(%ebp), %eax          #  67:     param  0 <- v1
-     call    DIM                     #  67:     call   t13 <- DIM
+     call    DIM                     #  68:     call   t13 <- DIM
-     movl    -28(%ebp), %eax         #  68:     mul    t14 <- t12, t13
+     movl    -28(%ebp), %eax         #  69:     mul    t14 <- t12, t13
-     movl    -36(%ebp), %eax         #  69:     add    t15 <- t14, 56813
+     movl    -36(%ebp), %eax         #  70:     add    t15 <- t14, 56813
-     movl    $5, %eax                #  70:     param  1 <- 5
+     movl    $5, %eax                #  71:     param  1 <- 5
-     movl    12(%ebp), %eax          #  71:     param  0 <- v1
+     movl    12(%ebp), %eax          #  72:     param  0 <- v1
-     call    DIM                     #  72:     call   t16 <- DIM
+     call    DIM                     #  73:     call   t16 <- DIM
-     movl    -40(%ebp), %eax         #  73:     mul    t17 <- t15, t16
+     movl    -40(%ebp), %eax         #  74:     mul    t17 <- t15, t16
-     movl    -48(%ebp), %eax         #  74:     add    t18 <- t17, 22874
+     movl    -48(%ebp), %eax         #  75:     add    t18 <- t17, 22874
-     movl    -52(%ebp), %eax         #  75:     mul    t19 <- t18, 1
+     movl    -52(%ebp), %eax         #  76:     mul    t19 <- t18, 1
-     movl    12(%ebp), %eax          #  76:     param  0 <- v1
+     movl    12(%ebp), %eax          #  77:     param  0 <- v1
-     call    DOFS                    #  77:     call   t20 <- DOFS
+     call    DOFS                    #  78:     call   t20 <- DOFS
-     movl    -56(%ebp), %eax         #  78:     add    t21 <- t19, t20
+     movl    -56(%ebp), %eax         #  79:     add    t21 <- t19, t20
-     movl    12(%ebp), %eax          #  79:     add    t22 <- v1, t21
+     movl    12(%ebp), %eax          #  80:     add    t22 <- v1, t21
-     movl    $100, %eax              #  80:     assign @t22 <- 100
+     movl    $100, %eax              #  81:     assign @t22 <- 100
-     jmp     l_f0_12                 #  81:     goto   12
+     jmp     l_f0_12                 #  82:     goto   12
-     addl    $1, %esp               
+     addl    $4, %esp               
+     jmp     l_test_3                #   0:     goto   3
+     jmp     l_test_3                #   1:     goto   3
+ l_test_3:
+     jmp     l_test_2_if_false       #   3:     goto   2_if_false
-     jmp     l_test_0                #   0:     goto   0
+     jmp     l_test_0                #   4:     goto   0
+ l_test_2_if_false:
-     movl    $100, %eax              #   2:     assign v0 <- 100
+     movl    $100, %eax              #   7:     assign v0 <- 100
-     call    dummyCHARfunc           #   4:     call   t0 <- dummyCHARfunc
+     call    dummyCHARfunc           #   9:     call   t0 <- dummyCHARfunc
-     movl    $99, %eax               #   5:     if     99 # t0 goto 9_while_body
+     movl    $99, %eax               #  10:     if     99 # t0 goto 9_while_body
-     jmp     l_test_7                #   6:     goto   7
+     jmp     l_test_7                #  11:     goto   7
-     jmp     l_test_8_while_cond     #   8:     goto   8_while_cond
+     jmp     l_test_8_while_cond     #  13:     goto   8_while_cond
