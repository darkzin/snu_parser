-     #    -76(%ebp)   4  [ $t25      <int> %ebp-76 ]
+     #    -73(%ebp)   1  [ $t25      <bool> %ebp-73 ]
+     #    -74(%ebp)   1  [ $t26      <bool> %ebp-74 ]
-     #    -80(%ebp)   4  [ $t26      <int> %ebp-80 ]
+     #    -80(%ebp)   4  [ $t6       <int> %ebp-80 ]
-     #    -84(%ebp)   4  [ $t27      <int> %ebp-84 ]
+     #    -84(%ebp)   4  [ $t7       <int> %ebp-84 ]
-     #    -85(%ebp)   1  [ $t28      <bool> %ebp-85 ]
+     #    -88(%ebp)   4  [ $t8       <int> %ebp-88 ]
-     #    -86(%ebp)   1  [ $t29      <bool> %ebp-86 ]
-     #    -92(%ebp)   4  [ $t6       <int> %ebp-92 ]
+     #    -92(%ebp)   4  [ $t9       <int> %ebp-92 ]
-     #    -96(%ebp)   4  [ $t7       <int> %ebp-96 ]
-     #   -100(%ebp)   4  [ $t8       <int> %ebp-100 ]
-     #   -104(%ebp)   4  [ $t9       <int> %ebp-104 ]
-     #   -105(%ebp)   1  [ $v2       <char> %ebp-105 ]
+     #    -93(%ebp)   1  [ $v2       <char> %ebp-93 ]
-     pushl   %ebp                   
-     movl    %esp, %ebp             
-     pushl   %ebx                    # save callee saved registers
-     pushl   %esi                   
+     pushl   %ebp                   
+     movl    %esp, %ebp             
+     pushl   %ebx                    # save callee saved registers
-     pushl   %edi                   
+     pushl   %esi                   
+     pushl   %edi                   
-     subl    $96, %esp               # make room for locals
+     subl    $84, %esp               # make room for locals
-     movl    $24, %ecx              
+     movl    $21, %ecx              
-     movl    %eax, -92(%ebp)        
+     movl    %eax, -80(%ebp)        
-     movl    -92(%ebp), %eax         #   1:     mul    t7 <- t6, 18583
+     movl    -80(%ebp), %eax         #   1:     mul    t7 <- t6, 18583
-     movl    %eax, -96(%ebp)        
+     movl    %eax, -84(%ebp)        
-     movl    -96(%ebp), %eax         #   2:     div    t8 <- t7, 87714
+     movl    -84(%ebp), %eax         #   2:     div    t8 <- t7, 87714
-     movl    %eax, -100(%ebp)       
+     movl    %eax, -88(%ebp)        
+     movl    %eax, -92(%ebp)        
+     movl    -88(%ebp), %eax         #   6:     mul    t10 <- t8, t9
+     movl    -92(%ebp), %ebx        
+     imull   %ebx                   
-     movl    %eax, -104(%ebp)       
+     movl    %eax, -16(%ebp)        
-     movl    $77598, %eax            #   6:     mul    t11 <- 77598, 40443
+     movl    -16(%ebp), %eax         #   7:     add    t11 <- t10, 93775
-     movl    $40443, %ebx           
+     movl    $93775, %ebx           
-     imull   %ebx                   
+     addl    %ebx, %eax             
+     movl    $3, %eax                #   8:     param  1 <- 3
-     movl    -20(%ebp), %eax         #   7:     mul    t12 <- t11, 18583
-     movl    $18583, %ebx           
-     imull   %ebx                   
+     pushl   %eax                   
+     movl    8(%ebp), %eax           #   9:     param  0 <- v1
+     pushl   %eax                   
+     call    DIM                     #  10:     call   t12 <- DIM
+     addl    $8, %esp               
-     movl    -24(%ebp), %eax         #   8:     div    t13 <- t12, 87714
+     movl    -20(%ebp), %eax         #  11:     mul    t13 <- t11, t12
-     movl    $87714, %ebx           
+     movl    -24(%ebp), %ebx        
-     cdq                            
-     idivl   %ebx                   
+     imull   %ebx                   
-     movl    -100(%ebp), %eax        #   9:     mul    t10 <- t8, t9
-     movl    -104(%ebp), %ebx       
-     imull   %ebx                   
-     movl    %eax, -16(%ebp)        
-     movl    -16(%ebp), %eax         #  10:     add    t14 <- t10, 93775
+     movl    -28(%ebp), %eax         #  12:     add    t14 <- t13, 97926
-     movl    $93775, %ebx           
+     movl    $97926, %ebx           
-     movl    $3, %eax                #  11:     param  1 <- 3
+     movl    $4, %eax                #  13:     param  1 <- 4
-     movl    8(%ebp), %eax           #  12:     param  0 <- v1
+     movl    8(%ebp), %eax           #  14:     param  0 <- v1
-     call    DIM                     #  13:     call   t15 <- DIM
+     call    DIM                     #  15:     call   t15 <- DIM
-     movl    -32(%ebp), %eax         #  14:     mul    t16 <- t14, t15
+     movl    -32(%ebp), %eax         #  16:     mul    t16 <- t14, t15
-     movl    -40(%ebp), %eax         #  15:     add    t17 <- t16, 97926
+     movl    -40(%ebp), %eax         #  17:     add    t17 <- t16, 54015
-     movl    $97926, %ebx           
+     movl    $54015, %ebx           
-     movl    $4, %eax                #  16:     param  1 <- 4
+     movl    $5, %eax                #  18:     param  1 <- 5
-     movl    8(%ebp), %eax           #  17:     param  0 <- v1
+     movl    8(%ebp), %eax           #  19:     param  0 <- v1
-     call    DIM                     #  18:     call   t18 <- DIM
+     call    DIM                     #  20:     call   t18 <- DIM
-     movl    -44(%ebp), %eax         #  19:     mul    t19 <- t17, t18
+     movl    -44(%ebp), %eax         #  21:     mul    t19 <- t17, t18
-     movl    -52(%ebp), %eax         #  20:     add    t20 <- t19, 54015
+     movl    -52(%ebp), %eax         #  22:     add    t20 <- t19, 13395
-     movl    $54015, %ebx           
+     movl    $13395, %ebx           
-     movl    $5, %eax                #  21:     param  1 <- 5
+     movl    -56(%ebp), %eax         #  23:     mul    t21 <- t20, 1
+     movl    $1, %ebx               
-     pushl   %eax                   
+     imull   %ebx                   
-     movl    8(%ebp), %eax           #  22:     param  0 <- v1
-     pushl   %eax                   
-     call    DIM                     #  23:     call   t21 <- DIM
-     addl    $8, %esp               
-     movl    -56(%ebp), %eax         #  24:     mul    t22 <- t20, t21
+     movl    8(%ebp), %eax           #  24:     param  0 <- v1
-     movl    -60(%ebp), %ebx        
-     imull   %ebx                   
+     pushl   %eax                   
+     call    DOFS                    #  25:     call   t22 <- DOFS
+     addl    $4, %esp               
-     movl    -64(%ebp), %eax         #  25:     add    t23 <- t22, 13395
+     movl    -60(%ebp), %eax         #  26:     add    t23 <- t21, t22
-     movl    $13395, %ebx           
+     movl    -64(%ebp), %ebx        
-     movl    -68(%ebp), %eax         #  26:     mul    t24 <- t23, 1
+     movl    8(%ebp), %eax           #  27:     add    t24 <- v1, t23
+     movl    -68(%ebp), %ebx        
-     movl    $1, %ebx               
+     addl    %ebx, %eax             
-     imull   %ebx                   
-     movl    8(%ebp), %eax           #  27:     param  0 <- v1
-     pushl   %eax                   
-     call    DOFS                    #  28:     call   t25 <- DOFS
-     addl    $4, %esp               
-     movl    %eax, -76(%ebp)        
-     movl    -72(%ebp), %eax         #  29:     add    t26 <- t24, t25
-     movl    -76(%ebp), %ebx        
-     addl    %ebx, %eax             
-     movl    %eax, -80(%ebp)        
-     movl    8(%ebp), %eax           #  30:     add    t27 <- v1, t26
-     movl    -80(%ebp), %ebx        
-     addl    %ebx, %eax             
-     movl    %eax, -84(%ebp)        
-     movl    $97, %eax               #  31:     assign @t27 <- 97
+     movl    $97, %eax               #  28:     assign @t24 <- 97
-     movl    -84(%ebp), %edi        
+     movl    -72(%ebp), %edi        
-     call    WriteLn                 #  32:     call   WriteLn
+     call    WriteLn                 #  29:     call   WriteLn
-     jmp     l_f1_4_if_false         #  33:     goto   4_if_false
+     jmp     l_f1_4_if_false         #  30:     goto   4_if_false
-     movl    $36090, %eax            #  34:     if     36090 < 59900 goto 6
+     movl    $36090, %eax            #  31:     if     36090 < 59900 goto 6
-     jmp     l_f1_7                  #  35:     goto   7
+     jmp     l_f1_7                  #  32:     goto   7
-     movl    $1, %eax                #  37:     assign t28 <- 1
+     movl    $1, %eax                #  34:     assign t25 <- 1
-     movb    %al, -85(%ebp)         
+     movb    %al, -73(%ebp)         
-     jmp     l_f1_8                  #  38:     goto   8
+     jmp     l_f1_8                  #  35:     goto   8
-     movl    $0, %eax                #  40:     assign t28 <- 0
+     movl    $0, %eax                #  37:     assign t25 <- 0
-     movb    %al, -85(%ebp)         
+     movb    %al, -73(%ebp)         
-     movzbl  -85(%ebp), %eax         #  42:     return t28
+     movzbl  -73(%ebp), %eax         #  39:     return t25
-     movl    $1, %eax                #  43:     assign t29 <- 1
+     movl    $1, %eax                #  40:     assign t26 <- 1
-     movb    %al, -86(%ebp)         
+     movb    %al, -74(%ebp)         
-     jmp     l_f1_13                 #  44:     goto   13
+     jmp     l_f1_13                 #  41:     goto   13
-     movl    $0, %eax                #  45:     assign t29 <- 0
+     movl    $0, %eax                #  42:     assign t26 <- 0
-     movb    %al, -86(%ebp)         
+     movb    %al, -74(%ebp)         
-     movzbl  -86(%ebp), %eax         #  47:     return t29
+     movzbl  -74(%ebp), %eax         #  44:     return t26
-     jmp     l_f1_2                  #  48:     goto   2
+     jmp     l_f1_2                  #  45:     goto   2
-     addl    $96, %esp               # remove locals
+     addl    $84, %esp               # remove locals
