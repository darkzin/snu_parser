-     #    -32(%ebp)   4  [ $t14      <int> %ebp-32 ]
-     #    -36(%ebp)   4  [ $t15      <ptr(4) to <array 71 of <array 71 of <array 13 of <array 8 of <array 90 of <int>>>>>>> %ebp-36 ]
+     #    -32(%ebp)   4  [ $t14      <ptr(4) to <array 71 of <array 71 of <array 13 of <array 8 of <array 90 of <int>>>>>>> %ebp-32 ]
+     #    -36(%ebp)   4  [ $t15      <int> %ebp-36 ]
-     #    -48(%ebp)   4  [ $t18      <int> %ebp-48 ]
-     #    -52(%ebp)   4  [ $t19      <ptr(4) to <array 71 of <array 71 of <array 13 of <array 8 of <array 90 of <int>>>>>>> %ebp-52 ]
+     #    -48(%ebp)   4  [ $t18      <ptr(4) to <array 71 of <array 71 of <array 13 of <array 8 of <array 90 of <int>>>>>>> %ebp-48 ]
+     #    -52(%ebp)   4  [ $t19      <int> %ebp-52 ]
-     #    -64(%ebp)   4  [ $t22      <int> %ebp-64 ]
-     #    -68(%ebp)   4  [ $t23      <ptr(4) to <array 71 of <array 71 of <array 13 of <array 8 of <array 90 of <int>>>>>>> %ebp-68 ]
+     #    -64(%ebp)   4  [ $t22      <ptr(4) to <array 71 of <array 71 of <array 13 of <array 8 of <array 90 of <int>>>>>>> %ebp-64 ]
+     #    -68(%ebp)   4  [ $t23      <int> %ebp-68 ]
-     #    -84(%ebp)   4  [ $t27      <int> %ebp-84 ]
-     #    -88(%ebp)   4  [ $t28      <ptr(4) to <array 71 of <array 71 of <array 13 of <array 8 of <array 90 of <int>>>>>>> %ebp-88 ]
+     #    -84(%ebp)   4  [ $t27      <ptr(4) to <array 71 of <array 71 of <array 13 of <array 8 of <array 90 of <int>>>>>>> %ebp-84 ]
+     #    -88(%ebp)   4  [ $t28      <int> %ebp-88 ]
-     #   -100(%ebp)   4  [ $t31      <int> %ebp-100 ]
-     #   -101(%ebp)   1  [ $t4       <bool> %ebp-101 ]
+     #    -97(%ebp)   1  [ $t4       <bool> %ebp-97 ]
-     #   -108(%ebp)   4  [ $t5       <ptr(4) to <array 71 of <array 71 of <array 13 of <array 8 of <array 90 of <int>>>>>>> %ebp-108 ]
+     #   -104(%ebp)   4  [ $t5       <ptr(4) to <array 71 of <array 71 of <array 13 of <array 8 of <array 90 of <int>>>>>>> %ebp-104 ]
-     #   -109(%ebp)   1  [ $t6       <bool> %ebp-109 ]
+     #   -105(%ebp)   1  [ $t6       <bool> %ebp-105 ]
-     #   -116(%ebp)   4  [ $t7       <int> %ebp-116 ]
+     #   -112(%ebp)   4  [ $t7       <int> %ebp-112 ]
-     #   -120(%ebp)   4  [ $t8       <ptr(4) to <array 71 of <array 71 of <array 13 of <array 8 of <array 90 of <int>>>>>>> %ebp-120 ]
+     #   -116(%ebp)   4  [ $t8       <ptr(4) to <array 71 of <array 71 of <array 13 of <array 8 of <array 90 of <int>>>>>>> %ebp-116 ]
-     #   -124(%ebp)   4  [ $t9       <int> %ebp-124 ]
+     #   -120(%ebp)   4  [ $t9       <int> %ebp-120 ]
-     #-188735188(%ebp)188735064  [ $v3       <array 71 of <array 71 of <array 13 of <array 8 of <array 90 of <int>>>>>> %ebp-188735188 ]
+     #   -188735184(%ebp)  188735064  [ $v3       <array 71 of <array 71 of <array 13 of <array 8 of <array 90 of <int>>>>>> %ebp-188735184 ]
-     #-188735192(%ebp)   4  [ $v4       <int> %ebp-188735192 ]
+     #   -188735188(%ebp)   4  [ $v4       <int> %ebp-188735188 ]
-     pushl   %ebp                   
-     movl    %esp, %ebp             
-     pushl   %ebx                    # save callee saved registers
-     pushl   %esi                   
+     pushl   %ebp                   
+     movl    %esp, %ebp             
+     pushl   %ebx                    # save callee saved registers
-     pushl   %edi                   
+     pushl   %esi                   
+     pushl   %edi                   
-     subl    $188735180, %esp        # make room for locals
+     subl    $188735176, %esp        # make room for locals
-     movl    $47183795, %ecx        
+     movl    $47183794, %ecx        
-     movl    $5,-188735188(%ebp)     # local array 'v3': 5 dimensions
+     movl    $5,-188735184(%ebp)     # local array 'v3': 5 dimensions
-     movl    $71,-188735184(%ebp)    #   dimension 1: 71 elements
+     movl    $71,-188735180(%ebp)    #   dimension 1: 71 elements
-     movl    $71,-188735180(%ebp)    #   dimension 2: 71 elements
+     movl    $71,-188735176(%ebp)    #   dimension 2: 71 elements
-     movl    $13,-188735176(%ebp)    #   dimension 3: 13 elements
+     movl    $13,-188735172(%ebp)    #   dimension 3: 13 elements
-     movl    $8,-188735172(%ebp)     #   dimension 4: 8 elements
+     movl    $8,-188735168(%ebp)     #   dimension 4: 8 elements
-     movl    $90,-188735168(%ebp)    #   dimension 5: 90 elements
+     movl    $90,-188735164(%ebp)    #   dimension 5: 90 elements
-     movb    %al, -101(%ebp)        
+     movb    %al, -97(%ebp)         
-     leal    -188735188(%ebp), %eax  #  10:     &()    t5 <- v3
+     leal    -188735184(%ebp), %eax  #  10:     &()    t5 <- v3
-     movl    %eax, -108(%ebp)       
+     movl    %eax, -104(%ebp)       
-     movl    -108(%ebp), %eax        #  11:     param  0 <- t5
+     movl    -104(%ebp), %eax        #  11:     param  0 <- t5
-     movb    %al, -109(%ebp)        
+     movb    %al, -105(%ebp)        
+     jmp     l_f1_11                 #  19:     goto   11
-     call    ReadInt                 #  20:     call   t7 <- ReadInt
+     call    ReadInt                 #  21:     call   t7 <- ReadInt
-     movl    %eax, -116(%ebp)       
+     movl    %eax, -112(%ebp)       
-     jmp     l_f1_12_while_cond      #  21:     goto   12_while_cond
+     jmp     l_f1_12_while_cond      #  22:     goto   12_while_cond
+ l_f1_11:
-     movl    $86102, %eax            #  22:     if     86102 = 95566 goto 17_if_true
+     movl    $86102, %eax            #  24:     if     86102 = 95566 goto 17_if_true
-     jmp     l_f1_18_if_false        #  23:     goto   18_if_false
+     jmp     l_f1_18_if_false        #  25:     goto   18_if_false
-     leal    -188735188(%ebp), %eax  #  25:     &()    t8 <- v3
+     leal    -188735184(%ebp), %eax  #  27:     &()    t8 <- v3
+     movl    %eax, -116(%ebp)       
+     movl    $26529, %eax            #  28:     add    t9 <- 26529, 67021
+     movl    $67021, %ebx           
+     addl    %ebx, %eax             
-     movl    $26529, %eax            #  26:     add    t9 <- 26529, 67021
-     movl    $67021, %ebx           
-     addl    %ebx, %eax             
-     movl    %eax, -124(%ebp)       
-     movl    $2, %eax                #  27:     param  1 <- 2
+     movl    $2, %eax                #  29:     param  1 <- 2
-     leal    -188735188(%ebp), %eax  #  28:     &()    t10 <- v3
+     leal    -188735184(%ebp), %eax  #  30:     &()    t10 <- v3
-     movl    -16(%ebp), %eax         #  29:     param  0 <- t10
+     movl    -16(%ebp), %eax         #  31:     param  0 <- t10
-     call    DIM                     #  30:     call   t11 <- DIM
+     call    DIM                     #  32:     call   t11 <- DIM
-     movl    $26529, %eax            #  31:     add    t13 <- 26529, 67021
-     movl    $67021, %ebx           
-     addl    %ebx, %eax             
-     movl    %eax, -28(%ebp)        
-     movl    -124(%ebp), %eax        #  32:     mul    t12 <- t9, t11
+     movl    -120(%ebp), %eax        #  33:     mul    t12 <- t9, t11
-     movl    -24(%ebp), %eax         #  33:     add    t14 <- t12, 71553
+     movl    -24(%ebp), %eax         #  34:     add    t13 <- t12, 71553
+     movl    %eax, -28(%ebp)        
+     movl    $3, %eax                #  35:     param  1 <- 3
+     pushl   %eax                   
+     leal    -188735184(%ebp), %eax  #  36:     &()    t14 <- v3
-     movl    $3, %eax                #  34:     param  1 <- 3
+     movl    -32(%ebp), %eax         #  37:     param  0 <- t14
-     leal    -188735188(%ebp), %eax  #  35:     &()    t15 <- v3
+     call    DIM                     #  38:     call   t15 <- DIM
+     addl    $8, %esp               
+     movl    -28(%ebp), %eax         #  39:     mul    t16 <- t13, t15
+     movl    -36(%ebp), %ebx        
+     imull   %ebx                   
+     movl    %eax, -40(%ebp)        
+     movl    -40(%ebp), %eax         #  40:     add    t17 <- t16, 28265
+     movl    $28265, %ebx           
+     addl    %ebx, %eax             
+     movl    %eax, -44(%ebp)        
+     movl    $4, %eax                #  41:     param  1 <- 4
+     pushl   %eax                   
+     leal    -188735184(%ebp), %eax  #  42:     &()    t18 <- v3
+     movl    %eax, -48(%ebp)        
-     movl    -36(%ebp), %eax         #  36:     param  0 <- t15
+     movl    -48(%ebp), %eax         #  43:     param  0 <- t18
-     call    DIM                     #  37:     call   t16 <- DIM
+     call    DIM                     #  44:     call   t19 <- DIM
-     movl    %eax, -40(%ebp)        
+     movl    %eax, -52(%ebp)        
-     movl    -32(%ebp), %eax         #  38:     mul    t17 <- t14, t16
+     movl    -44(%ebp), %eax         #  45:     mul    t20 <- t17, t19
-     movl    -40(%ebp), %ebx        
+     movl    -52(%ebp), %ebx        
-     movl    %eax, -44(%ebp)        
-     movl    -44(%ebp), %eax         #  39:     add    t18 <- t17, 28265
-     movl    $28265, %ebx           
-     addl    %ebx, %eax             
-     movl    %eax, -48(%ebp)        
-     movl    $4, %eax                #  40:     param  1 <- 4
-     pushl   %eax                   
-     leal    -188735188(%ebp), %eax  #  41:     &()    t19 <- v3
-     movl    %eax, -52(%ebp)        
+     movl    %eax, -56(%ebp)        
+     movl    -56(%ebp), %eax         #  46:     add    t21 <- t20, 37997
+     movl    $37997, %ebx           
+     addl    %ebx, %eax             
+     movl    %eax, -60(%ebp)        
+     movl    $5, %eax                #  47:     param  1 <- 5
+     pushl   %eax                   
+     leal    -188735184(%ebp), %eax  #  48:     &()    t22 <- v3
+     movl    %eax, -64(%ebp)        
-     movl    -52(%ebp), %eax         #  42:     param  0 <- t19
+     movl    -64(%ebp), %eax         #  49:     param  0 <- t22
-     call    DIM                     #  43:     call   t20 <- DIM
+     call    DIM                     #  50:     call   t23 <- DIM
-     movl    %eax, -56(%ebp)        
+     movl    %eax, -68(%ebp)        
-     movl    -48(%ebp), %eax         #  44:     mul    t21 <- t18, t20
+     movl    -60(%ebp), %eax         #  51:     mul    t24 <- t21, t23
-     movl    -56(%ebp), %ebx        
+     movl    -68(%ebp), %ebx        
-     movl    %eax, -60(%ebp)        
-     movl    -60(%ebp), %eax         #  45:     add    t22 <- t21, 37997
-     movl    $37997, %ebx           
-     addl    %ebx, %eax             
-     movl    %eax, -64(%ebp)        
-     movl    $5, %eax                #  46:     param  1 <- 5
-     pushl   %eax                   
-     leal    -188735188(%ebp), %eax  #  47:     &()    t23 <- v3
-     movl    %eax, -68(%ebp)        
-     movl    -68(%ebp), %eax         #  48:     param  0 <- t23
-     pushl   %eax                   
-     call    DIM                     #  49:     call   t24 <- DIM
-     addl    $8, %esp               
-     movl    -64(%ebp), %eax         #  50:     mul    t25 <- t22, t24
+     movl    -72(%ebp), %eax         #  52:     add    t25 <- t24, 90905
-     movl    -72(%ebp), %ebx        
+     movl    $90905, %ebx           
-     imull   %ebx                   
+     addl    %ebx, %eax             
-     movl    -76(%ebp), %eax         #  51:     add    t26 <- t25, 90905
-     movl    $90905, %ebx           
-     addl    %ebx, %eax             
-     movl    %eax, -80(%ebp)        
-     movl    -80(%ebp), %eax         #  52:     mul    t27 <- t26, 4
+     movl    -76(%ebp), %eax         #  53:     mul    t26 <- t25, 4
+     movl    %eax, -80(%ebp)        
+     leal    -188735184(%ebp), %eax  #  54:     &()    t27 <- v3
-     leal    -188735188(%ebp), %eax  #  53:     &()    t28 <- v3
+     movl    -84(%ebp), %eax         #  55:     param  0 <- t27
+     pushl   %eax                   
+     call    DOFS                    #  56:     call   t28 <- DOFS
+     addl    $4, %esp               
-     movl    -88(%ebp), %eax         #  54:     param  0 <- t28
+     movl    -80(%ebp), %eax         #  57:     add    t29 <- t26, t28
+     movl    -88(%ebp), %ebx        
-     pushl   %eax                   
-     call    DOFS                    #  55:     call   t29 <- DOFS
-     addl    $4, %esp               
+     addl    %ebx, %eax             
-     movl    -84(%ebp), %eax         #  56:     add    t30 <- t27, t29
+     movl    -116(%ebp), %eax        #  58:     add    t30 <- t8, t29
-     movl    -120(%ebp), %eax        #  57:     add    t31 <- t8, t30
-     movl    -96(%ebp), %ebx        
-     addl    %ebx, %eax             
-     movl    %eax, -100(%ebp)       
-     movl    $74334, %eax            #  58:     assign @t31 <- 74334
+     movl    $74334, %eax            #  59:     assign @t30 <- 74334
-     movl    -100(%ebp), %edi       
+     movl    -96(%ebp), %edi        
-     jmp     l_f1_16                 #  59:     goto   16
+     jmp     l_f1_16                 #  60:     goto   16
-     addl    $188735180, %esp        # remove locals
+     addl    $188735176, %esp        # remove locals
-     #-188735088(%ebp)188735064  [ $v5       <array 71 of <array 71 of <array 13 of <array 8 of <array 90 of <int>>>>>> %ebp-188735088 ]
+     #   -188735088(%ebp)  188735064  [ $v5       <array 71 of <array 71 of <array 13 of <array 8 of <array 90 of <int>>>>>> %ebp-188735088 ]
+     jmp     l_f2_3                  #   3:     goto   3
-     movl    $1, %eax                #   4:     assign t4 <- 1
+     movl    $1, %eax                #   5:     assign t4 <- 1
-     jmp     l_f2_4                  #   5:     goto   4
+     jmp     l_f2_4                  #   6:     goto   4
+ l_f2_3:
-     movl    $0, %eax                #   6:     assign t4 <- 0
+     movl    $0, %eax                #   8:     assign t4 <- 0
-     movzbl  -13(%ebp), %eax         #   8:     assign v4 <- t4
+     movzbl  -13(%ebp), %eax         #  10:     assign v4 <- t4
-     leal    -188735088(%ebp), %eax  #   9:     &()    t5 <- v5
+     leal    -188735088(%ebp), %eax  #  11:     &()    t5 <- v5
-     movl    -20(%ebp), %eax         #  10:     param  0 <- t5
+     movl    -20(%ebp), %eax         #  12:     param  0 <- t5
-     call    f0                      #  11:     call   t6 <- f0
+     call    f0                      #  13:     call   t6 <- f0
