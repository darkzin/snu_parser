+     jmp     l_f1_0                  #   2:     goto   0
+     jmp     l_f1_0                  #   3:     goto   0
-     jmp     l_f1_1_while_cond       #   3:     goto   1_while_cond
+     jmp     l_f1_1_while_cond       #   5:     goto   1_while_cond
+ l_f1_0:
+     jmp     l_f1_7_if_false         #   7:     goto   7_if_false
+     jmp     l_f1_7_if_false         #   8:     goto   7_if_false
-     movl    $98, %eax               #   4:     if     98 = 100 goto 11
+     movl    $98, %eax               #   9:     if     98 = 100 goto 11
-     jmp     l_f1_12                 #   5:     goto   12
+     jmp     l_f1_12                 #  10:     goto   12
-     movl    $1, %eax                #   7:     assign t1 <- 1
+     movl    $1, %eax                #  12:     assign t1 <- 1
-     jmp     l_f1_13                 #   8:     goto   13
+     jmp     l_f1_13                 #  13:     goto   13
-     movl    $0, %eax                #  10:     assign t1 <- 0
+     movl    $0, %eax                #  15:     assign t1 <- 0
-     movzbl  -13(%ebp), %eax         #  12:     return t1
+     movzbl  -13(%ebp), %eax         #  17:     return t1
-     jmp     l_f1_17_if_false        #  13:     goto   17_if_false
+     jmp     l_f1_17_if_false        #  18:     goto   17_if_false
-     jmp     l_f1_15                 #  14:     goto   15
+     jmp     l_f1_15                 #  19:     goto   15
-     movl    $99, %eax               #  17:     if     99 # 100 goto 19
+     movl    $99, %eax               #  22:     if     99 # 100 goto 19
-     jmp     l_f1_20                 #  18:     goto   20
+     jmp     l_f1_20                 #  23:     goto   20
-     movl    $1, %eax                #  20:     assign t2 <- 1
+     movl    $1, %eax                #  25:     assign t2 <- 1
-     jmp     l_f1_21                 #  21:     goto   21
+     jmp     l_f1_21                 #  26:     goto   21
-     movl    $0, %eax                #  23:     assign t2 <- 0
+     movl    $0, %eax                #  28:     assign t2 <- 0
-     movzbl  -57(%ebp), %eax         #  25:     return t2
+     movzbl  -57(%ebp), %eax         #  30:     return t2
-     movl    $85616, %eax            #  26:     if     85616 # 70151 goto 24_if_true
+     movl    $85616, %eax            #  31:     if     85616 # 70151 goto 24_if_true
-     jmp     l_f1_25_if_false        #  27:     goto   25_if_false
+     jmp     l_f1_25_if_false        #  32:     goto   25_if_false
-     jmp     l_f1_23                 #  29:     goto   23
+     jmp     l_f1_23                 #  34:     goto   23
-     movl    $100, %eax              #  32:     if     100 > 98 goto 28
+     movl    $100, %eax              #  37:     if     100 > 98 goto 28
-     jmp     l_f1_29                 #  33:     goto   29
+     jmp     l_f1_29                 #  38:     goto   29
-     movl    $1, %eax                #  35:     assign t3 <- 1
+     movl    $1, %eax                #  40:     assign t3 <- 1
-     jmp     l_f1_30                 #  36:     goto   30
+     jmp     l_f1_30                 #  41:     goto   30
-     movl    $0, %eax                #  38:     assign t3 <- 0
+     movl    $0, %eax                #  43:     assign t3 <- 0
-     movzbl  -71(%ebp), %eax         #  40:     return t3
+     movzbl  -71(%ebp), %eax         #  45:     return t3
-     movl    $79847, %eax            #  41:     if     79847 = 79807 goto 33
+     movl    $79847, %eax            #  46:     if     79847 = 79807 goto 33
-     jmp     l_f1_34                 #  42:     goto   34
+     jmp     l_f1_34                 #  47:     goto   34
-     movl    $1, %eax                #  44:     assign t4 <- 1
+     movl    $1, %eax                #  49:     assign t4 <- 1
-     jmp     l_f1_35                 #  45:     goto   35
+     jmp     l_f1_35                 #  50:     goto   35
-     movl    $0, %eax                #  47:     assign t4 <- 0
+     movl    $0, %eax                #  52:     assign t4 <- 0
-     movzbl  -72(%ebp), %eax         #  49:     return t4
+     movzbl  -72(%ebp), %eax         #  54:     return t4
-     movl    $72083, %eax            #  50:     if     72083 >= 62832 goto 38
+     movl    $72083, %eax            #  55:     if     72083 >= 62832 goto 38
-     jmp     l_f1_39                 #  51:     goto   39
+     jmp     l_f1_39                 #  56:     goto   39
-     movl    $1, %eax                #  53:     assign t5 <- 1
+     movl    $1, %eax                #  58:     assign t5 <- 1
-     jmp     l_f1_40                 #  54:     goto   40
+     jmp     l_f1_40                 #  59:     goto   40
-     movl    $0, %eax                #  56:     assign t5 <- 0
+     movl    $0, %eax                #  61:     assign t5 <- 0
-     movzbl  -73(%ebp), %eax         #  58:     return t5
+     movzbl  -73(%ebp), %eax         #  63:     return t5
-     movl    $2, %eax                #  59:     param  1 <- 2
+     movl    $2, %eax                #  64:     param  1 <- 2
-     movl    8(%ebp), %eax           #  60:     param  0 <- v0
+     movl    8(%ebp), %eax           #  65:     param  0 <- v0
-     call    DIM                     #  61:     call   t6 <- DIM
+     call    DIM                     #  66:     call   t6 <- DIM
-     movl    $64445, %eax            #  62:     mul    t7 <- 64445, t6
+     movl    $64445, %eax            #  67:     mul    t7 <- 64445, t6
-     movl    -84(%ebp), %eax         #  63:     add    t8 <- t7, 18627
+     movl    -84(%ebp), %eax         #  68:     add    t8 <- t7, 18627
-     movl    $3, %eax                #  64:     param  1 <- 3
+     movl    $3, %eax                #  69:     param  1 <- 3
-     movl    8(%ebp), %eax           #  65:     param  0 <- v0
+     movl    8(%ebp), %eax           #  70:     param  0 <- v0
-     call    DIM                     #  66:     call   t9 <- DIM
+     call    DIM                     #  71:     call   t9 <- DIM
-     movl    -88(%ebp), %eax         #  67:     mul    t10 <- t8, t9
+     movl    -88(%ebp), %eax         #  72:     mul    t10 <- t8, t9
-     movl    -20(%ebp), %eax         #  68:     add    t11 <- t10, 95349
+     movl    -20(%ebp), %eax         #  73:     add    t11 <- t10, 95349
-     movl    $4, %eax                #  69:     param  1 <- 4
+     movl    $4, %eax                #  74:     param  1 <- 4
-     movl    8(%ebp), %eax           #  70:     param  0 <- v0
+     movl    8(%ebp), %eax           #  75:     param  0 <- v0
-     call    DIM                     #  71:     call   t12 <- DIM
+     call    DIM                     #  76:     call   t12 <- DIM
-     movl    -24(%ebp), %eax         #  72:     mul    t13 <- t11, t12
+     movl    -24(%ebp), %eax         #  77:     mul    t13 <- t11, t12
-     movl    -32(%ebp), %eax         #  73:     add    t14 <- t13, 49731
+     movl    -32(%ebp), %eax         #  78:     add    t14 <- t13, 49731
-     movl    $5, %eax                #  74:     param  1 <- 5
+     movl    $5, %eax                #  79:     param  1 <- 5
-     movl    8(%ebp), %eax           #  75:     param  0 <- v0
+     movl    8(%ebp), %eax           #  80:     param  0 <- v0
-     call    DIM                     #  76:     call   t15 <- DIM
+     call    DIM                     #  81:     call   t15 <- DIM
-     movl    -36(%ebp), %eax         #  77:     mul    t16 <- t14, t15
+     movl    -36(%ebp), %eax         #  82:     mul    t16 <- t14, t15
-     movl    -44(%ebp), %eax         #  78:     add    t17 <- t16, 28216
+     movl    -44(%ebp), %eax         #  83:     add    t17 <- t16, 28216
-     movl    -48(%ebp), %eax         #  79:     mul    t18 <- t17, 4
+     movl    -48(%ebp), %eax         #  84:     mul    t18 <- t17, 4
-     movl    8(%ebp), %eax           #  80:     param  0 <- v0
+     movl    8(%ebp), %eax           #  85:     param  0 <- v0
-     call    DOFS                    #  81:     call   t19 <- DOFS
+     call    DOFS                    #  86:     call   t19 <- DOFS
-     movl    -52(%ebp), %eax         #  82:     add    t20 <- t18, t19
+     movl    -52(%ebp), %eax         #  87:     add    t20 <- t18, t19
-     movl    8(%ebp), %eax           #  83:     add    t21 <- v0, t20
+     movl    8(%ebp), %eax           #  88:     add    t21 <- v0, t20
-     movl    $27021, %eax            #  84:     assign @t21 <- 27021
+     movl    $27021, %eax            #  89:     assign @t21 <- 27021
-     movl    $61925, %eax            #  85:     if     61925 <= 55271 goto 44
+     movl    $61925, %eax            #  90:     if     61925 <= 55271 goto 44
-     jmp     l_f1_45                 #  86:     goto   45
+     jmp     l_f1_45                 #  91:     goto   45
-     movl    $1, %eax                #  88:     assign t22 <- 1
+     movl    $1, %eax                #  93:     assign t22 <- 1
-     jmp     l_f1_46                 #  89:     goto   46
+     jmp     l_f1_46                 #  94:     goto   46
-     movl    $0, %eax                #  91:     assign t22 <- 0
+     movl    $0, %eax                #  96:     assign t22 <- 0
-     movzbl  -69(%ebp), %eax         #  93:     assign v1 <- t22
+     movzbl  -69(%ebp), %eax         #  98:     assign v1 <- t22
-     jmp     l_f1_5                  #  94:     goto   5
+     jmp     l_f1_5                  #  99:     goto   5
+ l_f1_7_if_false:
-     call    dummyBOOLfunc           #  96:     call   t23 <- dummyBOOLfunc
+     call    dummyBOOLfunc           # 102:     call   t23 <- dummyBOOLfunc
-     movzbl  -70(%ebp), %eax         #  97:     if     t23 = 1 goto 49_if_true
+     movzbl  -70(%ebp), %eax         # 103:     if     t23 = 1 goto 49_if_true
-     jmp     l_f1_50_if_false        #  98:     goto   50_if_false
+     jmp     l_f1_50_if_false        # 104:     goto   50_if_false
-     jmp     l_f1_48                 # 100:     goto   48
+     jmp     l_f1_48                 # 106:     goto   48
+     jmp     l_f2_0                  #   2:     goto   0
-     movl    $97925, %eax            #   3:     if     97925 <= 50001 goto 5_if_true
+     movl    $97925, %eax            #   4:     if     97925 <= 50001 goto 5_if_true
-     jmp     l_f2_6_if_false         #   4:     goto   6_if_false
+     jmp     l_f2_6_if_false         #   5:     goto   6_if_false
-     jmp     l_f2_4                  #   6:     goto   4
+     jmp     l_f2_4                  #   7:     goto   4
-     jmp     l_f2_1_while_cond       #   9:     goto   1_while_cond
+     jmp     l_f2_1_while_cond       #  10:     goto   1_while_cond
+ l_f2_0:
-     call    dummyINTfunc            #  10:     call   t1 <- dummyINTfunc
+     call    dummyINTfunc            #  12:     call   t1 <- dummyINTfunc
-     movl    $12988, %eax            #  12:     if     12988 <= 91494 goto 11_while_body
+     movl    $12988, %eax            #  14:     if     12988 <= 91494 goto 11_while_body
-     jmp     l_f2_9                  #  13:     goto   9
+     jmp     l_f2_9                  #  15:     goto   9
-     call    dummyBOOLfunc           #  15:     call   t2 <- dummyBOOLfunc
+     call    dummyBOOLfunc           #  17:     call   t2 <- dummyBOOLfunc
-     movl    $28696, %eax            #  16:     return 28696
+     movl    $28696, %eax            #  18:     return 28696
-     movl    $91988, %eax            #  17:     return 91988
+     movl    $91988, %eax            #  19:     return 91988
-     movl    $46048, %eax            #  18:     return 46048
+     movl    $46048, %eax            #  20:     return 46048
-     jmp     l_f2_10_while_cond      #  19:     goto   10_while_cond
+     jmp     l_f2_10_while_cond      #  21:     goto   10_while_cond
+     jmp     l_test_2_if_false       #   3:     goto   2_if_false
-     jmp     l_test_0                #   4:     goto   0
+     jmp     l_test_0                #   5:     goto   0
+ l_test_2_if_false:
-     jmp     l_test_10               #   9:     goto   10
+     jmp     l_test_10               #  11:     goto   10
-     jmp     l_test_11_while_cond    #  11:     goto   11_while_cond
+     jmp     l_test_11_while_cond    #  13:     goto   11_while_cond
-     movl    $35235, %eax            #  13:     sub    t0 <- 35235, 21906
+     movl    $35235, %eax            #  15:     sub    t0 <- 35235, 21906
-     movl    $9114, %eax             #  14:     if     9114 = t0 goto 15_if_true
+     movl    $9114, %eax             #  16:     if     9114 = t0 goto 15_if_true
-     jmp     l_test_16_if_false      #  15:     goto   16_if_false
+     jmp     l_test_16_if_false      #  17:     goto   16_if_false
-     movl    $17398, %eax            #  17:     if     17398 > 2839 goto 19_if_true
+     movl    $17398, %eax            #  19:     if     17398 > 2839 goto 19_if_true
-     jmp     l_test_20_if_false      #  18:     goto   20_if_false
+     jmp     l_test_20_if_false      #  20:     goto   20_if_false
-     jmp     l_test_18               #  20:     goto   18
+     jmp     l_test_18               #  22:     goto   18
-     jmp     l_test_14               #  23:     goto   14
+     jmp     l_test_14               #  25:     goto   14
