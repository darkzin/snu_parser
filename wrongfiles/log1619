-     movl    $1, %eax                #  21:     if     1 = 0 goto 18
+     movl    $1, %eax                #  21:     if     1 = 0 goto 19
-     je      l_f1_18                
+     je      l_f1_19                
-     jmp     l_f1_19                 #  22:     goto   19
+     jmp     l_f1_20                 #  22:     goto   20
- l_f1_18:
+ l_f1_19:
-     jmp     l_f1_20                 #  25:     goto   20
+     jmp     l_f1_21                 #  25:     goto   21
- l_f1_19:
+ l_f1_20:
- l_f1_20:
+ l_f1_21:
+     jmp     l_f2_2_if_false         #   2:     goto   2_if_false
-     jmp     l_f2_5                  #   4:     goto   5
+     jmp     l_f2_5                  #   5:     goto   5
-     jmp     l_f2_6_while_cond       #   5:     goto   6_while_cond
+     jmp     l_f2_6_while_cond       #   6:     goto   6_while_cond
-     movl    $10107, %eax            #   7:     if     10107 # 29148 goto 9_if_true
+     movl    $10107, %eax            #   8:     if     10107 # 29148 goto 9_if_true
-     jmp     l_f2_10_if_false        #   8:     goto   10_if_false
+     jmp     l_f2_10_if_false        #   9:     goto   10_if_false
-     jmp     l_f2_8                  #  10:     goto   8
+     jmp     l_f2_8                  #  11:     goto   8
-     movl    $97, %eax               #  13:     if     97 >= 98 goto 13
+     movl    $97, %eax               #  14:     if     97 >= 98 goto 13
-     jmp     l_f2_14                 #  14:     goto   14
+     jmp     l_f2_14                 #  15:     goto   14
-     movl    $1, %eax                #  16:     assign t0 <- 1
+     movl    $1, %eax                #  17:     assign t0 <- 1
-     jmp     l_f2_15                 #  17:     goto   15
+     jmp     l_f2_15                 #  18:     goto   15
-     movl    $0, %eax                #  19:     assign t0 <- 0
+     movl    $0, %eax                #  20:     assign t0 <- 0
-     movzbl  -13(%ebp), %eax         #  21:     return t0
+     movzbl  -13(%ebp), %eax         #  22:     return t0
-     jmp     l_f2_0                  #  22:     goto   0
+     jmp     l_f2_0                  #  23:     goto   0
+ l_f2_2_if_false:
-     call    dummyBOOLfunc           #  24:     call   t1 <- dummyBOOLfunc
+     call    dummyBOOLfunc           #  26:     call   t1 <- dummyBOOLfunc
-     call    dummyCHARfunc           #  25:     call   t2 <- dummyCHARfunc
+     call    dummyCHARfunc           #  27:     call   t2 <- dummyCHARfunc
-     movl    $99, %eax               #  26:     if     99 >= t2 goto 22
+     movl    $99, %eax               #  28:     if     99 >= t2 goto 22
-     jmp     l_f2_23                 #  27:     goto   23
+     jmp     l_f2_23                 #  29:     goto   23
-     movl    $1, %eax                #  29:     assign t3 <- 1
+     movl    $1, %eax                #  31:     assign t3 <- 1
-     jmp     l_f2_24                 #  30:     goto   24
+     jmp     l_f2_24                 #  32:     goto   24
-     movl    $0, %eax                #  32:     assign t3 <- 0
+     movl    $0, %eax                #  34:     assign t3 <- 0
-     movzbl  -16(%ebp), %eax         #  34:     return t3
+     movzbl  -16(%ebp), %eax         #  36:     return t3
-     jmp     l_f2_18                 #  35:     goto   18
+     jmp     l_f2_18                 #  37:     goto   18
+     jmp     l_test_1                #   3:     goto   1
-     jmp     l_test_2_while_cond     #   4:     goto   2_while_cond
+     jmp     l_test_2_while_cond     #   5:     goto   2_while_cond
+ l_test_1:
-     movl    $62544, %eax            #   5:     param  0 <- 62544
+     movl    $62544, %eax            #   7:     param  0 <- 62544
-     call    WriteInt                #   6:     call   WriteInt
+     call    WriteInt                #   8:     call   WriteInt
-     movl    $97, %eax               #   7:     assign v0 <- 97
+     movl    $97, %eax               #   9:     assign v0 <- 97
-     jmp     l_test_7                #   9:     goto   7
+     jmp     l_test_7                #  11:     goto   7
-     jmp     l_test_15_if_false      #  11:     goto   15_if_false
+     jmp     l_test_15_if_false      #  13:     goto   15_if_false
-     movl    $100, %eax              #  12:     assign v0 <- 100
+     movl    $100, %eax              #  14:     assign v0 <- 100
-     jmp     l_test_13               #  13:     goto   13
+     jmp     l_test_13               #  15:     goto   13
