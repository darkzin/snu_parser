+     jmp     l_f0_2                  #   0:     goto   2
-     movl    $1, %eax                #   0:     assign t11 <- 1
+     movl    $1, %eax                #   1:     assign t11 <- 1
-     jmp     l_f0_3                  #   1:     goto   3
+     jmp     l_f0_3                  #   2:     goto   3
+ l_f0_2:
-     movl    $0, %eax                #   2:     assign t11 <- 0
+     movl    $0, %eax                #   4:     assign t11 <- 0
-     movzbl  -13(%ebp), %eax         #   4:     assign v5 <- t11
+     movzbl  -13(%ebp), %eax         #   6:     assign v5 <- t11
-     movl    $18251, %eax            #   5:     assign v6 <- 18251
+     movl    $18251, %eax            #   7:     assign v6 <- 18251
-     movl    $99, %eax               #   6:     if     99 = 99 goto 10_if_true
+     movl    $99, %eax               #   8:     if     99 = 99 goto 10_if_true
-     jmp     l_f0_11_if_false        #   7:     goto   11_if_false
+     jmp     l_f0_11_if_false        #   9:     goto   11_if_false
-     call    dummyBOOLfunc           #   9:     call   t12 <- dummyBOOLfunc
+     call    dummyBOOLfunc           #  11:     call   t12 <- dummyBOOLfunc
-     jmp     l_f0_9                  #  10:     goto   9
+     jmp     l_f0_9                  #  12:     goto   9
-     jmp     l_f0_5                  #  13:     goto   5
+     jmp     l_f0_5                  #  15:     goto   5
-     movl    $98, %eax               #  15:     assign v7 <- 98
+     movl    $98, %eax               #  17:     assign v7 <- 98
-     # -21660(%ebp)21624  [ $v7       <array 8 of <array 9 of <array 3 of <array 5 of <array 5 of <int>>>>>> %ebp-21660 ]
+     #   -21660(%ebp)  21624  [ $v7       <array 8 of <array 9 of <array 3 of <array 5 of <array 5 of <int>>>>>> %ebp-21660 ]
-     # -21876(%ebp) 216  [ $v8       <array 1 of <array 1 of <array 2 of <array 8 of <array 3 of <int>>>>>> %ebp-21876 ]
+     #   -21876(%ebp)  216  [ $v8       <array 1 of <array 1 of <array 2 of <array 8 of <array 3 of <int>>>>>> %ebp-21876 ]
-     # -70500(%ebp)48624  [ $v9       <array 5 of <array 9 of <array 9 of <array 10 of <array 3 of <int>>>>>> %ebp-70500 ]
+     #   -70500(%ebp)  48624  [ $v9       <array 5 of <array 9 of <array 9 of <array 10 of <array 3 of <int>>>>>> %ebp-70500 ]
+     jmp     l_f1_2                  #   2:     goto   2
-     movl    $1, %eax                #   3:     assign t12 <- 1
+     movl    $1, %eax                #   4:     assign t12 <- 1
-     jmp     l_f1_3                  #   4:     goto   3
+     jmp     l_f1_3                  #   5:     goto   3
+ l_f1_2:
-     movl    $0, %eax                #   5:     assign t12 <- 0
+     movl    $0, %eax                #   7:     assign t12 <- 0
-     movzbl  -14(%ebp), %eax         #   7:     assign v6 <- t12
+     movzbl  -14(%ebp), %eax         #   9:     assign v6 <- t12
-     movl    $29720, %eax            #   9:     if     29720 <= 5848 goto 7_while_body
+     movl    $29720, %eax            #  11:     if     29720 <= 5848 goto 7_while_body
-     jmp     l_f1_5                  #  10:     goto   5
+     jmp     l_f1_5                  #  12:     goto   5
-     leal    -70500(%ebp), %eax      #  12:     &()    t13 <- v9
+     leal    -70500(%ebp), %eax      #  14:     &()    t13 <- v9
-     movl    -20(%ebp), %eax         #  13:     param  2 <- t13
+     movl    -20(%ebp), %eax         #  15:     param  2 <- t13
-     leal    -21876(%ebp), %eax      #  14:     &()    t14 <- v8
+     leal    -21876(%ebp), %eax      #  16:     &()    t14 <- v8
-     movl    -24(%ebp), %eax         #  15:     param  1 <- t14
+     movl    -24(%ebp), %eax         #  17:     param  1 <- t14
-     leal    -21660(%ebp), %eax      #  16:     &()    t15 <- v7
+     leal    -21660(%ebp), %eax      #  18:     &()    t15 <- v7
-     movl    -28(%ebp), %eax         #  17:     param  0 <- t15
+     movl    -28(%ebp), %eax         #  19:     param  0 <- t15
-     call    f0                      #  18:     call   t16 <- f0
+     call    f0                      #  20:     call   t16 <- f0
-     jmp     l_f1_6_while_cond       #  19:     goto   6_while_cond
+     jmp     l_f1_6_while_cond       #  21:     goto   6_while_cond
-     movl    $98, %eax               #  21:     if     98 <= 97 goto 11_if_true
+     movl    $98, %eax               #  23:     if     98 <= 97 goto 11_if_true
-     jmp     l_f1_12_if_false        #  22:     goto   12_if_false
+     jmp     l_f1_12_if_false        #  24:     goto   12_if_false
-     movl    $98, %eax               #  24:     if     98 >= 97 goto 15
+     movl    $98, %eax               #  26:     if     98 >= 97 goto 15
-     jmp     l_f1_16                 #  25:     goto   16
+     jmp     l_f1_16                 #  27:     goto   16
-     movl    $1, %eax                #  27:     assign t17 <- 1
+     movl    $1, %eax                #  29:     assign t17 <- 1
-     jmp     l_f1_17                 #  28:     goto   17
+     jmp     l_f1_17                 #  30:     goto   17
-     movl    $0, %eax                #  30:     assign t17 <- 0
+     movl    $0, %eax                #  32:     assign t17 <- 0
-     movzbl  -33(%ebp), %eax         #  32:     assign v6 <- t17
+     movzbl  -33(%ebp), %eax         #  34:     assign v6 <- t17
-     jmp     l_f1_10                 #  33:     goto   10
+     jmp     l_f1_10                 #  35:     goto   10
-     #    -96(%ebp)   4  [ $t31      <int> %ebp-96 ]
-     #   -100(%ebp)   4  [ $t32      <int> %ebp-100 ]
-     #   -104(%ebp)   4  [ $v4       <int> %ebp-104 ]
+     #    -96(%ebp)   4  [ $v4       <int> %ebp-96 ]
-     pushl   %ebp                   
-     movl    %esp, %ebp             
-     pushl   %ebx                    # save callee saved registers
-     pushl   %esi                   
+     pushl   %ebp                   
+     movl    %esp, %ebp             
+     pushl   %ebx                    # save callee saved registers
-     pushl   %edi                   
+     pushl   %esi                   
+     pushl   %edi                   
-     subl    $92, %esp               # make room for locals
+     subl    $84, %esp               # make room for locals
-     movl    $23, %ecx              
+     movl    $21, %ecx              
-     movl    $1683, %eax             #  11:     add    t19 <- 1683, 3831
-     movl    $3831, %ebx            
-     addl    %ebx, %eax             
-     movl    %eax, -48(%ebp)        
-     movl    -48(%ebp), %eax         #  12:     add    t20 <- t19, 5753
-     movl    $5753, %ebx            
-     addl    %ebx, %eax             
-     movl    %eax, -52(%ebp)        
-     movl    -36(%ebp), %eax         #  13:     mul    t18 <- t16, t17
+     movl    -36(%ebp), %eax         #  11:     mul    t18 <- t16, t17
-     movl    -44(%ebp), %eax         #  14:     add    t21 <- t18, 21409
+     movl    -44(%ebp), %eax         #  12:     add    t19 <- t18, 21409
+     movl    %eax, -48(%ebp)        
+     movl    $4, %eax                #  13:     param  1 <- 4
+     pushl   %eax                   
+     movl    8(%ebp), %eax           #  14:     param  0 <- v2
+     pushl   %eax                   
+     call    DIM                     #  15:     call   t20 <- DIM
+     addl    $8, %esp               
+     movl    %eax, -52(%ebp)        
+     movl    -48(%ebp), %eax         #  16:     mul    t21 <- t19, t20
+     movl    -52(%ebp), %ebx        
+     imull   %ebx                   
+     movl    -56(%ebp), %eax         #  17:     add    t22 <- t21, 64698
+     movl    $64698, %ebx           
+     addl    %ebx, %eax             
+     movl    %eax, -60(%ebp)        
-     movl    $4, %eax                #  15:     param  1 <- 4
+     movl    $5, %eax                #  18:     param  1 <- 5
-     movl    8(%ebp), %eax           #  16:     param  0 <- v2
+     movl    8(%ebp), %eax           #  19:     param  0 <- v2
-     call    DIM                     #  17:     call   t22 <- DIM
+     call    DIM                     #  20:     call   t23 <- DIM
-     movl    %eax, -60(%ebp)        
+     movl    %eax, -64(%ebp)        
-     movl    -56(%ebp), %eax         #  18:     mul    t23 <- t21, t22
+     movl    -60(%ebp), %eax         #  21:     mul    t24 <- t22, t23
-     movl    -60(%ebp), %ebx        
+     movl    -64(%ebp), %ebx        
-     movl    %eax, -64(%ebp)        
-     movl    -64(%ebp), %eax         #  19:     add    t24 <- t23, 64698
-     movl    $64698, %ebx           
-     addl    %ebx, %eax             
-     movl    $5, %eax                #  20:     param  1 <- 5
-     pushl   %eax                   
-     movl    8(%ebp), %eax           #  21:     param  0 <- v2
+     movl    -68(%ebp), %eax         #  22:     add    t25 <- t24, 5240
+     movl    $5240, %ebx            
-     pushl   %eax                   
-     call    DIM                     #  22:     call   t25 <- DIM
-     addl    $8, %esp               
+     addl    %ebx, %eax             
-     movl    -68(%ebp), %eax         #  23:     mul    t26 <- t24, t25
+     movl    -72(%ebp), %eax         #  23:     mul    t26 <- t25, 1
-     movl    -72(%ebp), %ebx        
+     movl    $1, %ebx               
-     movl    -76(%ebp), %eax         #  24:     add    t27 <- t26, 5240
+     movl    8(%ebp), %eax           #  24:     param  0 <- v2
-     movl    $5240, %ebx            
+     pushl   %eax                   
+     call    DOFS                    #  25:     call   t27 <- DOFS
-     addl    %ebx, %eax             
+     addl    $4, %esp               
-     movl    -80(%ebp), %eax         #  25:     mul    t28 <- t27, 1
+     movl    -76(%ebp), %eax         #  26:     add    t28 <- t26, t27
+     movl    -80(%ebp), %ebx        
-     movl    $1, %ebx               
+     addl    %ebx, %eax             
-     imull   %ebx                   
-     movl    8(%ebp), %eax           #  26:     param  0 <- v2
+     movl    8(%ebp), %eax           #  27:     add    t29 <- v2, t28
+     movl    -84(%ebp), %ebx        
-     pushl   %eax                   
-     call    DOFS                    #  27:     call   t29 <- DOFS
-     addl    $4, %esp               
+     addl    %ebx, %eax             
-     movl    -84(%ebp), %eax         #  28:     add    t30 <- t28, t29
+     movl    $98, %eax               #  28:     assign @t29 <- 98
-     movl    -88(%ebp), %ebx        
+     movl    -88(%ebp), %edi        
-     addl    %ebx, %eax             
+     movb    %al, (%edi)            
+     jmp     l_f2_4_if_false         #  29:     goto   4_if_false
+     call    dummyINTfunc            #  30:     call   t30 <- dummyINTfunc
+     movl    $21197, %eax            #  31:     assign v4 <- 21197
-     movl    8(%ebp), %eax           #  29:     add    t31 <- v2, t30
-     movl    -92(%ebp), %ebx        
-     addl    %ebx, %eax             
-     movl    $98, %eax               #  30:     assign @t31 <- 98
-     movl    -96(%ebp), %edi        
-     movb    %al, (%edi)            
-     jmp     l_f2_4_if_false         #  31:     goto   4_if_false
-     call    dummyINTfunc            #  32:     call   t32 <- dummyINTfunc
-     movl    %eax, -100(%ebp)       
-     movl    $21197, %eax            #  33:     assign v4 <- 21197
-     movl    %eax, -104(%ebp)       
-     jmp     l_f2_7                  #  34:     goto   7
+     jmp     l_f2_7                  #  32:     goto   7
-     jmp     l_f2_10                 #  37:     goto   10
+     jmp     l_f2_10                 #  35:     goto   10
-     jmp     l_f2_11_while_cond      #  38:     goto   11_while_cond
+     jmp     l_f2_11_while_cond      #  36:     goto   11_while_cond
-     jmp     l_f2_14_while_cond      #  41:     goto   14_while_cond
+     jmp     l_f2_14_while_cond      #  39:     goto   14_while_cond
-     jmp     l_f2_2                  #  42:     goto   2
+     jmp     l_f2_2                  #  40:     goto   2
-     addl    $92, %esp               # remove locals
+     addl    $84, %esp               # remove locals
