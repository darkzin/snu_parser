-     #-932394300(%ebp)932394264  [ $v5       <array 46 of <array 30 of <array 69 of <array 36 of <array 68 of <int>>>>>> %ebp-932394300 ]
+     #   -932394300(%ebp)  932394264  [ $v5       <array 46 of <array 30 of <array 69 of <array 36 of <array 68 of <int>>>>>> %ebp-932394300 ]
-     #-943828824(%ebp)11434524  [ $v6       <array 77 of <array 25 of <array 18 of <array 22 of <array 15 of <bool>>>>>> %ebp-943828824 ]
+     #   -943828824(%ebp)  11434524  [ $v6       <array 77 of <array 25 of <array 18 of <array 22 of <array 15 of <bool>>>>>> %ebp-943828824 ]
+     jmp     l_f2_2_if_false         #   0:     goto   2_if_false
-     movl    $54757, %eax            #   0:     assign v4 <- 54757
+     movl    $54757, %eax            #   1:     assign v4 <- 54757
-     jmp     l_f2_0                  #   1:     goto   0
+     jmp     l_f2_0                  #   2:     goto   0
+ l_f2_2_if_false:
-     movl    $77833, %eax            #   4:     if     77833 # 89997 goto 11_while_body
+     movl    $77833, %eax            #   6:     if     77833 # 89997 goto 11_while_body
-     jmp     l_f2_9                  #   5:     goto   9
+     jmp     l_f2_9                  #   7:     goto   9
-     jmp     l_f2_10_while_cond      #   7:     goto   10_while_cond
+     jmp     l_f2_10_while_cond      #   9:     goto   10_while_cond
-     movl    $100, %eax              #   9:     if     100 >= 99 goto 14_if_true
+     movl    $100, %eax              #  11:     if     100 >= 99 goto 14_if_true
-     jmp     l_f2_15_if_false        #  10:     goto   15_if_false
+     jmp     l_f2_15_if_false        #  12:     goto   15_if_false
-     jmp     l_f2_13                 #  12:     goto   13
+     jmp     l_f2_13                 #  14:     goto   13
-     movl    $97, %eax               #  15:     if     97 <= 97 goto 18
+     movl    $97, %eax               #  17:     if     97 <= 97 goto 18
-     jmp     l_f2_19                 #  16:     goto   19
+     jmp     l_f2_19                 #  18:     goto   19
-     movl    $1, %eax                #  18:     assign t2 <- 1
+     movl    $1, %eax                #  20:     assign t2 <- 1
-     jmp     l_f2_20                 #  19:     goto   20
+     jmp     l_f2_20                 #  21:     goto   20
-     movl    $0, %eax                #  21:     assign t2 <- 0
+     movl    $0, %eax                #  23:     assign t2 <- 0
-     movzbl  -13(%ebp), %eax         #  23:     param  3 <- t2
+     movzbl  -13(%ebp), %eax         #  25:     param  3 <- t2
-     leal    -943828824(%ebp), %eax  #  24:     &()    t3 <- v6
+     leal    -943828824(%ebp), %eax  #  26:     &()    t3 <- v6
-     movl    -20(%ebp), %eax         #  25:     param  2 <- t3
+     movl    -20(%ebp), %eax         #  27:     param  2 <- t3
-     call    dummyCHARfunc           #  26:     call   t4 <- dummyCHARfunc
+     call    dummyCHARfunc           #  28:     call   t4 <- dummyCHARfunc
-     movl    $99, %eax               #  27:     if     99 >= t4 goto 22
+     movl    $99, %eax               #  29:     if     99 >= t4 goto 22
-     jmp     l_f2_23                 #  28:     goto   23
+     jmp     l_f2_23                 #  30:     goto   23
-     movl    $1, %eax                #  30:     assign t5 <- 1
+     movl    $1, %eax                #  32:     assign t5 <- 1
-     jmp     l_f2_24                 #  31:     goto   24
+     jmp     l_f2_24                 #  33:     goto   24
-     movl    $0, %eax                #  33:     assign t5 <- 0
+     movl    $0, %eax                #  35:     assign t5 <- 0
-     movzbl  -22(%ebp), %eax         #  35:     param  1 <- t5
+     movzbl  -22(%ebp), %eax         #  37:     param  1 <- t5
-     leal    -932394300(%ebp), %eax  #  36:     &()    t6 <- v5
+     leal    -932394300(%ebp), %eax  #  38:     &()    t6 <- v5
-     movl    -28(%ebp), %eax         #  37:     param  0 <- t6
+     movl    -28(%ebp), %eax         #  39:     param  0 <- t6
-     call    f1                      #  38:     call   t7 <- f1
+     call    f1                      #  40:     call   t7 <- f1
-     addl    $10, %esp              
+     addl    $16, %esp              
-     jmp     l_f2_6                  #  39:     goto   6
+     jmp     l_f2_6                  #  41:     goto   6
-     jmp     l_f2_28_if_false        #  41:     goto   28_if_false
+     jmp     l_f2_28_if_false        #  43:     goto   28_if_false
-     movl    $0, %eax                #  43:     if     0 = 1 goto 31_while_body
+     movl    $0, %eax                #  45:     if     0 = 1 goto 31_while_body
-     jmp     l_f2_29                 #  44:     goto   29
+     jmp     l_f2_29                 #  46:     goto   29
-     jmp     l_f2_30_while_cond      #  46:     goto   30_while_cond
+     jmp     l_f2_30_while_cond      #  48:     goto   30_while_cond
-     movl    $100, %eax              #  48:     if     100 > 97 goto 34_if_true
+     movl    $100, %eax              #  50:     if     100 > 97 goto 34_if_true
-     jmp     l_f2_35_if_false        #  49:     goto   35_if_false
+     jmp     l_f2_35_if_false        #  51:     goto   35_if_false
-     jmp     l_f2_33                 #  51:     goto   33
+     jmp     l_f2_33                 #  53:     goto   33
-     movl    $97, %eax               #  54:     if     97 <= 97 goto 38_if_true
+     movl    $97, %eax               #  56:     if     97 <= 97 goto 38_if_true
-     jmp     l_f2_39_if_false        #  55:     goto   39_if_false
+     jmp     l_f2_39_if_false        #  57:     goto   39_if_false
-     jmp     l_f2_37                 #  57:     goto   37
+     jmp     l_f2_37                 #  59:     goto   37
-     jmp     l_f2_26                 #  60:     goto   26
+     jmp     l_f2_26                 #  62:     goto   26
+     jmp     l_test_12               #  11:     goto   12
+     jmp     l_test_12               #  12:     goto   12
-     movl    $1, %eax                #  11:     assign t1 <- 1
+     movl    $1, %eax                #  13:     assign t1 <- 1
-     jmp     l_test_13               #  12:     goto   13
+     jmp     l_test_13               #  14:     goto   13
+ l_test_12:
-     movl    $0, %eax                #  13:     assign t1 <- 0
+     movl    $0, %eax                #  16:     assign t1 <- 0
-     movzbl  -14(%ebp), %eax         #  15:     assign v0 <- t1
+     movzbl  -14(%ebp), %eax         #  18:     assign v0 <- t1
