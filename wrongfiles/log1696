-     #    -80(%ebp)   4  [ $t26      <int> %ebp-80 ]
-     #    -81(%ebp)   1  [ $t27      <bool> %ebp-81 ]
+     #    -77(%ebp)   1  [ $t26      <bool> %ebp-77 ]
-     #    -88(%ebp)   4  [ $t9       <int> %ebp-88 ]
+     #    -84(%ebp)   4  [ $t9       <int> %ebp-84 ]
-     #    -89(%ebp)   1  [ $v4       <char> %ebp-89 ]
+     #    -85(%ebp)   1  [ $v4       <char> %ebp-85 ]
-     pushl   %ebp                   
-     movl    %esp, %ebp             
-     pushl   %ebx                    # save callee saved registers
-     pushl   %esi                   
+     pushl   %ebp                   
+     movl    %esp, %ebp             
+     pushl   %ebx                    # save callee saved registers
-     pushl   %edi                   
+     pushl   %esi                   
+     pushl   %edi                   
-     subl    $80, %esp               # make room for locals
+     subl    $76, %esp               # make room for locals
-     movl    $20, %ecx              
+     movl    $19, %ecx              
-     movl    %eax, -88(%ebp)        
+     movl    %eax, -84(%ebp)        
-     movl    $33954, %eax            #   4:     add    t12 <- 33954, 76900
-     movl    $76900, %ebx           
-     addl    %ebx, %eax             
-     movl    %eax, -24(%ebp)        
-     movl    -88(%ebp), %eax         #   5:     mul    t11 <- t9, t10
+     movl    -84(%ebp), %eax         #   4:     mul    t11 <- t9, t10
-     movl    -20(%ebp), %eax         #   6:     add    t13 <- t11, 82081
+     movl    -20(%ebp), %eax         #   5:     add    t12 <- t11, 82081
+     movl    %eax, -24(%ebp)        
+     movl    $3, %eax                #   6:     param  1 <- 3
+     pushl   %eax                   
+     movl    16(%ebp), %eax          #   7:     param  0 <- v3
+     pushl   %eax                   
+     call    DIM                     #   8:     call   t13 <- DIM
+     addl    $8, %esp               
-     movl    $3, %eax                #   7:     param  1 <- 3
+     movl    -24(%ebp), %eax         #   9:     mul    t14 <- t12, t13
+     movl    -28(%ebp), %ebx        
-     pushl   %eax                   
+     imull   %ebx                   
-     movl    16(%ebp), %eax          #   8:     param  0 <- v3
-     pushl   %eax                   
-     call    DIM                     #   9:     call   t14 <- DIM
-     addl    $8, %esp               
-     movl    -28(%ebp), %eax         #  10:     mul    t15 <- t13, t14
-     movl    -32(%ebp), %ebx        
-     imull   %ebx                   
-     movl    %eax, -36(%ebp)        
-     movl    -36(%ebp), %eax         #  11:     add    t16 <- t15, 39830
+     movl    -32(%ebp), %eax         #  10:     add    t15 <- t14, 39830
+     movl    %eax, -36(%ebp)        
+     movl    $4, %eax                #  11:     param  1 <- 4
+     pushl   %eax                   
+     movl    16(%ebp), %eax          #  12:     param  0 <- v3
+     pushl   %eax                   
+     call    DIM                     #  13:     call   t16 <- DIM
+     addl    $8, %esp               
-     movl    $4, %eax                #  12:     param  1 <- 4
+     movl    -36(%ebp), %eax         #  14:     mul    t17 <- t15, t16
+     movl    -40(%ebp), %ebx        
-     pushl   %eax                   
+     imull   %ebx                   
-     movl    16(%ebp), %eax          #  13:     param  0 <- v3
-     pushl   %eax                   
-     call    DIM                     #  14:     call   t17 <- DIM
-     addl    $8, %esp               
-     movl    -40(%ebp), %eax         #  15:     mul    t18 <- t16, t17
-     movl    -44(%ebp), %ebx        
-     imull   %ebx                   
-     movl    %eax, -48(%ebp)        
-     movl    -48(%ebp), %eax         #  16:     add    t19 <- t18, 21815
+     movl    -44(%ebp), %eax         #  15:     add    t18 <- t17, 21815
+     movl    %eax, -48(%ebp)        
+     movl    $5, %eax                #  16:     param  1 <- 5
+     pushl   %eax                   
+     movl    16(%ebp), %eax          #  17:     param  0 <- v3
+     pushl   %eax                   
+     call    DIM                     #  18:     call   t19 <- DIM
+     addl    $8, %esp               
-     movl    $5, %eax                #  17:     param  1 <- 5
+     movl    -48(%ebp), %eax         #  19:     mul    t20 <- t18, t19
+     movl    -52(%ebp), %ebx        
-     pushl   %eax                   
+     imull   %ebx                   
-     movl    16(%ebp), %eax          #  18:     param  0 <- v3
-     pushl   %eax                   
-     call    DIM                     #  19:     call   t20 <- DIM
-     addl    $8, %esp               
-     movl    -52(%ebp), %eax         #  20:     mul    t21 <- t19, t20
-     movl    -56(%ebp), %ebx        
-     imull   %ebx                   
-     movl    %eax, -60(%ebp)        
-     movl    -60(%ebp), %eax         #  21:     add    t22 <- t21, 72308
+     movl    -56(%ebp), %eax         #  20:     add    t21 <- t20, 72308
-     movl    %eax, -64(%ebp)        
+     movl    %eax, -60(%ebp)        
-     movl    -64(%ebp), %eax         #  22:     mul    t23 <- t22, 1
+     movl    -60(%ebp), %eax         #  21:     mul    t22 <- t21, 1
+     movl    %eax, -64(%ebp)        
+     movl    16(%ebp), %eax          #  22:     param  0 <- v3
+     pushl   %eax                   
+     call    DOFS                    #  23:     call   t23 <- DOFS
+     addl    $4, %esp               
-     movl    16(%ebp), %eax          #  23:     param  0 <- v3
+     movl    -64(%ebp), %eax         #  24:     add    t24 <- t22, t23
+     movl    -68(%ebp), %ebx        
-     pushl   %eax                   
-     call    DOFS                    #  24:     call   t24 <- DOFS
-     addl    $4, %esp               
+     addl    %ebx, %eax             
-     movl    -68(%ebp), %eax         #  25:     add    t25 <- t23, t24
+     movl    16(%ebp), %eax          #  25:     add    t25 <- v3, t24
-     movl    16(%ebp), %eax          #  26:     add    t26 <- v3, t25
-     movl    -76(%ebp), %ebx        
-     addl    %ebx, %eax             
-     movl    %eax, -80(%ebp)        
-     movl    $100, %eax              #  27:     assign @t26 <- 100
+     movl    $100, %eax              #  26:     assign @t25 <- 100
-     movl    -80(%ebp), %edi        
+     movl    -76(%ebp), %edi        
-     call    dummyBOOLfunc           #  28:     call   t27 <- dummyBOOLfunc
+     call    dummyBOOLfunc           #  27:     call   t26 <- dummyBOOLfunc
-     movb    %al, -81(%ebp)         
+     movb    %al, -77(%ebp)         
-     movzbl  -81(%ebp), %eax         #  29:     if     t27 = 1 goto 2_if_true
+     movzbl  -77(%ebp), %eax         #  28:     if     t26 = 1 goto 2_if_true
-     jmp     l_f1_2_if_true          #  30:     goto   2_if_true
+     jmp     l_f1_2_if_true          #  29:     goto   2_if_true
-     jmp     l_f1_1                  #  32:     goto   1
+     jmp     l_f1_1                  #  31:     goto   1
+     jmp     l_f1_12                 #  33:     goto   12
-     jmp     l_f1_8_if_true          #  34:     goto   8_if_true
+     jmp     l_f1_12                 #  34:     goto   12
+ l_f1_12:
-     jmp     l_f1_8_if_true          #  36:     goto   8_if_true
+     jmp     l_f1_8_if_true          #  37:     goto   8_if_true
+     jmp     l_f1_8_if_true          #  38:     goto   8_if_true
-     jmp     l_f1_7                  #  38:     goto   7
+     jmp     l_f1_7                  #  40:     goto   7
-     addl    $80, %esp               # remove locals
+     addl    $76, %esp               # remove locals
+     jmp     l_f2_6                  #   1:     goto   6
+     jmp     l_f2_6                  #   2:     goto   6
+     jmp     l_f2_6                  #   3:     goto   6
+     jmp     l_f2_6                  #   4:     goto   6
+     jmp     l_f2_6                  #   5:     goto   6
+     jmp     l_f2_6                  #   6:     goto   6
+ l_f2_6:
-     jmp     l_f2_2_while_body       #   1:     goto   2_while_body
+     jmp     l_f2_2_while_body       #   8:     goto   2_while_body
+     jmp     l_f2_0                  #   9:     goto   0
-     jmp     l_f2_1_while_cond       #   3:     goto   1_while_cond
+     jmp     l_f2_1_while_cond       #  11:     goto   1_while_cond
+ l_f2_0:
-     call    dummyCHARfunc           #   4:     call   t9 <- dummyCHARfunc
+     call    dummyCHARfunc           #  13:     call   t9 <- dummyCHARfunc
-     movl    $48654, %eax            #   6:     if     48654 = 23368 goto 17_while_body
+     movl    $48654, %eax            #  15:     if     48654 = 23368 goto 17_while_body
-     jmp     l_f2_15                 #   7:     goto   15
+     jmp     l_f2_15                 #  16:     goto   15
-     call    dummyINTfunc            #   9:     call   t10 <- dummyINTfunc
+     call    dummyINTfunc            #  18:     call   t10 <- dummyINTfunc
-     movl    $99, %eax               #  10:     if     99 >= 99 goto 24
+     movl    $99, %eax               #  19:     if     99 >= 99 goto 25
-     jge     l_f2_24                
+     jge     l_f2_25                
-     jmp     l_f2_25                 #  11:     goto   25
+     jmp     l_f2_26                 #  20:     goto   26
- l_f2_24:
+ l_f2_25:
-     movl    $1, %eax                #  13:     assign t11 <- 1
+     movl    $1, %eax                #  22:     assign t11 <- 1
-     jmp     l_f2_26                 #  14:     goto   26
+     jmp     l_f2_27                 #  23:     goto   27
- l_f2_25:
+ l_f2_26:
-     movl    $0, %eax                #  16:     assign t11 <- 0
+     movl    $0, %eax                #  25:     assign t11 <- 0
- l_f2_26:
+ l_f2_27:
-     movzbl  -17(%ebp), %eax         #  18:     param  3 <- t11
+     movzbl  -17(%ebp), %eax         #  27:     param  3 <- t11
-     movl    $0, %eax                #  19:     param  2 <- 0
+     movl    $0, %eax                #  28:     param  2 <- 0
-     movl    $97, %eax               #  20:     param  1 <- 97
+     movl    $97, %eax               #  29:     param  1 <- 97
-     movl    $31768, %eax            #  21:     div    t12 <- 31768, 38690
+     movl    $31768, %eax            #  30:     div    t12 <- 31768, 38690
-     movl    -24(%ebp), %eax         #  22:     div    t13 <- t12, 37911
+     movl    -24(%ebp), %eax         #  31:     div    t13 <- t12, 37911
-     movl    $23218, %eax            #  23:     if     23218 # t13 goto 28
+     movl    $23218, %eax            #  32:     if     23218 # t13 goto 29
-     jne     l_f2_28                
+     jne     l_f2_29                
-     jmp     l_f2_29                 #  24:     goto   29
+     jmp     l_f2_30                 #  33:     goto   30
- l_f2_28:
+ l_f2_29:
-     movl    $1, %eax                #  26:     assign t14 <- 1
+     movl    $1, %eax                #  35:     assign t14 <- 1
-     jmp     l_f2_30                 #  27:     goto   30
+     jmp     l_f2_31                 #  36:     goto   31
- l_f2_29:
+ l_f2_30:
-     movl    $0, %eax                #  29:     assign t14 <- 0
+     movl    $0, %eax                #  38:     assign t14 <- 0
- l_f2_30:
+ l_f2_31:
-     movzbl  -29(%ebp), %eax         #  31:     param  0 <- t14
+     movzbl  -29(%ebp), %eax         #  40:     param  0 <- t14
-     call    f0                      #  32:     call   t15 <- f0
+     call    f0                      #  41:     call   t15 <- f0
-     addl    $4, %esp               
+     addl    $16, %esp              
-     movzbl  -30(%ebp), %eax         #  33:     if     t15 # 98 goto 21
+     movzbl  -30(%ebp), %eax         #  42:     if     t15 # 98 goto 21
-     jmp     l_f2_22                 #  34:     goto   22
+     jmp     l_f2_22                 #  43:     goto   22
-     movl    $1, %eax                #  36:     assign t16 <- 1
+     movl    $1, %eax                #  45:     assign t16 <- 1
-     jmp     l_f2_23                 #  37:     goto   23
+     jmp     l_f2_23                 #  46:     goto   23
-     movl    $0, %eax                #  39:     assign t16 <- 0
+     movl    $0, %eax                #  48:     assign t16 <- 0
-     movzbl  -31(%ebp), %eax         #  41:     assign v1 <- t16
+     movzbl  -31(%ebp), %eax         #  50:     assign v1 <- t16
-     jmp     l_f2_16_while_cond      #  42:     goto   16_while_cond
+     jmp     l_f2_16_while_cond      #  51:     goto   16_while_cond
-     addl    $4, %esp               
+     addl    $16, %esp              
