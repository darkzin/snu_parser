-     #    -88(%ebp)   4  [ $t45      <int> %ebp-88 ]
+     #    -85(%ebp)   1  [ $t45      <char> %ebp-85 ]
-     #    -93(%ebp)   1  [ $t47      <char> %ebp-93 ]
+     #    -93(%ebp)   1  [ $t47      <bool> %ebp-93 ]
-     #   -100(%ebp)   4  [ $t48      <int> %ebp-100 ]
-     #   -101(%ebp)   1  [ $t49      <bool> %ebp-101 ]
-     #   -102(%ebp)   1  [ $v2       <char> %ebp-102 ]
+     #    -94(%ebp)   1  [ $v2       <char> %ebp-94 ]
-     subl    $92, %esp               # make room for locals
+     subl    $84, %esp               # make room for locals
-     movl    $23, %ecx              
+     movl    $21, %ecx              
-     movl    $48673, %eax            #   5:     sub    t31 <- 48673, 60160
+     movl    -20(%ebp), %eax         #   5:     mul    t30 <- t28, t29
+     movl    -24(%ebp), %ebx        
+     imull   %ebx                   
+     movl    %eax, -28(%ebp)        
+     movl    -28(%ebp), %eax         #   6:     add    t31 <- t30, 39156
-     movl    $60160, %ebx           
+     movl    $39156, %ebx           
-     subl    %ebx, %eax             
+     addl    %ebx, %eax             
+     movl    $3, %eax                #   7:     param  1 <- 3
+     pushl   %eax                   
-     movl    -32(%ebp), %eax         #   6:     add    t32 <- t31, 82193
+     movl    8(%ebp), %eax           #   8:     param  0 <- v0
-     movl    $82193, %ebx           
+     pushl   %eax                   
+     call    DIM                     #   9:     call   t32 <- DIM
-     addl    %ebx, %eax             
+     addl    $8, %esp               
-     movl    -20(%ebp), %eax         #   7:     mul    t30 <- t28, t29
+     movl    -32(%ebp), %eax         #  10:     mul    t33 <- t31, t32
-     movl    -24(%ebp), %ebx        
+     movl    -36(%ebp), %ebx        
-     movl    %eax, -28(%ebp)        
-     movl    -28(%ebp), %eax         #   8:     add    t33 <- t30, 39156
-     movl    $39156, %ebx           
-     addl    %ebx, %eax             
-     movl    $3, %eax                #   9:     param  1 <- 3
-     pushl   %eax                   
-     movl    8(%ebp), %eax           #  10:     param  0 <- v0
+     movl    -40(%ebp), %eax         #  11:     add    t34 <- t33, 37313
+     movl    $37313, %ebx           
-     pushl   %eax                   
-     call    DIM                     #  11:     call   t34 <- DIM
-     addl    $8, %esp               
+     addl    %ebx, %eax             
+     movl    $4, %eax                #  12:     param  1 <- 4
-     movl    -40(%ebp), %eax         #  12:     mul    t35 <- t33, t34
-     movl    -44(%ebp), %ebx        
-     imull   %ebx                   
+     pushl   %eax                   
+     movl    8(%ebp), %eax           #  13:     param  0 <- v0
+     pushl   %eax                   
+     call    DIM                     #  14:     call   t35 <- DIM
+     addl    $8, %esp               
-     movl    -48(%ebp), %eax         #  13:     add    t36 <- t35, 37313
+     movl    -44(%ebp), %eax         #  15:     mul    t36 <- t34, t35
-     movl    $37313, %ebx           
+     movl    -48(%ebp), %ebx        
-     addl    %ebx, %eax             
+     imull   %ebx                   
-     movl    $4, %eax                #  14:     param  1 <- 4
-     pushl   %eax                   
-     movl    8(%ebp), %eax           #  15:     param  0 <- v0
+     movl    -52(%ebp), %eax         #  16:     add    t37 <- t36, 56407
+     movl    $56407, %ebx           
-     pushl   %eax                   
-     call    DIM                     #  16:     call   t37 <- DIM
-     addl    $8, %esp               
+     addl    %ebx, %eax             
+     movl    $5, %eax                #  17:     param  1 <- 5
-     movl    -52(%ebp), %eax         #  17:     mul    t38 <- t36, t37
-     movl    -56(%ebp), %ebx        
-     imull   %ebx                   
+     pushl   %eax                   
+     movl    8(%ebp), %eax           #  18:     param  0 <- v0
+     pushl   %eax                   
+     call    DIM                     #  19:     call   t38 <- DIM
+     addl    $8, %esp               
-     movl    -60(%ebp), %eax         #  18:     add    t39 <- t38, 56407
+     movl    -56(%ebp), %eax         #  20:     mul    t39 <- t37, t38
-     movl    $56407, %ebx           
+     movl    -60(%ebp), %ebx        
-     addl    %ebx, %eax             
+     imull   %ebx                   
-     movl    $5, %eax                #  19:     param  1 <- 5
-     pushl   %eax                   
-     movl    8(%ebp), %eax           #  20:     param  0 <- v0
+     movl    -64(%ebp), %eax         #  21:     add    t40 <- t39, 94219
+     movl    $94219, %ebx           
-     pushl   %eax                   
-     call    DIM                     #  21:     call   t40 <- DIM
-     addl    $8, %esp               
+     addl    %ebx, %eax             
-     movl    -64(%ebp), %eax         #  22:     mul    t41 <- t39, t40
+     movl    -68(%ebp), %eax         #  22:     mul    t41 <- t40, 1
-     movl    -68(%ebp), %ebx        
+     movl    $1, %ebx               
-     movl    -72(%ebp), %eax         #  23:     add    t42 <- t41, 94219
+     movl    8(%ebp), %eax           #  23:     param  0 <- v0
-     movl    $94219, %ebx           
+     pushl   %eax                   
+     call    DOFS                    #  24:     call   t42 <- DOFS
-     addl    %ebx, %eax             
+     addl    $4, %esp               
-     movl    -76(%ebp), %eax         #  24:     mul    t43 <- t42, 1
+     movl    -72(%ebp), %eax         #  25:     add    t43 <- t41, t42
+     movl    -76(%ebp), %ebx        
-     movl    $1, %ebx               
+     addl    %ebx, %eax             
-     imull   %ebx                   
-     movl    8(%ebp), %eax           #  25:     param  0 <- v0
+     movl    8(%ebp), %eax           #  26:     add    t44 <- v0, t43
+     movl    -80(%ebp), %ebx        
-     pushl   %eax                   
-     call    DOFS                    #  26:     call   t44 <- DOFS
-     addl    $4, %esp               
+     addl    %ebx, %eax             
-     movl    -80(%ebp), %eax         #  27:     add    t45 <- t43, t44
-     movl    -84(%ebp), %ebx        
-     addl    %ebx, %eax             
-     movl    %eax, -88(%ebp)        
-     movl    8(%ebp), %eax           #  28:     add    t46 <- v0, t45
-     movl    -88(%ebp), %ebx        
-     addl    %ebx, %eax             
-     movl    %eax, -92(%ebp)        
-     movl    $98, %eax               #  29:     assign @t46 <- 98
+     movl    $98, %eax               #  27:     assign @t44 <- 98
-     movl    -92(%ebp), %edi        
+     movl    -84(%ebp), %edi        
-     call    dummyCHARfunc           #  30:     call   t47 <- dummyCHARfunc
+     call    dummyCHARfunc           #  28:     call   t45 <- dummyCHARfunc
-     movb    %al, -93(%ebp)         
+     movb    %al, -85(%ebp)         
-     movl    $68477, %eax            #  31:     div    t48 <- 68477, 5424
+     movl    $68477, %eax            #  29:     div    t46 <- 68477, 5424
-     movl    %eax, -100(%ebp)       
+     movl    %eax, -92(%ebp)        
-     movl    $79939, %eax            #  32:     if     79939 <= t48 goto 3
+     movl    $79939, %eax            #  30:     if     79939 <= t46 goto 3
-     movl    -100(%ebp), %ebx       
+     movl    -92(%ebp), %ebx        
-     jmp     l_f0_4                  #  33:     goto   4
+     jmp     l_f0_4                  #  31:     goto   4
-     movl    $1, %eax                #  35:     assign t49 <- 1
+     movl    $1, %eax                #  33:     assign t47 <- 1
-     movb    %al, -101(%ebp)        
+     movb    %al, -93(%ebp)         
-     jmp     l_f0_5                  #  36:     goto   5
+     jmp     l_f0_5                  #  34:     goto   5
-     movl    $0, %eax                #  38:     assign t49 <- 0
+     movl    $0, %eax                #  36:     assign t47 <- 0
-     movb    %al, -101(%ebp)        
+     movb    %al, -93(%ebp)         
-     movzbl  -101(%ebp), %eax        #  40:     assign v1 <- t49
+     movzbl  -93(%ebp), %eax         #  38:     assign v1 <- t47
-     addl    $92, %esp               # remove locals
+     addl    $84, %esp               # remove locals
+     jmp     l_f1_2_if_false         #   2:     goto   2_if_false
-     movl    $12159, %eax            #   4:     if     12159 > 39906 goto 9_while_body
+     movl    $12159, %eax            #   5:     if     12159 > 39906 goto 9_while_body
-     jmp     l_f1_7                  #   5:     goto   7
+     jmp     l_f1_7                  #   6:     goto   7
-     jmp     l_f1_8_while_cond       #   7:     goto   8_while_cond
+     jmp     l_f1_8_while_cond       #   8:     goto   8_while_cond
-     call    dummyCHARfunc           #   9:     call   t27 <- dummyCHARfunc
+     call    dummyCHARfunc           #  10:     call   t27 <- dummyCHARfunc
-     jmp     l_f1_0                  #  10:     goto   0
+     jmp     l_f1_0                  #  11:     goto   0
+ l_f1_2_if_false:
-     movl    $10938, %eax            #  13:     if     10938 >= 98609 goto 14_while_body
+     movl    $10938, %eax            #  15:     if     10938 >= 98609 goto 14_while_body
-     jmp     l_f1_12                 #  14:     goto   12
+     jmp     l_f1_12                 #  16:     goto   12
-     movl    $97, %eax               #  16:     if     97 = 98 goto 17_if_true
+     movl    $97, %eax               #  18:     if     97 = 98 goto 17_if_true
-     jmp     l_f1_18_if_false        #  17:     goto   18_if_false
+     jmp     l_f1_18_if_false        #  19:     goto   18_if_false
-     jmp     l_f1_20                 #  20:     goto   20
+     jmp     l_f1_20                 #  22:     goto   20
-     jmp     l_f1_21_while_cond      #  21:     goto   21_while_cond
+     jmp     l_f1_21_while_cond      #  23:     goto   21_while_cond
-     jmp     l_f1_16                 #  23:     goto   16
+     jmp     l_f1_16                 #  25:     goto   16
-     jmp     l_f1_13_while_cond      #  26:     goto   13_while_cond
+     jmp     l_f1_13_while_cond      #  28:     goto   13_while_cond
+     jmp     l_f1_25                 #  30:     goto   25
+     jmp     l_f1_25                 #  31:     goto   25
-     movl    $1, %eax                #  28:     assign t28 <- 1
+     movl    $1, %eax                #  32:     assign t28 <- 1
-     jmp     l_f1_26                 #  29:     goto   26
+     jmp     l_f1_26                 #  33:     goto   26
+ l_f1_25:
-     movl    $0, %eax                #  30:     assign t28 <- 0
+     movl    $0, %eax                #  35:     assign t28 <- 0
-     movzbl  -14(%ebp), %eax         #  32:     return t28
+     movzbl  -14(%ebp), %eax         #  37:     return t28
-     addl    $5, %esp               
+     addl    $8, %esp               
