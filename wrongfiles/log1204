+     jmp     l_f0_0                  #   1:     goto   0
-     jmp     l_f0_1_while_cond       #   1:     goto   1_while_cond
+     jmp     l_f0_1_while_cond       #   2:     goto   1_while_cond
+ l_f0_0:
-     call    dummyCHARfunc           #   3:     call   t3 <- dummyCHARfunc
+     call    dummyCHARfunc           #   5:     call   t3 <- dummyCHARfunc
-     movzbl  -13(%ebp), %eax         #   4:     if     t3 = 98 goto 7_while_body
+     movzbl  -13(%ebp), %eax         #   6:     if     t3 = 98 goto 7_while_body
-     jmp     l_f0_5                  #   5:     goto   5
+     jmp     l_f0_5                  #   7:     goto   5
-     jmp     l_f0_6_while_cond       #   7:     goto   6_while_cond
+     jmp     l_f0_6_while_cond       #   9:     goto   6_while_cond
-     jmp     l_f0_11_if_false        #   9:     goto   11_if_false
+     jmp     l_f0_11_if_false        #  11:     goto   11_if_false
-     movl    $100, %eax              #  10:     assign v0 <- 100
+     movl    $100, %eax              #  12:     assign v0 <- 100
-     movl    $99, %eax               #  11:     assign v0 <- 99
+     movl    $99, %eax               #  13:     assign v0 <- 99
-     call    dummyINTfunc            #  12:     call   t4 <- dummyINTfunc
+     call    dummyINTfunc            #  14:     call   t4 <- dummyINTfunc
-     call    dummyINTfunc            #  13:     call   t5 <- dummyINTfunc
+     call    dummyINTfunc            #  15:     call   t5 <- dummyINTfunc
-     movl    $97, %eax               #  14:     if     97 # 97 goto 17_if_true
+     movl    $97, %eax               #  16:     if     97 # 97 goto 17_if_true
-     jmp     l_f0_18_if_false        #  15:     goto   18_if_false
+     jmp     l_f0_18_if_false        #  17:     goto   18_if_false
-     jmp     l_f0_16                 #  17:     goto   16
+     jmp     l_f0_16                 #  19:     goto   16
-     jmp     l_f0_20                 #  21:     goto   20
+     jmp     l_f0_20                 #  23:     goto   20
-     jmp     l_f0_21_while_cond      #  22:     goto   21_while_cond
+     jmp     l_f0_21_while_cond      #  24:     goto   21_while_cond
-     jmp     l_f0_9                  #  24:     goto   9
+     jmp     l_f0_9                  #  26:     goto   9
-     addl    $1, %esp               
+     addl    $4, %esp               
-     #    -64(%ebp)   4  [ $t22      <int> %ebp-64 ]
-     #    -65(%ebp)   1  [ $t23      <char> %ebp-65 ]
+     #    -61(%ebp)   1  [ $t22      <char> %ebp-61 ]
+     #    -68(%ebp)   4  [ $t3       <int> %ebp-68 ]
-     #    -72(%ebp)   4  [ $t3       <int> %ebp-72 ]
+     #    -72(%ebp)   4  [ $t4       <int> %ebp-72 ]
-     #    -76(%ebp)   4  [ $t4       <int> %ebp-76 ]
+     #    -76(%ebp)   4  [ $t5       <int> %ebp-76 ]
-     #    -80(%ebp)   4  [ $t5       <int> %ebp-80 ]
+     #    -80(%ebp)   4  [ $t6       <int> %ebp-80 ]
-     #    -84(%ebp)   4  [ $t6       <int> %ebp-84 ]
+     #    -84(%ebp)   4  [ $t7       <int> %ebp-84 ]
-     #    -88(%ebp)   4  [ $t7       <int> %ebp-88 ]
+     #    -88(%ebp)   4  [ $t8       <int> %ebp-88 ]
-     #    -92(%ebp)   4  [ $t8       <int> %ebp-92 ]
+     #    -92(%ebp)   4  [ $t9       <int> %ebp-92 ]
-     #    -96(%ebp)   4  [ $t9       <int> %ebp-96 ]
-     #   -100(%ebp)   4  [ $v4       <int> %ebp-100 ]
+     #    -96(%ebp)   4  [ $v4       <int> %ebp-96 ]
-     pushl   %ebp                   
-     movl    %esp, %ebp             
-     pushl   %ebx                    # save callee saved registers
-     pushl   %esi                   
+     pushl   %ebp                   
+     movl    %esp, %ebp             
+     pushl   %ebx                    # save callee saved registers
-     pushl   %edi                   
+     pushl   %esi                   
+     pushl   %edi                   
-     subl    $88, %esp               # make room for locals
+     subl    $84, %esp               # make room for locals
-     movl    $22, %ecx              
+     movl    $21, %ecx              
+     movl    %eax, -68(%ebp)        
+     movl    -68(%ebp), %eax         #   6:     mul    t4 <- t3, 53682
+     movl    $53682, %ebx           
+     imull   %ebx                   
-     movl    -72(%ebp), %eax         #   6:     mul    t4 <- t3, 53682
-     movl    $53682, %ebx           
-     imull   %ebx                   
-     movl    %eax, -76(%ebp)        
-     movl    %eax, -80(%ebp)        
+     movl    %eax, -76(%ebp)        
+     movl    %eax, -80(%ebp)        
+     movl    -76(%ebp), %eax         #  11:     mul    t7 <- t5, t6
+     movl    -80(%ebp), %ebx        
+     imull   %ebx                   
-     movl    $81159, %eax            #  11:     add    t8 <- 81159, 22802
+     movl    -84(%ebp), %eax         #  12:     add    t8 <- t7, 14621
-     movl    $22802, %ebx           
+     movl    $14621, %ebx           
+     addl    %ebx, %eax             
+     movl    %eax, -88(%ebp)        
+     movl    $3, %eax                #  13:     param  1 <- 3
+     pushl   %eax                   
+     movl    8(%ebp), %eax           #  14:     param  0 <- v0
+     pushl   %eax                   
+     call    DIM                     #  15:     call   t9 <- DIM
-     addl    %ebx, %eax             
+     addl    $8, %esp               
-     movl    -80(%ebp), %eax         #  12:     mul    t7 <- t5, t6
+     movl    -88(%ebp), %eax         #  16:     mul    t10 <- t8, t9
-     movl    -84(%ebp), %ebx        
+     movl    -92(%ebp), %ebx        
-     movl    %eax, -88(%ebp)        
-     movl    -88(%ebp), %eax         #  13:     add    t9 <- t7, 14621
-     movl    $14621, %ebx           
-     addl    %ebx, %eax             
-     movl    %eax, -96(%ebp)        
+     movl    %eax, -16(%ebp)        
+     movl    -16(%ebp), %eax         #  17:     add    t11 <- t10, 78879
+     movl    $78879, %ebx           
+     addl    %ebx, %eax             
+     movl    %eax, -20(%ebp)        
-     movl    $3, %eax                #  14:     param  1 <- 3
+     movl    $4, %eax                #  18:     param  1 <- 4
-     movl    8(%ebp), %eax           #  15:     param  0 <- v0
+     movl    8(%ebp), %eax           #  19:     param  0 <- v0
-     call    DIM                     #  16:     call   t10 <- DIM
+     call    DIM                     #  20:     call   t12 <- DIM
-     movl    %eax, -16(%ebp)        
-     movl    -96(%ebp), %eax         #  17:     mul    t11 <- t9, t10
-     movl    -16(%ebp), %ebx        
-     imull   %ebx                   
-     movl    %eax, -20(%ebp)        
-     movl    -20(%ebp), %eax         #  18:     add    t12 <- t11, 78879
-     movl    $78879, %ebx           
-     addl    %ebx, %eax             
+     movl    -20(%ebp), %eax         #  21:     mul    t13 <- t11, t12
+     movl    -24(%ebp), %ebx        
+     imull   %ebx                   
+     movl    %eax, -28(%ebp)        
+     movl    -28(%ebp), %eax         #  22:     add    t14 <- t13, 72857
+     movl    $72857, %ebx           
+     addl    %ebx, %eax             
+     movl    %eax, -32(%ebp)        
-     movl    $4, %eax                #  19:     param  1 <- 4
+     movl    $5, %eax                #  23:     param  1 <- 5
-     movl    8(%ebp), %eax           #  20:     param  0 <- v0
+     movl    8(%ebp), %eax           #  24:     param  0 <- v0
-     call    DIM                     #  21:     call   t13 <- DIM
+     call    DIM                     #  25:     call   t15 <- DIM
-     movl    %eax, -28(%ebp)        
-     movl    -24(%ebp), %eax         #  22:     mul    t14 <- t12, t13
-     movl    -28(%ebp), %ebx        
-     imull   %ebx                   
-     movl    %eax, -32(%ebp)        
-     movl    -32(%ebp), %eax         #  23:     add    t15 <- t14, 72857
-     movl    $72857, %ebx           
-     addl    %ebx, %eax             
-     movl    $5, %eax                #  24:     param  1 <- 5
+     movl    -32(%ebp), %eax         #  26:     mul    t16 <- t14, t15
+     movl    -36(%ebp), %ebx        
-     pushl   %eax                   
+     imull   %ebx                   
-     movl    8(%ebp), %eax           #  25:     param  0 <- v0
-     pushl   %eax                   
-     call    DIM                     #  26:     call   t16 <- DIM
-     addl    $8, %esp               
-     movl    -36(%ebp), %eax         #  27:     mul    t17 <- t15, t16
+     movl    -40(%ebp), %eax         #  27:     add    t17 <- t16, 30938
-     movl    -40(%ebp), %ebx        
+     movl    $30938, %ebx           
-     imull   %ebx                   
+     addl    %ebx, %eax             
-     movl    -44(%ebp), %eax         #  28:     add    t18 <- t17, 30938
+     movl    -44(%ebp), %eax         #  28:     mul    t18 <- t17, 4
-     movl    $30938, %ebx           
+     movl    $4, %ebx               
-     addl    %ebx, %eax             
+     imull   %ebx                   
-     movl    -48(%ebp), %eax         #  29:     mul    t19 <- t18, 4
+     movl    8(%ebp), %eax           #  29:     param  0 <- v0
-     movl    $4, %ebx               
-     imull   %ebx                   
+     pushl   %eax                   
+     call    DOFS                    #  30:     call   t19 <- DOFS
+     addl    $4, %esp               
-     movl    8(%ebp), %eax           #  30:     param  0 <- v0
+     movl    -48(%ebp), %eax         #  31:     add    t20 <- t18, t19
+     movl    -52(%ebp), %ebx        
-     pushl   %eax                   
-     call    DOFS                    #  31:     call   t20 <- DOFS
-     addl    $4, %esp               
+     addl    %ebx, %eax             
-     movl    -52(%ebp), %eax         #  32:     add    t21 <- t19, t20
+     movl    8(%ebp), %eax           #  32:     add    t21 <- v0, t20
-     movl    8(%ebp), %eax           #  33:     add    t22 <- v0, t21
-     movl    -60(%ebp), %ebx        
-     addl    %ebx, %eax             
-     movl    %eax, -64(%ebp)        
-     movl    -76(%ebp), %eax         #  34:     assign @t22 <- t4
+     movl    -72(%ebp), %eax         #  33:     assign @t21 <- t4
-     movl    -64(%ebp), %edi        
+     movl    -60(%ebp), %edi        
-     call    dummyCHARfunc           #  35:     call   t23 <- dummyCHARfunc
+     call    dummyCHARfunc           #  34:     call   t22 <- dummyCHARfunc
-     movb    %al, -65(%ebp)         
+     movb    %al, -61(%ebp)         
-     movzbl  -65(%ebp), %eax         #  36:     return t23
+     movzbl  -61(%ebp), %eax         #  35:     return t22
-     addl    $88, %esp               # remove locals
+     addl    $84, %esp               # remove locals
