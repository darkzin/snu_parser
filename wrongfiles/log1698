+     jmp     l_f0_3                  #   4:     goto   3
+     jmp     l_f0_3                  #   5:     goto   3
-     movl    $1, %eax                #   4:     assign t12 <- 1
+     movl    $1, %eax                #   6:     assign t12 <- 1
-     jmp     l_f0_4                  #   5:     goto   4
+     jmp     l_f0_4                  #   7:     goto   4
+ l_f0_3:
-     movl    $0, %eax                #   6:     assign t12 <- 0
+     movl    $0, %eax                #   9:     assign t12 <- 0
-     movzbl  -21(%ebp), %eax         #   8:     assign v3 <- t12
+     movzbl  -21(%ebp), %eax         #  11:     assign v3 <- t12
-     movl    $98, %eax               #   9:     if     98 <= 97 goto 9_if_true
+     movl    $98, %eax               #  12:     if     98 <= 97 goto 9_if_true
-     jmp     l_f0_10_if_false        #  10:     goto   10_if_false
+     jmp     l_f0_10_if_false        #  13:     goto   10_if_false
-     movl    $98, %eax               #  12:     assign v1 <- 98
+     movl    $98, %eax               #  15:     assign v1 <- 98
-     movl    $99, %eax               #  14:     if     99 = 98 goto 15_while_body
+     movl    $99, %eax               #  17:     if     99 = 98 goto 15_while_body
-     jmp     l_f0_13                 #  15:     goto   13
+     jmp     l_f0_13                 #  18:     goto   13
-     jmp     l_f0_14_while_cond      #  17:     goto   14_while_cond
+     jmp     l_f0_14_while_cond      #  20:     goto   14_while_cond
-     movl    $35331, %eax            #  20:     if     35331 # 73854 goto 19_while_body
+     movl    $35331, %eax            #  23:     if     35331 # 73854 goto 19_while_body
-     jmp     l_f0_17                 #  21:     goto   17
+     jmp     l_f0_17                 #  24:     goto   17
-     jmp     l_f0_18_while_cond      #  23:     goto   18_while_cond
+     jmp     l_f0_18_while_cond      #  26:     goto   18_while_cond
-     movl    $1, %eax                #  26:     if     1 # 1 goto 23_while_body
+     movl    $1, %eax                #  29:     if     1 # 1 goto 23_while_body
-     jmp     l_f0_21                 #  27:     goto   21
+     jmp     l_f0_21                 #  30:     goto   21
-     jmp     l_f0_22_while_cond      #  29:     goto   22_while_cond
+     jmp     l_f0_22_while_cond      #  32:     goto   22_while_cond
-     jmp     l_f0_8                  #  31:     goto   8
+     jmp     l_f0_8                  #  34:     goto   8
-     #    -92(%ebp)   4  [ $t29      <int> %ebp-92 ]
+     #    -92(%ebp)   4  [ $t9       <int> %ebp-92 ]
-     #    -96(%ebp)   4  [ $t9       <int> %ebp-96 ]
-     #    -97(%ebp)   1  [ $v5       <char> %ebp-97 ]
+     #    -93(%ebp)   1  [ $v5       <char> %ebp-93 ]
-     pushl   %ebp                   
-     movl    %esp, %ebp             
-     pushl   %ebx                    # save callee saved registers
-     pushl   %esi                   
+     pushl   %ebp                   
+     movl    %esp, %ebp             
+     pushl   %ebx                    # save callee saved registers
-     pushl   %edi                   
+     pushl   %esi                   
+     pushl   %edi                   
-     subl    $88, %esp               # make room for locals
+     subl    $84, %esp               # make room for locals
-     movl    $22, %ecx              
+     movl    $21, %ecx              
-     movl    %eax, -96(%ebp)        
+     movl    %eax, -92(%ebp)        
-     movl    -96(%ebp), %ebx        
+     movl    -92(%ebp), %ebx        
-     call    ReadInt                 #  14:     call   t18 <- ReadInt
-     movl    %eax, -48(%ebp)        
-     movl    -36(%ebp), %eax         #  15:     mul    t17 <- t15, t16
+     movl    -36(%ebp), %eax         #  14:     mul    t17 <- t15, t16
-     movl    -44(%ebp), %eax         #  16:     add    t19 <- t17, 28172
+     movl    -44(%ebp), %eax         #  15:     add    t18 <- t17, 28172
+     movl    %eax, -48(%ebp)        
+     movl    $5, %eax                #  16:     param  1 <- 5
+     pushl   %eax                   
+     movl    8(%ebp), %eax           #  17:     param  0 <- v1
+     pushl   %eax                   
+     call    DIM                     #  18:     call   t19 <- DIM
+     addl    $8, %esp               
-     movl    $5, %eax                #  17:     param  1 <- 5
+     movl    -48(%ebp), %eax         #  19:     mul    t20 <- t18, t19
+     movl    -52(%ebp), %ebx        
-     pushl   %eax                   
+     imull   %ebx                   
-     movl    8(%ebp), %eax           #  18:     param  0 <- v1
-     pushl   %eax                   
-     call    DIM                     #  19:     call   t20 <- DIM
-     addl    $8, %esp               
-     movl    -52(%ebp), %eax         #  20:     mul    t21 <- t19, t20
+     movl    -56(%ebp), %eax         #  20:     add    t21 <- t20, 64389
-     movl    -56(%ebp), %ebx        
+     movl    $64389, %ebx           
-     imull   %ebx                   
+     addl    %ebx, %eax             
-     movl    -60(%ebp), %eax         #  21:     add    t22 <- t21, 64389
-     movl    $64389, %ebx           
-     addl    %ebx, %eax             
-     movl    %eax, -64(%ebp)        
-     movl    -64(%ebp), %eax         #  22:     mul    t23 <- t22, 1
+     movl    -60(%ebp), %eax         #  21:     mul    t22 <- t21, 1
+     movl    %eax, -64(%ebp)        
+     movl    8(%ebp), %eax           #  22:     param  0 <- v1
+     pushl   %eax                   
+     call    DOFS                    #  23:     call   t23 <- DOFS
+     addl    $4, %esp               
-     movl    8(%ebp), %eax           #  23:     param  0 <- v1
+     movl    -64(%ebp), %eax         #  24:     add    t24 <- t22, t23
+     movl    -68(%ebp), %ebx        
-     pushl   %eax                   
-     call    DOFS                    #  24:     call   t24 <- DOFS
-     addl    $4, %esp               
+     addl    %ebx, %eax             
-     movl    -68(%ebp), %eax         #  25:     add    t25 <- t23, t24
+     movl    8(%ebp), %eax           #  25:     add    t25 <- v1, t24
-     movl    8(%ebp), %eax           #  26:     add    t26 <- v1, t25
-     movl    -76(%ebp), %ebx        
-     addl    %ebx, %eax             
-     movl    %eax, -80(%ebp)        
-     movl    $97, %eax               #  27:     assign @t26 <- 97
+     movl    $97, %eax               #  26:     assign @t25 <- 97
-     movl    -80(%ebp), %edi        
+     movl    -76(%ebp), %edi        
-     movl    $54928, %eax            #  30:     mul    t27 <- 54928, 68469
+     movl    $54928, %eax            #  29:     mul    t26 <- 54928, 68469
+     movl    %eax, -80(%ebp)        
+     movl    -80(%ebp), %eax         #  30:     add    t27 <- t26, 16466
+     movl    $16466, %ebx           
+     addl    %ebx, %eax             
-     movl    -84(%ebp), %eax         #  31:     add    t28 <- t27, 16466
+     movl    -84(%ebp), %eax         #  31:     add    t28 <- t27, 21384
-     movl    $16466, %ebx           
+     movl    $21384, %ebx           
-     movl    -88(%ebp), %eax         #  32:     add    t29 <- t28, 21384
-     movl    $21384, %ebx           
-     addl    %ebx, %eax             
-     movl    %eax, -92(%ebp)        
-     movl    $69082, %eax            #  33:     if     69082 > t29 goto 4_while_body
+     movl    $69082, %eax            #  32:     if     69082 > t28 goto 4_while_body
-     movl    -92(%ebp), %ebx        
+     movl    -88(%ebp), %ebx        
-     jmp     l_f1_2                  #  34:     goto   2
+     jmp     l_f1_2                  #  33:     goto   2
-     jmp     l_f1_3_while_cond       #  36:     goto   3_while_cond
+     jmp     l_f1_3_while_cond       #  35:     goto   3_while_cond
-     addl    $88, %esp               # remove locals
+     addl    $84, %esp               # remove locals
+     jmp     l_f2_5                  #   1:     goto   5
-     movl    $1, %eax                #   1:     assign t9 <- 1
+     movl    $1, %eax                #   2:     assign t9 <- 1
-     jmp     l_f2_5                  #   2:     goto   5
+     jmp     l_f2_6                  #   3:     goto   6
+ l_f2_5:
-     movl    $0, %eax                #   3:     assign t9 <- 0
+     movl    $0, %eax                #   5:     assign t9 <- 0
- l_f2_5:
+ l_f2_6:
-     movl    $1, %eax                #   5:     if     1 = t9 goto 2_while_body
+     movl    $1, %eax                #   7:     if     1 = t9 goto 2_while_body
-     jmp     l_f2_0                  #   6:     goto   0
+     jmp     l_f2_0                  #   8:     goto   0
-     jmp     l_f2_1_while_cond       #   8:     goto   1_while_cond
+     jmp     l_f2_1_while_cond       #  10:     goto   1_while_cond
-     call    dummyCHARfunc           #  10:     call   t10 <- dummyCHARfunc
+     call    dummyCHARfunc           #  12:     call   t10 <- dummyCHARfunc
-     movzbl  -13(%ebp), %eax         #  11:     return t10
+     movzbl  -13(%ebp), %eax         #  13:     return t10
-     call    dummyBOOLfunc           #  12:     call   t11 <- dummyBOOLfunc
+     call    dummyBOOLfunc           #  14:     call   t11 <- dummyBOOLfunc
-     addl    $7, %esp               
+     addl    $16, %esp              
