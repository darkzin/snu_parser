+     jmp     l_f1_2_if_false         #   0:     goto   2_if_false
-     jmp     l_f1_4                  #   0:     goto   4
+     jmp     l_f1_4                  #   1:     goto   4
-     jmp     l_f1_0                  #   2:     goto   0
+     jmp     l_f1_0                  #   3:     goto   0
+ l_f1_2_if_false:
-     movl    $23828, %eax            #   4:     div    t3 <- 23828, 69319
+     movl    $23828, %eax            #   6:     div    t3 <- 23828, 69319
-     movl    -16(%ebp), %eax         #   5:     div    t4 <- t3, 85252
+     movl    -16(%ebp), %eax         #   7:     div    t4 <- t3, 85252
-     movl    -20(%ebp), %eax         #   6:     mul    t5 <- t4, 47470
+     movl    -20(%ebp), %eax         #   8:     mul    t5 <- t4, 47470
-     movl    -24(%ebp), %eax         #   7:     mul    t6 <- t5, 80052
+     movl    -24(%ebp), %eax         #   9:     mul    t6 <- t5, 80052
-     movl    -28(%ebp), %eax         #   8:     assign v2 <- t6
+     movl    -28(%ebp), %eax         #  10:     assign v2 <- t6
-     #-35768960(%ebp)35768874  [ $v2       <array 65 of <array 5 of <array 39 of <array 83 of <array 34 of <char>>>>>> %ebp-35768960 ]
+     #   -35768960(%ebp)  35768874  [ $v2       <array 65 of <array 5 of <array 39 of <array 83 of <array 34 of <char>>>>>> %ebp-35768960 ]
-     addl    $5, %esp               
+     addl    $8, %esp               
+     jmp     l_test_5                #   2:     goto   5
+     jmp     l_test_5                #   3:     goto   5
-     jmp     l_test_3_while_body     #   2:     goto   3_while_body
+     jmp     l_test_3_while_body     #   4:     goto   3_while_body
+ l_test_5:
-     jmp     l_test_3_while_body     #   3:     goto   3_while_body
+     jmp     l_test_3_while_body     #   6:     goto   3_while_body
+     jmp     l_test_1                #   7:     goto   1
-     jmp     l_test_2_while_cond     #   5:     goto   2_while_cond
+     jmp     l_test_2_while_cond     #   9:     goto   2_while_cond
+ l_test_1:
-     jmp     l_test_9                #   7:     goto   9
+     jmp     l_test_9                #  12:     goto   9
-     jmp     l_test_12               #   9:     goto   12
+     jmp     l_test_12               #  14:     goto   12
-     jmp     l_test_13_while_cond    #  10:     goto   13_while_cond
+     jmp     l_test_13_while_cond    #  15:     goto   13_while_cond
-     jmp     l_test_15               #  13:     goto   15
+     jmp     l_test_15               #  18:     goto   15
-     jmp     l_test_16_while_cond    #  14:     goto   16_while_cond
+     jmp     l_test_16_while_cond    #  19:     goto   16_while_cond
-     movl    $100, %eax              #  16:     if     100 < 98 goto 19_if_true
+     movl    $100, %eax              #  21:     if     100 < 98 goto 19_if_true
-     jmp     l_test_20_if_false      #  17:     goto   20_if_false
+     jmp     l_test_20_if_false      #  22:     goto   20_if_false
-     jmp     l_test_18               #  19:     goto   18
+     jmp     l_test_18               #  24:     goto   18
-     jmp     l_test_10_while_cond    #  22:     goto   10_while_cond
+     jmp     l_test_10_while_cond    #  27:     goto   10_while_cond
-     call    dummyCHARfunc           #  24:     call   t1 <- dummyCHARfunc
+     call    dummyCHARfunc           #  29:     call   t1 <- dummyCHARfunc
-     movl    $100, %eax              #  25:     if     100 > t1 goto 23
+     movl    $100, %eax              #  30:     if     100 > t1 goto 23
-     jmp     l_test_24               #  26:     goto   24
+     jmp     l_test_24               #  31:     goto   24
-     movl    $1, %eax                #  28:     assign t2 <- 1
+     movl    $1, %eax                #  33:     assign t2 <- 1
-     jmp     l_test_25               #  29:     goto   25
+     jmp     l_test_25               #  34:     goto   25
-     movl    $0, %eax                #  31:     assign t2 <- 0
+     movl    $0, %eax                #  36:     assign t2 <- 0
-     movzbl  -15(%ebp), %eax         #  33:     assign v0 <- t2
+     movzbl  -15(%ebp), %eax         #  38:     assign v0 <- t2
