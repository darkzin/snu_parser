-     #    -64(%ebp)   4  [ $t22      <int> %ebp-64 ]
-     #    -68(%ebp)   4  [ $t4       <ptr(4) to <array 7 of <char>>> %ebp-68 ]
+     #    -64(%ebp)   4  [ $t4       <ptr(4) to <array 7 of <char>>> %ebp-64 ]
+     #    -68(%ebp)   4  [ $t5       <int> %ebp-68 ]
-     #    -72(%ebp)   4  [ $t5       <int> %ebp-72 ]
+     #    -72(%ebp)   4  [ $t6       <int> %ebp-72 ]
-     #    -76(%ebp)   4  [ $t6       <int> %ebp-76 ]
+     #    -76(%ebp)   4  [ $t7       <int> %ebp-76 ]
-     #    -80(%ebp)   4  [ $t7       <int> %ebp-80 ]
+     #    -80(%ebp)   4  [ $t8       <int> %ebp-80 ]
-     #    -84(%ebp)   4  [ $t8       <int> %ebp-84 ]
+     #    -84(%ebp)   4  [ $t9       <int> %ebp-84 ]
-     #    -88(%ebp)   4  [ $t9       <int> %ebp-88 ]
-     #    -89(%ebp)   1  [ $v3       <bool> %ebp-89 ]
+     #    -85(%ebp)   1  [ $v3       <bool> %ebp-85 ]
-     pushl   %ebp                   
-     movl    %esp, %ebp             
-     pushl   %ebx                    # save callee saved registers
-     pushl   %esi                   
+     pushl   %ebp                   
+     movl    %esp, %ebp             
+     pushl   %ebx                    # save callee saved registers
-     pushl   %edi                   
+     pushl   %esi                   
+     pushl   %edi                   
-     subl    $80, %esp               # make room for locals
+     subl    $76, %esp               # make room for locals
-     movl    $20, %ecx              
+     movl    $19, %ecx              
-     movl    %eax, -68(%ebp)        
+     movl    %eax, -64(%ebp)        
-     movl    -68(%ebp), %eax         #   2:     param  0 <- t4
+     movl    -64(%ebp), %eax         #   2:     param  0 <- t4
+     movl    %eax, -68(%ebp)        
+     movl    $4364, %eax             #  19:     mul    t6 <- 4364, t5
+     movl    -68(%ebp), %ebx        
+     imull   %ebx                   
-     movl    $4364, %eax             #  19:     mul    t6 <- 4364, t5
-     movl    -72(%ebp), %ebx        
-     imull   %ebx                   
-     movl    %eax, -76(%ebp)        
+     movl    %eax, -76(%ebp)        
+     movl    -72(%ebp), %eax         #  21:     add    t8 <- t6, t7
+     movl    -76(%ebp), %ebx        
+     addl    %ebx, %eax             
+     movl    $3, %eax                #  22:     param  1 <- 3
+     pushl   %eax                   
-     movl    -76(%ebp), %eax         #  21:     add    t8 <- t6, t7
+     movl    12(%ebp), %eax          #  23:     param  0 <- v2
-     movl    -80(%ebp), %ebx        
+     pushl   %eax                   
+     call    DIM                     #  24:     call   t9 <- DIM
-     addl    %ebx, %eax             
+     addl    $8, %esp               
-     movl    $3, %eax                #  22:     param  1 <- 3
+     movl    -80(%ebp), %eax         #  25:     mul    t10 <- t8, t9
+     movl    -84(%ebp), %ebx        
-     pushl   %eax                   
+     imull   %ebx                   
-     movl    12(%ebp), %eax          #  23:     param  0 <- v2
-     pushl   %eax                   
-     call    DIM                     #  24:     call   t9 <- DIM
-     addl    $8, %esp               
-     movl    %eax, -88(%ebp)        
+     movl    %eax, -16(%ebp)        
-     movl    $48763, %eax            #  25:     add    t11 <- 48763, 38131
+     movl    -16(%ebp), %eax         #  26:     add    t11 <- t10, 87165
-     movl    $38131, %ebx           
+     movl    $87165, %ebx           
+     movl    $4, %eax                #  27:     param  1 <- 4
-     movl    -84(%ebp), %eax         #  26:     mul    t10 <- t8, t9
-     movl    -88(%ebp), %ebx        
-     imull   %ebx                   
+     pushl   %eax                   
-     movl    %eax, -16(%ebp)        
-     movl    -16(%ebp), %eax         #  27:     add    t12 <- t10, 87165
+     movl    12(%ebp), %eax          #  28:     param  0 <- v2
-     movl    $87165, %ebx           
+     pushl   %eax                   
+     call    DIM                     #  29:     call   t12 <- DIM
-     addl    %ebx, %eax             
+     addl    $8, %esp               
-     movl    $4, %eax                #  28:     param  1 <- 4
+     movl    -20(%ebp), %eax         #  30:     mul    t13 <- t11, t12
+     movl    -24(%ebp), %ebx        
-     pushl   %eax                   
+     imull   %ebx                   
-     movl    12(%ebp), %eax          #  29:     param  0 <- v2
-     pushl   %eax                   
-     call    DIM                     #  30:     call   t13 <- DIM
-     addl    $8, %esp               
-     movl    -24(%ebp), %eax         #  31:     mul    t14 <- t12, t13
+     movl    -28(%ebp), %eax         #  31:     add    t14 <- t13, 81483
-     movl    -28(%ebp), %ebx        
+     movl    $81483, %ebx           
-     imull   %ebx                   
+     addl    %ebx, %eax             
+     movl    $5, %eax                #  32:     param  1 <- 5
+     pushl   %eax                   
-     movl    -32(%ebp), %eax         #  32:     add    t15 <- t14, 81483
+     movl    12(%ebp), %eax          #  33:     param  0 <- v2
-     movl    $81483, %ebx           
+     pushl   %eax                   
+     call    DIM                     #  34:     call   t15 <- DIM
-     addl    %ebx, %eax             
+     addl    $8, %esp               
-     movl    $5, %eax                #  33:     param  1 <- 5
+     movl    -32(%ebp), %eax         #  35:     mul    t16 <- t14, t15
+     movl    -36(%ebp), %ebx        
-     pushl   %eax                   
+     imull   %ebx                   
-     movl    12(%ebp), %eax          #  34:     param  0 <- v2
-     pushl   %eax                   
-     call    DIM                     #  35:     call   t16 <- DIM
-     addl    $8, %esp               
-     movl    -36(%ebp), %eax         #  36:     mul    t17 <- t15, t16
+     movl    -40(%ebp), %eax         #  36:     add    t17 <- t16, 61627
-     movl    -40(%ebp), %ebx        
+     movl    $61627, %ebx           
-     imull   %ebx                   
+     addl    %ebx, %eax             
-     movl    -44(%ebp), %eax         #  37:     add    t18 <- t17, 61627
+     movl    -44(%ebp), %eax         #  37:     mul    t18 <- t17, 1
-     movl    $61627, %ebx           
+     movl    $1, %ebx               
-     addl    %ebx, %eax             
+     imull   %ebx                   
-     movl    -48(%ebp), %eax         #  38:     mul    t19 <- t18, 1
+     movl    12(%ebp), %eax          #  38:     param  0 <- v2
-     movl    $1, %ebx               
-     imull   %ebx                   
+     pushl   %eax                   
+     call    DOFS                    #  39:     call   t19 <- DOFS
+     addl    $4, %esp               
-     movl    12(%ebp), %eax          #  39:     param  0 <- v2
+     movl    -48(%ebp), %eax         #  40:     add    t20 <- t18, t19
+     movl    -52(%ebp), %ebx        
-     pushl   %eax                   
-     call    DOFS                    #  40:     call   t20 <- DOFS
-     addl    $4, %esp               
+     addl    %ebx, %eax             
-     movl    -52(%ebp), %eax         #  41:     add    t21 <- t19, t20
+     movl    12(%ebp), %eax          #  41:     add    t21 <- v2, t20
-     movl    12(%ebp), %eax          #  42:     add    t22 <- v2, t21
-     movl    -60(%ebp), %ebx        
-     addl    %ebx, %eax             
-     movl    %eax, -64(%ebp)        
-     movl    $1, %eax                #  43:     assign @t22 <- 1
+     movl    $1, %eax                #  42:     assign @t21 <- 1
-     movl    -64(%ebp), %edi        
+     movl    -60(%ebp), %edi        
-     jmp     l_f0_11_while_cond      #  44:     goto   11_while_cond
+     jmp     l_f0_11_while_cond      #  43:     goto   11_while_cond
-     movl    $99, %eax               #  46:     if     99 >= 98 goto 16_if_true
+     movl    $99, %eax               #  45:     if     99 >= 98 goto 16_if_true
-     jmp     l_f0_17_if_false        #  47:     goto   17_if_false
+     jmp     l_f0_17_if_false        #  46:     goto   17_if_false
-     jmp     l_f0_15                 #  50:     goto   15
+     jmp     l_f0_15                 #  49:     goto   15
-     addl    $80, %esp               # remove locals
+     addl    $76, %esp               # remove locals
+     jmp     l_test_2_if_false       #   0:     goto   2_if_false
-     call    ReadInt                 #   0:     call   t0 <- ReadInt
+     call    ReadInt                 #   1:     call   t0 <- ReadInt
-     jmp     l_test_7_if_false       #   1:     goto   7_if_false
+     jmp     l_test_7_if_false       #   2:     goto   7_if_false
-     jmp     l_test_5                #   2:     goto   5
+     jmp     l_test_5                #   3:     goto   5
-     jmp     l_test_0                #   6:     goto   0
+     jmp     l_test_0                #   7:     goto   0
+ l_test_2_if_false:
-     movl    $56932, %eax            #   8:     if     56932 < 56914 goto 10_if_true
+     movl    $56932, %eax            #  10:     if     56932 < 56914 goto 10_if_true
-     jmp     l_test_11_if_false      #   9:     goto   11_if_false
+     jmp     l_test_11_if_false      #  11:     goto   11_if_false
-     movl    $1, %eax                #  11:     if     1 = 1 goto 14_if_true
+     movl    $1, %eax                #  13:     if     1 = 1 goto 14_if_true
-     jmp     l_test_15_if_false      #  12:     goto   15_if_false
+     jmp     l_test_15_if_false      #  14:     goto   15_if_false
-     jmp     l_test_13               #  14:     goto   13
+     jmp     l_test_13               #  16:     goto   13
-     movl    $0, %eax                #  17:     assign v0 <- 0
+     movl    $0, %eax                #  19:     assign v0 <- 0
-     call    dummyCHARfunc           #  18:     call   t1 <- dummyCHARfunc
+     call    dummyCHARfunc           #  20:     call   t1 <- dummyCHARfunc
-     movzbl  -17(%ebp), %eax         #  19:     param  0 <- t1
+     movzbl  -17(%ebp), %eax         #  21:     param  0 <- t1
-     call    WriteChar               #  20:     call   WriteChar
+     call    WriteChar               #  22:     call   WriteChar
-     addl    $1, %esp               
+     addl    $4, %esp               
-     jmp     l_test_9                #  21:     goto   9
+     jmp     l_test_9                #  23:     goto   9
-     movl    $7778, %eax             #  24:     if     7778 > 4497 goto 20_if_true
+     movl    $7778, %eax             #  26:     if     7778 > 4497 goto 20_if_true
-     jmp     l_test_21_if_false      #  25:     goto   21_if_false
+     jmp     l_test_21_if_false      #  27:     goto   21_if_false
-     movl    $126, %eax              #  27:     mul    t2 <- 126, 3151
+     movl    $126, %eax              #  29:     mul    t2 <- 126, 3151
-     movl    -24(%ebp), %eax         #  28:     div    t3 <- t2, 60170
+     movl    -24(%ebp), %eax         #  30:     div    t3 <- t2, 60170
-     movl    -28(%ebp), %eax         #  29:     assign v1 <- t3
+     movl    -28(%ebp), %eax         #  31:     assign v1 <- t3
-     jmp     l_test_19               #  30:     goto   19
+     jmp     l_test_19               #  32:     goto   19
-     movl    $52539, %eax            #  33:     param  0 <- 52539
+     movl    $52539, %eax            #  35:     param  0 <- 52539
-     call    WriteInt                #  34:     call   WriteInt
+     call    WriteInt                #  36:     call   WriteInt
-     movl    $97, %eax               #  36:     if     97 < 100 goto 27_while_body
+     movl    $97, %eax               #  38:     if     97 < 100 goto 27_while_body
-     jmp     l_test_25               #  37:     goto   25
+     jmp     l_test_25               #  39:     goto   25
-     movl    $1, %eax                #  39:     assign v0 <- 1
+     movl    $1, %eax                #  41:     assign v0 <- 1
-     jmp     l_test_32_if_false      #  40:     goto   32_if_false
+     jmp     l_test_32_if_false      #  42:     goto   32_if_false
-     jmp     l_test_30               #  41:     goto   30
+     jmp     l_test_30               #  43:     goto   30
-     jmp     l_test_26_while_cond    #  44:     goto   26_while_cond
+     jmp     l_test_26_while_cond    #  46:     goto   26_while_cond
