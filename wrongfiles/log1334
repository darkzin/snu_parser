+     jmp     l_f0_4                  #   0:     goto   4
+     jmp     l_f0_4                  #   1:     goto   4
-     jmp     l_f0_1                  #   0:     goto   1
+     jmp     l_f0_1                  #   2:     goto   1
+ l_f0_4:
-     movl    $1, %eax                #   2:     assign t7 <- 1
+     movl    $1, %eax                #   5:     assign t7 <- 1
-     jmp     l_f0_3                  #   3:     goto   3
+     jmp     l_f0_3                  #   6:     goto   3
-     movl    $0, %eax                #   4:     assign t7 <- 0
+     movl    $0, %eax                #   7:     assign t7 <- 0
-     movzbl  -13(%ebp), %eax         #   6:     return t7
+     movzbl  -13(%ebp), %eax         #   9:     return t7
-     call    dummyINTfunc            #   7:     call   t8 <- dummyINTfunc
+     call    dummyINTfunc            #  10:     call   t8 <- dummyINTfunc
-     movl    $3644, %eax             #   8:     if     3644 < 24252 goto 12_if_true
+     movl    $3644, %eax             #  11:     if     3644 < 24252 goto 12_if_true
-     jmp     l_f0_13_if_false        #   9:     goto   13_if_false
+     jmp     l_f0_13_if_false        #  12:     goto   13_if_false
-     movl    $73639, %eax            #  12:     if     73639 < 42846 goto 17_while_body
+     movl    $73639, %eax            #  15:     if     73639 < 42846 goto 17_while_body
-     jmp     l_f0_15                 #  13:     goto   15
+     jmp     l_f0_15                 #  16:     goto   15
-     jmp     l_f0_16_while_cond      #  15:     goto   16_while_cond
+     jmp     l_f0_16_while_cond      #  18:     goto   16_while_cond
-     jmp     l_f0_19                 #  18:     goto   19
+     jmp     l_f0_19                 #  21:     goto   19
-     jmp     l_f0_20_while_cond      #  19:     goto   20_while_cond
+     jmp     l_f0_20_while_cond      #  22:     goto   20_while_cond
-     movl    $8674, %eax             #  21:     assign v1 <- 8674
+     movl    $8674, %eax             #  24:     assign v1 <- 8674
-     movl    $0, %eax                #  22:     return 0
+     movl    $0, %eax                #  25:     return 0
-     jmp     l_f0_11                 #  23:     goto   11
+     jmp     l_f0_11                 #  26:     goto   11
-     #-26727536(%ebp)26727514  [ $v1       <array 73 of <array 1 of <array 82 of <array 47 of <array 95 of <bool>>>>>> %ebp-26727536 ]
+     #   -26727536(%ebp)  26727514  [ $v1       <array 73 of <array 1 of <array 82 of <array 47 of <array 95 of <bool>>>>>> %ebp-26727536 ]
-     movl    $100, %eax              #   0:     if     100 > 98 goto 3
+     movl    $100, %eax              #   0:     if     100 > 98 goto 4
-     jg      l_f2_3                 
+     jg      l_f2_4                 
-     jmp     l_f2_4                  #   1:     goto   4
+     jmp     l_f2_5                  #   1:     goto   5
- l_f2_3:
+ l_f2_4:
-     jmp     l_f2_5                  #   4:     goto   5
+     jmp     l_f2_6                  #   4:     goto   6
- l_f2_4:
+ l_f2_5:
- l_f2_5:
+ l_f2_6:
-     addl    $5, %esp               
+     addl    $8, %esp               
-     addl    $1, %esp               
+     addl    $4, %esp               
