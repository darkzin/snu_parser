+     #    -49(%ebp)   1  [ $t18      <char> %ebp-49 ]
-     #    -52(%ebp)   4  [ $t18      <int> %ebp-52 ]
+     #    -56(%ebp)   4  [ $t2       <int> %ebp-56 ]
-     #    -53(%ebp)   1  [ $t19      <char> %ebp-53 ]
-     #    -60(%ebp)   4  [ $t2       <int> %ebp-60 ]
+     #    -60(%ebp)   4  [ $t3       <int> %ebp-60 ]
-     #    -64(%ebp)   4  [ $t3       <int> %ebp-64 ]
+     #    -64(%ebp)   4  [ $t4       <int> %ebp-64 ]
-     #    -68(%ebp)   4  [ $t4       <int> %ebp-68 ]
+     #    -68(%ebp)   4  [ $t5       <int> %ebp-68 ]
-     #    -72(%ebp)   4  [ $t5       <int> %ebp-72 ]
+     #    -72(%ebp)   4  [ $t6       <int> %ebp-72 ]
-     #    -76(%ebp)   4  [ $t6       <int> %ebp-76 ]
+     #    -76(%ebp)   4  [ $t7       <int> %ebp-76 ]
-     #    -80(%ebp)   4  [ $t7       <int> %ebp-80 ]
+     #    -80(%ebp)   4  [ $t8       <int> %ebp-80 ]
-     #    -84(%ebp)   4  [ $t8       <int> %ebp-84 ]
+     #    -84(%ebp)   4  [ $t9       <int> %ebp-84 ]
-     #    -88(%ebp)   4  [ $t9       <int> %ebp-88 ]
-     subl    $76, %esp               # make room for locals
+     subl    $72, %esp               # make room for locals
-     movl    $19, %ecx              
+     movl    $18, %ecx              
-     movl    %eax, -60(%ebp)        
+     movl    %eax, -56(%ebp)        
+     movl    %eax, -60(%ebp)        
+     movl    -56(%ebp), %eax         #   5:     add    t4 <- t2, t3
+     movl    -60(%ebp), %ebx        
+     addl    %ebx, %eax             
-     movl    -60(%ebp), %eax         #   5:     add    t4 <- t2, t3
-     movl    -64(%ebp), %ebx        
-     addl    %ebx, %eax             
-     movl    %eax, -68(%ebp)        
+     movl    %eax, -68(%ebp)        
+     movl    -64(%ebp), %eax         #   9:     mul    t6 <- t4, t5
+     movl    -68(%ebp), %ebx        
+     imull   %ebx                   
-     movl    $95896, %eax            #   9:     mul    t7 <- 95896, 22283
+     movl    -72(%ebp), %eax         #  10:     add    t7 <- t6, 13701
-     movl    $22283, %ebx           
+     movl    $13701, %ebx           
+     addl    %ebx, %eax             
+     movl    %eax, -76(%ebp)        
+     movl    $4, %eax                #  11:     param  1 <- 4
-     imull   %ebx                   
+     pushl   %eax                   
+     movl    20(%ebp), %eax          #  12:     param  0 <- v4
+     pushl   %eax                   
+     call    DIM                     #  13:     call   t8 <- DIM
+     addl    $8, %esp               
-     movl    -68(%ebp), %eax         #  10:     mul    t6 <- t4, t5
+     movl    -76(%ebp), %eax         #  14:     mul    t9 <- t7, t8
-     movl    -72(%ebp), %ebx        
+     movl    -80(%ebp), %ebx        
-     movl    %eax, -76(%ebp)        
-     movl    -76(%ebp), %eax         #  11:     add    t8 <- t6, 13701
-     movl    $13701, %ebx           
-     addl    %ebx, %eax             
+     movl    -84(%ebp), %eax         #  15:     add    t10 <- t9, 10463
+     movl    $10463, %ebx           
+     addl    %ebx, %eax             
+     movl    %eax, -20(%ebp)        
-     movl    $4, %eax                #  12:     param  1 <- 4
+     movl    $5, %eax                #  16:     param  1 <- 5
-     movl    20(%ebp), %eax          #  13:     param  0 <- v4
+     movl    20(%ebp), %eax          #  17:     param  0 <- v4
-     call    DIM                     #  14:     call   t9 <- DIM
+     call    DIM                     #  18:     call   t11 <- DIM
-     movl    %eax, -88(%ebp)        
-     movl    -84(%ebp), %eax         #  15:     mul    t10 <- t8, t9
-     movl    -88(%ebp), %ebx        
-     imull   %ebx                   
-     movl    %eax, -20(%ebp)        
-     movl    -20(%ebp), %eax         #  16:     add    t11 <- t10, 10463
-     movl    $10463, %ebx           
-     addl    %ebx, %eax             
-     movl    $5, %eax                #  17:     param  1 <- 5
+     movl    -20(%ebp), %eax         #  19:     mul    t12 <- t10, t11
+     movl    -24(%ebp), %ebx        
-     pushl   %eax                   
+     imull   %ebx                   
-     movl    20(%ebp), %eax          #  18:     param  0 <- v4
-     pushl   %eax                   
-     call    DIM                     #  19:     call   t12 <- DIM
-     addl    $8, %esp               
-     movl    -24(%ebp), %eax         #  20:     mul    t13 <- t11, t12
+     movl    -28(%ebp), %eax         #  20:     add    t13 <- t12, 72410
-     movl    -28(%ebp), %ebx        
+     movl    $72410, %ebx           
-     imull   %ebx                   
+     addl    %ebx, %eax             
-     movl    -32(%ebp), %eax         #  21:     add    t14 <- t13, 72410
+     movl    -32(%ebp), %eax         #  21:     mul    t14 <- t13, 4
-     movl    $72410, %ebx           
+     movl    $4, %ebx               
-     addl    %ebx, %eax             
+     imull   %ebx                   
-     movl    -36(%ebp), %eax         #  22:     mul    t15 <- t14, 4
+     movl    20(%ebp), %eax          #  22:     param  0 <- v4
-     movl    $4, %ebx               
-     imull   %ebx                   
+     pushl   %eax                   
+     call    DOFS                    #  23:     call   t15 <- DOFS
+     addl    $4, %esp               
-     movl    20(%ebp), %eax          #  23:     param  0 <- v4
+     movl    -36(%ebp), %eax         #  24:     add    t16 <- t14, t15
+     movl    -40(%ebp), %ebx        
-     pushl   %eax                   
-     call    DOFS                    #  24:     call   t16 <- DOFS
-     addl    $4, %esp               
+     addl    %ebx, %eax             
-     movl    -40(%ebp), %eax         #  25:     add    t17 <- t15, t16
+     movl    20(%ebp), %eax          #  25:     add    t17 <- v4, t16
-     movl    20(%ebp), %eax          #  26:     add    t18 <- v4, t17
-     movl    -48(%ebp), %ebx        
-     addl    %ebx, %eax             
-     movl    %eax, -52(%ebp)        
-     movl    $83528, %eax            #  27:     assign @t18 <- 83528
+     movl    $83528, %eax            #  26:     assign @t17 <- 83528
-     movl    -52(%ebp), %edi        
+     movl    -48(%ebp), %edi        
-     call    dummyCHARfunc           #  28:     call   t19 <- dummyCHARfunc
+     call    dummyCHARfunc           #  27:     call   t18 <- dummyCHARfunc
-     movb    %al, -53(%ebp)         
+     movb    %al, -49(%ebp)         
-     movzbl  -53(%ebp), %eax         #  29:     return t19
+     movzbl  -49(%ebp), %eax         #  28:     return t18
-     movl    $97, %eax               #  30:     return 97
+     movl    $97, %eax               #  29:     return 97
-     addl    $76, %esp               # remove locals
+     addl    $72, %esp               # remove locals
+     jmp     l_test_7_if_false       #   9:     goto   7_if_false
+     jmp     l_test_7_if_false       #  10:     goto   7_if_false
-     jmp     l_test_5                #  11:     goto   5
+     jmp     l_test_5                #  13:     goto   5
+ l_test_7_if_false:
-     jmp     l_test_13_if_true       #  13:     goto   13_if_true
+     jmp     l_test_13_if_true       #  16:     goto   13_if_true
+     jmp     l_test_14_if_false      #  17:     goto   14_if_false
-     movl    $0, %eax                #  15:     assign v0 <- 0
+     movl    $0, %eax                #  19:     assign v0 <- 0
-     movl    $1, %eax                #  16:     assign v0 <- 1
+     movl    $1, %eax                #  20:     assign v0 <- 1
-     jmp     l_test_12               #  17:     goto   12
+     jmp     l_test_12               #  21:     goto   12
+ l_test_14_if_false:
-     jmp     l_test_23_if_false      #  19:     goto   23_if_false
+     jmp     l_test_23_if_false      #  24:     goto   23_if_false
-     jmp     l_test_21               #  20:     goto   21
+     jmp     l_test_21               #  25:     goto   21
-     movl    $73435, %eax            #  23:     if     73435 >= 13790 goto 25_if_true
+     movl    $73435, %eax            #  28:     if     73435 >= 13790 goto 25_if_true
-     jmp     l_test_26_if_false      #  24:     goto   26_if_false
+     jmp     l_test_26_if_false      #  29:     goto   26_if_false
-     jmp     l_test_24               #  26:     goto   24
+     jmp     l_test_24               #  31:     goto   24
-     movl    $100, %eax              #  29:     assign v1 <- 100
+     movl    $100, %eax              #  34:     assign v1 <- 100
-     jmp     l_test_30_while_cond    #  31:     goto   30_while_cond
+     jmp     l_test_30_while_cond    #  36:     goto   30_while_cond
-     jmp     l_test_18               #  32:     goto   18
+     jmp     l_test_18               #  37:     goto   18
