-     #-460656(%ebp)460624  [ $v2       <array 98 of <array 10 of <array 47 of <array 1 of <array 10 of <char>>>>>> %ebp-460656 ]
+     #   -460656(%ebp)  460624  [ $v2       <array 98 of <array 10 of <array 47 of <array 1 of <array 10 of <char>>>>>> %ebp-460656 ]
-     #-609370080(%ebp)608909424  [ $v3       <array 27 of <array 68 of <array 67 of <array 50 of <array 99 of <bool>>>>>> %ebp-609370080 ]
+     #   -609370080(%ebp)  608909424  [ $v3       <array 27 of <array 68 of <array 67 of <array 50 of <array 99 of <bool>>>>>> %ebp-609370080 ]
-     #-1377945912(%ebp)768575832  [ $v4       <array 91 of <array 93 of <array 11 of <array 86 of <array 24 of <int>>>>>> %ebp-1377945912 ]
+     #   -1377945912(%ebp)  768575832  [ $v4       <array 91 of <array 93 of <array 11 of <array 86 of <array 24 of <int>>>>>> %ebp-1377945912 ]
-     #-1377945913(%ebp)   1  [ $v5       <char> %ebp-1377945913 ]
+     #   -1377945913(%ebp)   1  [ $v5       <char> %ebp-1377945913 ]
+     jmp     l_f2_0                  #   2:     goto   0
-     movl    $99, %eax               #   4:     if     99 <= 98 goto 6_while_body
+     movl    $99, %eax               #   5:     if     99 <= 98 goto 6_while_body
-     jmp     l_f2_4                  #   5:     goto   4
+     jmp     l_f2_4                  #   6:     goto   4
-     jmp     l_f2_5_while_cond       #   7:     goto   5_while_cond
+     jmp     l_f2_5_while_cond       #   8:     goto   5_while_cond
-     call    dummyBOOLfunc           #   9:     call   t5 <- dummyBOOLfunc
+     call    dummyBOOLfunc           #  10:     call   t5 <- dummyBOOLfunc
-     movl    $98, %eax               #  11:     if     98 >= 99 goto 11_while_body
+     movl    $98, %eax               #  12:     if     98 >= 99 goto 11_while_body
-     jmp     l_f2_9                  #  12:     goto   9
+     jmp     l_f2_9                  #  13:     goto   9
-     jmp     l_f2_10_while_cond      #  14:     goto   10_while_cond
+     jmp     l_f2_10_while_cond      #  15:     goto   10_while_cond
-     jmp     l_f2_14_while_cond      #  17:     goto   14_while_cond
+     jmp     l_f2_14_while_cond      #  18:     goto   14_while_cond
-     movl    $99, %eax               #  18:     return 99
+     movl    $99, %eax               #  19:     return 99
-     movl    $100, %eax              #  19:     return 100
+     movl    $100, %eax              #  20:     return 100
-     jmp     l_f2_1_while_cond       #  20:     goto   1_while_cond
+     jmp     l_f2_1_while_cond       #  21:     goto   1_while_cond
+ l_f2_0:
-     leal    -1377945912(%ebp), %eax #  22:     &()    t6 <- v4
+     leal    -1377945912(%ebp), %eax #  24:     &()    t6 <- v4
-     movl    -20(%ebp), %eax         #  23:     param  3 <- t6
+     movl    -20(%ebp), %eax         #  25:     param  3 <- t6
-     leal    -609370080(%ebp), %eax  #  24:     &()    t7 <- v3
+     leal    -609370080(%ebp), %eax  #  26:     &()    t7 <- v3
-     movl    -24(%ebp), %eax         #  25:     param  2 <- t7
+     movl    -24(%ebp), %eax         #  27:     param  2 <- t7
-     leal    -460656(%ebp), %eax     #  26:     &()    t8 <- v2
+     leal    -460656(%ebp), %eax     #  28:     &()    t8 <- v2
-     movl    -28(%ebp), %eax         #  27:     param  1 <- t8
+     movl    -28(%ebp), %eax         #  29:     param  1 <- t8
-     movl    $1, %eax                #  28:     param  0 <- 1
+     movl    $1, %eax                #  30:     param  0 <- 1
-     call    f1                      #  29:     call   t9 <- f1
+     call    f1                      #  31:     call   t9 <- f1
-     addl    $13, %esp              
+     addl    $16, %esp              
-     movzbl  -29(%ebp), %eax         #  30:     if     t9 = 98 goto 20_while_body
+     movzbl  -29(%ebp), %eax         #  32:     if     t9 = 98 goto 20_while_body
-     jmp     l_f2_18                 #  31:     goto   18
+     jmp     l_f2_18                 #  33:     goto   18
-     movl    $62664, %eax            #  33:     param  0 <- 62664
+     movl    $62664, %eax            #  35:     param  0 <- 62664
-     call    WriteInt                #  34:     call   WriteInt
+     call    WriteInt                #  36:     call   WriteInt
-     jmp     l_f2_19_while_cond      #  35:     goto   19_while_cond
+     jmp     l_f2_19_while_cond      #  37:     goto   19_while_cond
-     movl    $59314, %eax            #  37:     if     59314 > 67484 goto 24_if_true
+     movl    $59314, %eax            #  39:     if     59314 > 67484 goto 24_if_true
-     jmp     l_f2_25_if_false        #  38:     goto   25_if_false
+     jmp     l_f2_25_if_false        #  40:     goto   25_if_false
-     movl    $97, %eax               #  40:     assign v5 <- 97
+     movl    $97, %eax               #  42:     assign v5 <- 97
-     movl    $1, %eax                #  41:     assign v1 <- 1
+     movl    $1, %eax                #  43:     assign v1 <- 1
-     jmp     l_f2_23                 #  42:     goto   23
+     jmp     l_f2_23                 #  44:     goto   23
